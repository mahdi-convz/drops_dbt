[0m19:27:44.503116 [debug] [MainThread]: Failed to load parsed file from disk at /Users/mahdi/Downloads/dbt_drops/target/partial_parse.msgpack: Field "nodes" of type MutableMapping[str, Union[AnalysisNode, SingularTestNode, HookNode, ModelNode, RPCNode, SqlNode, GenericTestNode, SnapshotNode, SeedNode]] in Manifest has invalid value {'model.dbt_ads_test.my_first_dbt_model': {'database': 'drops-bi', 'schema': 'marketing_full', 'name': 'my_first_dbt_model', 'resource_type': 'model', 'package_name': 'dbt_ads_test', 'path': 'example\\my_first_dbt_model.sql', 'original_file_path': 'models\\example\\my_first_dbt_model.sql', 'unique_id': 'model.dbt_ads_test.my_first_dbt_model', 'fqn': ['dbt_ads_test', 'example', 'my_first_dbt_model'], 'alias': 'my_first_dbt_model', 'checksum': {'name': 'sha256', 'checksum': '842251f5ed1d97920d3748d9686b8c05a3a0071ec7990f948f36796491788aed'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'A starter dbt model', 'columns': {'id': {'name': 'id', 'description': 'The primary key for this table', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'dbt_ads_test://models\\example\\schema.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table'}, 'created_at': 1694433484.8726494, 'config_call_dict': {'materialized': 'table'}, 'relation_name': '`drops-bi`.`marketing_full`.`my_first_dbt_model`', 'raw_code': '/*\n    Welcome to your first dbt model!\n    Did you know that you can also configure models directly within SQL files?\n    This will override configurations stated in dbt_project.yml\n\n    Try changing "table" to "view" below\n*/\n\n{{ config(materialized=\'table\') }}\n\nwith source_data as (\n\n    select 1 as id\n    union all\n    select null as id\n\n)\n\nselect *\nfrom source_data\n\n/*\n    Uncomment the line below to remove records with null `id` values\n*/\n\n-- where id is not null', 'language': 'sql', 'refs': [], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': []}, 'compiled_path': None}, 'model.dbt_ads_test.my_second_dbt_model': {'database': 'drops-bi', 'schema': 'marketing_full', 'name': 'my_second_dbt_model', 'resource_type': 'model', 'package_name': 'dbt_ads_test', 'path': 'example\\my_second_dbt_model.sql', 'original_file_path': 'models\\example\\my_second_dbt_model.sql', 'unique_id': 'model.dbt_ads_test.my_second_dbt_model', 'fqn': ['dbt_ads_test', 'example', 'my_second_dbt_model'], 'alias': 'my_second_dbt_model', 'checksum': {'name': 'sha256', 'checksum': 'b3aa346f283f3c9c9a75936f3b80d2572ca9ab39aee4c02b30553d3fe2ba5692'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'A starter dbt model', 'columns': {'id': {'name': 'id', 'description': 'The primary key for this table', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'dbt_ads_test://models\\example\\schema.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view'}, 'created_at': 1694433484.8735697, 'config_call_dict': {}, 'relation_name': '`drops-bi`.`marketing_full`.`my_second_dbt_model`', 'raw_code': "-- Use the `ref` function to select from other models\n\nselect *\nfrom {{ ref('my_first_dbt_model') }}\nwhere id = 1", 'language': 'sql', 'refs': [['my_first_dbt_model']], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.dbt_ads_test.my_first_dbt_model']}, 'compiled_path': None}, 'model.ad_reporting.ad_reporting__account_report': {'database': 'drops-bi', 'schema': 'marketing_full_ad_reporting', 'name': 'ad_reporting__account_report', 'resource_type': 'model', 'package_name': 'ad_reporting', 'path': 'ad_reporting__account_report.sql', 'original_file_path': 'models\\ad_reporting__account_report.sql', 'unique_id': 'model.ad_reporting.ad_reporting__account_report', 'fqn': ['ad_reporting', 'ad_reporting__account_report'], 'alias': 'ad_reporting__account_report', 'checksum': {'name': 'sha256', 'checksum': '7a5c7e7a4d03a8a074b5e23154de600f7dfa06931055665906e407e2eaad8a8a'}, 'config': {'enabled': True, 'alias': None, 'schema': 'ad_reporting', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents daily metrics by account.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'platform': {'name': 'platform', 'description': 'The ad platform associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The ID representing the account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The name of the account, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The count of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The count of impressions.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The cost of the ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'ad_reporting://models\\ad_reporting_models.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'ad_reporting', 'enabled': True}, 'created_at': 1694433484.9370885, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_ad_reporting`.`ad_reporting__account_report`', 'raw_code': "{% set enabled_packages = get_enabled_packages() %}\n{{ config(enabled=is_enabled(enabled_packages)) }}\n\nwith base as (\n\n    select *\n    from {{ ref('int_ad_reporting__account_report') }}\n),\n\naggregated as (\n    \n    select \n        date_day,\n        platform,\n        account_id,\n        account_name,\n        sum(clicks) as clicks,\n        sum(impressions) as impressions,\n        sum(spend) as spend\n    from base\n    {{ dbt_utils.group_by(4) }}\n)\n\nselect *\nfrom aggregated", 'language': 'sql', 'refs': [['int_ad_reporting__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.ad_reporting.get_enabled_packages', 'macro.ad_reporting.is_enabled', 'macro.dbt_utils.group_by'], 'nodes': ['model.ad_reporting.int_ad_reporting__account_report']}, 'compiled_path': None}, 'model.ad_reporting.ad_reporting__ad_group_report': {'database': 'drops-bi', 'schema': 'marketing_full_ad_reporting', 'name': 'ad_reporting__ad_group_report', 'resource_type': 'model', 'package_name': 'ad_reporting', 'path': 'ad_reporting__ad_group_report.sql', 'original_file_path': 'models\\ad_reporting__ad_group_report.sql', 'unique_id': 'model.ad_reporting.ad_reporting__ad_group_report', 'fqn': ['ad_reporting', 'ad_reporting__ad_group_report'], 'alias': 'ad_reporting__ad_group_report', 'checksum': {'name': 'sha256', 'checksum': 'fe93b1aa6e8cc66827b9b6ed209113e7af61fa090c025adc18a657278c4fc15b'}, 'config': {'enabled': True, 'alias': None, 'schema': 'ad_reporting', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents daily metrics by ad group, campaign and account.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'platform': {'name': 'platform', 'description': 'The ad platform associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The ID representing the account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The name of the account, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID representing the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'The ID representing the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'The name of the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The count of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The count of impressions.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The cost of the ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'ad_reporting://models\\ad_reporting_models.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'ad_reporting', 'enabled': True}, 'created_at': 1694433484.9401598, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_ad_reporting`.`ad_reporting__ad_group_report`', 'raw_code': "{% set enabled_packages = get_enabled_packages() %}\n{{ config(enabled=is_enabled(enabled_packages)) }}\n\nwith base as (\n\n    select *\n    from {{ ref('int_ad_reporting__ad_group_report') }}\n),\n\naggregated as (\n    \n    select \n        date_day,\n        platform,\n        account_id,\n        account_name,\n        campaign_id,\n        campaign_name,\n        ad_group_id,\n        ad_group_name,\n        sum(clicks) as clicks,\n        sum(impressions) as impressions,\n        sum(spend) as spend\n    from base\n    {{ dbt_utils.group_by(8) }}\n)\n\nselect *\nfrom aggregated", 'language': 'sql', 'refs': [['int_ad_reporting__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.ad_reporting.get_enabled_packages', 'macro.ad_reporting.is_enabled', 'macro.dbt_utils.group_by'], 'nodes': ['model.ad_reporting.int_ad_reporting__ad_group_report']}, 'compiled_path': None}, 'model.ad_reporting.ad_reporting__ad_report': {'database': 'drops-bi', 'schema': 'marketing_full_ad_reporting', 'name': 'ad_reporting__ad_report', 'resource_type': 'model', 'package_name': 'ad_reporting', 'path': 'ad_reporting__ad_report.sql', 'original_file_path': 'models\\ad_reporting__ad_report.sql', 'unique_id': 'model.ad_reporting.ad_reporting__ad_report', 'fqn': ['ad_reporting', 'ad_reporting__ad_report'], 'alias': 'ad_reporting__ad_report', 'checksum': {'name': 'sha256', 'checksum': '87a1850a3d333ed329ac0fe5fe08fe66b351da3b7eac0ed33af0b0737af6b057'}, 'config': {'enabled': True, 'alias': None, 'schema': 'ad_reporting', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents daily metrics by ad, ad group, campaign and account.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'platform': {'name': 'platform', 'description': 'The ad platform associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The ID representing the account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The name of the account, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID representing the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'The ID representing the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'The name of the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_id': {'name': 'ad_id', 'description': 'The ID representing the ad, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_name': {'name': 'ad_name', 'description': 'The name of the ad, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The count of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The count of impressions.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The cost of the ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'ad_reporting://models\\ad_reporting_models.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'ad_reporting', 'enabled': True}, 'created_at': 1694433484.944159, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_ad_reporting`.`ad_reporting__ad_report`', 'raw_code': "{% set enabled_packages = get_enabled_packages() %}\n{{ config(enabled=is_enabled(enabled_packages)) }}\n\nwith base as (\n\n    select *\n    from {{ ref('int_ad_reporting__ad_report') }}\n),\n\naggregated as (\n    \n    select \n        date_day,\n        platform,\n        account_id,\n        account_name,\n        campaign_id,\n        campaign_name,\n        ad_group_id,\n        ad_group_name,\n        ad_id,\n        ad_name,\n        sum(clicks) as clicks,\n        sum(impressions) as impressions,\n        sum(spend) as spend\n    from base\n    {{ dbt_utils.group_by(10) }}\n)\n\nselect *\nfrom aggregated", 'language': 'sql', 'refs': [['int_ad_reporting__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.ad_reporting.get_enabled_packages', 'macro.ad_reporting.is_enabled', 'macro.dbt_utils.group_by'], 'nodes': ['model.ad_reporting.int_ad_reporting__ad_report']}, 'compiled_path': None}, 'model.ad_reporting.ad_reporting__campaign_report': {'database': 'drops-bi', 'schema': 'marketing_full_ad_reporting', 'name': 'ad_reporting__campaign_report', 'resource_type': 'model', 'package_name': 'ad_reporting', 'path': 'ad_reporting__campaign_report.sql', 'original_file_path': 'models\\ad_reporting__campaign_report.sql', 'unique_id': 'model.ad_reporting.ad_reporting__campaign_report', 'fqn': ['ad_reporting', 'ad_reporting__campaign_report'], 'alias': 'ad_reporting__campaign_report', 'checksum': {'name': 'sha256', 'checksum': '2483fb7d8542d9dea58ad86c4e2821501bf104c2f6802e7c4f74baea277ce39c'}, 'config': {'enabled': True, 'alias': None, 'schema': 'ad_reporting', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents daily metrics by campaign and account.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'platform': {'name': 'platform', 'description': 'The ad platform associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The ID representing the account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The name of the account, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID representing the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The count of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The count of impressions.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The cost of the ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'ad_reporting://models\\ad_reporting_models.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'ad_reporting', 'enabled': True}, 'created_at': 1694433484.9471753, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_ad_reporting`.`ad_reporting__campaign_report`', 'raw_code': "{% set enabled_packages = get_enabled_packages() %}\n{{ config(enabled=is_enabled(enabled_packages)) }}\n\nwith base as (\n\n    select *\n    from {{ ref('int_ad_reporting__campaign_report') }}\n),\n\naggregated as (\n    \n    select \n        date_day,\n        platform,\n        account_id,\n        account_name,\n        campaign_id,\n        campaign_name,\n        sum(clicks) as clicks,\n        sum(impressions) as impressions,\n        sum(spend) as spend\n    from base\n    {{ dbt_utils.group_by(6) }}\n)\n\nselect *\nfrom aggregated", 'language': 'sql', 'refs': [['int_ad_reporting__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.ad_reporting.get_enabled_packages', 'macro.ad_reporting.is_enabled', 'macro.dbt_utils.group_by'], 'nodes': ['model.ad_reporting.int_ad_reporting__campaign_report']}, 'compiled_path': None}, 'model.ad_reporting.ad_reporting__keyword_report': {'database': 'drops-bi', 'schema': 'marketing_full_ad_reporting', 'name': 'ad_reporting__keyword_report', 'resource_type': 'model', 'package_name': 'ad_reporting', 'path': 'ad_reporting__keyword_report.sql', 'original_file_path': 'models\\ad_reporting__keyword_report.sql', 'unique_id': 'model.ad_reporting.ad_reporting__keyword_report', 'fqn': ['ad_reporting', 'ad_reporting__keyword_report'], 'alias': 'ad_reporting__keyword_report', 'checksum': {'name': 'sha256', 'checksum': '19712b5731c1c125a6a6940b48c1b72255d30ad165ceb8be94d17e0af110c044'}, 'config': {'enabled': True, 'alias': None, 'schema': 'ad_reporting', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents daily metrics by keyword, ad group, campaign and account.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'platform': {'name': 'platform', 'description': 'The ad platform associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The ID representing the account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The name of the account, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID representing the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'The ID representing the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'The name of the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_id': {'name': 'keyword_id', 'description': 'The ID representing the keyword, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_text': {'name': 'keyword_text', 'description': 'The keyword text.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_match_type': {'name': 'keyword_match_type', 'description': 'The keyword match type associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The count of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The count of impressions.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The cost of the ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'ad_reporting://models\\ad_reporting_models.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'ad_reporting', 'enabled': True}, 'created_at': 1694433484.950807, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_ad_reporting`.`ad_reporting__keyword_report`', 'raw_code': "{% if var('twitter_ads__using_keywords', True) %}\n    {% set include_list = ['amazon_ads', 'apple_search_ads', 'google_ads', 'microsoft_ads', 'pinterest_ads', 'twitter_ads'] %}\n{% else %}\n    {% set include_list = ['amazon_ads', 'apple_search_ads', 'google_ads', 'microsoft_ads', 'pinterest_ads'] %}\n{% endif %}\n\n{% set enabled_packages = get_enabled_packages(include=include_list)%}\n{{ config(enabled=is_enabled(enabled_packages)) }}\n\nwith base as (\n\n    select *\n    from {{ ref('int_ad_reporting__keyword_report') }}\n),\n\naggregated as (\n    \n    select \n        date_day,\n        platform,\n        account_id,\n        account_name,\n        campaign_id,\n        campaign_name,\n        ad_group_id,\n        ad_group_name,\n        keyword_id,\n        keyword_text,\n        keyword_match_type,\n        sum(clicks) as clicks,\n        sum(impressions) as impressions,\n        sum(spend) as spend\n    from base\n    {{ dbt_utils.group_by(11) }}\n)\n\nselect *\nfrom aggregated", 'language': 'sql', 'refs': [['int_ad_reporting__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.ad_reporting.get_enabled_packages', 'macro.ad_reporting.is_enabled', 'macro.dbt_utils.group_by'], 'nodes': ['model.ad_reporting.int_ad_reporting__keyword_report']}, 'compiled_path': None}, 'model.ad_reporting.ad_reporting__search_report': {'database': 'drops-bi', 'schema': 'marketing_full_ad_reporting', 'name': 'ad_reporting__search_report', 'resource_type': 'model', 'package_name': 'ad_reporting', 'path': 'ad_reporting__search_report.sql', 'original_file_path': 'models\\ad_reporting__search_report.sql', 'unique_id': 'model.ad_reporting.ad_reporting__search_report', 'fqn': ['ad_reporting', 'ad_reporting__search_report'], 'alias': 'ad_reporting__search_report', 'checksum': {'name': 'sha256', 'checksum': '6bc6ff01c66a8e32bcedc6a6f3f8429bc445c65f6bd18ed2ee4813ddb065fb2b'}, 'config': {'enabled': True, 'alias': None, 'schema': 'ad_reporting', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents daily metrics by search query, ad group, campaign and account.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'platform': {'name': 'platform', 'description': 'The ad platform associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The ID representing the account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The name of the account, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID representing the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'The ID representing the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'The name of the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_id': {'name': 'keyword_id', 'description': 'The ID representing the keyword, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_text': {'name': 'keyword_text', 'description': 'The keyword text.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'search_query': {'name': 'search_query', 'description': 'The search query text.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'search_match_type': {'name': 'search_match_type', 'description': 'The search match type associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The count of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The count of impressions.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The cost of the ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'ad_reporting://models\\ad_reporting_models.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'ad_reporting', 'enabled': True}, 'created_at': 1694433484.954815, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_ad_reporting`.`ad_reporting__search_report`', 'raw_code': "{% if var('apple_search_ads__using_search_terms', True) %}\n    {% set include_list = ['amazon_ads', 'apple_search_ads', 'microsoft_ads'] %}\n{% else %}\n    {% set include_list = ['amazon_ads', 'microsoft_ads'] %}\n{% endif %}\n\n{% set enabled_packages = get_enabled_packages(include=include_list)%}\n{{ config(enabled=is_enabled(enabled_packages)) }}\n\nwith base as (\n\n    select *\n    from {{ ref('int_ad_reporting__search_report') }}\n),\n\naggregated as (\n    \n    select \n        date_day,\n        platform,\n        account_id,\n        account_name,\n        campaign_id,\n        campaign_name,\n        ad_group_id,\n        ad_group_name,\n        keyword_id,\n        keyword_text,\n        search_query,\n        search_match_type,\n        sum(clicks) as clicks,\n        sum(impressions) as impressions,\n        sum(spend) as spend\n    from base\n    {{ dbt_utils.group_by(12) }}\n)\n\nselect *\nfrom aggregated", 'language': 'sql', 'refs': [['int_ad_reporting__search_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.ad_reporting.get_enabled_packages', 'macro.ad_reporting.is_enabled', 'macro.dbt_utils.group_by'], 'nodes': ['model.ad_reporting.int_ad_reporting__search_report']}, 'compiled_path': None}, 'model.ad_reporting.ad_reporting__url_report': {'database': 'drops-bi', 'schema': 'marketing_full_ad_reporting', 'name': 'ad_reporting__url_report', 'resource_type': 'model', 'package_name': 'ad_reporting', 'path': 'ad_reporting__url_report.sql', 'original_file_path': 'models\\ad_reporting__url_report.sql', 'unique_id': 'model.ad_reporting.ad_reporting__url_report', 'fqn': ['ad_reporting', 'ad_reporting__url_report'], 'alias': 'ad_reporting__url_report', 'checksum': {'name': 'sha256', 'checksum': '0df96babf636b0d123d5368bd60ec0f6447614786299fdc3705d5fabb6fb8686'}, 'config': {'enabled': True, 'alias': None, 'schema': 'ad_reporting', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents daily metrics by URL (and if applicable, URL UTM parameters), ad group, campaign and account.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'platform': {'name': 'platform', 'description': 'The ad platform associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The ID representing the account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The name of the account, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID representing the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'The ID representing the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'The name of the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'base_url': {'name': 'base_url', 'description': 'The base url of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_host': {'name': 'url_host', 'description': 'The URL host of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_path': {'name': 'url_path', 'description': 'The URL path of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_source': {'name': 'utm_source', 'description': 'The utm_source parameter of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_medium': {'name': 'utm_medium', 'description': 'The utm_medium parameter of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_campaign': {'name': 'utm_campaign', 'description': 'The utm_campaign parameter of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_content': {'name': 'utm_content', 'description': 'The utm_content parameter of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_term': {'name': 'utm_term', 'description': 'The utm_term parameter of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The count of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The count of impressions.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The cost of the ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'ad_reporting://models\\ad_reporting_models.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'ad_reporting', 'enabled': True}, 'created_at': 1694433484.9600356, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_ad_reporting`.`ad_reporting__url_report`', 'raw_code': "{% set enabled_packages = get_enabled_packages(exclude=['amazon_ads', 'apple_search_ads']) %}\n{{ config(enabled=is_enabled(enabled_packages)) }}\n\nwith base as (\n\n    select *\n    from {{ ref('int_ad_reporting__url_report') }}\n),\n\naggregated as (\n    \n    select \n        date_day, \n        platform,\n        account_id, \n        account_name, \n        campaign_id,\n        campaign_name,\n        ad_group_id,\n        ad_group_name,\n        base_url,\n        url_host,\n        url_path,\n        utm_source,\n        utm_medium,\n        utm_campaign,\n        utm_content,\n        utm_term,\n        sum(clicks) as clicks,\n        sum(impressions) as impressions,\n        sum(spend) as spend\n    from base\n    {{ dbt_utils.group_by(16) }}\n)\n\nselect *\nfrom aggregated", 'language': 'sql', 'refs': [['int_ad_reporting__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.ad_reporting.get_enabled_packages', 'macro.ad_reporting.is_enabled', 'macro.dbt_utils.group_by'], 'nodes': ['model.ad_reporting.int_ad_reporting__url_report']}, 'compiled_path': None}, 'model.ad_reporting.int_ad_reporting__account_report': {'database': 'drops-bi', 'schema': 'marketing_full_int_ad_reporting', 'name': 'int_ad_reporting__account_report', 'resource_type': 'model', 'package_name': 'ad_reporting', 'path': 'intermediate\\int_ad_reporting__account_report.sql', 'original_file_path': 'models\\intermediate\\int_ad_reporting__account_report.sql', 'unique_id': 'model.ad_reporting.int_ad_reporting__account_report', 'fqn': ['ad_reporting', 'intermediate', 'int_ad_reporting__account_report'], 'alias': 'int_ad_reporting__account_report', 'checksum': {'name': 'sha256', 'checksum': '7c78606eeac98c9cb1f523e081c71330ef2d067c6c3d4ec8a9619bf6f1bb696c'}, 'config': {'enabled': True, 'alias': None, 'schema': 'int_ad_reporting', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'ephemeral', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'ephemeral', 'schema': 'int_ad_reporting', 'enabled': True}, 'created_at': 1694433480.8987675, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': "{% set enabled_packages = get_enabled_packages() %}\n{{ config(enabled=is_enabled(enabled_packages)) }}\n\nwith\n{% for package in ['twitter_ads', 'facebook_ads', 'google_ads', 'microsoft_ads'] %}\n{% if package in enabled_packages %}\n{{ package }} as (\n    {{ get_query(\n        platform=package,\n        report_type='account',\n        relation=ref(package ~ '__account_report')\n    ) }}\n),\n{% endif %}\n{% endfor %}\n\n{% if 'apple_search_ads' in enabled_packages %}\napple_search_ads as (\n\n    {{ get_query(\n        platform='apple_search_ads', \n        report_type='account', \n        field_mapping={\n                'account_id': 'organization_id',\n                'account_name': 'organization_name',\n                'clicks': 'taps'\n            },\n        relation=ref('apple_search_ads__organization_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'linkedin_ads' in enabled_packages %}\nlinkedin_ads as (\n\n    {{ get_query(\n        platform='linkedin_ads', \n        report_type='account', \n        field_mapping={\n                'spend': 'cost'\n            },\n        relation=ref('linkedin_ads__account_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'pinterest_ads' in enabled_packages %}\npinterest_ads as (\n\n    {{ get_query(\n        platform='pinterest_ads', \n        report_type='account', \n        field_mapping={\n                'account_id': 'advertiser_id',\n                'account_name': 'advertiser_name'\n            },\n        relation=ref('pinterest_ads__advertiser_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'snapchat_ads' in enabled_packages %}\nsnapchat_ads as (\n\n    {{ get_query(\n        platform='snapchat_ads', \n        report_type='account', \n        field_mapping={\n                'account_id': 'ad_account_id',\n                'account_name': 'ad_account_name',\n                'clicks':'swipes'\n            },\n        relation=ref('snapchat_ads__account_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'tiktok_ads' in enabled_packages %}\ntiktok_ads as (\n\n    {{ get_query(\n        platform='tiktok_ads', \n        report_type='account', \n        field_mapping={\n                'account_id': 'advertiser_id',\n                'account_name': 'advertiser_name'\n            },\n        relation=ref('tiktok_ads__advertiser_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'amazon_ads' in enabled_packages %}\namazon_ads as (\n\n    {{ get_query(\n        platform='amazon_ads', \n        report_type='account', \n        field_mapping={\n                'spend': 'cost'\n            },\n        relation=ref('amazon_ads__account_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'reddit_ads' in enabled_packages %}\nreddit_ads as (\n\n    {{ get_query(\n        platform='reddit_ads', \n        report_type='account', \n        field_mapping={\n                'account_name': 'null'\n            },\n        relation=ref('reddit_ads__account_report')\n    ) }}\n),\n{% endif %}\n\nunioned as (\n\n    {{ union_ctes(ctes=enabled_packages)}}\n)\n\nselect *\nfrom unioned", 'language': 'sql', 'refs': [['twitter_ads__account_report'], ['google_ads__account_report'], ['apple_search_ads__organization_report'], ['snapchat_ads__account_report'], ['tiktok_ads__advertiser_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.ad_reporting.get_enabled_packages', 'macro.ad_reporting.is_enabled', 'macro.ad_reporting.get_query', 'macro.ad_reporting.union_ctes'], 'nodes': ['model.twitter_ads.twitter_ads__account_report', 'model.google_ads.google_ads__account_report', 'model.apple_search_ads.apple_search_ads__organization_report', 'model.snapchat_ads.snapchat_ads__account_report', 'model.tiktok_ads.tiktok_ads__advertiser_report']}, 'compiled_path': None}, 'model.ad_reporting.int_ad_reporting__ad_group_report': {'database': 'drops-bi', 'schema': 'marketing_full_int_ad_reporting', 'name': 'int_ad_reporting__ad_group_report', 'resource_type': 'model', 'package_name': 'ad_reporting', 'path': 'intermediate\\int_ad_reporting__ad_group_report.sql', 'original_file_path': 'models\\intermediate\\int_ad_reporting__ad_group_report.sql', 'unique_id': 'model.ad_reporting.int_ad_reporting__ad_group_report', 'fqn': ['ad_reporting', 'intermediate', 'int_ad_reporting__ad_group_report'], 'alias': 'int_ad_reporting__ad_group_report', 'checksum': {'name': 'sha256', 'checksum': '8020b2e69bd0f228a2f3c63c5e9aaa01116863ac9c1c1c89ef33f0a4df48606c'}, 'config': {'enabled': True, 'alias': None, 'schema': 'int_ad_reporting', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'ephemeral', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'ephemeral', 'schema': 'int_ad_reporting', 'enabled': True}, 'created_at': 1694433480.9430914, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': "{% set enabled_packages = get_enabled_packages() %}\n{{ config(enabled=is_enabled(enabled_packages)) }}\n\nwith\n{% for package in ['google_ads', 'microsoft_ads'] %}\n{% if package in enabled_packages %}\n{{ package }} as (\n    {{ get_query(\n        platform=package,\n        report_type='ad_group',\n        relation=ref(package ~ '__ad_group_report')\n    ) }}\n),\n{% endif %}\n{% endfor %}\n\n{% if 'apple_search_ads' in enabled_packages %}\napple_search_ads as (\n\n    {{ get_query(\n        platform='apple_search_ads', \n        report_type='ad_group', \n        field_mapping={\n                'account_id': 'organization_id',\n                'account_name': 'organization_name',\n                'clicks': 'taps'\n            },\n        relation=ref('apple_search_ads__ad_group_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'linkedin_ads' in enabled_packages %}\nlinkedin_ads as (\n\n    {{ get_query(\n        platform='linkedin_ads', \n        report_type='ad_group', \n        field_mapping={\n                'campaign_id': 'campaign_group_id',\n                'campaign_name': 'campaign_group_name',\n                'ad_group_id': 'campaign_id',\n                'ad_group_name': 'campaign_name',\n                'spend': 'cost'\n            },\n        relation=ref('linkedin_ads__campaign_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'facebook_ads' in enabled_packages %}\nfacebook_ads as (\n\n    {{ get_query(\n        platform='facebook_ads', \n        report_type='ad_group', \n        field_mapping={\n                'ad_group_id': 'ad_set_id',\n                'ad_group_name': 'ad_set_name'\n            },\n        relation=ref('facebook_ads__ad_set_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'pinterest_ads' in enabled_packages %}\npinterest_ads as (\n\n    {{ get_query(\n        platform='pinterest_ads', \n        report_type='ad_group', \n        field_mapping={\n                'account_id': 'advertiser_id',\n                'account_name': 'advertiser_name'\n            },\n        relation=ref('pinterest_ads__ad_group_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'snapchat_ads' in enabled_packages %}\nsnapchat_ads as (\n\n    {{ get_query(\n        platform='snapchat_ads', \n        report_type='ad_group', \n        field_mapping={\n                'account_id': 'ad_account_id',\n                'account_name': 'ad_account_name',\n                'ad_group_id': 'ad_squad_id',\n                'ad_group_name': 'ad_squad_name',\n                'clicks':'swipes'\n            },\n        relation=ref('snapchat_ads__ad_squad_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'tiktok_ads' in enabled_packages %}\ntiktok_ads as (\n\n    {{ get_query(\n        platform='tiktok_ads', \n        report_type='ad_group', \n        field_mapping={\n                'account_id': 'advertiser_id',\n                'account_name': 'advertiser_name'\n            },\n        relation=ref('tiktok_ads__ad_group_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'twitter_ads' in enabled_packages %}\ntwitter_ads as (\n\n    {{ get_query(\n        platform='twitter_ads', \n        report_type='ad_group', \n        field_mapping={\n                'ad_group_id': 'line_item_id',\n                'ad_group_name': 'line_item_name'\n            },\n        relation=ref('twitter_ads__line_item_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'amazon_ads' in enabled_packages %}\namazon_ads as (\n\n    {{ get_query(\n        platform='amazon_ads', \n        report_type='ad_group', \n        field_mapping={\n                'spend': 'cost'\n            },\n        relation=ref('amazon_ads__ad_group_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'reddit_ads' in enabled_packages %}\nreddit_ads as (\n\n    {{ get_query(\n        platform='reddit_ads', \n        report_type='ad_group', \n        field_mapping={\n                'account_name': 'null'\n            },\n        relation=ref('reddit_ads__ad_group_report')\n    ) }}\n),\n{% endif %}\n\nunioned as (\n\n    {{ union_ctes(ctes=enabled_packages)}}\n)\n\nselect *\nfrom unioned", 'language': 'sql', 'refs': [['google_ads__ad_group_report'], ['apple_search_ads__ad_group_report'], ['snapchat_ads__ad_squad_report'], ['tiktok_ads__ad_group_report'], ['twitter_ads__line_item_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.ad_reporting.get_enabled_packages', 'macro.ad_reporting.is_enabled', 'macro.ad_reporting.get_query', 'macro.ad_reporting.union_ctes'], 'nodes': ['model.google_ads.google_ads__ad_group_report', 'model.apple_search_ads.apple_search_ads__ad_group_report', 'model.snapchat_ads.snapchat_ads__ad_squad_report', 'model.tiktok_ads.tiktok_ads__ad_group_report', 'model.twitter_ads.twitter_ads__line_item_report']}, 'compiled_path': None}, 'model.ad_reporting.int_ad_reporting__ad_report': {'database': 'drops-bi', 'schema': 'marketing_full_int_ad_reporting', 'name': 'int_ad_reporting__ad_report', 'resource_type': 'model', 'package_name': 'ad_reporting', 'path': 'intermediate\\int_ad_reporting__ad_report.sql', 'original_file_path': 'models\\intermediate\\int_ad_reporting__ad_report.sql', 'unique_id': 'model.ad_reporting.int_ad_reporting__ad_report', 'fqn': ['ad_reporting', 'intermediate', 'int_ad_reporting__ad_report'], 'alias': 'int_ad_reporting__ad_report', 'checksum': {'name': 'sha256', 'checksum': '540cec6af930e2a24dbf60c4d4114bf17e543797bc7fd909329e4be917d869a4'}, 'config': {'enabled': True, 'alias': None, 'schema': 'int_ad_reporting', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'ephemeral', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'ephemeral', 'schema': 'int_ad_reporting', 'enabled': True}, 'created_at': 1694433480.9706976, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': "{% set enabled_packages = get_enabled_packages() %}\n{{ config(enabled=is_enabled(enabled_packages)) }}\n\nwith\n{% for package in ['google_ads', 'microsoft_ads'] %}\n{% if package in enabled_packages %}\n{{ package }} as (\n    {{ get_query(\n        platform=package,\n        report_type='ad',\n        relation=ref(package ~ '__ad_report')\n    ) }}\n),\n{% endif %}\n{% endfor %}\n\n{% if 'apple_search_ads' in enabled_packages %}\napple_search_ads as (\n\n    {{ get_query(\n        platform='apple_search_ads', \n        report_type='ad', \n        field_mapping={\n                'account_id': 'organization_id',\n                'account_name': 'organization_name',\n                'clicks': 'taps'\n            },\n        relation=ref('apple_search_ads__ad_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'facebook_ads' in enabled_packages %}\nfacebook_ads as (\n\n    {{ get_query(\n        platform='facebook_ads', \n        report_type='ad', \n        field_mapping={\n                'ad_group_id': 'ad_set_id',\n                'ad_group_name': 'ad_set_name'\n            },\n        relation=ref('facebook_ads__ad_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'linkedin_ads' in enabled_packages %}\nlinkedin_ads as (\n\n    {{ get_query(\n        platform='linkedin_ads', \n        report_type='ad', \n        field_mapping={\n                'campaign_id': 'campaign_group_id',\n                'campaign_name': 'campaign_group_name',\n                'ad_group_id': 'campaign_id',\n                'ad_group_name': 'campaign_name',\n                'ad_id': 'creative_id',\n                'ad_name': 'null',\n                'spend': 'cost'\n            },\n        relation=ref('linkedin_ads__creative_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'pinterest_ads' in enabled_packages %}\npinterest_ads as (\n\n    {{ get_query(\n        platform='pinterest_ads', \n        report_type='ad', \n        field_mapping={\n                'account_id': 'advertiser_id',\n                'account_name': 'advertiser_name',\n                'ad_id': 'pin_promotion_id',\n                'ad_name': 'pin_name'\n            },\n        relation=ref('pinterest_ads__pin_promotion_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'snapchat_ads' in enabled_packages %}\nsnapchat_ads as (\n\n    {{ get_query(\n        platform='snapchat_ads', \n        report_type='ad', \n        field_mapping={\n                'account_id': 'ad_account_id',\n                'account_name': 'ad_account_name',\n                'campaign_id': 'null',\n                'campaign_name': 'null',\n                'ad_group_id': 'null',\n                'ad_group_name': 'null',\n                'clicks':'swipes'\n            },\n        relation=ref('snapchat_ads__ad_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'tiktok_ads' in enabled_packages %}\ntiktok_ads as (\n\n    {{ get_query(\n        platform='tiktok_ads', \n        report_type='ad', \n        field_mapping={\n                'account_id': 'advertiser_id',\n                'account_name': 'advertiser_name'\n            },\n        relation=ref('tiktok_ads__ad_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'twitter_ads' in enabled_packages %}\ntwitter_ads as (\n\n    {{ get_query(\n        platform='twitter_ads', \n        report_type='ad', \n        field_mapping={\n                'ad_group_id': 'line_item_id',\n                'ad_group_name': 'line_item_name',\n                'ad_id': 'promoted_tweet_id',\n                'ad_name': 'tweet_name'\n            },\n        relation=ref('twitter_ads__promoted_tweet_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'amazon_ads' in enabled_packages %}\namazon_ads as (\n\n    {{ get_query(\n        platform='amazon_ads', \n        report_type='ad', \n        field_mapping={\n                'spend': 'cost',\n                'ad_name': 'advertised_asin'\n            },\n        relation=ref('amazon_ads__ad_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'reddit_ads' in enabled_packages %}\nreddit_ads as (\n\n    {{ get_query(\n        platform='reddit_ads', \n        report_type='ad', \n        field_mapping={\n                'account_name': 'null'\n            },\n        relation=ref('reddit_ads__ad_report')\n    ) }}\n),\n{% endif %}\n\nunioned as (\n\n    {{ union_ctes(ctes=enabled_packages)}}\n)\n\nselect *\nfrom unioned", 'language': 'sql', 'refs': [['google_ads__ad_report'], ['apple_search_ads__ad_report'], ['snapchat_ads__ad_report'], ['tiktok_ads__ad_report'], ['twitter_ads__promoted_tweet_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.ad_reporting.get_enabled_packages', 'macro.ad_reporting.is_enabled', 'macro.ad_reporting.get_query', 'macro.ad_reporting.union_ctes'], 'nodes': ['model.google_ads.google_ads__ad_report', 'model.apple_search_ads.apple_search_ads__ad_report', 'model.snapchat_ads.snapchat_ads__ad_report', 'model.tiktok_ads.tiktok_ads__ad_report', 'model.twitter_ads.twitter_ads__promoted_tweet_report']}, 'compiled_path': None}, 'model.ad_reporting.int_ad_reporting__campaign_report': {'database': 'drops-bi', 'schema': 'marketing_full_int_ad_reporting', 'name': 'int_ad_reporting__campaign_report', 'resource_type': 'model', 'package_name': 'ad_reporting', 'path': 'intermediate\\int_ad_reporting__campaign_report.sql', 'original_file_path': 'models\\intermediate\\int_ad_reporting__campaign_report.sql', 'unique_id': 'model.ad_reporting.int_ad_reporting__campaign_report', 'fqn': ['ad_reporting', 'intermediate', 'int_ad_reporting__campaign_report'], 'alias': 'int_ad_reporting__campaign_report', 'checksum': {'name': 'sha256', 'checksum': 'fa96bcb55ec7c848acb1ee90f5026164682349b38262b9fa4b3b0f56803c0851'}, 'config': {'enabled': True, 'alias': None, 'schema': 'int_ad_reporting', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'ephemeral', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'ephemeral', 'schema': 'int_ad_reporting', 'enabled': True}, 'created_at': 1694433481.0014348, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': "{% set enabled_packages = get_enabled_packages() %}\n{{ config(enabled=is_enabled(enabled_packages)) }}\n\nwith\n{% for package in ['twitter_ads', 'facebook_ads', 'google_ads', 'microsoft_ads'] %}\n{% if package in enabled_packages %}\n{{ package }} as (\n    {{ get_query(\n        platform=package,\n        report_type='campaign',\n        relation=ref(package ~ '__campaign_report')\n    ) }}\n),\n{% endif %}\n{% endfor %}\n\n{% if 'apple_search_ads' in enabled_packages %}\napple_search_ads as (\n\n    {{ get_query(\n        platform='apple_search_ads', \n        report_type='campaign', \n        field_mapping={\n                'account_id': 'organization_id',\n                'account_name': 'organization_name',\n                'clicks': 'taps'\n            },\n        relation=ref('apple_search_ads__campaign_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'linkedin_ads' in enabled_packages %}\nlinkedin_ads as (\n\n    {{ get_query(\n        platform='linkedin_ads', \n        report_type='campaign', \n        field_mapping={\n                'campaign_id': 'campaign_group_id',\n                'campaign_name': 'campaign_group_name',\n                'spend': 'cost'\n            },\n        relation=ref('linkedin_ads__campaign_group_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'pinterest_ads' in enabled_packages %}\npinterest_ads as (\n\n    {{ get_query(\n        platform='pinterest_ads', \n        report_type='campaign', \n        field_mapping={\n                'account_id': 'advertiser_id',\n                'account_name': 'advertiser_name'\n            },\n        relation=ref('pinterest_ads__campaign_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'snapchat_ads' in enabled_packages %}\nsnapchat_ads as (\n\n    {{ get_query(\n        platform='snapchat_ads', \n        report_type='campaign', \n        field_mapping={\n                'account_id': 'ad_account_id',\n                'account_name': 'ad_account_name',\n                'clicks':'swipes'\n            },\n        relation=ref('snapchat_ads__campaign_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'tiktok_ads' in enabled_packages %}\ntiktok_ads as (\n\n    {{ get_query(\n        platform='tiktok_ads', \n        report_type='campaign', \n        field_mapping={\n                'account_id': 'advertiser_id',\n                'account_name': 'advertiser_name'\n            },\n        relation=ref('tiktok_ads__campaign_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'amazon_ads' in enabled_packages %}\namazon_ads as (\n\n    {{ get_query(\n        platform='amazon_ads', \n        report_type='campaign', \n        field_mapping={\n                'spend': 'cost'\n            },\n        relation=ref('amazon_ads__campaign_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'reddit_ads' in enabled_packages %}\nreddit_ads as (\n\n    {{ get_query(\n        platform='reddit_ads', \n        report_type='campaign', \n        field_mapping={\n                'account_name': 'null'\n            },\n        relation=ref('reddit_ads__campaign_report')\n    ) }}\n),\n{% endif %}\n\nunioned as (\n\n    {{ union_ctes(ctes=enabled_packages)}}\n)\n\nselect *\nfrom unioned", 'language': 'sql', 'refs': [['twitter_ads__campaign_report'], ['google_ads__campaign_report'], ['apple_search_ads__campaign_report'], ['snapchat_ads__campaign_report'], ['tiktok_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.ad_reporting.get_enabled_packages', 'macro.ad_reporting.is_enabled', 'macro.ad_reporting.get_query', 'macro.ad_reporting.union_ctes'], 'nodes': ['model.twitter_ads.twitter_ads__campaign_report', 'model.google_ads.google_ads__campaign_report', 'model.apple_search_ads.apple_search_ads__campaign_report', 'model.snapchat_ads.snapchat_ads__campaign_report', 'model.tiktok_ads.tiktok_ads__campaign_report']}, 'compiled_path': None}, 'model.ad_reporting.int_ad_reporting__keyword_report': {'database': 'drops-bi', 'schema': 'marketing_full_int_ad_reporting', 'name': 'int_ad_reporting__keyword_report', 'resource_type': 'model', 'package_name': 'ad_reporting', 'path': 'intermediate\\int_ad_reporting__keyword_report.sql', 'original_file_path': 'models\\intermediate\\int_ad_reporting__keyword_report.sql', 'unique_id': 'model.ad_reporting.int_ad_reporting__keyword_report', 'fqn': ['ad_reporting', 'intermediate', 'int_ad_reporting__keyword_report'], 'alias': 'int_ad_reporting__keyword_report', 'checksum': {'name': 'sha256', 'checksum': '29b788469d109e4a6a03f5c5ed31ad693712c1f0e4bae524c9ed3271924f133d'}, 'config': {'enabled': True, 'alias': None, 'schema': 'int_ad_reporting', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'ephemeral', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'ephemeral', 'schema': 'int_ad_reporting', 'enabled': True}, 'created_at': 1694433481.0244772, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': "{% if var('twitter_ads__using_keywords', True) %}\n    {% set include_list = ['amazon_ads', 'apple_search_ads', 'google_ads', 'microsoft_ads', 'pinterest_ads', 'twitter_ads'] %}\n{% else %}\n    {% set include_list = ['amazon_ads', 'apple_search_ads', 'google_ads', 'microsoft_ads', 'pinterest_ads'] %}\n{% endif %}\n\n{% set enabled_packages = get_enabled_packages(include=include_list)%}\n{{ config(enabled=is_enabled(enabled_packages)) }}\n\nwith\n{% if 'apple_search_ads' in enabled_packages %}\napple_search_ads as (\n\n    {{ get_query(\n        platform='apple_search_ads', \n        report_type='keyword', \n        field_mapping={\n                'account_id': 'organization_id',\n                'account_name': 'organization_name',\n                'keyword_match_type': 'match_type',\n                'clicks': 'taps'\n            },\n        relation=ref('apple_search_ads__keyword_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'google_ads' in enabled_packages %}\ngoogle_ads as (\n\n    {{ get_query(\n        platform='google_ads', \n        report_type='keyword', \n        field_mapping={\n                'keyword_id': 'criterion_id',\n            },\n        relation=ref('google_ads__keyword_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'microsoft_ads' in enabled_packages %}\nmicrosoft_ads as (\n\n    {{ get_query(\n        platform='microsoft_ads', \n        report_type='keyword', \n        field_mapping={\n                'keyword_text': 'keyword_name',\n                'keyword_match_type': 'match_type'\n            },\n        relation=ref('microsoft_ads__keyword_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'pinterest_ads' in enabled_packages %}\npinterest_ads as (\n\n    {{ get_query(\n        platform='pinterest_ads', \n        report_type='keyword', \n        field_mapping={\n                'account_id': 'advertiser_id',\n                'account_name': 'advertiser_name',\n                'keyword_text': 'keyword_value',\n                'keyword_match_type': 'match_type'\n            },\n        relation=ref('pinterest_ads__keyword_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'twitter_ads' in enabled_packages and var('twitter_ads__using_keywords', True) %}\ntwitter_ads as (\n\n    {{ get_query(\n        platform='twitter_ads', \n        report_type='keyword', \n        field_mapping={\n                'ad_group_id': 'line_item_id',\n                'ad_group_name': 'line_item_name',\n                'keyword_id': 'keyword_id',\n                'keyword_text': 'keyword',\n                'keyword_match_type': 'null'\n            },\n        relation=ref('twitter_ads__keyword_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'amazon_ads' in enabled_packages %}\namazon_ads as (\n\n    {{ get_query(\n        platform='amazon_ads', \n        report_type='keyword', \n        field_mapping={\n                'spend': 'cost',\n                'keyword_match_type': 'match_type'\n            },\n        relation=ref('amazon_ads__keyword_report')\n    ) }}\n), \n{% endif %}\n\nunioned as (\n\n    {{ union_ctes(ctes=enabled_packages)}}\n)\n\nselect *\nfrom unioned", 'language': 'sql', 'refs': [['apple_search_ads__keyword_report'], ['google_ads__keyword_report'], ['twitter_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.ad_reporting.get_enabled_packages', 'macro.ad_reporting.is_enabled', 'macro.ad_reporting.get_query', 'macro.ad_reporting.union_ctes'], 'nodes': ['model.apple_search_ads.apple_search_ads__keyword_report', 'model.google_ads.google_ads__keyword_report', 'model.twitter_ads.twitter_ads__keyword_report']}, 'compiled_path': None}, 'model.ad_reporting.int_ad_reporting__search_report': {'database': 'drops-bi', 'schema': 'marketing_full_int_ad_reporting', 'name': 'int_ad_reporting__search_report', 'resource_type': 'model', 'package_name': 'ad_reporting', 'path': 'intermediate\\int_ad_reporting__search_report.sql', 'original_file_path': 'models\\intermediate\\int_ad_reporting__search_report.sql', 'unique_id': 'model.ad_reporting.int_ad_reporting__search_report', 'fqn': ['ad_reporting', 'intermediate', 'int_ad_reporting__search_report'], 'alias': 'int_ad_reporting__search_report', 'checksum': {'name': 'sha256', 'checksum': 'c54a943cafae9d0d7576cb97fdd93653f099b36133aa3a2ff454c1f0039d279c'}, 'config': {'enabled': True, 'alias': None, 'schema': 'int_ad_reporting', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'ephemeral', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'ephemeral', 'schema': 'int_ad_reporting', 'enabled': True}, 'created_at': 1694433481.0456157, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': "{% if var('apple_search_ads__using_search_terms', True) %}\n    {% set include_list = ['amazon_ads', 'apple_search_ads', 'microsoft_ads'] %}\n{% else %}\n    {% set include_list = ['amazon_ads', 'microsoft_ads'] %}\n{% endif %}\n\n{% set enabled_packages = get_enabled_packages(include=include_list)%}\n{{ config(enabled=is_enabled(enabled_packages)) }}\n\nwith \n{% if 'microsoft_ads' in enabled_packages %}\nmicrosoft_ads as (\n\n    {{ get_query(\n        platform='microsoft_ads', \n        report_type='search', \n        field_mapping={\n                'keyword_text': 'keyword_name',\n                'search_match_type': 'match_type'\n            },\n        relation=ref('microsoft_ads__search_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'apple_search_ads' in enabled_packages and var('apple_search_ads__using_search_terms', True) %}\napple_search_ads as (\n\n    {{ get_query(\n        platform='apple_search_ads', \n        report_type='search', \n        field_mapping={\n                'account_id': 'organization_id',\n                'account_name': 'organization_name',\n                'search_match_type': 'match_type',\n                'search_query': 'search_term_text',\n                'clicks': 'taps'\n            },\n        relation=ref('apple_search_ads__search_term_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'amazon_ads' in enabled_packages %}\namazon_ads as (\n\n    {{ get_query(\n        platform='amazon_ads', \n        report_type='search', \n        field_mapping={\n                'spend': 'cost',\n                'search_match_type': 'match_type',\n                'search_query': 'search_term'\n            },\n        relation=ref('amazon_ads__search_report')\n    ) }}\n), \n{% endif %}\n\nunioned as (\n\n    {{ union_ctes(ctes=enabled_packages)}}\n)\n\nselect *\nfrom unioned", 'language': 'sql', 'refs': [['apple_search_ads__search_term_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.ad_reporting.get_enabled_packages', 'macro.ad_reporting.is_enabled', 'macro.ad_reporting.get_query', 'macro.ad_reporting.union_ctes'], 'nodes': ['model.apple_search_ads.apple_search_ads__search_term_report']}, 'compiled_path': None}, 'model.ad_reporting.int_ad_reporting__url_report': {'database': 'drops-bi', 'schema': 'marketing_full_int_ad_reporting', 'name': 'int_ad_reporting__url_report', 'resource_type': 'model', 'package_name': 'ad_reporting', 'path': 'intermediate\\int_ad_reporting__url_report.sql', 'original_file_path': 'models\\intermediate\\int_ad_reporting__url_report.sql', 'unique_id': 'model.ad_reporting.int_ad_reporting__url_report', 'fqn': ['ad_reporting', 'intermediate', 'int_ad_reporting__url_report'], 'alias': 'int_ad_reporting__url_report', 'checksum': {'name': 'sha256', 'checksum': 'e174558a546f62bc92e0c9395b4c1d6c99185a3192f4978110e47338674af6c0'}, 'config': {'enabled': True, 'alias': None, 'schema': 'int_ad_reporting', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'ephemeral', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'ephemeral', 'schema': 'int_ad_reporting', 'enabled': True}, 'created_at': 1694433481.0607212, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': "{% set enabled_packages = get_enabled_packages(exclude=['amazon_ads', 'apple_search_ads']) %}\n{{ config(enabled=is_enabled(enabled_packages)) }}\n\nwith\n{% for package in ['google_ads', 'microsoft_ads'] %}\n{% if package in enabled_packages %}\n{{ package }} as (\n    {{ get_query(\n        platform=package,\n        report_type='url',\n        relation=ref(package ~ '__url_report')\n    ) }}\n),\n{% endif %}\n{% endfor %}\n\n{% if 'facebook_ads' in enabled_packages %}\nfacebook_ads as (\n\n    {{ get_query(\n        platform='facebook_ads', \n        report_type='url', \n        field_mapping={\n                'ad_group_id': 'ad_set_id',\n                'ad_group_name': 'ad_set_name'\n            },\n        relation=ref('facebook_ads__url_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'linkedin_ads' in enabled_packages %}\nlinkedin_ads as (\n\n    {{ get_query(\n        platform='linkedin_ads', \n        report_type='url', \n        field_mapping={\n                'campaign_id': 'campaign_group_id',\n                'campaign_name': 'campaign_group_name',\n                'ad_group_id': 'campaign_id',\n                'ad_group_name': 'campaign_name',\n                'spend': 'cost'\n            },\n        relation=ref('linkedin_ads__url_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'pinterest_ads' in enabled_packages %}\npinterest_ads as (\n\n    {{ get_query(\n        platform='pinterest_ads', \n        report_type='url', \n        field_mapping={\n                'account_id': 'advertiser_id',\n                'account_name': 'advertiser_name'\n            },\n        relation=ref('pinterest_ads__url_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'snapchat_ads' in enabled_packages %}\nsnapchat_ads as (\n\n    {{ get_query(\n        platform='snapchat_ads', \n        report_type='url', \n        field_mapping={\n                'account_id': 'ad_account_id',\n                'account_name': 'ad_account_name',\n                'ad_group_id': 'ad_squad_id',\n                'ad_group_name': 'ad_squad_name',\n                'clicks':'swipes'\n            },\n        relation=ref('snapchat_ads__url_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'tiktok_ads' in enabled_packages %}\ntiktok_ads as (\n\n    {{ get_query(\n        platform='tiktok_ads', \n        report_type='url', \n        field_mapping={\n                'account_id': 'advertiser_id',\n                'account_name': 'advertiser_name'\n            },\n        relation=ref('tiktok_ads__url_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'twitter_ads' in enabled_packages %}\ntwitter_ads as (\n\n    {{ get_query(\n        platform='twitter_ads', \n        report_type='url', \n        field_mapping={\n                'ad_group_id': 'line_item_id',\n                'ad_group_name': 'line_item_name'\n            },\n        relation=ref('twitter_ads__url_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'reddit_ads' in enabled_packages %}\nreddit_ads as (\n\n    {{ get_query(\n        platform='reddit_ads', \n        report_type='url', \n        field_mapping={\n                'account_name': 'null'\n            },\n        relation=ref('reddit_ads__url_report')\n    ) }}\n),\n{% endif %}\n\nunioned as (\n\n    {{ union_ctes(ctes=enabled_packages)}}\n)\n\nselect *\nfrom unioned", 'language': 'sql', 'refs': [['google_ads__url_report'], ['snapchat_ads__url_report'], ['tiktok_ads__url_report'], ['twitter_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.ad_reporting.get_enabled_packages', 'macro.ad_reporting.is_enabled', 'macro.ad_reporting.get_query', 'macro.ad_reporting.union_ctes'], 'nodes': ['model.google_ads.google_ads__url_report', 'model.snapchat_ads.snapchat_ads__url_report', 'model.tiktok_ads.tiktok_ads__url_report', 'model.twitter_ads.twitter_ads__url_report']}, 'compiled_path': None}, 'model.apple_search_ads.apple_search_ads__ad_group_report': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads', 'name': 'apple_search_ads__ad_group_report', 'resource_type': 'model', 'package_name': 'apple_search_ads', 'path': 'apple_search_ads__ad_group_report.sql', 'original_file_path': 'models\\apple_search_ads__ad_group_report.sql', 'unique_id': 'model.apple_search_ads.apple_search_ads__ad_group_report', 'fqn': ['apple_search_ads', 'apple_search_ads__ad_group_report'], 'alias': 'apple_search_ads__ad_group_report', 'checksum': {'name': 'sha256', 'checksum': 'a1edd5d4e81de3dadca268c67fc1bee311cab1edc7efe48a494c7017c7acdc80'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily ad performance of each ad group.', 'columns': {'organization_id': {'name': 'organization_id', 'description': 'Organization ID associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'organization_name': {'name': 'organization_name', 'description': 'Organization name associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'Campaign name associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'Ad group ID associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'Ad group name associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_status': {'name': 'ad_group_status', 'description': 'The status of the ad group associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'start_at': {'name': 'start_at', 'description': 'The start timestamp for this ad group.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'end_at': {'name': 'end_at', 'description': 'The end timestamp for this ad group.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'Date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': "This currency value should match the respective organization's currency value.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'taps': {'name': 'taps', 'description': 'Number of taps on ad group on given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'new_downloads': {'name': 'new_downloads', 'description': 'App downloads from new users who have never before installed app of ad group in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'redownloads': {'name': 'redownloads', 'description': 'Number of user downloads where user deletes app and downloads the same app again following a tap on an ad on the App Store, or downloads the same app to an additional device of ad group in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'total_downloads': {'name': 'total_downloads', 'description': 'The sum of new_downloads and redownloads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions of ad group in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend on ad group in the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'apple_search_ads://models\\apple_search_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.351005, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads`.`apple_search_ads__ad_group_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nwith report as (\n\n    select *\n    from {{ var('ad_group_report') }}\n), \n\nad_group as (\n\n    select * \n    from {{ var('ad_group_history') }}\n    where is_most_recent_record = True\n), \n\ncampaign as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record = True\n), \n\norganization as (\n\n    select * \n    from {{ var('organization') }}\n), \n\njoined as (\n\n    select \n        report.date_day,\n        organization.organization_id,\n        organization.organization_name,\n        campaign.campaign_id, \n        campaign.campaign_name, \n        ad_group.ad_group_id,\n        ad_group.ad_group_name,\n        report.currency,\n        ad_group.ad_group_status,\n        ad_group.start_at, \n        ad_group.end_at,\n        sum(report.taps) as taps,\n        sum(report.new_downloads) as new_downloads,\n        sum(report.redownloads) as redownloads,\n        sum(report.new_downloads + report.redownloads) as total_downloads,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='apple_search_ads__ad_group_passthrough_metrics', transform = 'sum') }}\n    from report\n    join ad_group \n        on report.ad_group_id = ad_group.ad_group_id\n    join campaign \n        on ad_group.campaign_id = campaign.campaign_id\n    join organization \n        on ad_group.organization_id = organization.organization_id\n    {{ dbt_utils.group_by(11) }}\n)\n\nselect * \nfrom joined", 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_group_report'], ['stg_apple_search_ads__ad_group_history'], ['stg_apple_search_ads__campaign_history'], ['stg_apple_search_ads__organization']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_group_report', 'model.apple_search_ads_source.stg_apple_search_ads__ad_group_history', 'model.apple_search_ads_source.stg_apple_search_ads__campaign_history', 'model.apple_search_ads_source.stg_apple_search_ads__organization']}, 'compiled_path': None}, 'model.apple_search_ads.apple_search_ads__ad_report': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads', 'name': 'apple_search_ads__ad_report', 'resource_type': 'model', 'package_name': 'apple_search_ads', 'path': 'apple_search_ads__ad_report.sql', 'original_file_path': 'models\\apple_search_ads__ad_report.sql', 'unique_id': 'model.apple_search_ads.apple_search_ads__ad_report', 'fqn': ['apple_search_ads', 'apple_search_ads__ad_report'], 'alias': 'apple_search_ads__ad_report', 'checksum': {'name': 'sha256', 'checksum': '9be99b8581d2c85b4b11327ae3eef34d26121ed866e5762ff7f627b2c24b63a9'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily ad performance of each ad.', 'columns': {'organization_id': {'name': 'organization_id', 'description': 'Organization ID associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'organization_name': {'name': 'organization_name', 'description': 'Organization name associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'Campaign name associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'Ad group ID associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'Ad group name associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_id': {'name': 'ad_id', 'description': 'Ad ID associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_name': {'name': 'ad_name', 'description': 'Ad name associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_status': {'name': 'ad_status', 'description': 'The status of the ad associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'Date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': "This currency value should match the respective organization's currency value.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'taps': {'name': 'taps', 'description': 'Number of taps on ad group on given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'new_downloads': {'name': 'new_downloads', 'description': 'App downloads from new users who have never before installed app of ad group in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'redownloads': {'name': 'redownloads', 'description': 'Number of user downloads where user deletes app and downloads the same app again following a tap on an ad on the App Store, or downloads the same app to an additional device of ad group in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'total_downloads': {'name': 'total_downloads', 'description': 'The sum of new_downloads and redownloads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions of ad group in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend on ad group in the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'apple_search_ads://models\\apple_search_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.3560052, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads`.`apple_search_ads__ad_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nwith report as (\n\n    select *\n    from {{ var('ad_report') }}\n), \n\nad as (\n\n    select * \n    from {{ var('ad_history') }}\n    where is_most_recent_record = True\n), \n\nad_group as (\n\n    select * \n    from {{ var('ad_group_history') }}\n    where is_most_recent_record = True\n), \n\ncampaign as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record = True\n), \n\norganization as (\n\n    select * \n    from {{ var('organization') }}\n), \n\njoined as (\n\n    select \n        report.date_day,\n        organization.organization_id,\n        organization.organization_name,\n        campaign.campaign_id, \n        campaign.campaign_name, \n        ad_group.ad_group_id,\n        ad_group.ad_group_name,\n        ad.ad_id,\n        ad.ad_name,\n        report.currency,\n        ad.ad_status,\n        sum(report.taps) as taps,\n        sum(report.new_downloads) as new_downloads,\n        sum(report.redownloads) as redownloads,\n        sum(report.new_downloads + report.redownloads) as total_downloads,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='apple_search_ads__ad_passthrough_metrics', transform = 'sum') }}\n    from report\n    join ad \n        on report.ad_id = ad.ad_id\n    join ad_group \n        on report.ad_group_id = ad_group.ad_group_id\n    join campaign \n        on report.campaign_id = campaign.campaign_id\n    join organization \n        on ad.organization_id = organization.organization_id\n    {{ dbt_utils.group_by(11) }}\n)\n\nselect * \nfrom joined", 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_report'], ['stg_apple_search_ads__ad_history'], ['stg_apple_search_ads__ad_group_history'], ['stg_apple_search_ads__campaign_history'], ['stg_apple_search_ads__organization']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_report', 'model.apple_search_ads_source.stg_apple_search_ads__ad_history', 'model.apple_search_ads_source.stg_apple_search_ads__ad_group_history', 'model.apple_search_ads_source.stg_apple_search_ads__campaign_history', 'model.apple_search_ads_source.stg_apple_search_ads__organization']}, 'compiled_path': None}, 'model.apple_search_ads.apple_search_ads__campaign_report': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads', 'name': 'apple_search_ads__campaign_report', 'resource_type': 'model', 'package_name': 'apple_search_ads', 'path': 'apple_search_ads__campaign_report.sql', 'original_file_path': 'models\\apple_search_ads__campaign_report.sql', 'unique_id': 'model.apple_search_ads.apple_search_ads__campaign_report', 'fqn': ['apple_search_ads', 'apple_search_ads__campaign_report'], 'alias': 'apple_search_ads__campaign_report', 'checksum': {'name': 'sha256', 'checksum': 'd555ffbfe1f914afd50ba592ab961f1ebdb40a4d4315c0696f1c80738930080f'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily ad performance of each campaign.', 'columns': {'organization_id': {'name': 'organization_id', 'description': 'Organization ID associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'organization_name': {'name': 'organization_name', 'description': 'Organization name associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'Campaign name associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_status': {'name': 'campaign_status', 'description': 'The status of the campaign associted with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'start_at': {'name': 'start_at', 'description': 'The start timestamp of this campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'end_at': {'name': 'end_at', 'description': 'The end timestamp of this campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'Date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': "This currency value should match the respective organization's currency value.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'taps': {'name': 'taps', 'description': 'Number of taps on campaign on given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'new_downloads': {'name': 'new_downloads', 'description': 'App downloads from new users who have never before installed app of campaign in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'redownloads': {'name': 'redownloads', 'description': 'Number of user downloads where user deletes app and downloads the same app again following a tap on an ad on the App Store, or downloads the same app to an additional device of campaign in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'total_downloads': {'name': 'total_downloads', 'description': 'The sum of new_downloads and redownloads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions of campaign in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend on campaign in the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'apple_search_ads://models\\apple_search_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.3605165, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads`.`apple_search_ads__campaign_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nwith report as (\n    \n    select *\n    from {{ var('campaign_report') }}\n\n), \n\ncampaign as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record = True\n), \n\norganization as (\n\n    select * \n    from {{ var('organization') }}\n\n), \n\njoined as (\n\n    select \n        report.date_day,\n        campaign.organization_id,\n        organization.organization_name,\n        campaign.campaign_id, \n        campaign.campaign_name, \n        report.currency,\n        campaign.campaign_status,\n        campaign.start_at,\n        campaign.end_at,\n        sum(report.taps) as taps,\n        sum(report.new_downloads) as new_downloads,\n        sum(report.redownloads) as redownloads,\n        sum(report.new_downloads + report.redownloads) as total_downloads,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='apple_search_ads__campaign_passthrough_metrics', transform = 'sum') }}\n    from report\n    join campaign \n        on report.campaign_id = campaign.campaign_id\n    join organization \n        on campaign.organization_id = organization.organization_id\n    {{ dbt_utils.group_by(9) }}\n)\n\nselect * \nfrom joined", 'language': 'sql', 'refs': [['stg_apple_search_ads__campaign_report'], ['stg_apple_search_ads__campaign_history'], ['stg_apple_search_ads__organization']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__campaign_report', 'model.apple_search_ads_source.stg_apple_search_ads__campaign_history', 'model.apple_search_ads_source.stg_apple_search_ads__organization']}, 'compiled_path': None}, 'model.apple_search_ads.apple_search_ads__keyword_report': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads', 'name': 'apple_search_ads__keyword_report', 'resource_type': 'model', 'package_name': 'apple_search_ads', 'path': 'apple_search_ads__keyword_report.sql', 'original_file_path': 'models\\apple_search_ads__keyword_report.sql', 'unique_id': 'model.apple_search_ads.apple_search_ads__keyword_report', 'fqn': ['apple_search_ads', 'apple_search_ads__keyword_report'], 'alias': 'apple_search_ads__keyword_report', 'checksum': {'name': 'sha256', 'checksum': '91250ca8167dc8fee98582ff093d56a498b854e5c66a51325076191016bfb0e7'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily ad performance of each creative set.', 'columns': {'organization_id': {'name': 'organization_id', 'description': 'Organization ID associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'organization_name': {'name': 'organization_name', 'description': 'Organization name associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'Campaign name associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'Ad group ID associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'Ad group name associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_id': {'name': 'keyword_id', 'description': 'Creative set name associatd with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_text': {'name': 'keyword_text', 'description': 'Creative set ID associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'match_type': {'name': 'match_type', 'description': 'Controls how ads are matched to user searches; EXACT or BROAD.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'Date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': "This currency value should match the respective organization's currency value.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_status': {'name': 'keyword_status', 'description': 'The status of the keyword associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'taps': {'name': 'taps', 'description': 'Number of taps on keyword on given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'new_downloads': {'name': 'new_downloads', 'description': 'App downloads from new users who have never before installed app of keyword in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'redownloads': {'name': 'redownloads', 'description': 'Number of user downloads where user deletes app and downloads the same app again following a tap on an ad on the App Store, or downloads the same app to an additional device of keyword in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'total_downloads': {'name': 'total_downloads', 'description': 'The sum of new_downloads and redownloads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions of keyword in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend on keyword in the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'apple_search_ads://models\\apple_search_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.365588, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads`.`apple_search_ads__keyword_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nwith report as (\n\n    select *\n    from {{ var('keyword_report') }}\n), \n\nkeyword as (\n\n    select *\n    from {{ var('keyword_history') }}\n    where is_most_recent_record = True\n), \n\nad_group as (\n\n    select *\n    from {{ var('ad_group_history') }}\n    where is_most_recent_record = True\n), \n\ncampaign as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record = True\n), \n\norganization as (\n\n    select * \n    from {{ var('organization') }}\n), \n\njoined as (\n\n    select \n        report.date_day,\n        organization.organization_id,\n        organization.organization_name,\n        campaign.campaign_id, \n        campaign.campaign_name, \n        ad_group.ad_group_id,\n        ad_group.ad_group_name,\n        keyword.keyword_id,\n        keyword.keyword_text,\n        keyword.match_type,\n        report.currency,\n        keyword.keyword_status,\n        sum(report.taps) as taps,\n        sum(report.new_downloads) as new_downloads,\n        sum(report.redownloads) as redownloads,\n        sum(report.new_downloads + report.redownloads) as total_downloads,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='apple_search_ads__keyword_passthrough_metrics', transform = 'sum') }}\n    from report\n    join keyword \n        on report.keyword_id = keyword.keyword_id\n    join ad_group \n        on keyword.ad_group_id = ad_group.ad_group_id\n    join campaign \n        on ad_group.campaign_id = campaign.campaign_id\n    join organization \n        on ad_group.organization_id = organization.organization_id\n    {{ dbt_utils.group_by(12) }}\n)\n\nselect * \nfrom joined", 'language': 'sql', 'refs': [['stg_apple_search_ads__keyword_report'], ['stg_apple_search_ads__keyword_history'], ['stg_apple_search_ads__ad_group_history'], ['stg_apple_search_ads__campaign_history'], ['stg_apple_search_ads__organization']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__keyword_report', 'model.apple_search_ads_source.stg_apple_search_ads__keyword_history', 'model.apple_search_ads_source.stg_apple_search_ads__ad_group_history', 'model.apple_search_ads_source.stg_apple_search_ads__campaign_history', 'model.apple_search_ads_source.stg_apple_search_ads__organization']}, 'compiled_path': None}, 'model.apple_search_ads.apple_search_ads__organization_report': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads', 'name': 'apple_search_ads__organization_report', 'resource_type': 'model', 'package_name': 'apple_search_ads', 'path': 'apple_search_ads__organization_report.sql', 'original_file_path': 'models\\apple_search_ads__organization_report.sql', 'unique_id': 'model.apple_search_ads.apple_search_ads__organization_report', 'fqn': ['apple_search_ads', 'apple_search_ads__organization_report'], 'alias': 'apple_search_ads__organization_report', 'checksum': {'name': 'sha256', 'checksum': '47084fe8809edaeeda722e20590b19c6488687d05ad654b8fef4a0021088e0a2'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily ad performance of each organization.', 'columns': {'organization_id': {'name': 'organization_id', 'description': 'Organization ID associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'organization_name': {'name': 'organization_name', 'description': 'Organization name associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'Date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': "This currency value should match the respective organization's currency value.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'taps': {'name': 'taps', 'description': 'Number of taps on organization on given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'new_downloads': {'name': 'new_downloads', 'description': 'App downloads from new users who have never before installed app of organization in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'redownloads': {'name': 'redownloads', 'description': 'Number of user downloads where user deletes app and downloads the same app again following a tap on an ad on the App Store, or downloads the same app to an additional device of organization in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'total_downloads': {'name': 'total_downloads', 'description': 'The sum of new_downloads and redownloads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions of organization in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend on organization in the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'apple_search_ads://models\\apple_search_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.3682916, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads`.`apple_search_ads__organization_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nwith report as (\n    \n    select *\n    from {{ var('campaign_report') }}\n), \n\ncampaign as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record = True\n), \n\norganization as (\n\n    select * \n    from {{ var('organization') }}\n), \n\njoined as (\n\n    select \n        report.date_day,\n        organization.organization_id,\n        organization.organization_name,\n        organization.currency,\n        sum(report.taps) as taps,\n        sum(report.new_downloads) as new_downloads,\n        sum(report.redownloads) as redownloads,\n        sum(report.new_downloads + report.redownloads) as total_downloads,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='apple_search_ads__campaign_passthrough_metrics', transform = 'sum') }}\n    from report\n    join campaign \n        on report.campaign_id = campaign.campaign_id\n    join organization \n        on campaign.organization_id = organization.organization_id\n    {{ dbt_utils.group_by(4) }}\n)\n\nselect * \nfrom joined", 'language': 'sql', 'refs': [['stg_apple_search_ads__campaign_report'], ['stg_apple_search_ads__campaign_history'], ['stg_apple_search_ads__organization']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__campaign_report', 'model.apple_search_ads_source.stg_apple_search_ads__campaign_history', 'model.apple_search_ads_source.stg_apple_search_ads__organization']}, 'compiled_path': None}, 'model.apple_search_ads.apple_search_ads__search_term_report': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads', 'name': 'apple_search_ads__search_term_report', 'resource_type': 'model', 'package_name': 'apple_search_ads', 'path': 'apple_search_ads__search_term_report.sql', 'original_file_path': 'models\\apple_search_ads__search_term_report.sql', 'unique_id': 'model.apple_search_ads.apple_search_ads__search_term_report', 'fqn': ['apple_search_ads', 'apple_search_ads__search_term_report'], 'alias': 'apple_search_ads__search_term_report', 'checksum': {'name': 'sha256', 'checksum': '4827d710dac6b2e632dcf3ba421a8166d719d1ae59e98128736b8689cf4039a1'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily ad performance of each search term, only includes records with search term values.', 'columns': {'organization_id': {'name': 'organization_id', 'description': 'Organization ID associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'organization_name': {'name': 'organization_name', 'description': 'Organization name associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'Campaign name associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'Ad group ID associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'Ad group name associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'match_type': {'name': 'match_type', 'description': 'Controls how ads are matched to user searches; EXACT or BROAD.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'Date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'search_term_text': {'name': 'search_term_text', 'description': 'Search term text.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': "This currency value should match the respective organization's currency value.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'taps': {'name': 'taps', 'description': 'Number of taps on organization on given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'new_downloads': {'name': 'new_downloads', 'description': 'App downloads from new users who have never before installed app of organization in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'redownloads': {'name': 'redownloads', 'description': 'Number of user downloads where user deletes app and downloads the same app again following a tap on an ad on the App Store, or downloads the same app to an additional device of organization in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'total_downloads': {'name': 'total_downloads', 'description': 'The sum of new_downloads and redownloads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions of organization in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend on organization in the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'apple_search_ads://models\\apple_search_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.3723652, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads`.`apple_search_ads__search_term_report`', 'raw_code': "{{ config(enabled=fivetran_utils.enabled_vars(['ad_reporting__apple_search_ads_enabled','apple_search_ads__using_search_terms'])) }}\n\nwith report as (\n\n    select *\n    from {{ var('search_term_report') }}\n), \n\ncampaign as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record = True\n), \n\norganization as (\n\n    select * \n    from {{ var('organization') }}\n), \n\njoined as (\n\n    select \n        report.date_day,\n        organization.organization_id,\n        organization.organization_name,\n        campaign.campaign_id, \n        campaign.campaign_name, \n        report.ad_group_id,\n        report.ad_group_name,\n        report.keyword_id,\n        report.keyword_text,\n        report.search_term_text,\n        report.match_type,\n        report.currency,\n        sum(report.taps) as taps,\n        sum(report.new_downloads) as new_downloads,\n        sum(report.redownloads) as redownloads,\n        sum(report.new_downloads + report.redownloads) as total_downloads,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='apple_search_ads__search_term_passthrough_metrics', transform = 'sum') }}\n    from report\n    join campaign \n        on report.campaign_id = campaign.campaign_id\n    join organization \n        on campaign.organization_id = organization.organization_id\n    where report.search_term_text is not null\n    {{ dbt_utils.group_by(12) }}\n)\n\nselect * \nfrom joined", 'language': 'sql', 'refs': [['stg_apple_search_ads__search_term_report'], ['stg_apple_search_ads__campaign_history'], ['stg_apple_search_ads__organization']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.enabled_vars', 'macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__search_term_report', 'model.apple_search_ads_source.stg_apple_search_ads__campaign_history', 'model.apple_search_ads_source.stg_apple_search_ads__organization']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__ad_group_history': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__ad_group_history', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'stg_apple_search_ads__ad_group_history.sql', 'original_file_path': 'models\\stg_apple_search_ads__ad_group_history.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__ad_group_history', 'fqn': ['apple_search_ads_source', 'stg_apple_search_ads__ad_group_history'], 'alias': 'stg_apple_search_ads__ad_group_history', 'checksum': {'name': 'sha256', 'checksum': 'b2081179706957545ca7818fd65e298a3948051372426039e2ecffd091fef371'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents a version of an ad group in Apple Search Ads.', 'columns': {'modified_at': {'name': 'modified_at', 'description': 'Timestamp of when the ad group object was last modified.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_most_recent_record': {'name': 'is_most_recent_record', 'description': 'Boolean indicating whether record was the most recent instance.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'Ad group ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'start_at': {'name': 'start_at', 'description': 'The designated ad group start time.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'end_at': {'name': 'end_at', 'description': 'The designated ad group end time.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'Ad group name.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'organization_id': {'name': 'organization_id', 'description': 'Organization ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'status': {'name': 'status', 'description': 'The current status of the ad group, values include ENABLED and PAUSED.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'apple_search_ads_source://models\\stg_apple_search_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.467183, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__ad_group_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_apple_search_ads__ad_group_history_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_apple_search_ads__ad_group_history_tmp')),\n                staging_columns=get_ad_group_history_columns()\n            )\n        }}\n        \n    from base\n),\n\nfinal as (\n    select \n        modification_time as modified_at,\n        organization_id,\n        campaign_id,\n        name as ad_group_name,\n        id as ad_group_id,\n        status as ad_group_status,\n        start_time as start_at,\n        end_time as end_at,\n        row_number() over (partition by id order by modification_time desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_group_history_tmp'], ['stg_apple_search_ads__ad_group_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.apple_search_ads_source.get_ad_group_history_columns', 'macro.fivetran_utils.fill_staging_columns'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_group_history_tmp', 'model.apple_search_ads_source.stg_apple_search_ads__ad_group_history_tmp']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__ad_group_report': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__ad_group_report', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'stg_apple_search_ads__ad_group_report.sql', 'original_file_path': 'models\\stg_apple_search_ads__ad_group_report.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__ad_group_report', 'fqn': ['apple_search_ads_source', 'stg_apple_search_ads__ad_group_report'], 'alias': 'stg_apple_search_ads__ad_group_report', 'checksum': {'name': 'sha256', 'checksum': 'a6f8f1e79e88e2512acd90e2768436ef73939e82acd46b79c0775ba19865147d'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily performance of an ad group in Apple Search Ads.', 'columns': {'ad_group_id': {'name': 'ad_group_id', 'description': 'Ad group ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'Date for daily report aggregation.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'Number of times your ad appeared in App Store search results.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The sum of costs associated with the number of impressions served. Spend is measured in the currency used in the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': "This currency value should match the respective organization's currency value.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'new_downloads': {'name': 'new_downloads', 'description': 'App downloads from new users who have never before installed the respective app.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'redownloads': {'name': 'redownloads', 'description': 'Occurs when a user downloads respective app, deletes it, and downloads the same app again following a tap on an ad on the App Store, or downloads the same app to an additional device.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'taps': {'name': 'taps', 'description': 'The number of times ad was tapped by users within the reporting time period.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'apple_search_ads_source://models\\stg_apple_search_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.4692206, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__ad_group_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_apple_search_ads__ad_group_report_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_apple_search_ads__ad_group_report_tmp')),\n                staging_columns=get_ad_group_report_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select\n        date as date_day, \n        ad_group_id,\n        impressions,\n        local_spend_amount as spend,\n        local_spend_currency as currency,\n        new_downloads,\n        redownloads,\n        taps\n\n        {{ fivetran_utils.fill_pass_through_columns('apple_search_ads__ad_group_passthrough_metrics') }}\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_group_report_tmp'], ['stg_apple_search_ads__ad_group_report_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.apple_search_ads_source.get_ad_group_report_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_group_report_tmp', 'model.apple_search_ads_source.stg_apple_search_ads__ad_group_report_tmp']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__ad_history': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__ad_history', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'stg_apple_search_ads__ad_history.sql', 'original_file_path': 'models\\stg_apple_search_ads__ad_history.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__ad_history', 'fqn': ['apple_search_ads_source', 'stg_apple_search_ads__ad_history'], 'alias': 'stg_apple_search_ads__ad_history', 'checksum': {'name': 'sha256', 'checksum': '4abb76f80d87af32ba976747bb0accf3b1641854a41a3e9d8ebec94533405d23'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents a version of an ad in Apple Search Ads.', 'columns': {'created_at': {'name': 'created_at', 'description': 'Timestamp of when ad was created.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'modified_at': {'name': 'modified_at', 'description': 'Timestamp of when the ad object was last modified.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'organization_id': {'name': 'organization_id', 'description': 'Organization ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'Ad group ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_name': {'name': 'ad_name', 'description': 'Ad name associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_id': {'name': 'ad_id', 'description': 'Ad ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_status': {'name': 'ad_status', 'description': 'The current status of the ad, values include ENABLED and PAUSED.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'apple_search_ads_source://models\\stg_apple_search_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.4722207, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__ad_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_apple_search_ads__ad_history_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_apple_search_ads__ad_history_tmp')),\n                staging_columns=get_ad_history_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select \n        creation_time as created_at,\n        modification_time as modified_at,\n        org_id as organization_id,\n        campaign_id,\n        ad_group_id,\n        name as ad_name,\n        id as ad_id,\n        status as ad_status, \n        row_number() over (partition by id order by modification_time desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_history_tmp'], ['stg_apple_search_ads__ad_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.apple_search_ads_source.get_ad_history_columns', 'macro.fivetran_utils.fill_staging_columns'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_history_tmp', 'model.apple_search_ads_source.stg_apple_search_ads__ad_history_tmp']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__ad_report': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__ad_report', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'stg_apple_search_ads__ad_report.sql', 'original_file_path': 'models\\stg_apple_search_ads__ad_report.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__ad_report', 'fqn': ['apple_search_ads_source', 'stg_apple_search_ads__ad_report'], 'alias': 'stg_apple_search_ads__ad_report', 'checksum': {'name': 'sha256', 'checksum': '45019dc2d949eecadbbd9d4a052049a60dca00c32f726da678972fa8bdadd1f6'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily performance of an ad in Apple Search Ads.', 'columns': {'date_day': {'name': 'date_day', 'description': 'Date for daily report aggregation.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'Ad group ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_id': {'name': 'ad_id', 'description': 'Ad ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'Number of times your ad appeared in App Store search results.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The sum of costs associated with the number of impressions served; Spend is measured in the currency used in the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': "This currency value should match the respective organization's currency value.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'new_downloads': {'name': 'new_downloads', 'description': 'App downloads from new users who have never before installed the respective app.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'redownloads': {'name': 'redownloads', 'description': 'Occurs when a user downloads respective app, deletes it, and downloads the same app again following a tap on an ad on the App Store, or downloads the same app to an additional device.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'taps': {'name': 'taps', 'description': 'The number of times ad was tapped by users within the reporting time period.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'apple_search_ads_source://models\\stg_apple_search_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.4752207, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__ad_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_apple_search_ads__ad_report_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_apple_search_ads__ad_report_tmp')),\n                staging_columns=get_ad_level_report_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select \n        date as date_day,\n        campaign_id,\n        ad_group_id,\n        ad_id,\n        impressions,\n        local_spend_amount as spend,\n        local_spend_currency as currency,\n        new_downloads,\n        redownloads,\n        taps\n\n        {{ fivetran_utils.fill_pass_through_columns('apple_search_ads__ad_passthrough_metrics') }}\n    from fields\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_report_tmp'], ['stg_apple_search_ads__ad_report_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.apple_search_ads_source.get_ad_level_report_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_report_tmp', 'model.apple_search_ads_source.stg_apple_search_ads__ad_report_tmp']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__campaign_history': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__campaign_history', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'stg_apple_search_ads__campaign_history.sql', 'original_file_path': 'models\\stg_apple_search_ads__campaign_history.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__campaign_history', 'fqn': ['apple_search_ads_source', 'stg_apple_search_ads__campaign_history'], 'alias': 'stg_apple_search_ads__campaign_history', 'checksum': {'name': 'sha256', 'checksum': '294e54bc10f47e44786be1c445e764b49464643d75c0bf7a4fc3a38f3868e0de'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents a version of a campaign in Apple Search Ads.', 'columns': {'modified_at': {'name': 'modified_at', 'description': 'Timestamp of when the campaign object was last modified.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_most_recent_record': {'name': 'is_most_recent_record', 'description': 'Boolean representing whether a record is the most recent version of that record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'start_at': {'name': 'start_at', 'description': 'The designated ad group start time (ad group with the earliest start time associated with this campaign).', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'end_at': {'name': 'end_at', 'description': 'The designated campaign end time (ad group with the latest start time associated with this campaign).', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'Campaign name for the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'organization_id': {'name': 'organization_id', 'description': 'Organization ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'status': {'name': 'status', 'description': 'The current status of the campaign, values include ENABLED and PAUSED.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'apple_search_ads_source://models\\stg_apple_search_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.4787376, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__campaign_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_apple_search_ads__campaign_history_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_apple_search_ads__campaign_history_tmp')),\n                staging_columns=get_campaign_history_columns()\n            )\n        }}\n        \n    from base\n),\n\nfinal as (\n    \n    select\n        modification_time as modified_at,\n        organization_id,\n        name as campaign_name,\n        id as campaign_id,\n        status as campaign_status,\n        start_time as start_at,\n        end_time as end_at,\n        row_number() over (partition by id order by modification_time desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_apple_search_ads__campaign_history_tmp'], ['stg_apple_search_ads__campaign_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.apple_search_ads_source.get_campaign_history_columns', 'macro.fivetran_utils.fill_staging_columns'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__campaign_history_tmp', 'model.apple_search_ads_source.stg_apple_search_ads__campaign_history_tmp']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__campaign_report': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__campaign_report', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'stg_apple_search_ads__campaign_report.sql', 'original_file_path': 'models\\stg_apple_search_ads__campaign_report.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__campaign_report', 'fqn': ['apple_search_ads_source', 'stg_apple_search_ads__campaign_report'], 'alias': 'stg_apple_search_ads__campaign_report', 'checksum': {'name': 'sha256', 'checksum': 'c4681d203c58d68501b9d2d3a84fc28598e9705eb4cc7f4496be52e3209768d3'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily performance of a campaign in Apple Search Ads.', 'columns': {'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'Date for daily report aggregation.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'Number of times your ad appeared in App Store search results.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The sum of costs associated with the number of impressions served; Spend is measured in the currency used in the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': "This currency value should match the respective organization's currency value.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'new_downloads': {'name': 'new_downloads', 'description': 'App downloads from new users who have never before installed the respective app.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'redownloads': {'name': 'redownloads', 'description': 'Occurs when a user downloads respective app, deletes it, and downloads the same app again following a tap on an ad on the App Store, or downloads the same app to an additional device.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'taps': {'name': 'taps', 'description': 'The number of times ad was tapped by users within the reporting time period.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'apple_search_ads_source://models\\stg_apple_search_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.481237, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__campaign_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_apple_search_ads__campaign_report_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_apple_search_ads__campaign_report_tmp')),\n                staging_columns=get_campaign_report_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select \n        date as date_day,\n        id as campaign_id,\n        impressions,\n        local_spend_amount as spend,\n        local_spend_currency as currency,\n        new_downloads,\n        redownloads,\n        taps\n\n        {{ fivetran_utils.fill_pass_through_columns('apple_search_ads__campaign_passthrough_metrics') }}\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_apple_search_ads__campaign_report_tmp'], ['stg_apple_search_ads__campaign_report_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.apple_search_ads_source.get_campaign_report_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__campaign_report_tmp', 'model.apple_search_ads_source.stg_apple_search_ads__campaign_report_tmp']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__keyword_history': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__keyword_history', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'stg_apple_search_ads__keyword_history.sql', 'original_file_path': 'models\\stg_apple_search_ads__keyword_history.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__keyword_history', 'fqn': ['apple_search_ads_source', 'stg_apple_search_ads__keyword_history'], 'alias': 'stg_apple_search_ads__keyword_history', 'checksum': {'name': 'sha256', 'checksum': '5ee576e97a5fffaf97916376ca747fcb9389b6733d268f9b42308a8f244ade8e'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents a version of a keyword in Apple Search Ads.', 'columns': {'modified_at': {'name': 'modified_at', 'description': 'Timestamp of when the keyword object was last modified.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_most_recent_record': {'name': 'is_most_recent_record', 'description': 'Boolean representing whether a record is the most recent version of that record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_id': {'name': 'keyword_id', 'description': 'Keyword ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'Ad group ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'bid_amount': {'name': 'bid_amount', 'description': 'The bid amount to display your ad for the matching text value.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'bid_currency': {'name': 'bid_currency', 'description': "This currency value should match the respective organization's currency value.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'match_type': {'name': 'match_type', 'description': 'Controls how ads are matched to user searches; EXACT or BROAD.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'status': {'name': 'status', 'description': 'The current status of the keyword, values include ENABLED and PAUSED.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_text': {'name': 'keyword_text', 'description': 'The word or phrase to match in user searches, to show respective ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'apple_search_ads_source://models\\stg_apple_search_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.483237, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__keyword_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_apple_search_ads__keyword_history_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_apple_search_ads__keyword_history_tmp')),\n                staging_columns=get_keyword_history_columns()\n            )\n        }}\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        modification_time as modified_at,\n        campaign_id,\n        ad_group_id,\n        id as keyword_id,\n        bid_amount, \n        bid_currency,\n        match_type,\n        status as keyword_status,\n        text as keyword_text,\n        row_number() over (partition by id order by modification_time desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_apple_search_ads__keyword_history_tmp'], ['stg_apple_search_ads__keyword_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.apple_search_ads_source.get_keyword_history_columns', 'macro.fivetran_utils.fill_staging_columns'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__keyword_history_tmp', 'model.apple_search_ads_source.stg_apple_search_ads__keyword_history_tmp']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__keyword_report': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__keyword_report', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'stg_apple_search_ads__keyword_report.sql', 'original_file_path': 'models\\stg_apple_search_ads__keyword_report.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__keyword_report', 'fqn': ['apple_search_ads_source', 'stg_apple_search_ads__keyword_report'], 'alias': 'stg_apple_search_ads__keyword_report', 'checksum': {'name': 'sha256', 'checksum': '087cf73b201edc946f1b30c28096f4d513aca817fc3e510cac05f28dc781c665'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily performance of a keyword in Apple Search Ads.', 'columns': {'keyword_id': {'name': 'keyword_id', 'description': 'Keyword ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'Date for daily report aggregation.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'Number of times your ad appeared in App Store search results.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The sum of costs associated with the number of impressions served; Spend is measured in the currency used in the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': "This currency value should match the respective organization's currency value.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'new_downloads': {'name': 'new_downloads', 'description': 'App downloads from new users who have never before installed the respective app.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'redownloads': {'name': 'redownloads', 'description': 'Occurs when a user downloads respective app, deletes it, and downloads the same app again following a tap on an ad on the App Store, or downloads the same app to an additional device.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'taps': {'name': 'taps', 'description': 'The number of times ad was tapped by users within the reporting time period.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'apple_search_ads_source://models\\stg_apple_search_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.4862373, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__keyword_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_apple_search_ads__keyword_report_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_apple_search_ads__keyword_report_tmp')),\n                staging_columns=get_keyword_report_columns()\n            )\n        }}     \n    from base\n),\n\nfinal as (\n    \n    select \n        date as date_day,\n        id as keyword_id,\n        impressions,\n        local_spend_amount as spend,\n        local_spend_currency as currency,\n        new_downloads,\n        redownloads,\n        taps\n\n        {{ fivetran_utils.fill_pass_through_columns('apple_search_ads__keyword_passthrough_metrics') }}\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_apple_search_ads__keyword_report_tmp'], ['stg_apple_search_ads__keyword_report_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.apple_search_ads_source.get_keyword_report_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__keyword_report_tmp', 'model.apple_search_ads_source.stg_apple_search_ads__keyword_report_tmp']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__organization': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__organization', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'stg_apple_search_ads__organization.sql', 'original_file_path': 'models\\stg_apple_search_ads__organization.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__organization', 'fqn': ['apple_search_ads_source', 'stg_apple_search_ads__organization'], 'alias': 'stg_apple_search_ads__organization', 'checksum': {'name': 'sha256', 'checksum': '24d3ee4e2d050e8ade0b3222ea535ed1837d2ea4265f00cf3f3b7b67a7a30dab'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents an organization in Apple Search Ads.', 'columns': {'organization_id': {'name': 'organization_id', 'description': 'Organization ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': 'Specified currency for respective organization.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'payment_model': {'name': 'payment_model', 'description': "Values include 'LOC', 'PAYG' or <empty string> (payment method hasn't been set).", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'organization_name': {'name': 'organization_name', 'description': 'Name of organization.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'time_zone': {'name': 'time_zone', 'description': 'Organization default timezone; values can be ORTZ or UTC.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'apple_search_ads_source://models\\stg_apple_search_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.4877424, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__organization`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_apple_search_ads__organization_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_apple_search_ads__organization_tmp')),\n                staging_columns=get_organization_columns()\n            )\n        }}\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as organization_id,\n        currency,\n        payment_model,\n        name as organization_name,\n        time_zone\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_apple_search_ads__organization_tmp'], ['stg_apple_search_ads__organization_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.apple_search_ads_source.get_organization_columns', 'macro.fivetran_utils.fill_staging_columns'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__organization_tmp', 'model.apple_search_ads_source.stg_apple_search_ads__organization_tmp']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__search_term_report': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__search_term_report', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'stg_apple_search_ads__search_term_report.sql', 'original_file_path': 'models\\stg_apple_search_ads__search_term_report.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__search_term_report', 'fqn': ['apple_search_ads_source', 'stg_apple_search_ads__search_term_report'], 'alias': 'stg_apple_search_ads__search_term_report', 'checksum': {'name': 'sha256', 'checksum': '6345a092b669f3283eb8b09b8590cdcf4e89da7ac486c18bb626315fac6db0e0'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily performance of a search term in Apple Search Ads.', 'columns': {'_fivetran_id': {'name': '_fivetran_id', 'description': 'A Fivetran internal unique id that helps us avoid duplicate rows in primary keyless tables.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'Ad group ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_format': {'name': 'ad_format', 'description': 'Format of creative set.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'Date for daily report aggregation.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'Ad group name.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'bid_amount': {'name': 'bid_amount', 'description': 'The bid amount to display your ad for the matching text value.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'bid_currency': {'name': 'bid_currency', 'description': "This currency value should match the respective organization's currency value.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_text': {'name': 'keyword_text', 'description': 'The word or phrase to match in user searches, to show respective ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_display_status': {'name': 'keyword_display_status', 'description': 'The keyword display status can either be ACTIVE or PAUSED.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_id': {'name': 'keyword_id', 'description': 'Keyword ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The sum of costs associated with the number of impressions served; Spend is measured in the currency used in the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': "This currency value should match the respective organization's currency value.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'match_type': {'name': 'match_type', 'description': 'Controls how ads are matched to user searches; values include EXACT, BROAD or AUTO.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'search_term_source': {'name': 'search_term_source', 'description': 'The search term source can either be TARGETED or AUTO; if this value is AUTO so will match_type.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'search_term_text': {'name': 'search_term_text', 'description': 'The word or phrase to match of user searches.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'Number of times your ad appeared in App Store search results.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'taps': {'name': 'taps', 'description': 'The number of times ad was tapped by users within the reporting time period.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'new_downloads': {'name': 'new_downloads', 'description': 'App downloads from new users who have never before installed the respective app.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'redownloads': {'name': 'redownloads', 'description': 'Occurs when a user downloads respective app, deletes it, and downloads the same app again following a tap on an ad on the App Store, or downloads the same app to an additional device.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'apple_search_ads_source://models\\stg_apple_search_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.4937468, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__search_term_report`', 'raw_code': "{{ config(enabled=fivetran_utils.enabled_vars(['ad_reporting__apple_search_ads_enabled','apple_search_ads__using_search_terms'])) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_apple_search_ads__search_term_report_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_apple_search_ads__search_term_report_tmp')),\n                staging_columns=get_search_term_report_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select \n        date as date_day,\n        _fivetran_id,\n        campaign_id,\n        ad_group_id,\n        ad_group_name,\n        bid_amount_amount as bid_amount,\n        bid_amount_currency as bid_currency,\n        keyword as keyword_text,\n        keyword_display_status,\n        keyword_id,\n        local_spend_amount as spend,\n        local_spend_currency as currency,\n        match_type,\n        search_term_source,\n        search_term_text,\n        impressions,\n        taps,\n        new_downloads,\n        redownloads\n\n        {{ fivetran_utils.fill_pass_through_columns('apple_search_ads__search_term_passthrough_metrics') }}\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_apple_search_ads__search_term_report_tmp'], ['stg_apple_search_ads__search_term_report_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.enabled_vars', 'macro.apple_search_ads_source.get_search_term_report_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__search_term_report_tmp', 'model.apple_search_ads_source.stg_apple_search_ads__search_term_report_tmp']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__ad_group_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__ad_group_history_tmp', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'tmp\\stg_apple_search_ads__ad_group_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_apple_search_ads__ad_group_history_tmp.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__ad_group_history_tmp', 'fqn': ['apple_search_ads_source', 'tmp', 'stg_apple_search_ads__ad_group_history_tmp'], 'alias': 'stg_apple_search_ads__ad_group_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '69317b26b7a3c109c0e5e61d7fdad053cb0549479a0dfdacd0d67ff0757cc97e'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433481.8123055, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__ad_group_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('ad_group_history') }}", 'language': 'sql', 'refs': [], 'sources': [['apple_search_ads', 'ad_group_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.apple_search_ads_source.apple_search_ads.ad_group_history']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__ad_group_report_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__ad_group_report_tmp', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'tmp\\stg_apple_search_ads__ad_group_report_tmp.sql', 'original_file_path': 'models\\tmp\\stg_apple_search_ads__ad_group_report_tmp.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__ad_group_report_tmp', 'fqn': ['apple_search_ads_source', 'tmp', 'stg_apple_search_ads__ad_group_report_tmp'], 'alias': 'stg_apple_search_ads__ad_group_report_tmp', 'checksum': {'name': 'sha256', 'checksum': '91089253c95dee7d0aea3f9b8cc49cf343c2d06acf0de36641ebaef03e1d2b1b'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433481.820132, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__ad_group_report_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('ad_group_report') }}", 'language': 'sql', 'refs': [], 'sources': [['apple_search_ads', 'ad_group_report']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.apple_search_ads_source.apple_search_ads.ad_group_report']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__ad_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__ad_history_tmp', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'tmp\\stg_apple_search_ads__ad_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_apple_search_ads__ad_history_tmp.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__ad_history_tmp', 'fqn': ['apple_search_ads_source', 'tmp', 'stg_apple_search_ads__ad_history_tmp'], 'alias': 'stg_apple_search_ads__ad_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '7b184af2299b7d42defa4606467cf9bf379e10cec768bf1e5825c040dbdfacb8'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433481.8286445, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__ad_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('ad_history') }}", 'language': 'sql', 'refs': [], 'sources': [['apple_search_ads', 'ad_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.apple_search_ads_source.apple_search_ads.ad_history']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__ad_report_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__ad_report_tmp', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'tmp\\stg_apple_search_ads__ad_report_tmp.sql', 'original_file_path': 'models\\tmp\\stg_apple_search_ads__ad_report_tmp.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__ad_report_tmp', 'fqn': ['apple_search_ads_source', 'tmp', 'stg_apple_search_ads__ad_report_tmp'], 'alias': 'stg_apple_search_ads__ad_report_tmp', 'checksum': {'name': 'sha256', 'checksum': '1744a47e20045a53726079456f5aba358e0292dd8a14d670e6ab7b2c30ece7ee'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433481.8356462, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__ad_report_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('ad_report') }}", 'language': 'sql', 'refs': [], 'sources': [['apple_search_ads', 'ad_level_report']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.apple_search_ads_source.apple_search_ads.ad_level_report']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__campaign_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__campaign_history_tmp', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'tmp\\stg_apple_search_ads__campaign_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_apple_search_ads__campaign_history_tmp.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__campaign_history_tmp', 'fqn': ['apple_search_ads_source', 'tmp', 'stg_apple_search_ads__campaign_history_tmp'], 'alias': 'stg_apple_search_ads__campaign_history_tmp', 'checksum': {'name': 'sha256', 'checksum': 'e23c062d3d75b890a717ab4047e5a0dccf7c098b3927935df02f76c17acb3ea7'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433481.8434725, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__campaign_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('campaign_history') }}", 'language': 'sql', 'refs': [], 'sources': [['apple_search_ads', 'campaign_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.apple_search_ads_source.apple_search_ads.campaign_history']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__campaign_report_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__campaign_report_tmp', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'tmp\\stg_apple_search_ads__campaign_report_tmp.sql', 'original_file_path': 'models\\tmp\\stg_apple_search_ads__campaign_report_tmp.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__campaign_report_tmp', 'fqn': ['apple_search_ads_source', 'tmp', 'stg_apple_search_ads__campaign_report_tmp'], 'alias': 'stg_apple_search_ads__campaign_report_tmp', 'checksum': {'name': 'sha256', 'checksum': 'ae8d95be0097305356d0ba251d324d35bbe367edcf342c958f69fea9f89625f2'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433481.8513486, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__campaign_report_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('campaign_report') }}", 'language': 'sql', 'refs': [], 'sources': [['apple_search_ads', 'campaign_report']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.apple_search_ads_source.apple_search_ads.campaign_report']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__keyword_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__keyword_history_tmp', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'tmp\\stg_apple_search_ads__keyword_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_apple_search_ads__keyword_history_tmp.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__keyword_history_tmp', 'fqn': ['apple_search_ads_source', 'tmp', 'stg_apple_search_ads__keyword_history_tmp'], 'alias': 'stg_apple_search_ads__keyword_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '852fa9ece91c72dd36f654ce0d71f2af4a1707385c0fa00e3d68e206e4ac456b'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433481.8589394, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__keyword_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('keyword_history') }}", 'language': 'sql', 'refs': [], 'sources': [['apple_search_ads', 'keyword_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.apple_search_ads_source.apple_search_ads.keyword_history']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__keyword_report_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__keyword_report_tmp', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'tmp\\stg_apple_search_ads__keyword_report_tmp.sql', 'original_file_path': 'models\\tmp\\stg_apple_search_ads__keyword_report_tmp.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__keyword_report_tmp', 'fqn': ['apple_search_ads_source', 'tmp', 'stg_apple_search_ads__keyword_report_tmp'], 'alias': 'stg_apple_search_ads__keyword_report_tmp', 'checksum': {'name': 'sha256', 'checksum': '5009b770850f4f2648d5498a78b1491e6a44250d9ac2d7c08c249e8624f517f2'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433481.8660126, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__keyword_report_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('keyword_report') }}", 'language': 'sql', 'refs': [], 'sources': [['apple_search_ads', 'keyword_report']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.apple_search_ads_source.apple_search_ads.keyword_report']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__organization_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__organization_tmp', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'tmp\\stg_apple_search_ads__organization_tmp.sql', 'original_file_path': 'models\\tmp\\stg_apple_search_ads__organization_tmp.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__organization_tmp', 'fqn': ['apple_search_ads_source', 'tmp', 'stg_apple_search_ads__organization_tmp'], 'alias': 'stg_apple_search_ads__organization_tmp', 'checksum': {'name': 'sha256', 'checksum': '4a62af784e819ec6034aa89fe16019f027c9994b192426e70bcf18bda3d117a9'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433481.872597, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__organization_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('organization') }}", 'language': 'sql', 'refs': [], 'sources': [['apple_search_ads', 'organization']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.apple_search_ads_source.apple_search_ads.organization']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__search_term_report_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__search_term_report_tmp', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'tmp\\stg_apple_search_ads__search_term_report_tmp.sql', 'original_file_path': 'models\\tmp\\stg_apple_search_ads__search_term_report_tmp.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__search_term_report_tmp', 'fqn': ['apple_search_ads_source', 'tmp', 'stg_apple_search_ads__search_term_report_tmp'], 'alias': 'stg_apple_search_ads__search_term_report_tmp', 'checksum': {'name': 'sha256', 'checksum': '86f6e99ff5c0373cf5ec106d4011966278601cb5350d588466564e2dca2fa951'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433481.8803, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__search_term_report_tmp`', 'raw_code': "{{ config(enabled=fivetran_utils.enabled_vars(['ad_reporting__apple_search_ads_enabled','apple_search_ads__using_search_terms'])) }}\n\nselect * \nfrom {{ var('search_term_report') }}", 'language': 'sql', 'refs': [], 'sources': [['apple_search_ads', 'search_term_report']], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.enabled_vars'], 'nodes': ['source.apple_search_ads_source.apple_search_ads.search_term_report']}, 'compiled_path': None}, 'model.google_ads.google_ads__account_report': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads', 'name': 'google_ads__account_report', 'resource_type': 'model', 'package_name': 'google_ads', 'path': 'google_ads__account_report.sql', 'original_file_path': 'models\\google_ads__account_report.sql', 'unique_id': 'model.google_ads.google_ads__account_report', 'fqn': ['google_ads', 'google_ads__account_report'], 'alias': 'google_ads__account_report', 'checksum': {'name': 'sha256', 'checksum': 'e16fa20ded7cc2a36a0a1eabe5ad1b0bdb16503068002078b640704ec7cc8bef'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents the daily performance at the account level.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date being reported on.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The descriptive name of the Customer account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The Customer ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'time_zone': {'name': 'time_zone', 'description': 'The time zone which the account is located.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency_code': {'name': 'currency_code', 'description': 'The currency which the account uses.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'auto_tagging_enabled': {'name': 'auto_tagging_enabled', 'description': 'Boolean indicating if the account uses auto tagging within ad urls.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'Total cost of ad clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The count of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The count of impressions.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'google_ads://models\\google_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.7526624, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads`.`google_ads__account_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nwith stats as (\n\n    select *\n    from {{ var('account_stats') }}\n), \n\naccounts as (\n\n    select *\n    from {{ var('account_history') }}\n    where is_most_recent_record = True\n), \n\nfields as (\n\n    select\n        stats.date_day,\n        accounts.account_name,\n        accounts.account_id,\n        accounts.currency_code,\n        accounts.auto_tagging_enabled,\n        accounts.time_zone,\n        sum(stats.spend) as spend,\n        sum(stats.clicks) as clicks,\n        sum(stats.impressions) as impressions\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='google_ads__account_stats_passthrough_metrics', transform = 'sum') }}\n\n    from stats\n    left join accounts\n        on stats.account_id = accounts.account_id\n    {{ dbt_utils.group_by(6) }}\n)\n\nselect *\nfrom fields", 'language': 'sql', 'refs': [['stg_google_ads__account_stats'], ['stg_google_ads__account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.google_ads_source.stg_google_ads__account_stats', 'model.google_ads_source.stg_google_ads__account_history']}, 'compiled_path': None}, 'model.google_ads.google_ads__ad_group_report': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads', 'name': 'google_ads__ad_group_report', 'resource_type': 'model', 'package_name': 'google_ads', 'path': 'google_ads__ad_group_report.sql', 'original_file_path': 'models\\google_ads__ad_group_report.sql', 'unique_id': 'model.google_ads.google_ads__ad_group_report', 'fqn': ['google_ads', 'google_ads__ad_group_report'], 'alias': 'google_ads__ad_group_report', 'checksum': {'name': 'sha256', 'checksum': '7f608fbc1b314740591eb4acc64fb45bc8303cefd50c850a31caecc33a8fad23'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents the daily performance at the ad group level.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date being reported on.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The descriptive name of the Customer account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The Customer ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID representing the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'The name of the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'The ID representing the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_status': {'name': 'ad_group_status', 'description': 'The status of the ad group.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_type': {'name': 'ad_group_type', 'description': 'The type of ad group which is serving ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'Total cost of ad clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The count of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The count of impressions.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'google_ads://models\\google_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.757013, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads`.`google_ads__ad_group_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nwith stats as (\n\n    select *\n    from {{ var('ad_group_stats') }}\n), \n\naccounts as (\n\n    select *\n    from {{ var('account_history') }}\n    where is_most_recent_record = True\n), \n\ncampaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record = True\n),\n\nad_groups as (\n\n    select *\n    from {{ var('ad_group_history') }}\n    where is_most_recent_record = True\n), \n\nfields as (\n\n    select\n        stats.date_day,\n        accounts.account_name,\n        accounts.account_id,\n        campaigns.campaign_name,\n        campaigns.campaign_id,\n        ad_groups.ad_group_name,\n        ad_groups.ad_group_id,\n        ad_groups.ad_group_status,\n        ad_groups.ad_group_type,\n        sum(stats.spend) as spend,\n        sum(stats.clicks) as clicks,\n        sum(stats.impressions) as impressions\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='google_ads__ad_group_stats_passthrough_metrics', transform = 'sum') }}\n\n    from stats\n    left join ad_groups\n        on stats.ad_group_id = ad_groups.ad_group_id\n    left join campaigns\n        on ad_groups.campaign_id = campaigns.campaign_id\n    left join accounts\n        on campaigns.account_id = accounts.account_id\n    {{ dbt_utils.group_by(9) }}\n)\n\nselect *\nfrom fields", 'language': 'sql', 'refs': [['stg_google_ads__ad_group_stats'], ['stg_google_ads__account_history'], ['stg_google_ads__campaign_history'], ['stg_google_ads__ad_group_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_group_stats', 'model.google_ads_source.stg_google_ads__account_history', 'model.google_ads_source.stg_google_ads__campaign_history', 'model.google_ads_source.stg_google_ads__ad_group_history']}, 'compiled_path': None}, 'model.google_ads.google_ads__ad_report': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads', 'name': 'google_ads__ad_report', 'resource_type': 'model', 'package_name': 'google_ads', 'path': 'google_ads__ad_report.sql', 'original_file_path': 'models\\google_ads__ad_report.sql', 'unique_id': 'model.google_ads.google_ads__ad_report', 'fqn': ['google_ads', 'google_ads__ad_report'], 'alias': 'google_ads__ad_report', 'checksum': {'name': 'sha256', 'checksum': 'd37cc295aa04e6ad61dfac2a9a77267009ac200771988ed13937fe62f847301b'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents the daily performance at the ad level.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date being reported on.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The descriptive name of the Customer account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The Customer ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID representing the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'The name of the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'The ID representing the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_id': {'name': 'ad_id', 'description': 'The unique identifier of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'display_url': {'name': 'display_url', 'description': 'The url which is displayed with the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'source_final_urls': {'name': 'source_final_urls', 'description': 'The final urls that are used within the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_status': {'name': 'ad_status', 'description': 'The status of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_type': {'name': 'ad_type', 'description': 'The type of the ad that is being served.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'Total cost of ad clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The count of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The count of impressions.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'google_ads://models\\google_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.762569, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads`.`google_ads__ad_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nwith stats as (\n\n    select *\n    from {{ var('ad_stats') }}\n), \n\naccounts as (\n\n    select *\n    from {{ var('account_history') }}\n    where is_most_recent_record = True\n), \n\ncampaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record = True\n), \n\nad_groups as (\n\n    select *\n    from {{ var('ad_group_history') }}\n    where is_most_recent_record = True\n),\n\nads as (\n\n    select *\n    from {{ var('ad_history') }}\n    where is_most_recent_record = True\n), \n\nfields as (\n\n    select\n        stats.date_day,\n        accounts.account_name,\n        accounts.account_id,\n        campaigns.campaign_name,\n        campaigns.campaign_id,\n        ad_groups.ad_group_name,\n        ad_groups.ad_group_id,\n        stats.ad_id,\n        ads.ad_name,\n        ads.ad_status,\n        ads.ad_type,\n        ads.display_url,\n        ads.source_final_urls,\n        sum(stats.spend) as spend,\n        sum(stats.clicks) as clicks,\n        sum(stats.impressions) as impressions\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='google_ads__ad_stats_passthrough_metrics', transform = 'sum') }}\n\n    from stats\n    left join ads\n        on stats.ad_id = ads.ad_id\n        and stats.ad_group_id = ads.ad_group_id\n    left join ad_groups\n        on ads.ad_group_id = ad_groups.ad_group_id\n    left join campaigns\n        on ad_groups.campaign_id = campaigns.campaign_id\n    left join accounts\n        on campaigns.account_id = accounts.account_id\n    {{ dbt_utils.group_by(13) }}\n)\n\nselect *\nfrom fields", 'language': 'sql', 'refs': [['stg_google_ads__ad_stats'], ['stg_google_ads__account_history'], ['stg_google_ads__campaign_history'], ['stg_google_ads__ad_group_history'], ['stg_google_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_stats', 'model.google_ads_source.stg_google_ads__account_history', 'model.google_ads_source.stg_google_ads__campaign_history', 'model.google_ads_source.stg_google_ads__ad_group_history', 'model.google_ads_source.stg_google_ads__ad_history']}, 'compiled_path': None}, 'model.google_ads.google_ads__campaign_report': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads', 'name': 'google_ads__campaign_report', 'resource_type': 'model', 'package_name': 'google_ads', 'path': 'google_ads__campaign_report.sql', 'original_file_path': 'models\\google_ads__campaign_report.sql', 'unique_id': 'model.google_ads.google_ads__campaign_report', 'fqn': ['google_ads', 'google_ads__campaign_report'], 'alias': 'google_ads__campaign_report', 'checksum': {'name': 'sha256', 'checksum': 'b0bd1cd3691181888cba6ff2c8247dade9fad09a62b433ccb75f3b8854a7275c'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents the daily performance of a campaign at the campaign/advertising_channel/advertising_channel_subtype level.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date being reported on.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The descriptive name of the Customer account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The Customer ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID representing the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertising_channel_type': {'name': 'advertising_channel_type', 'description': 'The channel type of the ads being served within the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertising_channel_subtype': {'name': 'advertising_channel_subtype', 'description': 'The channel subtype of the ads being served within the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'status': {'name': 'status', 'description': 'The status of the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'Total cost of ad clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The count of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The count of impressions.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'google_ads://models\\google_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.825557, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads`.`google_ads__campaign_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nwith stats as (\n\n    select *\n    from {{ var('campaign_stats') }}\n), \n\naccounts as (\n\n    select *\n    from {{ var('account_history') }}\n    where is_most_recent_record = True\n), \n\ncampaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record = True\n), \n\nfields as (\n\n    select\n        stats.date_day,\n        accounts.account_name,\n        accounts.account_id,\n        campaigns.campaign_name,\n        campaigns.campaign_id,\n        campaigns.advertising_channel_type,\n        campaigns.advertising_channel_subtype,\n        campaigns.status,\n        sum(stats.spend) as spend,\n        sum(stats.clicks) as clicks,\n        sum(stats.impressions) as impressions\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='google_ads__campaign_stats_passthrough_metrics', transform = 'sum') }}\n\n    from stats\n    left join campaigns\n        on stats.campaign_id = campaigns.campaign_id\n    left join accounts\n        on campaigns.account_id = accounts.account_id\n    {{ dbt_utils.group_by(8) }}\n)\n\nselect *\nfrom fields", 'language': 'sql', 'refs': [['stg_google_ads__campaign_stats'], ['stg_google_ads__account_history'], ['stg_google_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.google_ads_source.stg_google_ads__campaign_stats', 'model.google_ads_source.stg_google_ads__account_history', 'model.google_ads_source.stg_google_ads__campaign_history']}, 'compiled_path': None}, 'model.google_ads.google_ads__keyword_report': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads', 'name': 'google_ads__keyword_report', 'resource_type': 'model', 'package_name': 'google_ads', 'path': 'google_ads__keyword_report.sql', 'original_file_path': 'models\\google_ads__keyword_report.sql', 'unique_id': 'model.google_ads.google_ads__keyword_report', 'fqn': ['google_ads', 'google_ads__keyword_report'], 'alias': 'google_ads__keyword_report', 'checksum': {'name': 'sha256', 'checksum': '8afc77ec6f8a7e4348762f06892b32e48f7066973ff0344fa4e23ceae20cd77f'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents the daily performance at the ad group level for keywords.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date being reported on.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The descriptive name of the Customer account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The Customer ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID representing the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'The name of the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'The ID representing the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'criterion_id': {'name': 'criterion_id', 'description': 'The unique identifier of the criterion being served.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'type': {'name': 'type', 'description': 'The type of keyword ad being served.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'status': {'name': 'status', 'description': 'The status of the keyword ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_match_type': {'name': 'keyword_match_type', 'description': 'The match type criteria used for the keyword ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_text': {'name': 'keyword_text', 'description': 'The specific keyword text that is used.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'Total cost of ad clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The count of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The count of impressions.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'google_ads://models\\google_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.83114, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads`.`google_ads__keyword_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nwith stats as (\n\n    select *\n    from {{ var('keyword_stats') }}\n), \n\naccounts as (\n\n    select *\n    from {{ var('account_history') }}\n    where is_most_recent_record = True\n),\n\ncampaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record = True\n), \n\nad_groups as (\n\n    select *\n    from {{ var('ad_group_history') }}\n    where is_most_recent_record = True\n), \n\ncriterions as (\n\n    select *\n    from {{ var('ad_group_criterion_history') }}\n    where is_most_recent_record = True\n), \n\nfields as (\n\n    select\n        stats.date_day,\n        accounts.account_name,\n        stats.account_id,\n        campaigns.campaign_name,\n        stats.campaign_id,\n        ad_groups.ad_group_name,\n        stats.ad_group_id,\n        criterions.criterion_id,\n        criterions.type,\n        criterions.status,\n        criterions.keyword_match_type,\n        criterions.keyword_text,\n        sum(stats.spend) as spend,\n        sum(stats.clicks) as clicks,\n        sum(stats.impressions) as impressions\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='google_ads__keyword_stats_passthrough_metrics', transform = 'sum') }}\n\n    from stats\n    left join criterions\n        on stats.criterion_id = criterions.criterion_id\n    left join ad_groups\n        on stats.ad_group_id = ad_groups.ad_group_id\n    left join campaigns\n        on stats.campaign_id = campaigns.campaign_id\n    left join accounts\n        on stats.account_id = accounts.account_id\n    {{ dbt_utils.group_by(12) }}\n)\n\nselect *\nfrom fields", 'language': 'sql', 'refs': [['stg_google_ads__keyword_stats'], ['stg_google_ads__account_history'], ['stg_google_ads__campaign_history'], ['stg_google_ads__ad_group_history'], ['stg_google_ads__ad_group_criterion_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.google_ads_source.stg_google_ads__keyword_stats', 'model.google_ads_source.stg_google_ads__account_history', 'model.google_ads_source.stg_google_ads__campaign_history', 'model.google_ads_source.stg_google_ads__ad_group_history', 'model.google_ads_source.stg_google_ads__ad_group_criterion_history']}, 'compiled_path': None}, 'model.google_ads.google_ads__url_report': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads', 'name': 'google_ads__url_report', 'resource_type': 'model', 'package_name': 'google_ads', 'path': 'google_ads__url_report.sql', 'original_file_path': 'models\\google_ads__url_report.sql', 'unique_id': 'model.google_ads.google_ads__url_report', 'fqn': ['google_ads', 'google_ads__url_report'], 'alias': 'google_ads__url_report', 'checksum': {'name': 'sha256', 'checksum': 'c0cd7ac20f5d6e744a3ab249e75f5a0facce6a833c9fe6bbb9efce90e78bd328'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents the daily performance of URLs at the ad level.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date being reported on.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The descriptive name of the Customer account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The Customer ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID representing the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'The name of the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'The ID representing the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_id': {'name': 'ad_id', 'description': 'The unique identifier of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'base_url': {'name': 'base_url', 'description': 'The base url of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_host': {'name': 'url_host', 'description': 'The URL host of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_path': {'name': 'url_path', 'description': 'The URL path of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_source': {'name': 'utm_source', 'description': 'The utm_source parameter of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_medium': {'name': 'utm_medium', 'description': 'The utm_medium parameter of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_campaign': {'name': 'utm_campaign', 'description': 'The utm_campaign parameter of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_content': {'name': 'utm_content', 'description': 'The utm_content parameter of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_term': {'name': 'utm_term', 'description': 'The utm_term parameter of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'Total cost of ad clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The count of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The count of impressions.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'google_ads://models\\google_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.7505212, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads`.`google_ads__url_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nwith stats as (\n\n    select *\n    from {{ var('ad_stats') }}\n), \n\naccounts as (\n\n    select *\n    from {{ var('account_history') }}\n    where is_most_recent_record = True\n), \n\ncampaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record = True\n), \n\nad_groups as (\n\n    select *\n    from {{ var('ad_group_history') }}\n    where is_most_recent_record = True\n),\n\nads as (\n\n    select *\n    from {{ var('ad_history') }}\n    where is_most_recent_record = True\n), \n\nfields as (\n\n    select\n        stats.date_day,\n        accounts.account_name,\n        accounts.account_id,\n        campaigns.campaign_name,\n        campaigns.campaign_id,\n        ad_groups.ad_group_name,\n        ad_groups.ad_group_id,\n        ads.ad_id,\n        ads.base_url,\n        ads.url_host,\n        ads.url_path,\n\n        {% if var('google_auto_tagging_enabled', false) %}\n\n        coalesce( {{ dbt_utils.get_url_parameter('ads.final_url', 'utm_source') }} , 'google')  as utm_source,\n        coalesce( {{ dbt_utils.get_url_parameter('ads.final_url', 'utm_medium') }} , 'cpc') as utm_medium,\n        coalesce( {{ dbt_utils.get_url_parameter('ads.final_url', 'utm_campaign') }} , campaigns.campaign_name) as utm_campaign,\n        coalesce( {{ dbt_utils.get_url_parameter('ads.final_url', 'utm_content') }} , ad_groups.ad_group_name) as utm_content,\n\n        {% else %}\n\n        ads.utm_source,\n        ads.utm_medium,\n        ads.utm_campaign,\n        ads.utm_content,\n        \n        {% endif %}\n\n        ads.utm_term,\n        sum(stats.spend) as spend,\n        sum(stats.clicks) as clicks,\n        sum(stats.impressions) as impressions\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='google_ads__ad_stats_passthrough_metrics', transform = 'sum') }}\n\n    from stats\n    left join ads\n        on stats.ad_id = ads.ad_id\n        and stats.ad_group_id = ads.ad_group_id\n    left join ad_groups\n        on ads.ad_group_id = ad_groups.ad_group_id\n    left join campaigns\n        on ad_groups.campaign_id = campaigns.campaign_id\n    left join accounts\n        on campaigns.account_id = accounts.account_id\n\n    {% if var('ad_reporting__url_report__using_null_filter', True) %}\n        where ads.source_final_urls is not null\n    {% endif %}\n\n    {{ dbt_utils.group_by(16) }}\n)\n\nselect *\nfrom fields", 'language': 'sql', 'refs': [['stg_google_ads__ad_stats'], ['stg_google_ads__account_history'], ['stg_google_ads__campaign_history'], ['stg_google_ads__ad_group_history'], ['stg_google_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_stats', 'model.google_ads_source.stg_google_ads__account_history', 'model.google_ads_source.stg_google_ads__campaign_history', 'model.google_ads_source.stg_google_ads__ad_group_history', 'model.google_ads_source.stg_google_ads__ad_history']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__account_history': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__account_history', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'stg_google_ads__account_history.sql', 'original_file_path': 'models\\stg_google_ads__account_history.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__account_history', 'fqn': ['google_ads_source', 'stg_google_ads__account_history'], 'alias': 'stg_google_ads__account_history', 'checksum': {'name': 'sha256', 'checksum': '343005eab065e14bf0ee42e8efc615b9397add7d783d1e2e77158d2781f253bb'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents a version of an account in Google Ads.', 'columns': {'account_id': {'name': 'account_id', 'description': 'The ID of the Account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency_code': {'name': 'currency_code', 'description': 'The currency of the spend reported.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'auto_tagging_enabled': {'name': 'auto_tagging_enabled', 'description': 'Boolean indicating if auto tagging is enabled on the account ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'time_zone': {'name': 'time_zone', 'description': 'The time zone of the account ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The descriptive name of the Customer account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_at': {'name': 'updated_at', 'description': 'Timestamp of when a record was last synced.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_most_recent_record': {'name': 'is_most_recent_record', 'description': 'Boolean representing whether the record is the most recent version of the object.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'google_ads_source://models\\stg_google_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.9092178, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__account_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_google_ads__account_history_tmp') }}\n\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_google_ads__account_history_tmp')),\n                staging_columns=get_account_history_columns()\n            )\n        }}\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as account_id,\n        updated_at,\n        currency_code,\n        auto_tagging_enabled,\n        time_zone,\n        descriptive_name as account_name,\n        row_number() over (partition by id order by updated_at desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_google_ads__account_history_tmp'], ['stg_google_ads__account_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.google_ads_source.get_account_history_columns', 'macro.fivetran_utils.fill_staging_columns'], 'nodes': ['model.google_ads_source.stg_google_ads__account_history_tmp', 'model.google_ads_source.stg_google_ads__account_history_tmp']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__account_stats': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__account_stats', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'stg_google_ads__account_stats.sql', 'original_file_path': 'models\\stg_google_ads__account_stats.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__account_stats', 'fqn': ['google_ads_source', 'stg_google_ads__account_stats'], 'alias': 'stg_google_ads__account_stats', 'checksum': {'name': 'sha256', 'checksum': 'ab5bb273d256a42be530160f2c20aa597ff974ad43e5fdbd20046f6f0699ef7f'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily performance of an account in Google Ads broken down to the ad network and device type.', 'columns': {'account_id': {'name': 'account_id', 'description': 'The Customer ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'The date being reported on.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_network_type': {'name': 'ad_network_type', 'description': 'The Google Ad network type used across the account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'device': {'name': 'device', 'description': 'Account ad performance per unique device where the ads were served.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The number of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The sum of your cost-per-click (CPC) and cost-per-thousand impressions (CPM) costs during this period.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'Count of how often your ad has appeared on a search results page or website on the Google Network.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'google_ads_source://models\\stg_google_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.9379342, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__account_stats`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_google_ads__account_stats_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_google_ads__account_stats_tmp')),\n                staging_columns=get_account_stats_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select \n        customer_id as account_id, \n        date as date_day,\n        ad_network_type,\n        device,\n        clicks, \n        cost_micros / 1000000.0 as spend, \n        impressions\n        \n        {{ fivetran_utils.fill_pass_through_columns('google_ads__account_stats_passthrough_metrics') }}\n\n    from fields\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_google_ads__account_stats_tmp'], ['stg_google_ads__account_stats_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.google_ads_source.get_account_stats_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.google_ads_source.stg_google_ads__account_stats_tmp', 'model.google_ads_source.stg_google_ads__account_stats_tmp']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__ad_group_criterion_history': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__ad_group_criterion_history', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'stg_google_ads__ad_group_criterion_history.sql', 'original_file_path': 'models\\stg_google_ads__ad_group_criterion_history.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__ad_group_criterion_history', 'fqn': ['google_ads_source', 'stg_google_ads__ad_group_criterion_history'], 'alias': 'stg_google_ads__ad_group_criterion_history', 'checksum': {'name': 'sha256', 'checksum': '0f6a6882c94309772926b30b0b1d0ddf5f38fa9cdc8133ad6d771ead57c0a6a3'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents a historical version of an ad group criterion in Google Ads.', 'columns': {'criterion_id': {'name': 'criterion_id', 'description': 'Unique identifier of the ad group criterion.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'The ID of the AdGroup.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'base_campaign_id': {'name': 'base_campaign_id', 'description': 'The ID of the Campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_at': {'name': 'updated_at', 'description': 'Timestamp of when the record was last updated in Google Ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'type': {'name': 'type', 'description': 'The type of ad group criterion.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'status': {'name': 'status', 'description': 'The current status of the ad group criterion.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_match_type': {'name': 'keyword_match_type', 'description': 'The match type which dictate how closely the keyword needs to match with the user’s search query so that the ad can be considered for the auction.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_text': {'name': 'keyword_text', 'description': 'The text used within the keyword criterion that is being matched against.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_most_recent_record': {'name': 'is_most_recent_record', 'description': 'Boolean representing whether the record is the most recent version of the object.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'google_ads_source://models\\stg_google_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.9273438, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__ad_group_criterion_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_google_ads__ad_group_criterion_history_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_google_ads__ad_group_criterion_history_tmp')),\n                staging_columns=get_ad_group_criterion_history_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select \n        id as criterion_id,\n        cast(ad_group_id as {{ dbt.type_string() }}) as ad_group_id,\n        base_campaign_id,\n        updated_at,\n        type,\n        status,\n        keyword_match_type,\n        keyword_text,\n        row_number() over (partition by id order by updated_at desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_google_ads__ad_group_criterion_history_tmp'], ['stg_google_ads__ad_group_criterion_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.google_ads_source.get_ad_group_criterion_history_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_string'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_group_criterion_history_tmp', 'model.google_ads_source.stg_google_ads__ad_group_criterion_history_tmp']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__ad_group_history': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__ad_group_history', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'stg_google_ads__ad_group_history.sql', 'original_file_path': 'models\\stg_google_ads__ad_group_history.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__ad_group_history', 'fqn': ['google_ads_source', 'stg_google_ads__ad_group_history'], 'alias': 'stg_google_ads__ad_group_history', 'checksum': {'name': 'sha256', 'checksum': 'a74962ca2bca2e4507e3c647d9dd4ff276be310258c25d99c1228024b6e7e03c'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents a version of an ad group in Google Ads.', 'columns': {'ad_group_id': {'name': 'ad_group_id', 'description': 'The ID of the AdGroup.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_at': {'name': 'updated_at', 'description': 'Timestamp of when the record was last updated in Google Ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_type': {'name': 'ad_group_type', 'description': 'The type of the ad group in Google Ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID of the Campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the Campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'The name of the AdGroup.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_status': {'name': 'ad_group_status', 'description': 'Status of the ad group.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_most_recent_record': {'name': 'is_most_recent_record', 'description': 'Boolean representing whether the record is the most recent version of the object.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'google_ads_source://models\\stg_google_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.9122176, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__ad_group_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_google_ads__ad_group_history_tmp') }}\n\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_google_ads__ad_group_history_tmp')),\n                staging_columns=get_ad_group_history_columns()\n            )\n        }}\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        cast(id as {{ dbt.type_string() }}) as ad_group_id,\n        updated_at,\n        type as ad_group_type, \n        campaign_id, \n        campaign_name, \n        name as ad_group_name, \n        status as ad_group_status,\n        row_number() over (partition by id order by updated_at desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_google_ads__ad_group_history_tmp'], ['stg_google_ads__ad_group_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.google_ads_source.get_ad_group_history_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_string'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_group_history_tmp', 'model.google_ads_source.stg_google_ads__ad_group_history_tmp']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__ad_group_stats': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__ad_group_stats', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'stg_google_ads__ad_group_stats.sql', 'original_file_path': 'models\\stg_google_ads__ad_group_stats.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__ad_group_stats', 'fqn': ['google_ads_source', 'stg_google_ads__ad_group_stats'], 'alias': 'stg_google_ads__ad_group_stats', 'checksum': {'name': 'sha256', 'checksum': '50112c5d48ed15989072dc56b8e1fc598778564b5fef97bcc538ca6927117713'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily performance of an ad group in Google Ads broken down to the ad network and device type.', 'columns': {'account_id': {'name': 'account_id', 'description': 'The Customer ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'The date being reported on.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'The ID of the AdGroup.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID of the Campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_network_type': {'name': 'ad_network_type', 'description': 'The Google Ad network type used across the account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'device': {'name': 'device', 'description': 'Account ad performance per unique device where the ads were served.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The number of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The sum of your cost-per-click (CPC) and cost-per-thousand impressions (CPM) costs during this period.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'Count of how often your ad has appeared on a search results page or website on the Google Network.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'google_ads_source://models\\stg_google_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.9303856, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__ad_group_stats`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_google_ads__ad_group_stats_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_google_ads__ad_group_stats_tmp')),\n                staging_columns=get_ad_group_stats_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select\n        customer_id as account_id, \n        date as date_day, \n        cast(id as {{ dbt.type_string() }}) as ad_group_id, \n        campaign_id, \n        device,\n        ad_network_type,\n        clicks, \n        cost_micros / 1000000.0 as spend, \n        impressions\n        \n        {{ fivetran_utils.fill_pass_through_columns('google_ads__ad_group_stats_passthrough_metrics') }}\n\n    from fields\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_google_ads__ad_group_stats_tmp'], ['stg_google_ads__ad_group_stats_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.google_ads_source.get_ad_group_stats_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_string', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_group_stats_tmp', 'model.google_ads_source.stg_google_ads__ad_group_stats_tmp']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__ad_history': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__ad_history', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'stg_google_ads__ad_history.sql', 'original_file_path': 'models\\stg_google_ads__ad_history.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__ad_history', 'fqn': ['google_ads_source', 'stg_google_ads__ad_history'], 'alias': 'stg_google_ads__ad_history', 'checksum': {'name': 'sha256', 'checksum': 'e0ff6b7aea218822442000bf423b307647e99e54c9bf48ed4bf411bcc6f00edb'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents a version of an ad in Google Ads.', 'columns': {'ad_group_id': {'name': 'ad_group_id', 'description': 'The ID of the AdGroup.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_id': {'name': 'ad_id', 'description': 'The ID of the Ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_at': {'name': 'updated_at', 'description': 'Timestamp of when the record was last updated in Google Ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'display_url': {'name': 'display_url', 'description': 'The display url of the ad that is being served.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_type': {'name': 'ad_type', 'description': 'The type of the ad in Google Ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_status': {'name': 'ad_status', 'description': 'Status of the Ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_most_recent_record': {'name': 'is_most_recent_record', 'description': 'Boolean representing whether the record is the most recent version of the object.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'source_final_urls': {'name': 'source_final_urls', 'description': 'The original list of final urls expressed as an array. Please be aware the test used on this field is intended to warn you if you have fields with multiple urls. If you do, the `final_url` field will filter down the urls within the array to just the first. Therefore, this package will only leverage one of possibly many urls within this field array.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'final_url': {'name': 'final_url', 'description': 'The first url in the list of the urls within the `final_urls` source field.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'base_url': {'name': 'base_url', 'description': 'The base URL of the ad, extracted from the `final_urls`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_host': {'name': 'url_host', 'description': 'The URL host of the ad, extracted from the `final_urls`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_path': {'name': 'url_path', 'description': 'The URL path of the ad, extracted from the `final_urls`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_source': {'name': 'utm_source', 'description': 'The utm_source parameter of the ad, extracted from the `final_urls`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_medium': {'name': 'utm_medium', 'description': 'The utm_medium parameter of the ad, extracted from the `final_urls`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_campaign': {'name': 'utm_campaign', 'description': 'The utm_campaign parameter of the ad, extracted from the `final_urls`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_content': {'name': 'utm_content', 'description': 'The utm_content parameter of the ad, extracted from the `final_urls`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_term': {'name': 'utm_term', 'description': 'The utm_term parameter of the ad, extracted from the `final_urls`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'google_ads_source://models\\stg_google_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.9177237, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__ad_history`', 'raw_code': '{{ config(enabled=var(\'ad_reporting__google_ads_enabled\', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref(\'stg_google_ads__ad_history_tmp\') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref(\'stg_google_ads__ad_history_tmp\')),\n                staging_columns=get_ad_history_columns()\n            )\n        }}\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        cast(ad_group_id as {{ dbt.type_string() }}) as ad_group_id, \n        id as ad_id,\n        name as ad_name,\n        updated_at,\n        type as ad_type,\n        status as ad_status,\n        display_url,\n        final_urls as source_final_urls,\n        replace(replace(final_urls, \'[\', \'\'),\']\',\'\') as final_urls,\n        row_number() over (partition by id, ad_group_id order by updated_at desc) = 1 as is_most_recent_record\n    from fields\n),\n\nfinal_urls as (\n\n    select \n        *,\n        --Extract the first url within the list of urls provided within the final_urls field\n        {{ dbt.split_part(string_text=\'final_urls\', delimiter_text="\',\'", part_number=1) }} as final_url\n\n    from final\n\n),\n\nurl_fields as (\n    select \n        *,\n        {{ dbt.split_part(\'final_url\', "\'?\'", 1) }} as base_url,\n        {{ dbt_utils.get_url_host(\'final_url\') }} as url_host,\n        \'/\' || {{ dbt_utils.get_url_path(\'final_url\') }} as url_path,\n        {{ dbt_utils.get_url_parameter(\'final_url\', \'utm_source\') }} as utm_source,\n        {{ dbt_utils.get_url_parameter(\'final_url\', \'utm_medium\') }} as utm_medium,\n        {{ dbt_utils.get_url_parameter(\'final_url\', \'utm_campaign\') }} as utm_campaign,\n        {{ dbt_utils.get_url_parameter(\'final_url\', \'utm_content\') }} as utm_content,\n        {{ dbt_utils.get_url_parameter(\'final_url\', \'utm_term\') }} as utm_term\n    from final_urls\n)\n\nselect * \nfrom url_fields', 'language': 'sql', 'refs': [['stg_google_ads__ad_history_tmp'], ['stg_google_ads__ad_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.google_ads_source.get_ad_history_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_string', 'macro.dbt.split_part', 'macro.dbt_utils.get_url_host', 'macro.dbt_utils.get_url_path', 'macro.dbt_utils.get_url_parameter'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_history_tmp', 'model.google_ads_source.stg_google_ads__ad_history_tmp']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__ad_stats': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__ad_stats', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'stg_google_ads__ad_stats.sql', 'original_file_path': 'models\\stg_google_ads__ad_stats.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__ad_stats', 'fqn': ['google_ads_source', 'stg_google_ads__ad_stats'], 'alias': 'stg_google_ads__ad_stats', 'checksum': {'name': 'sha256', 'checksum': 'be21b75b017ffad3f142c3d90ab9be8f9d99e9f16ea682acdf00217e6817fea2'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily performance of an ad in Google Ads broken down to the ad network, device type, and ad_group_id.', 'columns': {'account_id': {'name': 'account_id', 'description': 'The Customer ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'The date being reported on.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'The ID of the AdGroup.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_id': {'name': 'ad_id', 'description': 'The ID of the Ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID of the Campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_network_type': {'name': 'ad_network_type', 'description': 'The Google Ad network type used across the account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_ad_group_criterion': {'name': 'keyword_ad_group_criterion', 'description': 'The ad group which the keyword criterion resides.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'device': {'name': 'device', 'description': 'Account ad performance per unique device where the ads were served.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The number of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The sum of your cost-per-click (CPC) and cost-per-thousand impressions (CPM) costs during this period.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'Count of how often your ad has appeared on a search results page or website on the Google Network.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'google_ads_source://models\\stg_google_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.9207277, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__ad_stats`', 'raw_code': '{{ config(enabled=var(\'ad_reporting__google_ads_enabled\', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref(\'stg_google_ads__ad_stats_tmp\') }}\n\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref(\'stg_google_ads__ad_stats_tmp\')),\n                staging_columns=get_ad_stats_columns()\n            )\n        }}\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        customer_id as account_id, \n        date as date_day, \n        {% if target.type in (\'spark\',\'databricks\') %}\n        coalesce(cast(ad_group_id as {{ dbt.type_string() }}), split(ad_group,\'adGroups/\')[1]) as ad_group_id,\n        {% else %}\n        coalesce(cast(ad_group_id as {{ dbt.type_string() }}), {{ dbt.split_part(string_text=\'ad_group\', delimiter_text="\'adGroups/\'", part_number=2) }}) as ad_group_id,\n        {% endif %}\n        keyword_ad_group_criterion,\n        ad_network_type,\n        device,\n        ad_id, \n        campaign_id, \n        clicks, \n        cost_micros / 1000000.0 as spend, \n        impressions\n        \n        {{ fivetran_utils.fill_pass_through_columns(\'google_ads__ad_stats_passthrough_metrics\') }}\n\n    from fields\n)\n\nselect * from final', 'language': 'sql', 'refs': [['stg_google_ads__ad_stats_tmp'], ['stg_google_ads__ad_stats_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.google_ads_source.get_ad_stats_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_string', 'macro.dbt.split_part', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_stats_tmp', 'model.google_ads_source.stg_google_ads__ad_stats_tmp']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__campaign_history': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__campaign_history', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'stg_google_ads__campaign_history.sql', 'original_file_path': 'models\\stg_google_ads__campaign_history.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__campaign_history', 'fqn': ['google_ads_source', 'stg_google_ads__campaign_history'], 'alias': 'stg_google_ads__campaign_history', 'checksum': {'name': 'sha256', 'checksum': '48aacc738e5cbe391f544a5e16f40107b193fb5e84e3b7f1a3673cfe51e42bed'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents a version of a campaign in Google Ads.', 'columns': {'campaign_id': {'name': 'campaign_id', 'description': 'The ID of the Campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_at': {'name': 'updated_at', 'description': 'Timestamp of when the record was last updated in Google Ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertising_channel_type': {'name': 'advertising_channel_type', 'description': 'The type of advertising channel being used by the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertising_channel_subtype': {'name': 'advertising_channel_subtype', 'description': 'The advertising channel subtype that is being used by the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'start_date': {'name': 'start_date', 'description': 'The start date of the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'end_date': {'name': 'end_date', 'description': 'The end date of the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'serving_status': {'name': 'serving_status', 'description': 'Status of the ads and how they are currently being served.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'status': {'name': 'status', 'description': 'General status of the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'tracking_url_template': {'name': 'tracking_url_template', 'description': 'The tracking url template being used throughout the campaign ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the Campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The Customer ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_most_recent_record': {'name': 'is_most_recent_record', 'description': 'Boolean representing whether the record is the most recent version of the object.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'google_ads_source://models\\stg_google_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.92473, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__campaign_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_google_ads__campaign_history_tmp') }}\n\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_google_ads__campaign_history_tmp')),\n                staging_columns=get_campaign_history_columns()\n            )\n        }}\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as campaign_id, \n        updated_at,\n        name as campaign_name,\n        customer_id as account_id,\n        advertising_channel_type,\n        advertising_channel_subtype,\n        start_date,\n        end_date,\n        serving_status,\n        status,\n        tracking_url_template,\n        row_number() over (partition by id order by updated_at desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_google_ads__campaign_history_tmp'], ['stg_google_ads__campaign_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.google_ads_source.get_campaign_history_columns', 'macro.fivetran_utils.fill_staging_columns'], 'nodes': ['model.google_ads_source.stg_google_ads__campaign_history_tmp', 'model.google_ads_source.stg_google_ads__campaign_history_tmp']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__campaign_stats': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__campaign_stats', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'stg_google_ads__campaign_stats.sql', 'original_file_path': 'models\\stg_google_ads__campaign_stats.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__campaign_stats', 'fqn': ['google_ads_source', 'stg_google_ads__campaign_stats'], 'alias': 'stg_google_ads__campaign_stats', 'checksum': {'name': 'sha256', 'checksum': '4d8f1522db5e641f065131caf87cc3d4bb2895837d1da1adb9373e6f6e3187a3'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily performance of a campaign in Google Ads broken down to the ad network and device type.', 'columns': {'account_id': {'name': 'account_id', 'description': 'The Customer ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'The date being reported on.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID of the Campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_network_type': {'name': 'ad_network_type', 'description': 'The Google Ad network type used across the account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'device': {'name': 'device', 'description': 'Account ad performance per unique device where the ads were served.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The number of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The sum of your cost-per-click (CPC) and cost-per-thousand impressions (CPM) costs during this period.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'Count of how often your ad has appeared on a search results page or website on the Google Network.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'google_ads_source://models\\stg_google_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.9323995, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__campaign_stats`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_google_ads__campaign_stats_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_google_ads__campaign_stats_tmp')),\n                staging_columns=get_campaign_stats_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select \n        customer_id as account_id, \n        date as date_day, \n        id as campaign_id, \n        ad_network_type,\n        device,\n        clicks, \n        cost_micros / 1000000.0 as spend, \n        impressions\n        \n        {{ fivetran_utils.fill_pass_through_columns('google_ads__campaign_stats_passthrough_metrics') }}\n\n    from fields\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_google_ads__campaign_stats_tmp'], ['stg_google_ads__campaign_stats_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.google_ads_source.get_campaign_stats_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.google_ads_source.stg_google_ads__campaign_stats_tmp', 'model.google_ads_source.stg_google_ads__campaign_stats_tmp']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__keyword_stats': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__keyword_stats', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'stg_google_ads__keyword_stats.sql', 'original_file_path': 'models\\stg_google_ads__keyword_stats.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__keyword_stats', 'fqn': ['google_ads_source', 'stg_google_ads__keyword_stats'], 'alias': 'stg_google_ads__keyword_stats', 'checksum': {'name': 'sha256', 'checksum': 'ffc5f45c98b6b7a2824807980d55ad185258b67c2e8b3066844722616cdf4074'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily performance of a keyword in Google Ads.', 'columns': {'account_id': {'name': 'account_id', 'description': 'The Customer ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'The date being reported on.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'The ID of the AdGroup.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_id': {'name': 'keyword_id', 'description': 'The unique ID of the keyword record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID of the Campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'criterion_id': {'name': 'criterion_id', 'description': 'Reference to the ad group criterion used for the keyword.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The number of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The sum of your cost-per-click (CPC) and cost-per-thousand impressions (CPM) costs during this period.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'Count of how often your ad has appeared on a search results page or website on the Google Network.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'google_ads_source://models\\stg_google_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.9354188, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__keyword_stats`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_google_ads__keyword_stats_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_google_ads__keyword_stats_tmp')),\n                staging_columns=get_keyword_stats_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_id as keyword_id,\n        customer_id as account_id, \n        date as date_day, \n        cast(ad_group_id as {{ dbt.type_string() }}) as ad_group_id,\n        ad_group_criterion_criterion_id as criterion_id,\n        campaign_id, \n        clicks, \n        cost_micros / 1000000.0 as spend, \n        impressions\n        \n        {{ fivetran_utils.fill_pass_through_columns('google_ads__keyword_stats_passthrough_metrics') }}\n\n    from fields\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_google_ads__keyword_stats_tmp'], ['stg_google_ads__keyword_stats_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.google_ads_source.get_keyword_stats_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_string', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.google_ads_source.stg_google_ads__keyword_stats_tmp', 'model.google_ads_source.stg_google_ads__keyword_stats_tmp']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__account_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__account_history_tmp', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'tmp\\stg_google_ads__account_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_google_ads__account_history_tmp.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__account_history_tmp', 'fqn': ['google_ads_source', 'tmp', 'stg_google_ads__account_history_tmp'], 'alias': 'stg_google_ads__account_history_tmp', 'checksum': {'name': 'sha256', 'checksum': 'b5f8dd1b72ffdcf3bd32a1c0ab81a33aed0f43b042998b6d9cf57605a4226386'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433482.4475272, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__account_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('account_history') }}", 'language': 'sql', 'refs': [], 'sources': [['google_ads', 'account_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.google_ads_source.google_ads.account_history']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__account_stats_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__account_stats_tmp', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'tmp\\stg_google_ads__account_stats_tmp.sql', 'original_file_path': 'models\\tmp\\stg_google_ads__account_stats_tmp.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__account_stats_tmp', 'fqn': ['google_ads_source', 'tmp', 'stg_google_ads__account_stats_tmp'], 'alias': 'stg_google_ads__account_stats_tmp', 'checksum': {'name': 'sha256', 'checksum': '64986ed4826b8e88bc9cbc3bde6840448bc855e6084bc3d12da016addb34dafa'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433482.4545517, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__account_stats_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('account_stats') }}", 'language': 'sql', 'refs': [], 'sources': [['google_ads', 'account_stats']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.google_ads_source.google_ads.account_stats']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__ad_group_criterion_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__ad_group_criterion_history_tmp', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'tmp\\stg_google_ads__ad_group_criterion_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_google_ads__ad_group_criterion_history_tmp.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__ad_group_criterion_history_tmp', 'fqn': ['google_ads_source', 'tmp', 'stg_google_ads__ad_group_criterion_history_tmp'], 'alias': 'stg_google_ads__ad_group_criterion_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '82cd3b85a00f84d6433d30fb5a2c6b6882381c4200bdad44fd5a761219418b48'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433482.4624908, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__ad_group_criterion_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('ad_group_criterion_history') }}", 'language': 'sql', 'refs': [], 'sources': [['google_ads', 'ad_group_criterion_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.google_ads_source.google_ads.ad_group_criterion_history']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__ad_group_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__ad_group_history_tmp', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'tmp\\stg_google_ads__ad_group_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_google_ads__ad_group_history_tmp.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__ad_group_history_tmp', 'fqn': ['google_ads_source', 'tmp', 'stg_google_ads__ad_group_history_tmp'], 'alias': 'stg_google_ads__ad_group_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '663aad714cdf84b0a06475835364f36ffca4392b342ce434ea9ac3b38b96e548'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433482.4701786, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__ad_group_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('ad_group_history') }}", 'language': 'sql', 'refs': [], 'sources': [['google_ads', 'ad_group_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.google_ads_source.google_ads.ad_group_history']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__ad_group_stats_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__ad_group_stats_tmp', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'tmp\\stg_google_ads__ad_group_stats_tmp.sql', 'original_file_path': 'models\\tmp\\stg_google_ads__ad_group_stats_tmp.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__ad_group_stats_tmp', 'fqn': ['google_ads_source', 'tmp', 'stg_google_ads__ad_group_stats_tmp'], 'alias': 'stg_google_ads__ad_group_stats_tmp', 'checksum': {'name': 'sha256', 'checksum': 'df5f65c5bda3d22cada3c02ded54c4eb2a7e13ef2f1bc6169fed1f0c03fe761e'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433482.4766443, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__ad_group_stats_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('ad_group_stats') }}", 'language': 'sql', 'refs': [], 'sources': [['google_ads', 'ad_group_stats']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.google_ads_source.google_ads.ad_group_stats']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__ad_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__ad_history_tmp', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'tmp\\stg_google_ads__ad_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_google_ads__ad_history_tmp.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__ad_history_tmp', 'fqn': ['google_ads_source', 'tmp', 'stg_google_ads__ad_history_tmp'], 'alias': 'stg_google_ads__ad_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '237e4cca801b026f9d0aaeff2130bf3d2f3c9050e364406b5b59ba18db547166'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433482.4852748, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__ad_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('ad_history') }}", 'language': 'sql', 'refs': [], 'sources': [['google_ads', 'ad_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.google_ads_source.google_ads.ad_history']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__ad_stats_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__ad_stats_tmp', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'tmp\\stg_google_ads__ad_stats_tmp.sql', 'original_file_path': 'models\\tmp\\stg_google_ads__ad_stats_tmp.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__ad_stats_tmp', 'fqn': ['google_ads_source', 'tmp', 'stg_google_ads__ad_stats_tmp'], 'alias': 'stg_google_ads__ad_stats_tmp', 'checksum': {'name': 'sha256', 'checksum': '69fac90225ad40ce593bc7a83bea96739e0018b2d4b90c4dd7be0555b980c316'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433482.494297, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__ad_stats_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('ad_stats') }}", 'language': 'sql', 'refs': [], 'sources': [['google_ads', 'ad_stats']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.google_ads_source.google_ads.ad_stats']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__campaign_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__campaign_history_tmp', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'tmp\\stg_google_ads__campaign_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_google_ads__campaign_history_tmp.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__campaign_history_tmp', 'fqn': ['google_ads_source', 'tmp', 'stg_google_ads__campaign_history_tmp'], 'alias': 'stg_google_ads__campaign_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '1ca8c796342ffe6e1c664697a81bbe0787b3999df6e155e114aabb3f85df6ac6'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433482.5019393, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__campaign_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('campaign_history') }}", 'language': 'sql', 'refs': [], 'sources': [['google_ads', 'campaign_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.google_ads_source.google_ads.campaign_history']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__campaign_stats_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__campaign_stats_tmp', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'tmp\\stg_google_ads__campaign_stats_tmp.sql', 'original_file_path': 'models\\tmp\\stg_google_ads__campaign_stats_tmp.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__campaign_stats_tmp', 'fqn': ['google_ads_source', 'tmp', 'stg_google_ads__campaign_stats_tmp'], 'alias': 'stg_google_ads__campaign_stats_tmp', 'checksum': {'name': 'sha256', 'checksum': 'ac4bf76095a969b6cc66bdfc6bf1e53e555be2fee1eb08c867e0489a910ab491'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433482.509004, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__campaign_stats_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('campaign_stats') }}", 'language': 'sql', 'refs': [], 'sources': [['google_ads', 'campaign_stats']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.google_ads_source.google_ads.campaign_stats']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__keyword_stats_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__keyword_stats_tmp', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'tmp\\stg_google_ads__keyword_stats_tmp.sql', 'original_file_path': 'models\\tmp\\stg_google_ads__keyword_stats_tmp.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__keyword_stats_tmp', 'fqn': ['google_ads_source', 'tmp', 'stg_google_ads__keyword_stats_tmp'], 'alias': 'stg_google_ads__keyword_stats_tmp', 'checksum': {'name': 'sha256', 'checksum': '4568538a6402c68eb5e94f0e9f17373b8473723218597ad8990553524dc31691'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433482.516014, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__keyword_stats_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('keyword_stats') }}", 'language': 'sql', 'refs': [], 'sources': [['google_ads', 'keyword_stats']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.google_ads_source.google_ads.keyword_stats']}, 'compiled_path': None}, 'model.snapchat_ads.snapchat_ads__account_report': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads', 'name': 'snapchat_ads__account_report', 'resource_type': 'model', 'package_name': 'snapchat_ads', 'path': 'snapchat_ads__account_report.sql', 'original_file_path': 'models\\snapchat_ads__account_report.sql', 'unique_id': 'model.snapchat_ads.snapchat_ads__account_report', 'fqn': ['snapchat_ads', 'snapchat_ads__account_report'], 'alias': 'snapchat_ads__account_report', 'checksum': {'name': 'sha256', 'checksum': '712da861e6b20cf879f1f5c936329cbfaf3a0e98728c707d692405b5629df197'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily performance of a Snapchat ad account.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_account_id': {'name': 'ad_account_id', 'description': 'The ID of the account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_account_name': {'name': 'ad_account_name', 'description': 'The name of the account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': 'The current used by the account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend on the ad in the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions the ad had on the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'swipes': {'name': 'swipes', 'description': 'The number of swipes the ad had on the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'snapchat_ads://models\\snapchat.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433486.9837668, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads`.`snapchat_ads__account_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nwith ad_hourly as (\n\n    select *\n    from {{ var('ad_hourly_report') }}\n\n), account as (\n\n    select *\n    from {{ var('ad_account_history') }}\n    where is_most_recent_record = true\n\n), ads as (\n\n    select *\n    from {{ var('ad_history') }}\n    where is_most_recent_record = true\n\n), ad_squads as (\n\n    select *\n    from {{ var('ad_squad_history') }}\n    where is_most_recent_record = true\n\n), campaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record = true\n\n\n), aggregated as (\n\n    select\n        cast(ad_hourly.date_hour as date) as date_day,\n        account.ad_account_id,\n        account.ad_account_name,\n        account.currency,\n        sum(ad_hourly.swipes) as swipes,\n        sum(ad_hourly.impressions) as impressions,\n        round(sum(ad_hourly.spend),2) as spend\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='snapchat_ads__ad_hourly_passthrough_metrics', transform = 'sum') }}\n    \n    from ad_hourly\n    left join ads \n        on ad_hourly.ad_id = ads.ad_id\n    left join ad_squads\n        on ads.ad_squad_id = ad_squads.ad_squad_id\n    left join campaigns\n        on ad_squads.campaign_id = campaigns.campaign_id\n    left join account\n        on campaigns.ad_account_id = account.ad_account_id\n\n    {{ dbt_utils.group_by(4) }}\n\n)\n\nselect *\nfrom aggregated", 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_hourly_report'], ['stg_snapchat_ads__ad_account_history'], ['stg_snapchat_ads__ad_history'], ['stg_snapchat_ads__ad_squad_history'], ['stg_snapchat_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report', 'model.snapchat_ads_source.stg_snapchat_ads__ad_account_history', 'model.snapchat_ads_source.stg_snapchat_ads__ad_history', 'model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history', 'model.snapchat_ads_source.stg_snapchat_ads__campaign_history']}, 'compiled_path': None}, 'model.snapchat_ads.snapchat_ads__ad_report': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads', 'name': 'snapchat_ads__ad_report', 'resource_type': 'model', 'package_name': 'snapchat_ads', 'path': 'snapchat_ads__ad_report.sql', 'original_file_path': 'models\\snapchat_ads__ad_report.sql', 'unique_id': 'model.snapchat_ads.snapchat_ads__ad_report', 'fqn': ['snapchat_ads', 'snapchat_ads__ad_report'], 'alias': 'snapchat_ads__ad_report', 'checksum': {'name': 'sha256', 'checksum': '883a24dba7248457561b24e845d2e8beec4fd361a2a8aef051b5cb01305f48fe'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily performance of a Snapchat ad account.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_id': {'name': 'ad_id', 'description': 'The ID of the ad in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_account_id': {'name': 'ad_account_id', 'description': 'The ID of the account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_account_name': {'name': 'ad_account_name', 'description': 'The name of the account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_name': {'name': 'ad_name', 'description': 'The name of the ad in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': 'The current used by the account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend on the ad in the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions the ad had on the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'swipes': {'name': 'swipes', 'description': 'The number of swipes the ad had on the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'snapchat_ads://models\\snapchat.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433486.985774, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads`.`snapchat_ads__ad_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nwith ad_hourly as (\n\n    select *\n    from {{ var('ad_hourly_report') }}\n\n), creatives as (\n\n    select *\n    from {{ ref('snapchat_ads__creative_history_prep') }}\n\n), account as (\n\n    select *\n    from {{ var('ad_account_history') }}\n    where is_most_recent_record = true\n\n), ads as (\n\n    select *\n    from {{ var('ad_history') }}\n    where is_most_recent_record = true\n\n), aggregated as (\n\n    select\n        cast(ad_hourly.date_hour as date) as date_day,\n        account.ad_account_id,\n        account.ad_account_name,\n        ad_hourly.ad_id,\n        ads.ad_name,\n        account.currency,\n        sum(ad_hourly.swipes) as swipes,\n        sum(ad_hourly.impressions) as impressions,\n        round(sum(ad_hourly.spend),2) as spend\n        \n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='snapchat_ads__ad_hourly_passthrough_metrics', transform = 'sum') }}\n    \n    from ad_hourly\n    left join ads \n        on ad_hourly.ad_id = ads.ad_id\n    left join creatives\n        on ads.creative_id = creatives.creative_id\n    left join account\n        on creatives.ad_account_id = account.ad_account_id\n    \n    {{ dbt_utils.group_by(6) }}\n\n)\n\nselect *\nfrom aggregated", 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_hourly_report'], ['snapchat_ads__creative_history_prep'], ['stg_snapchat_ads__ad_account_history'], ['stg_snapchat_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report', 'model.snapchat_ads.snapchat_ads__creative_history_prep', 'model.snapchat_ads_source.stg_snapchat_ads__ad_account_history', 'model.snapchat_ads_source.stg_snapchat_ads__ad_history']}, 'compiled_path': None}, 'model.snapchat_ads.snapchat_ads__ad_squad_report': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads', 'name': 'snapchat_ads__ad_squad_report', 'resource_type': 'model', 'package_name': 'snapchat_ads', 'path': 'snapchat_ads__ad_squad_report.sql', 'original_file_path': 'models\\snapchat_ads__ad_squad_report.sql', 'unique_id': 'model.snapchat_ads.snapchat_ads__ad_squad_report', 'fqn': ['snapchat_ads', 'snapchat_ads__ad_squad_report'], 'alias': 'snapchat_ads__ad_squad_report', 'checksum': {'name': 'sha256', 'checksum': '6d33fd85d1fc074fd8ba3f52b028d3b6f97d8e33c77bcd1fa5795527170a065a'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily performance of a Snapchat ad squad.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_squad_id': {'name': 'ad_squad_id', 'description': 'The ID of the ad squad in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_account_id': {'name': 'ad_account_id', 'description': 'The ID of the account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_account_name': {'name': 'ad_account_name', 'description': 'The name of the account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID of the campaign in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the campaign in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_squad_name': {'name': 'ad_squad_name', 'description': 'The name of the ad squad in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': 'The current used by the account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend on the ad in the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions the ad had on the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'swipes': {'name': 'swipes', 'description': 'The number of swipes the ad had on the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'snapchat_ads://models\\snapchat.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433486.9933734, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads`.`snapchat_ads__ad_squad_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nwith ad_squad_hourly as (\n\n    select *\n    from {{ var('ad_squad_hourly_report') }}\n\n), account as (\n\n    select *\n    from {{ var('ad_account_history') }}\n    where is_most_recent_record = true\n\n), ad_squads as (\n\n    select *\n    from {{ var('ad_squad_history') }}\n    where is_most_recent_record = true\n\n), campaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record = true\n\n\n), aggregated as (\n\n    select\n        cast(ad_squad_hourly.date_hour as date) as date_day,\n        account.ad_account_id,\n        account.ad_account_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        ad_squad_hourly.ad_squad_id,\n        ad_squads.ad_squad_name,\n        account.currency,\n        sum(ad_squad_hourly.swipes) as swipes,\n        sum(ad_squad_hourly.impressions) as impressions,\n        round(sum(ad_squad_hourly.spend),2) as spend\n        \n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='snapchat_ads__ad_squad_hourly_passthrough_metrics', transform = 'sum') }}\n    \n    from ad_squad_hourly\n    left join ad_squads\n        on ad_squad_hourly.ad_squad_id = ad_squads.ad_squad_id\n    left join campaigns\n        on ad_squads.campaign_id = campaigns.campaign_id\n    left join account\n        on campaigns.ad_account_id = account.ad_account_id\n    \n    {{ dbt_utils.group_by(8) }}\n\n)\n\nselect *\nfrom aggregated", 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_squad_hourly_report'], ['stg_snapchat_ads__ad_account_history'], ['stg_snapchat_ads__ad_squad_history'], ['stg_snapchat_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report', 'model.snapchat_ads_source.stg_snapchat_ads__ad_account_history', 'model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history', 'model.snapchat_ads_source.stg_snapchat_ads__campaign_history']}, 'compiled_path': None}, 'model.snapchat_ads.snapchat_ads__campaign_report': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads', 'name': 'snapchat_ads__campaign_report', 'resource_type': 'model', 'package_name': 'snapchat_ads', 'path': 'snapchat_ads__campaign_report.sql', 'original_file_path': 'models\\snapchat_ads__campaign_report.sql', 'unique_id': 'model.snapchat_ads.snapchat_ads__campaign_report', 'fqn': ['snapchat_ads', 'snapchat_ads__campaign_report'], 'alias': 'snapchat_ads__campaign_report', 'checksum': {'name': 'sha256', 'checksum': '37a0ae79a3b9a6455f3c7f6d5c83ca1ab54ae0fc2b2c103c981a43e0744fdc88'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily performance of a Snapchat campaign.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID of the campaign in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_account_id': {'name': 'ad_account_id', 'description': 'The ID of the account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_account_name': {'name': 'ad_account_name', 'description': 'The name of the account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the campaign in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': 'The current used by the account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend on the ad in the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions the ad had on the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'swipes': {'name': 'swipes', 'description': 'The number of swipes the ad had on the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'snapchat_ads://models\\snapchat.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433486.9903738, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads`.`snapchat_ads__campaign_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nwith campaign_hourly as (\n\n    select *\n    from {{ var('campaign_hourly_report') }}\n\n), account as (\n\n    select *\n    from {{ var('ad_account_history') }}\n    where is_most_recent_record = true\n\n), campaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record = true\n\n\n), aggregated as (\n\n    select\n        cast(campaign_hourly.date_hour as date) as date_day,\n        account.ad_account_id,\n        account.ad_account_name,\n        campaign_hourly.campaign_id,\n        campaigns.campaign_name,\n        account.currency,\n        sum(campaign_hourly.swipes) as swipes,\n        sum(campaign_hourly.impressions) as impressions,\n        round(sum(campaign_hourly.spend),2) as spend\n        \n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='snapchat_ads__campaign_hourly_report_passthrough_metrics', transform = 'sum') }}\n    \n    from campaign_hourly\n    left join campaigns\n        on campaign_hourly.campaign_id = campaigns.campaign_id\n    left join account\n        on campaigns.ad_account_id = account.ad_account_id\n    \n    {{ dbt_utils.group_by(6) }}\n\n)\n\nselect *\nfrom aggregated", 'language': 'sql', 'refs': [['stg_snapchat_ads__campaign_hourly_report'], ['stg_snapchat_ads__ad_account_history'], ['stg_snapchat_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report', 'model.snapchat_ads_source.stg_snapchat_ads__ad_account_history', 'model.snapchat_ads_source.stg_snapchat_ads__campaign_history']}, 'compiled_path': None}, 'model.snapchat_ads.snapchat_ads__url_report': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads', 'name': 'snapchat_ads__url_report', 'resource_type': 'model', 'package_name': 'snapchat_ads', 'path': 'snapchat_ads__url_report.sql', 'original_file_path': 'models\\snapchat_ads__url_report.sql', 'unique_id': 'model.snapchat_ads.snapchat_ads__url_report', 'fqn': ['snapchat_ads', 'snapchat_ads__url_report'], 'alias': 'snapchat_ads__url_report', 'checksum': {'name': 'sha256', 'checksum': '5ef679cec36298aa943c64d752fd4f730f71b1ab20127e5bbbd5d1ad952131f4'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily performance of Snapchat ads that leverage urls.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_id': {'name': 'ad_id', 'description': 'The ID of the ad in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_squad_id': {'name': 'ad_squad_id', 'description': 'The ID of the ad squad in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID of the campaign in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_account_id': {'name': 'ad_account_id', 'description': 'The ID of the account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_account_name': {'name': 'ad_account_name', 'description': 'The name of the account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_name': {'name': 'ad_name', 'description': 'The name of the ad in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_squad_name': {'name': 'ad_squad_name', 'description': 'The name of the ad squad in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the campaign in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': 'The current used by the account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'base_url': {'name': 'base_url', 'description': 'The base URL of the ad, extracted from the web_view_url.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_host': {'name': 'url_host', 'description': 'The URL host of the ad, extracted from the web_view_url.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_path': {'name': 'url_path', 'description': 'The URL path of the ad, extracted from the web_view_url.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_source': {'name': 'utm_source', 'description': 'The utm_source parameter of the ad, extracted from the web_view_url.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_medium': {'name': 'utm_medium', 'description': 'The utm_medium parameter of the ad, extracted from the web_view_url.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_campaign': {'name': 'utm_campaign', 'description': 'The utm_campaign parameter of the ad, extracted from the web_view_url.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_content': {'name': 'utm_content', 'description': 'The utm_content parameter of the ad, extracted from the web_view_url.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_term': {'name': 'utm_term', 'description': 'The utm_term parameter of the ad, extracted from the web_view_url.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend on the ad in the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions the ad had on the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'swipes': {'name': 'swipes', 'description': 'The number of swipes the ad had on the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'snapchat_ads://models\\snapchat.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433486.9989486, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads`.`snapchat_ads__url_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nwith ad_hourly as (\n\n    select *\n    from {{ var('ad_hourly_report') }}\n\n), creatives as (\n\n    select *\n    from {{ ref('snapchat_ads__creative_history_prep') }}\n\n), account as (\n\n    select *\n    from {{ var('ad_account_history') }}\n    where is_most_recent_record = true\n\n), ads as (\n\n    select *\n    from {{ var('ad_history') }}\n    where is_most_recent_record = true\n\n), ad_squads as (\n\n    select *\n    from {{ var('ad_squad_history') }}\n    where is_most_recent_record = true\n\n), campaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record = true\n\n\n), aggregated as (\n\n    select\n        cast(ad_hourly.date_hour as date) as date_day,\n        account.ad_account_id,\n        account.ad_account_name,\n        ad_hourly.ad_id,\n        ads.ad_name,\n        ad_squads.ad_squad_id,\n        ad_squads.ad_squad_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        account.currency,\n        creatives.base_url,\n        creatives.url_host,\n        creatives.url_path,\n        creatives.utm_source,\n        creatives.utm_medium,\n        creatives.utm_campaign,\n        creatives.utm_content,\n        creatives.utm_term,\n        sum(ad_hourly.swipes) as swipes,\n        sum(ad_hourly.impressions) as impressions,\n        round(sum(ad_hourly.spend),2) as spend\n        \n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='snapchat_ads__ad_hourly_passthrough_metrics', transform = 'sum') }}\n    \n    from ad_hourly\n    left join ads \n        on ad_hourly.ad_id = ads.ad_id\n    left join creatives\n        on ads.creative_id = creatives.creative_id\n    left join ad_squads\n        on ads.ad_squad_id = ad_squads.ad_squad_id\n    left join campaigns\n        on ad_squads.campaign_id = campaigns.campaign_id\n    left join account\n        on creatives.ad_account_id = account.ad_account_id\n\n    {% if var('ad_reporting__url_report__using_null_filter', True) %}\n        -- We only want utm ads to populate this report. Therefore, we filter where url ads are populated.\n        where creatives.url is not null\n    {% endif %}\n\n    {{ dbt_utils.group_by(18) }}\n\n)\n\nselect *\nfrom aggregated", 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_hourly_report'], ['snapchat_ads__creative_history_prep'], ['stg_snapchat_ads__ad_account_history'], ['stg_snapchat_ads__ad_history'], ['stg_snapchat_ads__ad_squad_history'], ['stg_snapchat_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report', 'model.snapchat_ads.snapchat_ads__creative_history_prep', 'model.snapchat_ads_source.stg_snapchat_ads__ad_account_history', 'model.snapchat_ads_source.stg_snapchat_ads__ad_history', 'model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history', 'model.snapchat_ads_source.stg_snapchat_ads__campaign_history']}, 'compiled_path': None}, 'model.snapchat_ads.snapchat_ads__creative_history_prep': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads', 'name': 'snapchat_ads__creative_history_prep', 'resource_type': 'model', 'package_name': 'snapchat_ads', 'path': 'intermediate\\snapchat_ads__creative_history_prep.sql', 'original_file_path': 'models\\intermediate\\snapchat_ads__creative_history_prep.sql', 'unique_id': 'model.snapchat_ads.snapchat_ads__creative_history_prep', 'fqn': ['snapchat_ads', 'intermediate', 'snapchat_ads__creative_history_prep'], 'alias': 'snapchat_ads__creative_history_prep', 'checksum': {'name': 'sha256', 'checksum': '96937fe8400a512c70ff7cf59a4f215276169b68df7c5bdd67b9a0c1234d86e8'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'ephemeral', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads', 'materialized': 'ephemeral', 'enabled': True}, 'created_at': 1694433483.9295022, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': '{{ config(enabled=var(\'ad_reporting__snapchat_ads_enabled\', true)) }}\nwith base as (\n\n    select *\n    from {{ var(\'creative_history\') }}\n    where is_most_recent_record = true\n\n), url_tags as (\n\n    select *\n    from {{ var(\'creative_url_tag_history\') }}\n    where is_most_recent_record = true\n\n), url_tags_pivoted as (\n\n    select \n        creative_id,\n        min(case when param_key = \'utm_source\' then param_value end) as utm_source,\n        min(case when param_key = \'utm_medium\' then param_value end) as utm_medium,\n        min(case when param_key = \'utm_campaign\' then param_value end) as utm_campaign,\n        min(case when param_key = \'utm_content\' then param_value end) as utm_content,\n        min(case when param_key = \'utm_term\' then param_value end) as utm_term\n    from url_tags\n    group by 1\n\n), fields as (\n\n    select\n        base.creative_id,\n        base.ad_account_id,\n        base.creative_name,\n        base.url,\n        {{ dbt.split_part(\'base.url\', "\'?\'", 1) }} as base_url,\n        {{ dbt_utils.get_url_host(\'base.url\') }} as url_host,\n        \'/\' || {{ dbt_utils.get_url_path(\'base.url\') }} as url_path,\n        coalesce(url_tags_pivoted.utm_source, {{ dbt_utils.get_url_parameter(\'base.url\', \'utm_source\') }}) as utm_source,\n        coalesce(url_tags_pivoted.utm_medium, {{ dbt_utils.get_url_parameter(\'base.url\', \'utm_medium\') }}) as utm_medium,\n        coalesce(url_tags_pivoted.utm_campaign, {{ dbt_utils.get_url_parameter(\'base.url\', \'utm_campaign\') }}) as utm_campaign,\n        coalesce(url_tags_pivoted.utm_content, {{ dbt_utils.get_url_parameter(\'base.url\', \'utm_content\') }}) as utm_content,\n        coalesce(url_tags_pivoted.utm_term, {{ dbt_utils.get_url_parameter(\'base.url\', \'utm_term\') }}) as utm_term\n    from base\n    left join url_tags_pivoted\n        on base.creative_id = url_tags_pivoted.creative_id\n\n)\n\nselect *\nfrom fields', 'language': 'sql', 'refs': [['stg_snapchat_ads__creative_history'], ['stg_snapchat_ads__creative_url_tag_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.split_part', 'macro.dbt_utils.get_url_host', 'macro.dbt_utils.get_url_path', 'macro.dbt_utils.get_url_parameter'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__creative_history', 'model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__ad_account_history': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__ad_account_history', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'stg_snapchat_ads__ad_account_history.sql', 'original_file_path': 'models\\stg_snapchat_ads__ad_account_history.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__ad_account_history', 'fqn': ['snapchat_ads_source', 'stg_snapchat_ads__ad_account_history'], 'alias': 'stg_snapchat_ads__ad_account_history', 'checksum': {'name': 'sha256', 'checksum': 'b3c1ecb6e139e06bd3242b0ae35973de841a51fc916e32db5ee62a61c69da760'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents a historic version of an ad account in Snapchat.', 'columns': {'_fivetran_synced': {'name': '_fivetran_synced', 'description': 'When the record was last synced by Fivetran.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_account_id': {'name': 'ad_account_id', 'description': 'The ID of the account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_account_name': {'name': 'ad_account_name', 'description': 'The name of the account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser': {'name': 'advertiser', 'description': 'Name of advertiser', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': 'Currency used by account', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'created_at': {'name': 'created_at', 'description': 'Created at timestamp', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_at': {'name': 'updated_at', 'description': 'Timestamp of when the record was updated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'timezone': {'name': 'timezone', 'description': 'Account timezone', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_most_recent_record': {'name': 'is_most_recent_record', 'description': 'Boolean representing whether a record is the most recent version of that record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'snapchat_ads_source://models\\stg_snapchat.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.0870197, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__ad_account_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_snapchat_ads__ad_account_history_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_snapchat_ads__ad_account_history_tmp')),\n                staging_columns=get_ad_account_history_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select \n        id as ad_account_id,\n        name as ad_account_name,\n        cast (created_at as {{ dbt.type_timestamp() }}) as created_at,\n        advertiser, \n        currency,\n        timezone,\n        cast (_fivetran_synced as {{ dbt.type_timestamp() }}) as _fivetran_synced,\n        cast (updated_at as {{ dbt.type_timestamp() }}) as updated_at,\n        row_number() over (partition by id order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_account_history_tmp'], ['stg_snapchat_ads__ad_account_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.snapchat_ads_source.get_ad_account_history_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_timestamp'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_account_history_tmp', 'model.snapchat_ads_source.stg_snapchat_ads__ad_account_history_tmp']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__ad_history': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__ad_history', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'stg_snapchat_ads__ad_history.sql', 'original_file_path': 'models\\stg_snapchat_ads__ad_history.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__ad_history', 'fqn': ['snapchat_ads_source', 'stg_snapchat_ads__ad_history'], 'alias': 'stg_snapchat_ads__ad_history', 'checksum': {'name': 'sha256', 'checksum': 'b9f87bec0fe3fe17b30ccd2de99f8cb85d764a3867d0c7d1876f60a91b717445'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents a historic version of an ad in Snapchat.', 'columns': {'_fivetran_synced': {'name': '_fivetran_synced', 'description': 'When the record was last synced by Fivetran.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_id': {'name': 'ad_id', 'description': 'The ID of the ad in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_squad_id': {'name': 'ad_squad_id', 'description': 'The ID of the related ad squad in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'creative_id': {'name': 'creative_id', 'description': 'The ID of the related creative in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_name': {'name': 'ad_name', 'description': 'The name of the ad in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'created_at': {'name': 'created_at', 'description': 'Created at timestamp', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_at': {'name': 'updated_at', 'description': 'Timestamp of when the record was updated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_most_recent_record': {'name': 'is_most_recent_record', 'description': 'Boolean representing whether a record is the most recent version of that record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'snapchat_ads_source://models\\stg_snapchat.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.0897043, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__ad_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_snapchat_ads__ad_history_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_snapchat_ads__ad_history_tmp')),\n                staging_columns=get_ad_history_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select \n        id as ad_id,\n        name as ad_name,\n        cast (created_at as {{ dbt.type_timestamp() }}) as created_at,\n        ad_squad_id,\n        creative_id,\n        cast (_fivetran_synced as {{ dbt.type_timestamp() }}) as _fivetran_synced,\n        cast (updated_at as {{ dbt.type_timestamp() }}) as updated_at,\n        row_number() over (partition by id order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_history_tmp'], ['stg_snapchat_ads__ad_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.snapchat_ads_source.get_ad_history_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_timestamp'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_history_tmp', 'model.snapchat_ads_source.stg_snapchat_ads__ad_history_tmp']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__ad_hourly_report', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'stg_snapchat_ads__ad_hourly_report.sql', 'original_file_path': 'models\\stg_snapchat_ads__ad_hourly_report.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report', 'fqn': ['snapchat_ads_source', 'stg_snapchat_ads__ad_hourly_report'], 'alias': 'stg_snapchat_ads__ad_hourly_report', 'checksum': {'name': 'sha256', 'checksum': 'ce7ad13fe4751d9607130fc2995b208171cfd944ac7fbd8a499209ae6a75aba2'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents an hourly performance summary for an ad in Snapchat.', 'columns': {'ad_id': {'name': 'ad_id', 'description': 'The ID of the ad that the report relates to in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_hour': {'name': 'date_hour', 'description': 'The hour that the report relates to.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'attachment_quartile_1': {'name': 'attachment_quartile_1', 'description': 'Number of times your Long Form Video was viewed to 25%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'attachment_quartile_2': {'name': 'attachment_quartile_2', 'description': 'Number of times your Long Form Video was viewed to 50%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'attachment_quartile_3': {'name': 'attachment_quartile_3', 'description': 'Number of times your Long Form Video was viewed to 75%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'attachment_total_view_time': {'name': 'attachment_total_view_time', 'description': 'Total time Snapchatters spent on the attachment (HH:MM:SS)', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'attachment_view_completion': {'name': 'attachment_view_completion', 'description': 'The number of times your Long Form Video was viewed to completion (97% )', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'quartile_1': {'name': 'quartile_1', 'description': 'The number of times your video ad was viewed to 25%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'quartile_2': {'name': 'quartile_2', 'description': 'The number of times your video ad was viewed to 50%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'quartile_3': {'name': 'quartile_3', 'description': 'The number of times your video ad was viewed to 75%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'saves': {'name': 'saves', 'description': 'Number of times a lens/filter was saved to Memories', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'shares': {'name': 'shares', 'description': 'Number of times a lens/filter was shared in a Chat or Story', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'screen_time': {'name': 'screen_time', 'description': 'The number of milli seconds spent watching your ad across all paid impressions. Screen time starts recording as soon as the media is fully rendered on the device and the autoplay video starts', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views': {'name': 'video_views', 'description': 'The number of times your video was watched at least 2 seconds or swiped up, whichever comes first', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'view_completion': {'name': 'view_completion', 'description': 'The number of times your video ad was viewed to completion (97% )', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'view_time': {'name': 'view_time', 'description': 'The number of milli seconds spent watching your ad across all users reached.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions for an ad in the hour of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The amount of spend for an ad in the hour of the record converted from micros.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'swipes': {'name': 'swipes', 'description': 'The number of swipes for an ad in the hour of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'snapchat_ads_source://models\\stg_snapchat.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.0937033, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__ad_hourly_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_snapchat_ads__ad_hourly_report_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_snapchat_ads__ad_hourly_report_tmp')),\n                staging_columns=get_ad_hourly_report_columns()\n            )\n        }}        \n    from base\n),\n\nfinal as (\n    \n    select \n        ad_id,\n        cast (date as {{ dbt.type_timestamp() }}) as date_hour,\n        attachment_quartile_1,\n        attachment_quartile_2,\n        attachment_quartile_3,\n        (attachment_total_view_time_millis / 1000000.0) as attachment_total_view_time,\n        attachment_view_completion,\n        quartile_1,\n        quartile_2,\n        quartile_3,\n        saves,\n        shares,\n        (screen_time_millis / 1000000.0) as screen_time,\n        video_views,\n        view_completion,\n        (view_time_millis / 1000000.0) as view_time,\n        impressions,\n        (spend / 1000000.0) as spend,\n        swipes\n\n        {{ fivetran_utils.fill_pass_through_columns('snapchat_ads__ad_hourly_passthrough_metrics') }}\n\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_hourly_report_tmp'], ['stg_snapchat_ads__ad_hourly_report_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.snapchat_ads_source.get_ad_hourly_report_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_timestamp', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report_tmp', 'model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report_tmp']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__ad_squad_history', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'stg_snapchat_ads__ad_squad_history.sql', 'original_file_path': 'models\\stg_snapchat_ads__ad_squad_history.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history', 'fqn': ['snapchat_ads_source', 'stg_snapchat_ads__ad_squad_history'], 'alias': 'stg_snapchat_ads__ad_squad_history', 'checksum': {'name': 'sha256', 'checksum': 'b78ca2d715716a88b33e55219ef00243ae62fa062be779ccbd0e4ace8351e903'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents a historic version of an ad squad in Snapchat.', 'columns': {'_fivetran_synced': {'name': '_fivetran_synced', 'description': 'When the record was last synced by Fivetran.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_squad_id': {'name': 'ad_squad_id', 'description': 'The ID of the ad squad in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_squad_name': {'name': 'ad_squad_name', 'description': 'The name of the ad squad in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'created_at': {'name': 'created_at', 'description': 'Created at timestamp.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_at': {'name': 'updated_at', 'description': 'Timestamp of when the record was updated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID of the related campaign in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_most_recent_record': {'name': 'is_most_recent_record', 'description': 'Boolean representing whether a record is the most recent version of that record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'snapchat_ads_source://models\\stg_snapchat.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.0957031, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__ad_squad_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_snapchat_ads__ad_squad_history_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_snapchat_ads__ad_squad_history_tmp')),\n                staging_columns=get_ad_squad_history_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n\n    select \n        id as ad_squad_id,\n        name as ad_squad_name,\n        cast (created_at as {{ dbt.type_timestamp() }}) as created_at,\n        campaign_id,\n        cast (_fivetran_synced as {{ dbt.type_timestamp() }}) as _fivetran_synced,\n        cast (updated_at as {{ dbt.type_timestamp() }}) as updated_at,\n        row_number() over (partition by id order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_squad_history_tmp'], ['stg_snapchat_ads__ad_squad_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.snapchat_ads_source.get_ad_squad_history_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_timestamp'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history_tmp', 'model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history_tmp']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__ad_squad_hourly_report', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'stg_snapchat_ads__ad_squad_hourly_report.sql', 'original_file_path': 'models\\stg_snapchat_ads__ad_squad_hourly_report.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report', 'fqn': ['snapchat_ads_source', 'stg_snapchat_ads__ad_squad_hourly_report'], 'alias': 'stg_snapchat_ads__ad_squad_hourly_report', 'checksum': {'name': 'sha256', 'checksum': 'aad7890ff2546a5611d55ff7393a3580ffae73d4f1036f158589bd8c20dd36e7'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents a historic version of an ad in Snapchat.', 'columns': {'ad_squad_id': {'name': 'ad_squad_id', 'description': 'ID of the ad squad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_hour': {'name': 'date_hour', 'description': 'The hour that the report relates to.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'attachment_quartile_1': {'name': 'attachment_quartile_1', 'description': 'Number of times your Long Form Video was viewed to 25%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'attachment_quartile_2': {'name': 'attachment_quartile_2', 'description': 'Number of times your Long Form Video was viewed to 50%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'attachment_quartile_3': {'name': 'attachment_quartile_3', 'description': 'Number of times your Long Form Video was viewed to 75%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'attachment_total_view_time': {'name': 'attachment_total_view_time', 'description': 'Total time Snapchatters spent on the attachment (HH:MM:SS)', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'attachment_view_completion': {'name': 'attachment_view_completion', 'description': 'The number of times your Long Form Video was viewed to completion (97% )', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'quartile_1': {'name': 'quartile_1', 'description': 'The number of times your video ad was viewed to 25%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'quartile_2': {'name': 'quartile_2', 'description': 'The number of times your video ad was viewed to 50%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'quartile_3': {'name': 'quartile_3', 'description': 'The number of times your video ad was viewed to 75%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'saves': {'name': 'saves', 'description': 'Number of times a lens/filter was saved to Memories', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'shares': {'name': 'shares', 'description': 'Number of times a lens/filter was shared in a Chat or Story', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'screen_time': {'name': 'screen_time', 'description': 'The number of milli seconds spent watching your ad across all paid impressions. Screen time starts recording as soon as the media is fully rendered on the device and the autoplay video starts', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views': {'name': 'video_views', 'description': 'The number of times your video was watched at least 2 seconds or swiped up, whichever comes first', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'view_completion': {'name': 'view_completion', 'description': 'The number of times your video ad was viewed to completion (97% )', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'view_time': {'name': 'view_time', 'description': 'The number of milli seconds spent watching your ad across all users reached.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions for an ad in the hour of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The amount of spend for an ad in the hour of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'swipes': {'name': 'swipes', 'description': 'The number of swipes for an ad in the hour of the record. Swipes are when your ad was swiped up on or the CTA was tapped to view the attachment below.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'snapchat_ads_source://models\\stg_snapchat.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.1023574, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__ad_squad_hourly_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_snapchat_ads__ad_squad_hourly_report_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_snapchat_ads__ad_squad_hourly_report_tmp')),\n                staging_columns=get_ad_squad_hourly_report_columns()\n            )\n        }}        \n    from base\n),\n\nfinal as (\n    \n    select \n        ad_squad_id,\n        cast (date as {{ dbt.type_timestamp() }}) as date_hour,\n        attachment_quartile_1,\n        attachment_quartile_2,\n        attachment_quartile_3,\n        (attachment_total_view_time_millis / 1000000.0) as attachment_total_view_time,\n        attachment_view_completion,\n        quartile_1,\n        quartile_2,\n        quartile_3,\n        saves,\n        shares,\n        (screen_time_millis / 1000000.0) as screen_time,\n        video_views,\n        view_completion,\n        (view_time_millis / 1000000.0) as view_time,\n        impressions,\n        (spend / 1000000.0) as spend,\n        swipes\n\n        {{ fivetran_utils.fill_pass_through_columns('snapchat_ads__ad_squad_hourly_passthrough_metrics') }}\n    \n    from fields\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_squad_hourly_report_tmp'], ['stg_snapchat_ads__ad_squad_hourly_report_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.snapchat_ads_source.get_ad_squad_hourly_report_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_timestamp', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report_tmp', 'model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report_tmp']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__campaign_history': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__campaign_history', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'stg_snapchat_ads__campaign_history.sql', 'original_file_path': 'models\\stg_snapchat_ads__campaign_history.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__campaign_history', 'fqn': ['snapchat_ads_source', 'stg_snapchat_ads__campaign_history'], 'alias': 'stg_snapchat_ads__campaign_history', 'checksum': {'name': 'sha256', 'checksum': 'a8a584b7e724b5a0d6b89278795b3d2a9cfc45aa83be000333e2acb288da179d'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents a historic version of a campaign in Snapchat.', 'columns': {'_fivetran_synced': {'name': '_fivetran_synced', 'description': 'When the record was last synced by Fivetran.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The id of the campaign in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the campaign in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_account_id': {'name': 'ad_account_id', 'description': 'The ID of the related ad account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'created_at': {'name': 'created_at', 'description': 'Created at timestamp.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_at': {'name': 'updated_at', 'description': 'Timestamp of when the record was updated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_most_recent_record': {'name': 'is_most_recent_record', 'description': 'Boolean representing whether a record is the most recent version of that record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'snapchat_ads_source://models\\stg_snapchat.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.1043522, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__campaign_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_snapchat_ads__campaign_history_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_snapchat_ads__campaign_history_tmp')),\n                staging_columns=get_campaign_history_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select\n        id as campaign_id,\n        ad_account_id,\n        cast (created_at as {{ dbt.type_timestamp() }}) as created_at,\n        name as campaign_name,\n        cast (_fivetran_synced as {{ dbt.type_timestamp() }}) as _fivetran_synced,\n        cast (updated_at as {{ dbt.type_timestamp() }}) as updated_at,\n        row_number() over (partition by id order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_snapchat_ads__campaign_history_tmp'], ['stg_snapchat_ads__campaign_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.snapchat_ads_source.get_campaign_history_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_timestamp'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__campaign_history_tmp', 'model.snapchat_ads_source.stg_snapchat_ads__campaign_history_tmp']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__campaign_hourly_report', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'stg_snapchat_ads__campaign_hourly_report.sql', 'original_file_path': 'models\\stg_snapchat_ads__campaign_hourly_report.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report', 'fqn': ['snapchat_ads_source', 'stg_snapchat_ads__campaign_hourly_report'], 'alias': 'stg_snapchat_ads__campaign_hourly_report', 'checksum': {'name': 'sha256', 'checksum': 'b8abf4f1e0b0aa8d163a63e275f064d72d58b1f1ccb72b6c0a28d90dca2ecf38'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents a historic version of an ad in Snapchat.', 'columns': {'campaign_id': {'name': 'campaign_id', 'description': 'ID of campaign', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_hour': {'name': 'date_hour', 'description': 'The hour that the report relates to.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'attachment_quartile_1': {'name': 'attachment_quartile_1', 'description': 'Number of times your Long Form Video was viewed to 25%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'attachment_quartile_2': {'name': 'attachment_quartile_2', 'description': 'Number of times your Long Form Video was viewed to 50%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'attachment_quartile_3': {'name': 'attachment_quartile_3', 'description': 'Number of times your Long Form Video was viewed to 75%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'attachment_total_view_time': {'name': 'attachment_total_view_time', 'description': 'Total time Snapchatters spent on the attachment (HH:MM:SS)', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'attachment_view_completion': {'name': 'attachment_view_completion', 'description': 'The number of times your Long Form Video was viewed to completion (97% )', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'quartile_1': {'name': 'quartile_1', 'description': 'The number of times your video ad was viewed to 25%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'quartile_2': {'name': 'quartile_2', 'description': 'The number of times your video ad was viewed to 50%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'quartile_3': {'name': 'quartile_3', 'description': 'The number of times your video ad was viewed to 75%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'saves': {'name': 'saves', 'description': 'Number of times a lens/filter was saved to Memories', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'shares': {'name': 'shares', 'description': 'Number of times a lens/filter was shared in a Chat or Story', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'screen_time': {'name': 'screen_time', 'description': 'The number of milli seconds spent watching your ad across all paid impressions. Screen time starts recording as soon as the media is fully rendered on the device and the autoplay video starts', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views': {'name': 'video_views', 'description': 'The number of times your video was watched at least 2 seconds or swiped up, whichever comes first', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'view_completion': {'name': 'view_completion', 'description': 'The number of times your video ad was viewed to completion (97% )', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'view_time': {'name': 'view_time', 'description': 'The number of milli seconds spent watching your ad across all users reached.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions for an ad in the hour of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The amount of spend for an ad in the hour of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'swipes': {'name': 'swipes', 'description': 'The number of swipes for an ad in the hour of the record. Swipes are when your ad was swiped up on or the CTA was tapped to view the attachment below.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'snapchat_ads_source://models\\stg_snapchat.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.1091142, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__campaign_hourly_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_snapchat_ads__campaign_hourly_report_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_snapchat_ads__campaign_hourly_report_tmp')),\n                staging_columns=get_campaign_hourly_report_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select \n        campaign_id,\n        cast (date as {{ dbt.type_timestamp() }}) as date_hour,\n        attachment_quartile_1,\n        attachment_quartile_2,\n        attachment_quartile_3,\n        (attachment_total_view_time_millis / 1000000.0) as attachment_total_view_time,\n        attachment_view_completion,\n        quartile_1,\n        quartile_2,\n        quartile_3,\n        saves,\n        shares,\n        (screen_time_millis / 1000000.0) as screen_time,\n        video_views,\n        view_completion,\n        (view_time_millis / 1000000.0) as view_time,\n        impressions,\n        (spend / 1000000.0) as spend,\n        swipes\n\n        {{ fivetran_utils.fill_pass_through_columns('snapchat_ads__campaign_hourly_report_passthrough_metrics') }}\n    \n    from fields\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_snapchat_ads__campaign_hourly_report_tmp'], ['stg_snapchat_ads__campaign_hourly_report_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.snapchat_ads_source.get_campaign_hourly_report_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_timestamp', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report_tmp', 'model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report_tmp']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__creative_history': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__creative_history', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'stg_snapchat_ads__creative_history.sql', 'original_file_path': 'models\\stg_snapchat_ads__creative_history.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__creative_history', 'fqn': ['snapchat_ads_source', 'stg_snapchat_ads__creative_history'], 'alias': 'stg_snapchat_ads__creative_history', 'checksum': {'name': 'sha256', 'checksum': '52f2479f057f755f7fca3153351bb4bbda4767ca96ed9379a2fa1ec30df6fb52'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents a historic version of a creative in Snapchat.', 'columns': {'_fivetran_synced': {'name': '_fivetran_synced', 'description': 'When the record was last synced by Fivetran.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'creative_id': {'name': 'creative_id', 'description': 'The ID of the creative in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'creative_name': {'name': 'creative_name', 'description': 'The name of the creative in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_account_id': {'name': 'ad_account_id', 'description': 'The ID of the related ad account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url': {'name': 'url', 'description': "The URL of the creative if the creative is of type 'web view'.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'created_at': {'name': 'created_at', 'description': 'Created at timestamp.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_at': {'name': 'updated_at', 'description': 'Timestamp of when the record was updated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_most_recent_record': {'name': 'is_most_recent_record', 'description': 'Boolean representing whether a record is the most recent version of that record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'snapchat_ads_source://models\\stg_snapchat.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.1121144, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__creative_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_snapchat_ads__creative_history_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_snapchat_ads__creative_history_tmp')),\n                staging_columns=get_creative_history_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select \n        id as creative_id,\n        cast (created_at as {{ dbt.type_timestamp() }}) as created_at,\n        ad_account_id,\n        name as creative_name,\n        web_view_url as url,\n        cast (_fivetran_synced as {{ dbt.type_timestamp() }}) as _fivetran_synced,\n        cast (updated_at as {{ dbt.type_timestamp() }}) as updated_at,\n        row_number() over (partition by id order by _fivetran_synced desc) =1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_snapchat_ads__creative_history_tmp'], ['stg_snapchat_ads__creative_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.snapchat_ads_source.get_creative_history_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_timestamp'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__creative_history_tmp', 'model.snapchat_ads_source.stg_snapchat_ads__creative_history_tmp']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__creative_url_tag_history', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'stg_snapchat_ads__creative_url_tag_history.sql', 'original_file_path': 'models\\stg_snapchat_ads__creative_url_tag_history.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history', 'fqn': ['snapchat_ads_source', 'stg_snapchat_ads__creative_url_tag_history'], 'alias': 'stg_snapchat_ads__creative_url_tag_history', 'checksum': {'name': 'sha256', 'checksum': 'ed5cc64860273e4d9198143e337401240d61e563e41e587369e82184ee3254f5'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents a URL paramter key-value pair for a creative in Snapchat.', 'columns': {'creative_id': {'name': 'creative_id', 'description': 'The ID of the related creative in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'param_key': {'name': 'param_key', 'description': 'The URL parameter key, i.e. UTM_SOURCE.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'param_value': {'name': 'param_value', 'description': 'The URL parameter value, i.e. Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_at': {'name': 'updated_at', 'description': 'Timestamp of when the record was updated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_most_recent_record': {'name': 'is_most_recent_record', 'description': 'Boolean representing whether a record is the most recent version of that record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'snapchat_ads_source://models\\stg_snapchat.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.114107, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__creative_url_tag_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_snapchat_ads__creative_url_tag_history_tmp') }}\n\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_snapchat_ads__creative_url_tag_history_tmp')),\n                staging_columns=get_creative_url_tag_history_columns()\n            )\n        }}\n        \n    from base\n),\n\nfinal as (\n    \n    select  \n        creative_id,\n        key as param_key,\n        value as param_value,\n        cast (updated_at as {{ dbt.type_timestamp() }}) as updated_at,\n        row_number() over (partition by creative_id, key order by updated_at desc) =1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_snapchat_ads__creative_url_tag_history_tmp'], ['stg_snapchat_ads__creative_url_tag_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.snapchat_ads_source.get_creative_url_tag_history_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_timestamp'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history_tmp', 'model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history_tmp']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__ad_account_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__ad_account_history_tmp', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'tmp\\stg_snapchat_ads__ad_account_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_snapchat_ads__ad_account_history_tmp.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__ad_account_history_tmp', 'fqn': ['snapchat_ads_source', 'tmp', 'stg_snapchat_ads__ad_account_history_tmp'], 'alias': 'stg_snapchat_ads__ad_account_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '92091ce537ab3d626fde67bcce6f168cb41ab6ee9975afa0551603e42cc5d78a'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433484.146224, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__ad_account_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nselect *\nfrom {{ var('ad_account_history') }}", 'language': 'sql', 'refs': [], 'sources': [['snapchat_ads', 'ad_account_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.snapchat_ads_source.snapchat_ads.ad_account_history']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__ad_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__ad_history_tmp', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'tmp\\stg_snapchat_ads__ad_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_snapchat_ads__ad_history_tmp.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__ad_history_tmp', 'fqn': ['snapchat_ads_source', 'tmp', 'stg_snapchat_ads__ad_history_tmp'], 'alias': 'stg_snapchat_ads__ad_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '3cbc363ef9fe699bcc42261d8eda6184c55f2574efa083ca7091aa5ddedd42e9'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433484.15351, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__ad_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nselect *\nfrom {{ var('ad_history') }}", 'language': 'sql', 'refs': [], 'sources': [['snapchat_ads', 'ad_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.snapchat_ads_source.snapchat_ads.ad_history']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__ad_hourly_report_tmp', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'tmp\\stg_snapchat_ads__ad_hourly_report_tmp.sql', 'original_file_path': 'models\\tmp\\stg_snapchat_ads__ad_hourly_report_tmp.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report_tmp', 'fqn': ['snapchat_ads_source', 'tmp', 'stg_snapchat_ads__ad_hourly_report_tmp'], 'alias': 'stg_snapchat_ads__ad_hourly_report_tmp', 'checksum': {'name': 'sha256', 'checksum': 'c1fd36fe859740eae7e8c35022731b4090dd0e6a0cc598f8ce7275134e500fe0'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433484.160198, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__ad_hourly_report_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nselect *\nfrom {{ var('ad_hourly_report') }}", 'language': 'sql', 'refs': [], 'sources': [['snapchat_ads', 'ad_hourly_report']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.snapchat_ads_source.snapchat_ads.ad_hourly_report']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__ad_squad_history_tmp', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'tmp\\stg_snapchat_ads__ad_squad_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_snapchat_ads__ad_squad_history_tmp.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history_tmp', 'fqn': ['snapchat_ads_source', 'tmp', 'stg_snapchat_ads__ad_squad_history_tmp'], 'alias': 'stg_snapchat_ads__ad_squad_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '20be450378d3826688fd5d75226187b30b17782d6ea922076111a4d6440598f9'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433484.1754222, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__ad_squad_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nselect *\nfrom {{ var('ad_squad_history') }}", 'language': 'sql', 'refs': [], 'sources': [['snapchat_ads', 'ad_squad_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.snapchat_ads_source.snapchat_ads.ad_squad_history']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__ad_squad_hourly_report_tmp', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'tmp\\stg_snapchat_ads__ad_squad_hourly_report_tmp.sql', 'original_file_path': 'models\\tmp\\stg_snapchat_ads__ad_squad_hourly_report_tmp.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report_tmp', 'fqn': ['snapchat_ads_source', 'tmp', 'stg_snapchat_ads__ad_squad_hourly_report_tmp'], 'alias': 'stg_snapchat_ads__ad_squad_hourly_report_tmp', 'checksum': {'name': 'sha256', 'checksum': 'aa1aa691bef011ccfd98f91b4b82a8838fab485131f0e17f53799f7c21bb09f3'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433484.1837356, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__ad_squad_hourly_report_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nselect *\nfrom {{ var('ad_squad_hourly_report') }}", 'language': 'sql', 'refs': [], 'sources': [['snapchat_ads', 'ad_squad_hourly_report']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.snapchat_ads_source.snapchat_ads.ad_squad_hourly_report']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__campaign_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__campaign_history_tmp', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'tmp\\stg_snapchat_ads__campaign_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_snapchat_ads__campaign_history_tmp.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__campaign_history_tmp', 'fqn': ['snapchat_ads_source', 'tmp', 'stg_snapchat_ads__campaign_history_tmp'], 'alias': 'stg_snapchat_ads__campaign_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '8ba400ddeeb2cf5c0cb71d6361ee8455d1a5272936dce07eaade1606a596cfdb'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433484.1903412, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__campaign_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nselect *\nfrom {{ var('campaign_history') }}", 'language': 'sql', 'refs': [], 'sources': [['snapchat_ads', 'campaign_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.snapchat_ads_source.snapchat_ads.campaign_history']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__campaign_hourly_report_tmp', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'tmp\\stg_snapchat_ads__campaign_hourly_report_tmp.sql', 'original_file_path': 'models\\tmp\\stg_snapchat_ads__campaign_hourly_report_tmp.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report_tmp', 'fqn': ['snapchat_ads_source', 'tmp', 'stg_snapchat_ads__campaign_hourly_report_tmp'], 'alias': 'stg_snapchat_ads__campaign_hourly_report_tmp', 'checksum': {'name': 'sha256', 'checksum': 'b18dc4fa023f874afa53107adf3b50bf02fa4ac757d01f176279822b37a3c1ee'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433484.1978676, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__campaign_hourly_report_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nselect *\nfrom {{ var('campaign_hourly_report') }}", 'language': 'sql', 'refs': [], 'sources': [['snapchat_ads', 'campaign_hourly_report']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.snapchat_ads_source.snapchat_ads.campaign_hourly_report']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__creative_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__creative_history_tmp', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'tmp\\stg_snapchat_ads__creative_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_snapchat_ads__creative_history_tmp.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__creative_history_tmp', 'fqn': ['snapchat_ads_source', 'tmp', 'stg_snapchat_ads__creative_history_tmp'], 'alias': 'stg_snapchat_ads__creative_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '97f2460634e450cdce998385dac55f4754305b6c9ea9c8756b1d8cd6ef961e4d'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433484.2040768, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__creative_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nselect *\nfrom {{ var('creative_history') }}", 'language': 'sql', 'refs': [], 'sources': [['snapchat_ads', 'creative_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.snapchat_ads_source.snapchat_ads.creative_history']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__creative_url_tag_history_tmp', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'tmp\\stg_snapchat_ads__creative_url_tag_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_snapchat_ads__creative_url_tag_history_tmp.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history_tmp', 'fqn': ['snapchat_ads_source', 'tmp', 'stg_snapchat_ads__creative_url_tag_history_tmp'], 'alias': 'stg_snapchat_ads__creative_url_tag_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '65d5edd0f0e93654debad17d56afa3f77abd57601fa4e296320dec000d272056'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433484.2116275, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__creative_url_tag_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nselect *\nfrom {{ var('creative_url_tag_history') }}", 'language': 'sql', 'refs': [], 'sources': [['snapchat_ads', 'creative_url_tag_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.snapchat_ads_source.snapchat_ads.creative_url_tag_history']}, 'compiled_path': None}, 'model.tiktok_ads.tiktok_ads__advertiser_report': {'database': 'drops-bi', 'schema': 'marketing_full_tiktok_ads', 'name': 'tiktok_ads__advertiser_report', 'resource_type': 'model', 'package_name': 'tiktok_ads', 'path': 'tiktok_ads__advertiser_report.sql', 'original_file_path': 'models\\tiktok_ads__advertiser_report.sql', 'unique_id': 'model.tiktok_ads.tiktok_ads__advertiser_report', 'fqn': ['tiktok_ads', 'tiktok_ads__advertiser_report'], 'alias': 'tiktok_ads__advertiser_report', 'checksum': {'name': 'sha256', 'checksum': 'b78cce2d035af7c7214232ba2acd99a6ade4908ee71ce08fed3322fa380c08b4'}, 'config': {'enabled': True, 'alias': None, 'schema': 'tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents the daily performance of ads at the account level.', 'columns': {'date_day': {'name': 'date_day', 'description': 'Day of record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser_name': {'name': 'advertiser_name', 'description': 'Advertiser name.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser_id': {'name': 'advertiser_id', 'description': 'Advertiser ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': "Advertiser's currency.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The number of clicks that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The amount of spend that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'reach': {'name': 'reach', 'description': 'The number of unique users who saw your ads at least once. This metric is estimated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'conversion': {'name': 'conversion', 'description': 'The number of times your ad achieved an outcome, based on the secondary goal you selected.   As one campaign may have a number of different secondary goals, this statistic is not supported for campaigns.  Please go to ad groups or ads to view. (The total count is calculated based on the time each ad impression occurred.)\n', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'likes': {'name': 'likes', 'description': 'The number of likes your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'comments': {'name': 'comments', 'description': 'The number of comments your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'shares': {'name': 'shares', 'description': 'The number of shares that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'profile_visits': {'name': 'profile_visits', 'description': 'The number of profile visits that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'follows': {'name': 'follows', 'description': 'The number of follows that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_watched_2_s': {'name': 'video_watched_2_s', 'description': 'The number of times your video played for at least 2 seconds, or completely played. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_watched_6_s': {'name': 'video_watched_6_s', 'description': 'The number of times your video played for at least 6 seconds, or completely played. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_25': {'name': 'video_views_p_25', 'description': 'The number of times your video was played at 25% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_50': {'name': 'video_views_p_50', 'description': 'The number of times your video was played at 50% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_75': {'name': 'video_views_p_75', 'description': 'The number of times your video was played at 75% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_cpc': {'name': 'daily_cpc', 'description': "The average amount of money you've spent on a click.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_cpm': {'name': 'daily_cpm', 'description': "The average amount of money you've spent per 1,000 impressions.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_ctr': {'name': 'daily_ctr', 'description': 'The percentage of times people saw your ad and performed a click.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tiktok_ads://models\\tiktok_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'tiktok_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.1950324, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_tiktok_ads`.`tiktok_ads__advertiser_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nwith hourly as (\n    \n    select *\n    from {{ var('ad_report_hourly') }}\n),\n\nadvertiser as (\n\n    select *\n    from {{ var('advertiser') }}\n), \n\nads as (\n\n    select *\n    from {{ var('ad_history') }}\n    where is_most_recent_record\n), \n\njoined as (\n\n    select\n        cast(hourly.stat_time_hour as date) as date_day,\n        ads.advertiser_id,\n        advertiser.advertiser_name,\n        advertiser.currency,\n        sum(hourly.clicks) as clicks,\n        sum(hourly.impressions) as impressions,\n        sum(hourly.spend) as spend,\n        sum(hourly.reach) as reach,\n        sum(hourly.conversion) as conversion,\n        sum(hourly.likes) as likes,\n        sum(hourly.comments) as comments,\n        sum(hourly.shares) as shares,\n        sum(hourly.profile_visits) as profile_visits,\n        sum(hourly.follows) as follows,\n        sum(hourly.video_watched_2_s) as video_watched_2_s, \n        sum(hourly.video_watched_6_s) as video_watched_6_s, \n        sum(hourly.video_views_p_25) as video_views_p_25, \n        sum(hourly.video_views_p_50) as video_views_p_50,\n        sum(hourly.video_views_p_75) as video_views_p_75,\n        sum(hourly.spend)/nullif(sum(hourly.clicks),0) as daily_cpc,\n        (sum(hourly.spend)/nullif(sum(hourly.impressions),0))*1000 as daily_cpm,\n        (sum(hourly.clicks)/nullif(sum(hourly.impressions),0))*100 as daily_ctr\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='tiktok_ads__ad_hourly_passthrough_metrics', transform = 'sum') }}\n    \n    from hourly\n    left join ads\n        on hourly.ad_id = ads.ad_id\n    left join advertiser\n        on ads.advertiser_id = advertiser.advertiser_id\n    {{ dbt_utils.group_by(4) }}\n\n)\n\nselect *\nfrom joined", 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_report_hourly'], ['stg_tiktok_ads__advertiser'], ['stg_tiktok_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly', 'model.tiktok_ads_source.stg_tiktok_ads__advertiser', 'model.tiktok_ads_source.stg_tiktok_ads__ad_history']}, 'compiled_path': None}, 'model.tiktok_ads.tiktok_ads__ad_group_report': {'database': 'drops-bi', 'schema': 'marketing_full_tiktok_ads', 'name': 'tiktok_ads__ad_group_report', 'resource_type': 'model', 'package_name': 'tiktok_ads', 'path': 'tiktok_ads__ad_group_report.sql', 'original_file_path': 'models\\tiktok_ads__ad_group_report.sql', 'unique_id': 'model.tiktok_ads.tiktok_ads__ad_group_report', 'fqn': ['tiktok_ads', 'tiktok_ads__ad_group_report'], 'alias': 'tiktok_ads__ad_group_report', 'checksum': {'name': 'sha256', 'checksum': 'cd6f0250ddc693a683fb43b67c723a0f30c205465b44856b369764e593d0188a'}, 'config': {'enabled': True, 'alias': None, 'schema': 'tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents the daily performance of ads at the ad group level.', 'columns': {'date_day': {'name': 'date_day', 'description': 'Day of record', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'Ad group ID', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'Ad group name', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'Campaign name', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser_id': {'name': 'advertiser_id', 'description': 'Advertiser ID', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser_name': {'name': 'advertiser_name', 'description': 'Advertiser name.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': "Advertiser's currency.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'action_categories': {'name': 'action_categories', 'description': 'IDs of the action categories (behaviors) that you want to target.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'age': {'name': 'age', 'description': 'Age groups you want to target.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'audience_type': {'name': 'audience_type', 'description': 'Audience Type', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'budget': {'name': 'budget', 'description': 'Ad budget. Returns 0.0 when Campaign Budget Optimization (budget_optimize_switch) is on.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'category': {'name': 'category', 'description': 'Ad group category.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'interest_category': {'name': 'interest_category', 'description': 'Interest classification. If the interest is specified, users that do not meet interest target will be excluded during delivery.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'gender': {'name': 'gender', 'description': 'Gender that you want to target.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'languages': {'name': 'languages', 'description': 'Codes of the languages that you want to target.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The number of clicks that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The amount of spend that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'reach': {'name': 'reach', 'description': 'The number of unique users who saw your ads at least once. This metric is estimated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'conversion': {'name': 'conversion', 'description': 'The number of times your ad achieved an outcome, based on the secondary goal you selected.   As one campaign may have a number of different secondary goals, this statistic is not supported for campaigns.  Please go to ad groups or ads to view. (The total count is calculated based on the time each ad impression occurred.)\n', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'likes': {'name': 'likes', 'description': 'The number of likes your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'comments': {'name': 'comments', 'description': 'The number of comments your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'shares': {'name': 'shares', 'description': 'The number of shares that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'profile_visits': {'name': 'profile_visits', 'description': 'The number of profile visits that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'follows': {'name': 'follows', 'description': 'The number of follows that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_watched_2_s': {'name': 'video_watched_2_s', 'description': 'The number of times your video played for at least 2 seconds, or completely played. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_watched_6_s': {'name': 'video_watched_6_s', 'description': 'The number of times your video played for at least 6 seconds, or completely played. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_25': {'name': 'video_views_p_25', 'description': 'The number of times your video was played at 25% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_50': {'name': 'video_views_p_50', 'description': 'The number of times your video was played at 50% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_75': {'name': 'video_views_p_75', 'description': 'The number of times your video was played at 75% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_cpc': {'name': 'daily_cpc', 'description': "The average amount of money you've spent on a click.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_cpm': {'name': 'daily_cpm', 'description': "The average amount of money you've spent per 1,000 impressions.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_ctr': {'name': 'daily_ctr', 'description': 'The percentage of times people saw your ad and performed a click.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tiktok_ads://models\\tiktok_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'tiktok_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.2133067, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_tiktok_ads`.`tiktok_ads__ad_group_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nwith hourly as (\n    \n    select *\n    from {{ var('ad_group_report_hourly') }}\n), \n\nad_groups as (\n\n    select *\n    from {{ var('ad_group_history') }}\n    where is_most_recent_record\n), \n\nadvertiser as (\n\n    select *\n    from {{ var('advertiser') }}\n), \n\ncampaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record\n), \n\naggregated as (\n\n    select\n        cast(hourly.stat_time_hour as date) as date_day,\n        ad_groups.advertiser_id,\n        advertiser.advertiser_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        hourly.ad_group_id,\n        ad_groups.ad_group_name,\n        advertiser.currency,\n        ad_groups.action_categories,\n        ad_groups.category,\n        ad_groups.gender,\n        ad_groups.audience_type,\n        ad_groups.budget,\n        ad_groups.age,\n        ad_groups.languages,\n        ad_groups.interest_category,\n        sum(hourly.impressions) as impressions,\n        sum(hourly.clicks) as clicks,\n        sum(hourly.spend) as spend,\n        sum(hourly.reach) as reach,\n        sum(hourly.conversion) as conversion,\n        sum(hourly.likes) as likes,\n        sum(hourly.comments) as comments,\n        sum(hourly.shares) as shares,\n        sum(hourly.profile_visits) as profile_visits,\n        sum(hourly.follows) as follows,\n        sum(hourly.video_watched_2_s) as video_watched_2_s,\n        sum(hourly.video_watched_6_s) as video_watched_6_s,\n        sum(hourly.video_views_p_25) as video_views_p_25,\n        sum(hourly.video_views_p_50) as video_views_p_50, \n        sum(hourly.video_views_p_75) as video_views_p_75,\n        sum(hourly.spend)/nullif(sum(hourly.clicks),0) as daily_cpc,\n        (sum(hourly.spend)/nullif(sum(hourly.impressions),0))*1000 as daily_cpm,\n        (sum(hourly.clicks)/nullif(sum(hourly.impressions),0))*100 as daily_ctr\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='tiktok_ads__ad_group_hourly_passthrough_metrics', transform = 'sum') }}\n    \n    from hourly\n    left join ad_groups \n        on hourly.ad_group_id = ad_groups.ad_group_id\n    left join advertiser\n        on ad_groups.advertiser_id = advertiser.advertiser_id\n    left join campaigns\n        on ad_groups.campaign_id = campaigns.campaign_id\n    {{ dbt_utils.group_by(16) }}\n\n)\n\nselect *\nfrom aggregated", 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_group_report_hourly'], ['stg_tiktok_ads__ad_group_history'], ['stg_tiktok_ads__advertiser'], ['stg_tiktok_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly', 'model.tiktok_ads_source.stg_tiktok_ads__ad_group_history', 'model.tiktok_ads_source.stg_tiktok_ads__advertiser', 'model.tiktok_ads_source.stg_tiktok_ads__campaign_history']}, 'compiled_path': None}, 'model.tiktok_ads.tiktok_ads__ad_report': {'database': 'drops-bi', 'schema': 'marketing_full_tiktok_ads', 'name': 'tiktok_ads__ad_report', 'resource_type': 'model', 'package_name': 'tiktok_ads', 'path': 'tiktok_ads__ad_report.sql', 'original_file_path': 'models\\tiktok_ads__ad_report.sql', 'unique_id': 'model.tiktok_ads.tiktok_ads__ad_report', 'fqn': ['tiktok_ads', 'tiktok_ads__ad_report'], 'alias': 'tiktok_ads__ad_report', 'checksum': {'name': 'sha256', 'checksum': 'ceee3ce54092049c327198fdc079ec337fa26661db48a8f976bc996997f8cac6'}, 'config': {'enabled': True, 'alias': None, 'schema': 'tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents the daily performance of ads at the ad level.', 'columns': {'date_day': {'name': 'date_day', 'description': 'Day of record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_id': {'name': 'ad_id', 'description': 'Ad ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_name': {'name': 'ad_name', 'description': 'Ad name.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'Campaign name.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser_name': {'name': 'advertiser_name', 'description': 'Advertiser name.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser_id': {'name': 'advertiser_id', 'description': 'Advertiser ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'Ad group ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'Ad group name.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'action_categories': {'name': 'action_categories', 'description': 'IDs of the action categories (behaviors) that you want to target.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'age': {'name': 'age', 'description': 'Age groups you want to target.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'audience_type': {'name': 'audience_type', 'description': 'Audience Type', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'budget': {'name': 'budget', 'description': 'Ad budget. Returns 0.0 when Campaign Budget Optimization (budget_optimize_switch) is on.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'category': {'name': 'category', 'description': 'Ad group category.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'interest_category': {'name': 'interest_category', 'description': 'Interest classification. If the interest is specified, users that do not meet interest target will be excluded during delivery.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'gender': {'name': 'gender', 'description': 'Gender that you want to target.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'languages': {'name': 'languages', 'description': 'Codes of the languages that you want to target.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': "Advertiser's currency.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The number of clicks that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The amount of spend that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'reach': {'name': 'reach', 'description': 'The number of unique users who saw your ads at least once. This metric is estimated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'conversion': {'name': 'conversion', 'description': 'The number of times your ad achieved an outcome, based on the secondary goal you selected.   As one campaign may have a number of different secondary goals, this statistic is not supported for campaigns.  Please go to ad groups or ads to view. (The total count is calculated based on the time each ad impression occurred.)\n', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'likes': {'name': 'likes', 'description': 'The number of likes your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'comments': {'name': 'comments', 'description': 'The number of comments your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'shares': {'name': 'shares', 'description': 'The number of shares that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'profile_visits': {'name': 'profile_visits', 'description': 'The number of profile visits that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'follows': {'name': 'follows', 'description': 'The number of follows that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_watched_2_s': {'name': 'video_watched_2_s', 'description': 'The number of times your video played for at least 2 seconds, or completely played. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_watched_6_s': {'name': 'video_watched_6_s', 'description': 'The number of times your video played for at least 6 seconds, or completely played. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_25': {'name': 'video_views_p_25', 'description': 'The number of times your video was played at 25% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_50': {'name': 'video_views_p_50', 'description': 'The number of times your video was played at 50% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_75': {'name': 'video_views_p_75', 'description': 'The number of times your video was played at 75% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_cpc': {'name': 'daily_cpc', 'description': "The average amount of money you've spent on a click.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_cpm': {'name': 'daily_cpm', 'description': "The average amount of money you've spent per 1,000 impressions.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_ctr': {'name': 'daily_ctr', 'description': 'The percentage of times people saw your ad and performed a click.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tiktok_ads://models\\tiktok_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'tiktok_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.2035413, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_tiktok_ads`.`tiktok_ads__ad_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nwith hourly as (\n    \n    select *\n    from {{ var('ad_report_hourly') }}\n), \n\nads as (\n\n    select *\n    from {{ var('ad_history') }}\n    where is_most_recent_record\n), \n\nad_groups as (\n\n    select *\n    from {{ var('ad_group_history') }}\n    where is_most_recent_record\n), \n\nadvertiser as (\n\n    select *\n    from {{ var('advertiser') }}\n), \n\ncampaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record\n),\n\naggregated as (\n\n    select\n        cast(hourly.stat_time_hour as date) as date_day,\n        ad_groups.advertiser_id,\n        advertiser.advertiser_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        ad_groups.ad_group_id,\n        ad_groups.ad_group_name,\n        hourly.ad_id,\n        ads.ad_name,\n        advertiser.currency,\n        ad_groups.category,\n        ad_groups.action_categories,\n        ad_groups.gender,\n        ad_groups.audience_type,\n        ad_groups.budget,\n        ad_groups.age,\n        ad_groups.languages,\n        ad_groups.interest_category,\n        sum(hourly.impressions) as impressions,\n        sum(hourly.clicks) as clicks,\n        sum(hourly.spend) as spend,\n        sum(hourly.reach) as reach,\n        sum(hourly.conversion) as conversion,\n        sum(hourly.likes) as likes,\n        sum(hourly.comments) as comments,\n        sum(hourly.shares) as shares,\n        sum(hourly.profile_visits) as profile_visits,\n        sum(hourly.follows) as follows,\n        sum(hourly.video_watched_2_s) as video_watched_2_s,\n        sum(hourly.video_watched_6_s) as video_watched_6_s,\n        sum(hourly.video_views_p_25) as video_views_p_25,\n        sum(hourly.video_views_p_50) as video_views_p_50, \n        sum(hourly.video_views_p_75) as video_views_p_75,\n        sum(hourly.spend)/nullif(sum(hourly.clicks),0) as daily_cpc,\n        (sum(hourly.spend)/nullif(sum(hourly.impressions),0))*1000 as daily_cpm,\n        (sum(hourly.clicks)/nullif(sum(hourly.impressions),0))*100 as daily_ctr\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='tiktok_ads__ad_hourly_passthrough_metrics', transform = 'sum') }}\n    \n    from hourly\n    left join ads\n        on hourly.ad_id = ads.ad_id\n    left join ad_groups \n        on ads.ad_group_id = ad_groups.ad_group_id\n    left join advertiser\n        on ads.advertiser_id = advertiser.advertiser_id\n    left join campaigns\n        on ads.campaign_id = campaigns.campaign_id\n    {{ dbt_utils.group_by(18) }}\n\n)\n\nselect *\nfrom aggregated", 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_report_hourly'], ['stg_tiktok_ads__ad_history'], ['stg_tiktok_ads__ad_group_history'], ['stg_tiktok_ads__advertiser'], ['stg_tiktok_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly', 'model.tiktok_ads_source.stg_tiktok_ads__ad_history', 'model.tiktok_ads_source.stg_tiktok_ads__ad_group_history', 'model.tiktok_ads_source.stg_tiktok_ads__advertiser', 'model.tiktok_ads_source.stg_tiktok_ads__campaign_history']}, 'compiled_path': None}, 'model.tiktok_ads.tiktok_ads__campaign_report': {'database': 'drops-bi', 'schema': 'marketing_full_tiktok_ads', 'name': 'tiktok_ads__campaign_report', 'resource_type': 'model', 'package_name': 'tiktok_ads', 'path': 'tiktok_ads__campaign_report.sql', 'original_file_path': 'models\\tiktok_ads__campaign_report.sql', 'unique_id': 'model.tiktok_ads.tiktok_ads__campaign_report', 'fqn': ['tiktok_ads', 'tiktok_ads__campaign_report'], 'alias': 'tiktok_ads__campaign_report', 'checksum': {'name': 'sha256', 'checksum': 'e326da741a25ba4b3cdbeca8fb8e249c30cd5ef582be47077c14f4259804286f'}, 'config': {'enabled': True, 'alias': None, 'schema': 'tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents the daily performance at the campaign level.', 'columns': {'date_day': {'name': 'date_day', 'description': 'Day of record', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'Campaign name', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': "Advertiser's currency.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser_id': {'name': 'advertiser_id', 'description': 'Advertiser ID', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser_name': {'name': 'advertiser_name', 'description': 'Advertiser name', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The number of clicks that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The amount of spend that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'reach': {'name': 'reach', 'description': 'The number of unique users who saw your ads at least once. This metric is estimated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'conversion': {'name': 'conversion', 'description': 'The number of times your ad achieved an outcome, based on the secondary goal you selected.   As one campaign may have a number of different secondary goals, this statistic is not supported for campaigns.  Please go to ad groups or ads to view. (The total count is calculated based on the time each ad impression occurred.)\n', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'likes': {'name': 'likes', 'description': 'The number of likes your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'comments': {'name': 'comments', 'description': 'The number of comments your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'shares': {'name': 'shares', 'description': 'The number of shares that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'profile_visits': {'name': 'profile_visits', 'description': 'The number of profile visits that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'follows': {'name': 'follows', 'description': 'The number of follows that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_watched_2_s': {'name': 'video_watched_2_s', 'description': 'The number of times your video played for at least 2 seconds, or completely played. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_watched_6_s': {'name': 'video_watched_6_s', 'description': 'The number of times your video played for at least 6 seconds, or completely played. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_25': {'name': 'video_views_p_25', 'description': 'The number of times your video was played at 25% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_50': {'name': 'video_views_p_50', 'description': 'The number of times your video was played at 50% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_75': {'name': 'video_views_p_75', 'description': 'The number of times your video was played at 75% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_cpc': {'name': 'daily_cpc', 'description': "The average amount of money you've spent on a click.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_cpm': {'name': 'daily_cpm', 'description': "The average amount of money you've spent per 1,000 impressions.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_ctr': {'name': 'daily_ctr', 'description': 'The percentage of times people saw your ad and performed a click.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tiktok_ads://models\\tiktok_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'tiktok_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.2188604, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_tiktok_ads`.`tiktok_ads__campaign_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nwith hourly as (\n    \n    select *\n    from {{ var('campaign_report_hourly') }}\n), \n\ncampaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record\n), \n\nadvertiser as (\n\n    select *\n    from {{ var('advertiser') }}\n), \n\naggregated as (\n\n    select\n        cast(hourly.stat_time_hour as date) as date_day,\n        advertiser.advertiser_id,\n        advertiser.advertiser_name,\n        hourly.campaign_id,\n        campaigns.campaign_name,\n        advertiser.currency,\n        sum(hourly.impressions) as impressions,\n        sum(hourly.clicks) as clicks,\n        sum(hourly.spend) as spend,\n        sum(hourly.reach) as reach,\n        sum(hourly.conversion) as conversion,\n        sum(hourly.likes) as likes,\n        sum(hourly.comments) as comments,\n        sum(hourly.shares) as shares,\n        sum(hourly.profile_visits) as profile_visits,\n        sum(hourly.follows) as follows,\n        sum(hourly.video_watched_2_s) as video_watched_2_s,\n        sum(hourly.video_watched_6_s) as video_watched_6_s,\n        sum(hourly.video_views_p_25) as video_views_p_25,\n        sum(hourly.video_views_p_50) as video_views_p_50, \n        sum(hourly.video_views_p_75) as video_views_p_75,\n        sum(hourly.spend)/nullif(sum(hourly.clicks),0) as daily_cpc,\n        (sum(hourly.spend)/nullif(sum(hourly.impressions),0))*1000 as daily_cpm,\n        (sum(hourly.clicks)/nullif(sum(hourly.impressions),0))*100 as daily_ctr\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='tiktok_ads__campaign_hourly_passthrough_metrics', transform = 'sum') }}\n    \n    from hourly\n    left join campaigns\n        on hourly.campaign_id = campaigns.campaign_id\n    left join advertiser\n        on campaigns.advertiser_id = advertiser.advertiser_id\n    {{ dbt_utils.group_by(6) }}\n\n)\n\nselect *\nfrom aggregated", 'language': 'sql', 'refs': [['stg_tiktok_ads__campaign_report_hourly'], ['stg_tiktok_ads__campaign_history'], ['stg_tiktok_ads__advertiser']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly', 'model.tiktok_ads_source.stg_tiktok_ads__campaign_history', 'model.tiktok_ads_source.stg_tiktok_ads__advertiser']}, 'compiled_path': None}, 'model.tiktok_ads.tiktok_ads__url_report': {'database': 'drops-bi', 'schema': 'marketing_full_tiktok_ads', 'name': 'tiktok_ads__url_report', 'resource_type': 'model', 'package_name': 'tiktok_ads', 'path': 'tiktok_ads__url_report.sql', 'original_file_path': 'models\\tiktok_ads__url_report.sql', 'unique_id': 'model.tiktok_ads.tiktok_ads__url_report', 'fqn': ['tiktok_ads', 'tiktok_ads__url_report'], 'alias': 'tiktok_ads__url_report', 'checksum': {'name': 'sha256', 'checksum': '9d2e1b017a072d77ccdd7ce5d906429fdee130e6cefc34eb49358079223e2f32'}, 'config': {'enabled': True, 'alias': None, 'schema': 'tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents the daily performance of ads at the URL level.', 'columns': {'date_day': {'name': 'date_day', 'description': 'Day of record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_id': {'name': 'ad_id', 'description': 'Ad ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_name': {'name': 'ad_name', 'description': 'Ad name.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'Campaign name.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser_name': {'name': 'advertiser_name', 'description': 'Advertiser name.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser_id': {'name': 'advertiser_id', 'description': 'Advertiser ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'Ad group ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'Ad group name.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'base_url': {'name': 'base_url', 'description': 'The base URL of the ad, extracted from the `landing page url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_host': {'name': 'url_host', 'description': 'The URL host of the ad, extracted from the `landing page url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_path': {'name': 'url_path', 'description': 'The URL path of the ad, extracted from the `landing page url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_source': {'name': 'utm_source', 'description': 'The utm_source parameter of the ad, extracted from the `landing page url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_medium': {'name': 'utm_medium', 'description': 'The utm_medium parameter of the ad, extracted from the `landing page url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_campaign': {'name': 'utm_campaign', 'description': 'The utm_campaign parameter of the ad, extracted from the `landing page url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_content': {'name': 'utm_content', 'description': 'The utm_content parameter of the ad, extracted from the `landing page url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_term': {'name': 'utm_term', 'description': 'The utm_term parameter of the ad, extracted from the `landing page url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'action_categories': {'name': 'action_categories', 'description': 'IDs of the action categories (behaviors) that you want to target.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'age': {'name': 'age', 'description': 'Age groups you want to target.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'audience_type': {'name': 'audience_type', 'description': 'Audience Type', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'budget': {'name': 'budget', 'description': 'Ad budget. Returns 0.0 when Campaign Budget Optimization (budget_optimize_switch) is on.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'category': {'name': 'category', 'description': 'Ad group category.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'interest_category': {'name': 'interest_category', 'description': 'Interest classification. If the interest is specified, users that do not meet interest target will be excluded during delivery.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'gender': {'name': 'gender', 'description': 'Gender that you want to target.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'languages': {'name': 'languages', 'description': 'Codes of the languages that you want to target.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': "Advertiser's currency.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The number of clicks that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The amount of spend that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'reach': {'name': 'reach', 'description': 'The number of unique users who saw your ads at least once. This metric is estimated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'conversion': {'name': 'conversion', 'description': 'The number of times your ad achieved an outcome, based on the secondary goal you selected.   As one campaign may have a number of different secondary goals, this statistic is not supported for campaigns.  Please go to ad groups or ads to view. (The total count is calculated based on the time each ad impression occurred.)\n', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'likes': {'name': 'likes', 'description': 'The number of likes your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'comments': {'name': 'comments', 'description': 'The number of comments your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'shares': {'name': 'shares', 'description': 'The number of shares that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'profile_visits': {'name': 'profile_visits', 'description': 'The number of profile visits that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'follows': {'name': 'follows', 'description': 'The number of follows that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_watched_2_s': {'name': 'video_watched_2_s', 'description': 'The number of times your video played for at least 2 seconds, or completely played. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_watched_6_s': {'name': 'video_watched_6_s', 'description': 'The number of times your video played for at least 6 seconds, or completely played. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_25': {'name': 'video_views_p_25', 'description': 'The number of times your video was played at 25% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_50': {'name': 'video_views_p_50', 'description': 'The number of times your video was played at 50% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_75': {'name': 'video_views_p_75', 'description': 'The number of times your video was played at 75% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_cpc': {'name': 'daily_cpc', 'description': "The average amount of money you've spent on a click.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_cpm': {'name': 'daily_cpm', 'description': "The average amount of money you've spent per 1,000 impressions.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_ctr': {'name': 'daily_ctr', 'description': 'The percentage of times people saw your ad and performed a click.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tiktok_ads://models\\tiktok_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'tiktok_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.230404, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_tiktok_ads`.`tiktok_ads__url_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nwith hourly as (\n    \n    select *\n    from {{ var('ad_report_hourly') }}\n), \n\nads as (\n\n    select *\n    from {{ var('ad_history') }}\n    where is_most_recent_record\n), \n\nad_groups as (\n\n    select *\n    from {{ var('ad_group_history') }}\n    where is_most_recent_record\n), \n\nadvertiser as (\n\n    select *\n    from {{ var('advertiser') }}\n), \n\ncampaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record\n), \n\naggregated as (\n\n    select\n        cast(hourly.stat_time_hour as date) as date_day,\n        ad_groups.advertiser_id,\n        advertiser.advertiser_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        ad_groups.ad_group_id,\n        ad_groups.ad_group_name,\n        hourly.ad_id,\n        ads.ad_name,\n        ads.base_url,\n        ads.url_host,\n        ads.url_path,\n        ads.utm_source,\n        ads.utm_medium,\n        ads.utm_campaign,\n        ads.utm_content,\n        ads.utm_term,\n        advertiser.currency,\n        ad_groups.action_categories,\n        ad_groups.category,\n        ad_groups.gender,\n        ad_groups.audience_type,\n        ad_groups.budget,\n        ad_groups.age,\n        ad_groups.languages,\n        ad_groups.interest_category,\n        sum(hourly.impressions) as impressions,\n        sum(hourly.clicks) as clicks,\n        sum(hourly.spend) as spend,\n        sum(hourly.reach) as reach,\n        sum(hourly.conversion) as conversion,\n        sum(hourly.likes) as likes,\n        sum(hourly.comments) as comments,\n        sum(hourly.shares) as shares,\n        sum(hourly.profile_visits) as profile_visits,\n        sum(hourly.follows) as follows,\n        sum(hourly.video_watched_2_s) as video_watched_2_s,\n        sum(hourly.video_watched_6_s) as video_watched_6_s,\n        sum(hourly.video_views_p_25) as video_views_p_25,\n        sum(hourly.video_views_p_50) as video_views_p_50, \n        sum(hourly.video_views_p_75) as video_views_p_75,\n        sum(hourly.spend)/nullif(sum(hourly.clicks),0) as daily_cpc,\n        (sum(hourly.spend)/nullif(sum(hourly.impressions),0))*1000 as daily_cpm,\n        (sum(hourly.clicks)/nullif(sum(hourly.impressions),0))*100 as daily_ctr\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='tiktok_ads__ad_hourly_passthrough_metrics', transform = 'sum') }}\n    \n    from hourly\n    left join ads\n        on hourly.ad_id = ads.ad_id\n    left join ad_groups \n        on ads.ad_group_id = ad_groups.ad_group_id\n    left join advertiser\n        on ads.advertiser_id = advertiser.advertiser_id\n    left join campaigns\n        on ads.campaign_id = campaigns.campaign_id\n\n    {% if var('ad_reporting__url_report__using_null_filter', True) %}\n        -- We are filtering for only ads where url fields are populated.\n        where ads.landing_page_url is not null\n    {% endif %}\n\n    {{ dbt_utils.group_by(26) }}\n\n)\n\nselect *\nfrom aggregated", 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_report_hourly'], ['stg_tiktok_ads__ad_history'], ['stg_tiktok_ads__ad_group_history'], ['stg_tiktok_ads__advertiser'], ['stg_tiktok_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly', 'model.tiktok_ads_source.stg_tiktok_ads__ad_history', 'model.tiktok_ads_source.stg_tiktok_ads__ad_group_history', 'model.tiktok_ads_source.stg_tiktok_ads__advertiser', 'model.tiktok_ads_source.stg_tiktok_ads__campaign_history']}, 'compiled_path': None}, 'model.tiktok_ads_source.stg_tiktok_ads__advertiser': {'database': 'drops-bi', 'schema': 'marketing_full_stg_tiktok_ads', 'name': 'stg_tiktok_ads__advertiser', 'resource_type': 'model', 'package_name': 'tiktok_ads_source', 'path': 'stg_tiktok_ads__advertiser.sql', 'original_file_path': 'models\\stg_tiktok_ads__advertiser.sql', 'unique_id': 'model.tiktok_ads_source.stg_tiktok_ads__advertiser', 'fqn': ['tiktok_ads_source', 'stg_tiktok_ads__advertiser'], 'alias': 'stg_tiktok_ads__advertiser', 'checksum': {'name': 'sha256', 'checksum': '759a97a786242ecdb350f1852e0861bbeae8218dc19a4047fee98c96ea0ba8be'}, 'config': {'enabled': True, 'alias': None, 'schema': 'stg_tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents data for each advertiser.', 'columns': {'advertiser_id': {'name': 'advertiser_id', 'description': 'Advertiser ID', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'address': {'name': 'address', 'description': 'Advertiser address information', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'balance': {'name': 'balance', 'description': 'Account available balance', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'company': {'name': 'company', 'description': "Advertiser's company name", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'contacter': {'name': 'contacter', 'description': 'Contact Person', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'country': {'name': 'country', 'description': "The advertiser's country", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'create_time': {'name': 'create_time', 'description': "Advertiser's create time", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': 'Type of currency used by advertisers', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'description': {'name': 'description', 'description': 'Brand description, i.e. promotional content', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'email': {'name': 'email', 'description': 'Advertiser contact email, desensitised data', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'industry': {'name': 'industry', 'description': 'Advertiser industry category', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'language': {'name': 'language', 'description': 'Language used by advertisers', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'license_no': {'name': 'license_no', 'description': 'License number', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'license_url': {'name': 'license_url', 'description': 'License preview address, the link is valid for an hour by default.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser_name': {'name': 'advertiser_name', 'description': 'Advertiser name', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'phone_number': {'name': 'phone_number', 'description': 'Contact mobile number, desensitised data', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'telephone': {'name': 'telephone', 'description': 'Fixed phone number, desensitised data', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'timezone': {'name': 'timezone', 'description': 'Ad account time zone including GMT offset', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tiktok_ads_source://models\\stg_tiktok_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'stg_tiktok_ads', 'enabled': True}, 'created_at': 1694433487.3590302, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_stg_tiktok_ads`.`stg_tiktok_ads__advertiser`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_tiktok_ads__advertiser_tmp') }}\n), \n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_tiktok_ads__advertiser_tmp')),\n                staging_columns=get_advertiser_columns()\n            )\n        }}\n\n    from base\n),\n\nfinal as (\n\n    select   \n        id as advertiser_id, \n        address, \n        balance, \n        company, \n        contacter, \n        country, \n        currency, \n        description, \n        email, \n        industry, \n        language,\n        name as advertiser_name, \n        phone_number, \n        telephone, \n        timezone\n    from fields\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_tiktok_ads__advertiser_tmp'], ['stg_tiktok_ads__advertiser_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.tiktok_ads_source.get_advertiser_columns', 'macro.fivetran_utils.fill_staging_columns'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__advertiser_tmp', 'model.tiktok_ads_source.stg_tiktok_ads__advertiser_tmp']}, 'compiled_path': None}, 'model.tiktok_ads_source.stg_tiktok_ads__ad_group_history': {'database': 'drops-bi', 'schema': 'marketing_full_stg_tiktok_ads', 'name': 'stg_tiktok_ads__ad_group_history', 'resource_type': 'model', 'package_name': 'tiktok_ads_source', 'path': 'stg_tiktok_ads__ad_group_history.sql', 'original_file_path': 'models\\stg_tiktok_ads__ad_group_history.sql', 'unique_id': 'model.tiktok_ads_source.stg_tiktok_ads__ad_group_history', 'fqn': ['tiktok_ads_source', 'stg_tiktok_ads__ad_group_history'], 'alias': 'stg_tiktok_ads__ad_group_history', 'checksum': {'name': 'sha256', 'checksum': '293ad5bd25638965207578b5a55376e173cb199e24c62f0e3fd643c9db913a5a'}, 'config': {'enabled': True, 'alias': None, 'schema': 'stg_tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents data for each ad group.', 'columns': {'ad_group_id': {'name': 'ad_group_id', 'description': 'Ad group ID', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_at': {'name': 'updated_at', 'description': 'Time the record was updated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser_id': {'name': 'advertiser_id', 'description': 'Advertiser ID', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'action_categories': {'name': 'action_categories', 'description': 'IDs of the action categories (behaviors) that you want to target.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': "The Ad group's campaign ID.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'action_days': {'name': 'action_days', 'description': 'Action days', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'Ad group name. Character limit is 512 and cannot contain emoji.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'age': {'name': 'age', 'description': 'Age groups you want to target.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'audience_type': {'name': 'audience_type', 'description': 'Audience Type', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'budget': {'name': 'budget', 'description': 'Ad budget. Returns 0.0 when Campaign Budget Optimization (budget_optimize_switch) is on.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'category': {'name': 'category', 'description': 'Ad group category.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'display_name': {'name': 'display_name', 'description': 'Display name of ad group.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'interest_category': {'name': 'interest_category', 'description': 'Interest classification. If the interest is specified, users that do not meet interest target will be excluded during delivery.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'frequency': {'name': 'frequency', 'description': 'frequency, together with frequency_schedule, controls how often people see your ad (only available for REACH ads).  For example, frequency = 2 frequency_schedule = 3 means "show ads no more than twice every 3 day".\n', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'frequency_schedule': {'name': 'frequency_schedule', 'description': 'frequency, together with frequency, controls how often people see your ad (only available for REACH ads).', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'gender': {'name': 'gender', 'description': 'Gender that you want to target.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'landing_page_url': {'name': 'landing_page_url', 'description': 'Landing page URL.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'languages': {'name': 'languages', 'description': 'Codes of the languages that you want to target.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_most_recent_record': {'name': 'is_most_recent_record', 'description': 'Whether record is the most recent one for this particular grain.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tiktok_ads_source://models\\stg_tiktok_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'stg_tiktok_ads', 'enabled': True}, 'created_at': 1694433487.364032, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_stg_tiktok_ads`.`stg_tiktok_ads__ad_group_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_tiktok_ads__ad_group_history_tmp') }}\n), \n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_tiktok_ads__ad_group_history_tmp')),\n                staging_columns=get_ad_group_history_columns()\n            )\n        }}\n\n    from base\n), \n\nfinal as (\n\n    select\n        adgroup_id as ad_group_id,\n        cast(updated_at as {{ dbt.type_timestamp() }}) as updated_at,\n        advertiser_id,\n        campaign_id,\n        action_days,\n        action_categories,\n        adgroup_name as ad_group_name,\n        age,\n        audience_type,\n        budget,\n        category,\n        display_name,\n        interest_category_v_2 as interest_category,\n        frequency,\n        frequency_schedule,\n        gender,\n        languages, \n        landing_page_url,\n        row_number() over (partition by adgroup_id order by updated_at desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_group_history_tmp'], ['stg_tiktok_ads__ad_group_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.tiktok_ads_source.get_ad_group_history_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_timestamp'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_group_history_tmp', 'model.tiktok_ads_source.stg_tiktok_ads__ad_group_history_tmp']}, 'compiled_path': None}, 'model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly': {'database': 'drops-bi', 'schema': 'marketing_full_stg_tiktok_ads', 'name': 'stg_tiktok_ads__ad_group_report_hourly', 'resource_type': 'model', 'package_name': 'tiktok_ads_source', 'path': 'stg_tiktok_ads__ad_group_report_hourly.sql', 'original_file_path': 'models\\stg_tiktok_ads__ad_group_report_hourly.sql', 'unique_id': 'model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly', 'fqn': ['tiktok_ads_source', 'stg_tiktok_ads__ad_group_report_hourly'], 'alias': 'stg_tiktok_ads__ad_group_report_hourly', 'checksum': {'name': 'sha256', 'checksum': 'e6aa8625ed40497e25ec5f7f5dd5a02febf003e50002aad7d5fa11bc5cd353b8'}, 'config': {'enabled': True, 'alias': None, 'schema': 'stg_tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents data for each ad group for each hour.', 'columns': {'ad_group_id': {'name': 'ad_group_id', 'description': 'Ad group id', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'stat_time_hour': {'name': 'stat_time_hour', 'description': 'Hour of activity', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'cost_per_conversion': {'name': 'cost_per_conversion', 'description': "The average amount of money you've spent on a conversion.  (The total count is calculated based on the time each ad impression occurred.)\n", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'cpc': {'name': 'cpc', 'description': "The average amount of money you've spent on a click.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_play_actions': {'name': 'video_play_actions', 'description': 'The number of times your video starts to play. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'conversion_rate': {'name': 'conversion_rate', 'description': 'The percentage of results you received out of all the clicks of your ads.   (The total count is calculated based on the time each ad impression occurred.)\n', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_75': {'name': 'video_views_p_75', 'description': 'The number of times your video was played at 75% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_50': {'name': 'video_views_p_50', 'description': 'The number of times your video was played at 50% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of times your ads were on screen.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'comments': {'name': 'comments', 'description': 'The number of comments your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'conversion': {'name': 'conversion', 'description': 'The number of times your ad achieved an outcome, based on the secondary goal you selected.   As one campaign may have a number of different secondary goals, this statistic is not supported for campaigns.  Please go to ad groups or ads to view. (The total count is calculated based on the time each ad impression occurred.)\n', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'shares': {'name': 'shares', 'description': 'The number of shares your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The number of clicks on your ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'cost_per_1000_reached': {'name': 'cost_per_1000_reached', 'description': 'The average cost to reach 1,000 unique users. This metric is estimated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_25': {'name': 'video_views_p_25', 'description': 'The number of times your video was played at 25% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'reach': {'name': 'reach', 'description': 'The number of unique users who saw your ads at least once. This metric is estimated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'profile_visits_rate': {'name': 'profile_visits_rate', 'description': 'The rate of profile visits per impression the paid ad drove during the campaign. This metric is only for Boosted TikToks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'average_video_play': {'name': 'average_video_play', 'description': 'The average time your video was played per single video view, including any time spent replaying the video.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'average_video_play_per_user': {'name': 'average_video_play_per_user', 'description': 'The average time per user your video was played per single video view, including any time spent replaying the video.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'profile_visits': {'name': 'profile_visits', 'description': 'The number of profile visits the ad drove during the campaign. This metric is only for Boosted TikToks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'cpm': {'name': 'cpm', 'description': "The average amount of money you've spent per 1,000 impressions.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ctr': {'name': 'ctr', 'description': 'The percentage of times people saw your ad and performed a click.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_watched_2_s': {'name': 'video_watched_2_s', 'description': 'The number of times your video played for at least 2 seconds. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'follows': {'name': 'follows', 'description': 'The number of new followers that were gained within 1 day of a user seeing a paid ad. This metric is only for Boosted TikToks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_watched_6_s': {'name': 'video_watched_6_s', 'description': 'The number of times your video played for at least 6 seconds, or completely played. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': "The estimated total amount of money you've spent on your campaign, ad group or ad during its schedule.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'likes': {'name': 'likes', 'description': 'The number of likes your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tiktok_ads_source://models\\stg_tiktok_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'stg_tiktok_ads', 'enabled': True}, 'created_at': 1694433487.3856256, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_stg_tiktok_ads`.`stg_tiktok_ads__ad_group_report_hourly`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_tiktok_ads__ad_group_report_hourly_tmp') }}\n), \n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_tiktok_ads__ad_group_report_hourly_tmp')),\n                staging_columns=get_ad_group_report_hourly_columns()\n            )\n        }}\n    from base\n), \n\nfinal as (\n\n    select  \n        adgroup_id as ad_group_id,\n        cast(stat_time_hour as {{ dbt.type_timestamp() }}) as stat_time_hour, \n        cpc, \n        cpm, \n        ctr, \n        impressions, \n        clicks, \n        spend, \n        reach, \n        conversion, \n        cost_per_conversion, \n        conversion_rate, \n        likes, \n        comments, \n        shares, \n        profile_visits,\n        follows, \n        video_play_actions, \n        video_watched_2_s, \n        video_watched_6_s, \n        video_views_p_25, \n        video_views_p_50,\n        video_views_p_75,  \n        average_video_play, \n        average_video_play_per_user\n\n        {{ fivetran_utils.fill_pass_through_columns('tiktok_ads__ad_group_hourly_passthrough_metrics') }}\n\n    from fields\n) \n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_group_report_hourly_tmp'], ['stg_tiktok_ads__ad_group_report_hourly_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.tiktok_ads_source.get_ad_group_report_hourly_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_timestamp', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly_tmp', 'model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly_tmp']}, 'compiled_path': None}, 'model.tiktok_ads_source.stg_tiktok_ads__ad_history': {'database': 'drops-bi', 'schema': 'marketing_full_stg_tiktok_ads', 'name': 'stg_tiktok_ads__ad_history', 'resource_type': 'model', 'package_name': 'tiktok_ads_source', 'path': 'stg_tiktok_ads__ad_history.sql', 'original_file_path': 'models\\stg_tiktok_ads__ad_history.sql', 'unique_id': 'model.tiktok_ads_source.stg_tiktok_ads__ad_history', 'fqn': ['tiktok_ads_source', 'stg_tiktok_ads__ad_history'], 'alias': 'stg_tiktok_ads__ad_history', 'checksum': {'name': 'sha256', 'checksum': '04ee4bd6f5c670fa46d8c3d6846d21da350c898d5287ee8cca7a8db9518f5b5e'}, 'config': {'enabled': True, 'alias': None, 'schema': 'stg_tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents data for each ad.', 'columns': {'ad_id': {'name': 'ad_id', 'description': 'Ad ID', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_at': {'name': 'updated_at', 'description': 'Time the record was updated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'Ad group ID', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser_id': {'name': 'advertiser_id', 'description': 'Advertiser ID', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'base_url': {'name': 'base_url', 'description': 'The base URL of the ad, extracted from the `landing page url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_name': {'name': 'ad_name', 'description': 'Ad Name.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'call_to_action': {'name': 'call_to_action', 'description': 'Call to action values.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'click_tracking_url': {'name': 'click_tracking_url', 'description': 'Click monitoring URL.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impression_tracking_url': {'name': 'impression_tracking_url', 'description': 'Display monitoring URL.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'landing_page_url': {'name': 'landing_page_url', 'description': 'Landing page URL.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_host': {'name': 'url_host', 'description': 'The URL host of the ad, extracted from the `landing_page_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_path': {'name': 'url_path', 'description': 'The URL path of the ad, extracted from the `landing_page_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_source': {'name': 'utm_source', 'description': 'The utm_source parameter of the ad, extracted from the `landing_page_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_medium': {'name': 'utm_medium', 'description': 'The utm_medium parameter of the ad, extracted from the `landing_page_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_campaign': {'name': 'utm_campaign', 'description': 'The utm_campaign parameter of the ad, extracted from the `landing_page_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_content': {'name': 'utm_content', 'description': 'The utm_content parameter of the ad, extracted from the `landing_page_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_term': {'name': 'utm_term', 'description': 'The utm_term parameter of the ad, extracted from the `landing_page_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_most_recent_record': {'name': 'is_most_recent_record', 'description': 'Whether record is the most recent one for this particular grain.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tiktok_ads_source://models\\stg_tiktok_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'stg_tiktok_ads', 'enabled': True}, 'created_at': 1694433487.3695424, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_stg_tiktok_ads`.`stg_tiktok_ads__ad_history`', 'raw_code': '{{ config(enabled=var(\'ad_reporting__tiktok_ads_enabled\', true)) }}\n\nwith base as (\n\n    select *\n    from {{ ref(\'stg_tiktok_ads__ad_history_tmp\') }}\n), \n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref(\'stg_tiktok_ads__ad_history_tmp\')),\n                staging_columns=get_ad_history_columns()\n            )\n        }}\n\n    from base\n), \n\nfinal as (\n\n    select  \n        ad_id,\n        cast(updated_at as {{ dbt.type_timestamp() }}) as updated_at,\n        adgroup_id as ad_group_id,\n        advertiser_id,\n        campaign_id,\n        ad_name,\n        call_to_action,\n        click_tracking_url,\n        impression_tracking_url,\n        {{ dbt.split_part(\'landing_page_url\', "\'?\'", 1) }} as base_url,\n        {{ dbt_utils.get_url_host(\'landing_page_url\') }} as url_host,\n        \'/\' || {{ dbt_utils.get_url_path(\'landing_page_url\') }} as url_path,\n        {{ dbt_utils.get_url_parameter(\'landing_page_url\', \'utm_source\') }} as utm_source,\n        {{ dbt_utils.get_url_parameter(\'landing_page_url\', \'utm_medium\') }} as utm_medium,\n        {{ dbt_utils.get_url_parameter(\'landing_page_url\', \'utm_campaign\') }} as utm_campaign,\n        {{ dbt_utils.get_url_parameter(\'landing_page_url\', \'utm_content\') }} as utm_content,\n        {{ dbt_utils.get_url_parameter(\'landing_page_url\', \'utm_term\') }} as utm_term,\n        landing_page_url,\n        row_number() over (partition by ad_id order by updated_at desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final', 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_history_tmp'], ['stg_tiktok_ads__ad_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.tiktok_ads_source.get_ad_history_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_timestamp', 'macro.dbt.split_part', 'macro.dbt_utils.get_url_host', 'macro.dbt_utils.get_url_path', 'macro.dbt_utils.get_url_parameter'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_history_tmp', 'model.tiktok_ads_source.stg_tiktok_ads__ad_history_tmp']}, 'compiled_path': None}, 'model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly': {'database': 'drops-bi', 'schema': 'marketing_full_stg_tiktok_ads', 'name': 'stg_tiktok_ads__ad_report_hourly', 'resource_type': 'model', 'package_name': 'tiktok_ads_source', 'path': 'stg_tiktok_ads__ad_report_hourly.sql', 'original_file_path': 'models\\stg_tiktok_ads__ad_report_hourly.sql', 'unique_id': 'model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly', 'fqn': ['tiktok_ads_source', 'stg_tiktok_ads__ad_report_hourly'], 'alias': 'stg_tiktok_ads__ad_report_hourly', 'checksum': {'name': 'sha256', 'checksum': '6da656ea12d8f458960301cdc683b06b0556eb112a4d553491d9b9267ff78776'}, 'config': {'enabled': True, 'alias': None, 'schema': 'stg_tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents data for each ad for each hour.', 'columns': {'ad_id': {'name': 'ad_id', 'description': 'Ad id', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'stat_time_hour': {'name': 'stat_time_hour', 'description': 'Hour of activity', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'cost_per_conversion': {'name': 'cost_per_conversion', 'description': "The average amount of money you've spent on a conversion.  (The total count is calculated based on the time each ad impression occurred.)\n", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'cpc': {'name': 'cpc', 'description': "The average amount of money you've spent on a click.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_play_actions': {'name': 'video_play_actions', 'description': 'The number of times your video starts to play. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'conversion_rate': {'name': 'conversion_rate', 'description': 'The percentage of results you received out of all the clicks of your ads.   (The total count is calculated based on the time each ad impression occurred.)\n', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_75': {'name': 'video_views_p_75', 'description': 'The number of times your video was played at 75% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_50': {'name': 'video_views_p_50', 'description': 'The number of times your video was played at 50% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of times your ads were on screen.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'comments': {'name': 'comments', 'description': 'The number of comments your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'conversion': {'name': 'conversion', 'description': 'The number of times your ad achieved an outcome, based on the secondary goal you selected.   As one campaign may have a number of different secondary goals, this statistic is not supported for campaigns.  Please go to ad groups or ads to view. (The total count is calculated based on the time each ad impression occurred.)\n', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'shares': {'name': 'shares', 'description': 'The number of shares your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The number of clicks on your ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'cost_per_1000_reached': {'name': 'cost_per_1000_reached', 'description': 'The average cost to reach 1,000 unique users. This metric is estimated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_25': {'name': 'video_views_p_25', 'description': 'The number of times your video was played at 25% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'reach': {'name': 'reach', 'description': 'The number of unique users who saw your ads at least once. This metric is estimated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'profile_visits_rate': {'name': 'profile_visits_rate', 'description': 'The rate of profile visits per impression the paid ad drove during the campaign. This metric is only for Boosted TikToks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'average_video_play': {'name': 'average_video_play', 'description': 'The average time your video was played per single video view, including any time spent replaying the video.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'average_video_play_per_user': {'name': 'average_video_play_per_user', 'description': 'The average time per user your video was played per single video view, including any time spent replaying the video.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'profile_visits': {'name': 'profile_visits', 'description': 'The number of profile visits the ad drove during the campaign. This metric is only for Boosted TikToks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'cpm': {'name': 'cpm', 'description': "The average amount of money you've spent per 1,000 impressions.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ctr': {'name': 'ctr', 'description': 'The percentage of times people saw your ad and performed a click.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_watched_2_s': {'name': 'video_watched_2_s', 'description': 'The number of times your video played for at least 2 seconds. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'follows': {'name': 'follows', 'description': 'The number of new followers that were gained within 1 day of a user seeing a paid ad. This metric is only for Boosted TikToks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_watched_6_s': {'name': 'video_watched_6_s', 'description': 'The number of times your video played for at least 6 seconds, or completely played. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': "The estimated total amount of money you've spent on your campaign, ad group or ad during its schedule.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'likes': {'name': 'likes', 'description': 'The number of likes your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tiktok_ads_source://models\\stg_tiktok_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'stg_tiktok_ads', 'enabled': True}, 'created_at': 1694433487.3791192, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_stg_tiktok_ads`.`stg_tiktok_ads__ad_report_hourly`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_tiktok_ads__ad_report_hourly_tmp') }}\n), \n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_tiktok_ads__ad_report_hourly_tmp')),\n                staging_columns=get_ad_report_hourly_columns()\n            )\n        }}\n    from base\n), \n\nfinal as (\n\n    select  \n        ad_id, \n        cast(stat_time_hour as {{ dbt.type_timestamp() }}) as stat_time_hour, \n        cpc, \n        cpm, \n        ctr, \n        impressions, \n        clicks, \n        spend, \n        reach, \n        conversion, \n        cost_per_conversion, \n        conversion_rate, \n        likes, \n        comments, \n        shares, \n        profile_visits,\n        follows, \n        video_play_actions, \n        video_watched_2_s, \n        video_watched_6_s, \n        video_views_p_25, \n        video_views_p_50,\n        video_views_p_75,  \n        average_video_play, \n        average_video_play_per_user\n\n        {{ fivetran_utils.fill_pass_through_columns('tiktok_ads__ad_hourly_passthrough_metrics') }}\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_report_hourly_tmp'], ['stg_tiktok_ads__ad_report_hourly_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.tiktok_ads_source.get_ad_report_hourly_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_timestamp', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly_tmp', 'model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly_tmp']}, 'compiled_path': None}, 'model.tiktok_ads_source.stg_tiktok_ads__campaign_history': {'database': 'drops-bi', 'schema': 'marketing_full_stg_tiktok_ads', 'name': 'stg_tiktok_ads__campaign_history', 'resource_type': 'model', 'package_name': 'tiktok_ads_source', 'path': 'stg_tiktok_ads__campaign_history.sql', 'original_file_path': 'models\\stg_tiktok_ads__campaign_history.sql', 'unique_id': 'model.tiktok_ads_source.stg_tiktok_ads__campaign_history', 'fqn': ['tiktok_ads_source', 'stg_tiktok_ads__campaign_history'], 'alias': 'stg_tiktok_ads__campaign_history', 'checksum': {'name': 'sha256', 'checksum': 'cee0a9b6849129be52b0512780a02bfc3ced5461a128c9a7006cfaf5230673c9'}, 'config': {'enabled': True, 'alias': None, 'schema': 'stg_tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents data for each campaign.', 'columns': {'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_at': {'name': 'updated_at', 'description': 'Time the record was updated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser_id': {'name': 'advertiser_id', 'description': 'Advertiser ID', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'Campaign name', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_type': {'name': 'campaign_type', 'description': 'Campaign Type, indicates the campaign is a regular campaign or iOS 14 campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'split_test_variable': {'name': 'split_test_variable', 'description': 'Split Test variables. Optional values; TARGETING, BIDDING_OPTIMIZATION , CREATIVE.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_most_recent_record': {'name': 'is_most_recent_record', 'description': 'Whether record is the most recent one for this particular grain.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tiktok_ads_source://models\\stg_tiktok_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'stg_tiktok_ads', 'enabled': True}, 'created_at': 1694433487.3715425, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_stg_tiktok_ads`.`stg_tiktok_ads__campaign_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_tiktok_ads__campaign_history_tmp') }}\n), \n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_tiktok_ads__campaign_history_tmp')),\n                staging_columns=get_campaign_history_columns()\n            )\n        }}\n    from base\n), \n\nfinal as (\n\n    select   \n        campaign_id,\n        cast(updated_at as {{ dbt.type_timestamp() }}) as updated_at,\n        advertiser_id,\n        campaign_name,\n        campaign_type,\n        split_test_variable,\n        row_number() over (partition by campaign_id order by updated_at desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_tiktok_ads__campaign_history_tmp'], ['stg_tiktok_ads__campaign_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.tiktok_ads_source.get_campaign_history_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_timestamp'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__campaign_history_tmp', 'model.tiktok_ads_source.stg_tiktok_ads__campaign_history_tmp']}, 'compiled_path': None}, 'model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly': {'database': 'drops-bi', 'schema': 'marketing_full_stg_tiktok_ads', 'name': 'stg_tiktok_ads__campaign_report_hourly', 'resource_type': 'model', 'package_name': 'tiktok_ads_source', 'path': 'stg_tiktok_ads__campaign_report_hourly.sql', 'original_file_path': 'models\\stg_tiktok_ads__campaign_report_hourly.sql', 'unique_id': 'model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly', 'fqn': ['tiktok_ads_source', 'stg_tiktok_ads__campaign_report_hourly'], 'alias': 'stg_tiktok_ads__campaign_report_hourly', 'checksum': {'name': 'sha256', 'checksum': '4a1fb091732e5edc0b035accbe4bf8d5485868129b8e52e6573cc9b06bca582e'}, 'config': {'enabled': True, 'alias': None, 'schema': 'stg_tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represent data for each campaign for each hour.', 'columns': {'campaign_id': {'name': 'campaign_id', 'description': 'Campaign id', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'stat_time_hour': {'name': 'stat_time_hour', 'description': 'Hour of activity', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'cost_per_conversion': {'name': 'cost_per_conversion', 'description': "The average amount of money you've spent on a conversion.  (The total count is calculated based on the time each ad impression occurred.)\n", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'cpc': {'name': 'cpc', 'description': "The average amount of money you've spent on a click.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_play_actions': {'name': 'video_play_actions', 'description': 'The number of times your video starts to play. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'conversion_rate': {'name': 'conversion_rate', 'description': 'The percentage of results you received out of all the clicks of your ads.   (The total count is calculated based on the time each ad impression occurred.)\n', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_75': {'name': 'video_views_p_75', 'description': 'The number of times your video was played at 75% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_50': {'name': 'video_views_p_50', 'description': 'The number of times your video was played at 50% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of times your ads were on screen.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'comments': {'name': 'comments', 'description': 'The number of comments your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'conversion': {'name': 'conversion', 'description': 'The number of times your ad achieved an outcome, based on the secondary goal you selected.   As one campaign may have a number of different secondary goals, this statistic is not supported for campaigns.  Please go to ad groups or ads to view. (The total count is calculated based on the time each ad impression occurred.)\n', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'shares': {'name': 'shares', 'description': 'The number of shares your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The number of clicks on your ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'cost_per_1000_reached': {'name': 'cost_per_1000_reached', 'description': 'The average cost to reach 1,000 unique users. This metric is estimated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_25': {'name': 'video_views_p_25', 'description': 'The number of times your video was played at 25% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'reach': {'name': 'reach', 'description': 'The number of unique users who saw your ads at least once. This metric is estimated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'profile_visits_rate': {'name': 'profile_visits_rate', 'description': 'The rate of profile visits per impression the paid ad drove during the campaign. This metric is only for Boosted TikToks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'average_video_play': {'name': 'average_video_play', 'description': 'The average time your video was played per single video view, including any time spent replaying the video.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'average_video_play_per_user': {'name': 'average_video_play_per_user', 'description': 'The average time per user your video was played per single video view, including any time spent replaying the video.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'profile_visits': {'name': 'profile_visits', 'description': 'The number of profile visits the ad drove during the campaign. This metric is only for Boosted TikToks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'cpm': {'name': 'cpm', 'description': "The average amount of money you've spent per 1,000 impressions.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ctr': {'name': 'ctr', 'description': 'The percentage of times people saw your ad and performed a click.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_watched_2_s': {'name': 'video_watched_2_s', 'description': 'The number of times your video played for at least 2 seconds. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'follows': {'name': 'follows', 'description': 'The number of new followers that were gained within 1 day of a user seeing a paid ad. This metric is only for Boosted TikToks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_watched_6_s': {'name': 'video_watched_6_s', 'description': 'The number of times your video played for at least 6 seconds, or completely played. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': "The estimated total amount of money you've spent on your campaign, ad group or ad during its schedule.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'likes': {'name': 'likes', 'description': 'The number of likes your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tiktok_ads_source://models\\stg_tiktok_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'stg_tiktok_ads', 'enabled': True}, 'created_at': 1694433487.3931904, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_stg_tiktok_ads`.`stg_tiktok_ads__campaign_report_hourly`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_tiktok_ads__campaign_report_hourly_tmp') }}\n), \n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_tiktok_ads__campaign_report_hourly_tmp')),\n                staging_columns=get_campaign_report_hourly_columns()\n            )\n        }}\n    from base\n), \n\nfinal as (\n\n    select  \n        campaign_id,\n        cast(stat_time_hour as {{ dbt.type_timestamp() }}) as stat_time_hour,\n        cpc, \n        cpm,\n        ctr,\n        impressions,\n        clicks,\n        spend,\n        reach,\n        conversion,\n        cost_per_conversion,\n        conversion_rate,\n        likes,\n        comments,\n        shares,\n        profile_visits,\n        follows,\n        video_play_actions,\n        video_watched_2_s,\n        video_watched_6_s,\n        video_views_p_25,\n        video_views_p_50,\n        video_views_p_75,\n        average_video_play,\n        average_video_play_per_user\n\n        {{ fivetran_utils.fill_pass_through_columns('tiktok_ads__campaign_hourly_passthrough_metrics') }}\n        \n    from fields\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_tiktok_ads__campaign_report_hourly_tmp'], ['stg_tiktok_ads__campaign_report_hourly_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.tiktok_ads_source.get_campaign_report_hourly_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_timestamp', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly_tmp', 'model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly_tmp']}, 'compiled_path': None}, 'model.tiktok_ads_source.stg_tiktok_ads__advertiser_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_stg_tiktok_ads', 'name': 'stg_tiktok_ads__advertiser_tmp', 'resource_type': 'model', 'package_name': 'tiktok_ads_source', 'path': 'tmp\\stg_tiktok_ads__advertiser_tmp.sql', 'original_file_path': 'models\\tmp\\stg_tiktok_ads__advertiser_tmp.sql', 'unique_id': 'model.tiktok_ads_source.stg_tiktok_ads__advertiser_tmp', 'fqn': ['tiktok_ads_source', 'tmp', 'stg_tiktok_ads__advertiser_tmp'], 'alias': 'stg_tiktok_ads__advertiser_tmp', 'checksum': {'name': 'sha256', 'checksum': '43da3da14719af2f23e901aa756fc51b3bd807b1172a7776a811541ee26e8688'}, 'config': {'enabled': True, 'alias': None, 'schema': 'stg_tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view', 'schema': 'stg_tiktok_ads', 'enabled': True}, 'created_at': 1694433484.4322507, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_stg_tiktok_ads`.`stg_tiktok_ads__advertiser_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nselect *\nfrom {{ var('advertiser') }}", 'language': 'sql', 'refs': [], 'sources': [['tiktok_ads', 'advertiser']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.tiktok_ads_source.tiktok_ads.advertiser']}, 'compiled_path': None}, 'model.tiktok_ads_source.stg_tiktok_ads__ad_group_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_stg_tiktok_ads', 'name': 'stg_tiktok_ads__ad_group_history_tmp', 'resource_type': 'model', 'package_name': 'tiktok_ads_source', 'path': 'tmp\\stg_tiktok_ads__ad_group_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_tiktok_ads__ad_group_history_tmp.sql', 'unique_id': 'model.tiktok_ads_source.stg_tiktok_ads__ad_group_history_tmp', 'fqn': ['tiktok_ads_source', 'tmp', 'stg_tiktok_ads__ad_group_history_tmp'], 'alias': 'stg_tiktok_ads__ad_group_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '656a88662bd5fe65b7e782c1d24ecfc5459e7541ec41b4418f4472f3633aa347'}, 'config': {'enabled': True, 'alias': None, 'schema': 'stg_tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view', 'schema': 'stg_tiktok_ads', 'enabled': True}, 'created_at': 1694433484.4399116, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_stg_tiktok_ads`.`stg_tiktok_ads__ad_group_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nselect *\nfrom {{ var('ad_group_history') }}", 'language': 'sql', 'refs': [], 'sources': [['tiktok_ads', 'adgroup_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.tiktok_ads_source.tiktok_ads.adgroup_history']}, 'compiled_path': None}, 'model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_stg_tiktok_ads', 'name': 'stg_tiktok_ads__ad_group_report_hourly_tmp', 'resource_type': 'model', 'package_name': 'tiktok_ads_source', 'path': 'tmp\\stg_tiktok_ads__ad_group_report_hourly_tmp.sql', 'original_file_path': 'models\\tmp\\stg_tiktok_ads__ad_group_report_hourly_tmp.sql', 'unique_id': 'model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly_tmp', 'fqn': ['tiktok_ads_source', 'tmp', 'stg_tiktok_ads__ad_group_report_hourly_tmp'], 'alias': 'stg_tiktok_ads__ad_group_report_hourly_tmp', 'checksum': {'name': 'sha256', 'checksum': '5e607a6ea02a4f66c2d50b092e2d37d6b07d0de03b0490dddde773197364937e'}, 'config': {'enabled': True, 'alias': None, 'schema': 'stg_tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view', 'schema': 'stg_tiktok_ads', 'enabled': True}, 'created_at': 1694433484.446912, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_stg_tiktok_ads`.`stg_tiktok_ads__ad_group_report_hourly_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nselect *\nfrom {{ var('ad_group_hourly') }}", 'language': 'sql', 'refs': [], 'sources': [['tiktok_ads', 'adgroup_report_hourly']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.tiktok_ads_source.tiktok_ads.adgroup_report_hourly']}, 'compiled_path': None}, 'model.tiktok_ads_source.stg_tiktok_ads__ad_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_stg_tiktok_ads', 'name': 'stg_tiktok_ads__ad_history_tmp', 'resource_type': 'model', 'package_name': 'tiktok_ads_source', 'path': 'tmp\\stg_tiktok_ads__ad_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_tiktok_ads__ad_history_tmp.sql', 'unique_id': 'model.tiktok_ads_source.stg_tiktok_ads__ad_history_tmp', 'fqn': ['tiktok_ads_source', 'tmp', 'stg_tiktok_ads__ad_history_tmp'], 'alias': 'stg_tiktok_ads__ad_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '70d0e01a26a5250c141b3a67fd3b1ffcfceea35645e82096257852badea2b9d2'}, 'config': {'enabled': True, 'alias': None, 'schema': 'stg_tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view', 'schema': 'stg_tiktok_ads', 'enabled': True}, 'created_at': 1694433484.4534218, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_stg_tiktok_ads`.`stg_tiktok_ads__ad_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nselect *\nfrom {{ var('ad_history') }}", 'language': 'sql', 'refs': [], 'sources': [['tiktok_ads', 'ad_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.tiktok_ads_source.tiktok_ads.ad_history']}, 'compiled_path': None}, 'model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_stg_tiktok_ads', 'name': 'stg_tiktok_ads__ad_report_hourly_tmp', 'resource_type': 'model', 'package_name': 'tiktok_ads_source', 'path': 'tmp\\stg_tiktok_ads__ad_report_hourly_tmp.sql', 'original_file_path': 'models\\tmp\\stg_tiktok_ads__ad_report_hourly_tmp.sql', 'unique_id': 'model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly_tmp', 'fqn': ['tiktok_ads_source', 'tmp', 'stg_tiktok_ads__ad_report_hourly_tmp'], 'alias': 'stg_tiktok_ads__ad_report_hourly_tmp', 'checksum': {'name': 'sha256', 'checksum': '30949b79355e85af66a3df6de9ef124c666c0bf8ecc911ad673eb56cf3124b7e'}, 'config': {'enabled': True, 'alias': None, 'schema': 'stg_tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view', 'schema': 'stg_tiktok_ads', 'enabled': True}, 'created_at': 1694433484.461214, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_stg_tiktok_ads`.`stg_tiktok_ads__ad_report_hourly_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nselect *\nfrom {{ var('ad_report_hourly') }}", 'language': 'sql', 'refs': [], 'sources': [['tiktok_ads', 'ad_report_hourly']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.tiktok_ads_source.tiktok_ads.ad_report_hourly']}, 'compiled_path': None}, 'model.tiktok_ads_source.stg_tiktok_ads__campaign_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_stg_tiktok_ads', 'name': 'stg_tiktok_ads__campaign_history_tmp', 'resource_type': 'model', 'package_name': 'tiktok_ads_source', 'path': 'tmp\\stg_tiktok_ads__campaign_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_tiktok_ads__campaign_history_tmp.sql', 'unique_id': 'model.tiktok_ads_source.stg_tiktok_ads__campaign_history_tmp', 'fqn': ['tiktok_ads_source', 'tmp', 'stg_tiktok_ads__campaign_history_tmp'], 'alias': 'stg_tiktok_ads__campaign_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '1c8e0405cc5ddf7b7748f613590108b0b3f786b44a35ac4382079c19072febe5'}, 'config': {'enabled': True, 'alias': None, 'schema': 'stg_tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view', 'schema': 'stg_tiktok_ads', 'enabled': True}, 'created_at': 1694433484.4681664, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_stg_tiktok_ads`.`stg_tiktok_ads__campaign_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nselect *\nfrom {{ var('campaign_history') }}", 'language': 'sql', 'refs': [], 'sources': [['tiktok_ads', 'campaign_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.tiktok_ads_source.tiktok_ads.campaign_history']}, 'compiled_path': None}, 'model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_stg_tiktok_ads', 'name': 'stg_tiktok_ads__campaign_report_hourly_tmp', 'resource_type': 'model', 'package_name': 'tiktok_ads_source', 'path': 'tmp\\stg_tiktok_ads__campaign_report_hourly_tmp.sql', 'original_file_path': 'models\\tmp\\stg_tiktok_ads__campaign_report_hourly_tmp.sql', 'unique_id': 'model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly_tmp', 'fqn': ['tiktok_ads_source', 'tmp', 'stg_tiktok_ads__campaign_report_hourly_tmp'], 'alias': 'stg_tiktok_ads__campaign_report_hourly_tmp', 'checksum': {'name': 'sha256', 'checksum': '3a734b2b71b67ce84e5c0fadfff18429e2aa52abcae9f16aa3832a7c5e94c25e'}, 'config': {'enabled': True, 'alias': None, 'schema': 'stg_tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view', 'schema': 'stg_tiktok_ads', 'enabled': True}, 'created_at': 1694433484.4747887, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_stg_tiktok_ads`.`stg_tiktok_ads__campaign_report_hourly_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nselect *\nfrom {{ var('campaign_report_hourly') }}", 'language': 'sql', 'refs': [], 'sources': [['tiktok_ads', 'campaign_report_hourly']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.tiktok_ads_source.tiktok_ads.campaign_report_hourly']}, 'compiled_path': None}, 'model.twitter_ads.twitter_ads__account_report': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads', 'name': 'twitter_ads__account_report', 'resource_type': 'model', 'package_name': 'twitter_ads', 'path': 'twitter_ads__account_report.sql', 'original_file_path': 'models\\twitter_ads__account_report.sql', 'unique_id': 'model.twitter_ads.twitter_ads__account_report', 'fqn': ['twitter_ads', 'twitter_ads__account_report'], 'alias': 'twitter_ads__account_report', 'checksum': {'name': 'sha256', 'checksum': '16ac0265f5e3aa59cf06260bb446a6ef88d625c029d2e7298d44b9008c350fa9'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents the daily performance of ads at the account level, within a placement in Twitter.\n', 'columns': {'spend_micro': {'name': 'spend_micro', 'description': 'The spend (in micros) for the account on that day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend for the account on that day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The clicks for th account on that day. Includes clicks on the URL (shortened or regular links), profile pic, screen name, username, detail, hashtags, and likes.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'The date of the performance.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The impressions for the account on that day.  This is the number of users who see a Promoted Ad either in their home timeline or search results.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_clicks': {'name': 'url_clicks', 'description': 'The url clicks for the account on that day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'placement': {'name': 'placement', 'description': "Where on Twitter the ad is being displayed. Possible values include 'ALL_ON_TWITTER', 'PUBLISHER_NETWORK', 'TWITTER_PROFILE', 'TWITTER_SEARCH', 'TWITTER_TIMELINE', and 'TAP_*', which are more granular options for `PUBLISHER_NETWORK`.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'approval_status': {'name': 'approval_status', 'description': 'The approval status of the account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'business_id': {'name': 'business_id', 'description': 'The ID of the related business.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'business_name': {'name': 'business_name', 'description': 'The name of the related business.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'created_timestamp': {'name': 'created_timestamp', 'description': 'Timestamp of when a record was created.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_deleted': {'name': 'is_deleted', 'description': 'Whether the record has been deleted or not.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The ID of the account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'Name of the account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'industry_type': {'name': 'industry_type', 'description': 'The industry of the accounts.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'timezone': {'name': 'timezone', 'description': 'The timezone the account is set to.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'timezone_switched_timestamp': {'name': 'timezone_switched_timestamp', 'description': "The timestamp the account's timezone was last changed.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_timestamp': {'name': 'updated_timestamp', 'description': 'Timestamp of when the record was last updated in Google Ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'twitter_ads://models\\twitter.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'twitter_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.539229, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads`.`twitter_ads__account_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nwith accounts as (\n\n    select *\n    from {{ var('account_history') }}\n    where is_latest_version\n),\n\npromoted_tweet_report as (\n    \n    select *\n    from {{ var('promoted_tweet_report') }}\n),\n\nrollup_report as (\n\n    select \n        date_day,\n        account_id,\n        placement,\n        sum(clicks) as clicks, \n        sum(impressions) as impressions,\n        sum(spend) as spend,\n        sum(spend_micro) as spend_micro,\n        sum(url_clicks) as url_clicks\n\n        {{ fivetran_utils.persist_pass_through_columns('twitter_ads__promoted_tweet_report_passthrough_metrics', transform='sum') }}\n\n    from promoted_tweet_report\n    group by 1,2,3\n\n),\n\nfinal as (\n\n    select \n        report.date_day,\n        report.placement, \n        report.account_id,\n        accounts.name as account_name,\n        accounts.is_deleted,\n        accounts.timezone,\n        accounts.industry_type,\n        accounts.approval_status,\n        accounts.business_name,\n        accounts.business_id,\n        accounts.created_timestamp,\n        accounts.updated_timestamp,\n        accounts.timezone_switched_timestamp,\n        sum(report.clicks) as clicks, \n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend,\n        sum(report.spend_micro) as spend_micro,\n        sum(report.url_clicks) as url_clicks\n\n        {{ fivetran_utils.persist_pass_through_columns('twitter_ads__promoted_tweet_report_passthrough_metrics', transform='sum') }}\n\n    from rollup_report as report\n    left join accounts \n        on report.account_id = accounts.account_id\n\n    {{ dbt_utils.group_by(n=13) }}\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_twitter_ads__account_history'], ['stg_twitter_ads__promoted_tweet_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__account_history', 'model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report']}, 'compiled_path': None}, 'model.twitter_ads.twitter_ads__campaign_report': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads', 'name': 'twitter_ads__campaign_report', 'resource_type': 'model', 'package_name': 'twitter_ads', 'path': 'twitter_ads__campaign_report.sql', 'original_file_path': 'models\\twitter_ads__campaign_report.sql', 'unique_id': 'model.twitter_ads.twitter_ads__campaign_report', 'fqn': ['twitter_ads', 'twitter_ads__campaign_report'], 'alias': 'twitter_ads__campaign_report', 'checksum': {'name': 'sha256', 'checksum': 'ac412006847147c6ef722fbf416456e8a94a3f0fee9eeed3b26a663e9820a3ab'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents the daily performance of ads at the account and campaign level, within a placement in Twitter.\n', 'columns': {'campaign_id': {'name': 'campaign_id', 'description': 'The ID of the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The number of clicks on that date. Includes clicks on the URL (shortened or regular links), profile pic, screen name, username, detail, hashtags, and likes.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'The date of the performance.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions on that date.  This is the number of users who see a Promoted Ad either in their home timeline or search results.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The amount of spend on that date.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend_micro': {'name': 'spend_micro', 'description': 'The amount of spend, in micros, on that date.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_clicks': {'name': 'url_clicks', 'description': 'The number of URL clicks on that date.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'placement': {'name': 'placement', 'description': "Where on Twitter the ad is being displayed. Possible values include 'ALL_ON_TWITTER', 'PUBLISHER_NETWORK', 'TWITTER_PROFILE', 'TWITTER_SEARCH', 'TWITTER_TIMELINE', and 'TAP_*', which are more granular options for `PUBLISHER_NETWORK`.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The ID of the related account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The name of the related account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'created_timestamp': {'name': 'created_timestamp', 'description': 'Timestamp of when a record was created.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': 'The currency all metrics for the account are set to.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_deleted': {'name': 'is_deleted', 'description': 'Whether the record has been deleted or not.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'end_timestamp': {'name': 'end_timestamp', 'description': 'The time the campaign will end', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_status': {'name': 'campaign_status', 'description': 'The status of the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'frequency_cap': {'name': 'frequency_cap', 'description': 'The maximum number of times an ad could be delivered to a user.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_servable': {'name': 'is_servable', 'description': 'Whether the campaign is in a state to be actively served to users.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_standard_delivery': {'name': 'is_standard_delivery', 'description': 'Whether standard delivery is enabled (vs accelerated delivery).', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'start_timestamp': {'name': 'start_timestamp', 'description': 'The time the campaign will start.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_timestamp': {'name': 'updated_timestamp', 'description': 'Timestamp of when the record was last updated in Google Ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'funding_instrument_id': {'name': 'funding_instrument_id', 'description': 'Reference to the funding instrument.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_budget_amount': {'name': 'daily_budget_amount', 'description': 'The daily budget amount to be allocated to the campaign. The currency associated with the specified funding instrument will be used.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'total_budget_amount': {'name': 'total_budget_amount', 'description': 'The total budget amount to be allocated to the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'twitter_ads://models\\twitter.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'twitter_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.52531, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads`.`twitter_ads__campaign_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nwith report as (\n\n    select *\n    from {{ var('campaign_report') }}\n),\n\ncampaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_latest_version\n),\n\naccounts as (\n\n    select *\n    from {{ var('account_history') }}\n    where is_latest_version\n),\n\nfinal as (\n\n    select \n        report.date_day,\n        report.placement, \n        report.account_id,\n        accounts.name as account_name,\n        report.campaign_id,\n        campaigns.campaign_name,\n        campaigns.is_deleted,\n        campaigns.entity_status as campaign_status,\n        campaigns.currency,\n        campaigns.is_servable,\n        campaigns.is_standard_delivery,\n        campaigns.frequency_cap,\n        campaigns.start_timestamp,\n        campaigns.end_timestamp,\n        campaigns.created_timestamp,\n        campaigns.updated_timestamp,\n        campaigns.funding_instrument_id,\n        campaigns.daily_budget_amount,\n        campaigns.total_budget_amount,\n        sum(report.clicks) as clicks, \n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend,\n        sum(report.spend_micro) as spend_micro,\n        sum(report.url_clicks) as url_clicks\n\n        {{ fivetran_utils.persist_pass_through_columns('twitter_ads__campaign_report_passthrough_metrics', transform='sum') }}\n\n    from report \n    left join campaigns \n        on report.campaign_id = campaigns.campaign_id\n    left join accounts\n        on report.account_id = accounts.account_id\n\n    {{ dbt_utils.group_by(n=19) }}\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_twitter_ads__campaign_report'], ['stg_twitter_ads__campaign_history'], ['stg_twitter_ads__account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__campaign_report', 'model.twitter_ads_source.stg_twitter_ads__campaign_history', 'model.twitter_ads_source.stg_twitter_ads__account_history']}, 'compiled_path': None}, 'model.twitter_ads.twitter_ads__keyword_report': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads', 'name': 'twitter_ads__keyword_report', 'resource_type': 'model', 'package_name': 'twitter_ads', 'path': 'twitter_ads__keyword_report.sql', 'original_file_path': 'models\\twitter_ads__keyword_report.sql', 'unique_id': 'model.twitter_ads.twitter_ads__keyword_report', 'fqn': ['twitter_ads', 'twitter_ads__keyword_report'], 'alias': 'twitter_ads__keyword_report', 'checksum': {'name': 'sha256', 'checksum': '0ddfaeac37414648fe3241b0c879c7162ed91f6345ef8687c23c903a19149705'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents the daily performance of ads at the account, campaign, line item (ad group), and keyword level, within a placement in Twitter.\n', 'columns': {'account_id': {'name': 'account_id', 'description': 'The ID of the related account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend_micro': {'name': 'spend_micro', 'description': 'The spend for the line item + keyword on that day, in micros and in whichever currency was selected during account creation.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend for the line item + keyword on that day in whichever currency was selected during account creation.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The clicks for the line item + keyword on that day. Includes clicks on the URL (shortened or regular links), profile pic, screen name, username, detail, hashtags, and likes.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'The date of the performance.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The impressions for the line item + keyword on that day.  This is the number of users who see a Promoted Ad either in their home timeline or search results.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'line_item_id': {'name': 'line_item_id', 'description': 'The ID of the related line item (ad group).', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_clicks': {'name': 'url_clicks', 'description': 'The url clicks for the line item + keyword on that day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword': {'name': 'keyword', 'description': 'The keyword whose performance is being tracked.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_id': {'name': 'keyword_id', 'description': "Unique key of the table built from the combination of 'account_id', 'line_item_id', 'segment', and 'placement' fields.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'placement': {'name': 'placement', 'description': "Where on Twitter the ad is being displayed. Possible values include 'ALL_ON_TWITTER', 'PUBLISHER_NETWORK', 'TWITTER_PROFILE', 'TWITTER_SEARCH', 'TWITTER_TIMELINE', and 'TAP_*', which are more granular options for `PUBLISHER_NETWORK`.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'Name of the associated account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID of the related campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the related campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'line_item_name': {'name': 'line_item_name', 'description': 'The ID of the related line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': 'The currency all metrics for the account are set to.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'twitter_ads://models\\twitter.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'twitter_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.5435753, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads`.`twitter_ads__keyword_report`', 'raw_code': "{{ config(enabled=fivetran_utils.enabled_vars(['ad_reporting__twitter_ads_enabled','twitter_ads__using_keywords'])) }}\n\nwith report as (\n\n    select *\n    from {{ var('line_item_keywords_report') }}\n),\n\nline_items as (\n\n    select *\n    from {{ var('line_item_history') }}\n    where is_latest_version\n),\n\ncampaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_latest_version\n),\n\naccounts as (\n\n    select *\n    from {{ var('account_history') }}\n    where is_latest_version\n),\n\nfinal as (\n\n    select \n        report.date_day,\n        report.placement, \n        report.account_id,\n        accounts.name as account_name,\n        line_items.campaign_id,\n        campaigns.campaign_name,\n        report.line_item_id,\n        line_items.name as line_item_name,\n        report.keyword_id,\n        report.keyword,\n        line_items.currency,\n        sum(report.clicks) as clicks, \n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend,\n        sum(report.spend_micro) as spend_micro,\n        sum(report.url_clicks) as url_clicks\n\n        {{ fivetran_utils.persist_pass_through_columns('twitter_ads__line_item_keywords_report_passthrough_metrics', transform='sum')}}\n\n    from report \n    left join line_items\n        on report.line_item_id = line_items.line_item_id\n    left join campaigns \n        on line_items.campaign_id = campaigns.campaign_id\n    left join accounts\n        on report.account_id = accounts.account_id\n\n    {{ dbt_utils.group_by(n=11) }}\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_twitter_ads__line_item_keywords_report'], ['stg_twitter_ads__line_item_history'], ['stg_twitter_ads__campaign_history'], ['stg_twitter_ads__account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.enabled_vars', 'macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report', 'model.twitter_ads_source.stg_twitter_ads__line_item_history', 'model.twitter_ads_source.stg_twitter_ads__campaign_history', 'model.twitter_ads_source.stg_twitter_ads__account_history']}, 'compiled_path': None}, 'model.twitter_ads.twitter_ads__line_item_report': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads', 'name': 'twitter_ads__line_item_report', 'resource_type': 'model', 'package_name': 'twitter_ads', 'path': 'twitter_ads__line_item_report.sql', 'original_file_path': 'models\\twitter_ads__line_item_report.sql', 'unique_id': 'model.twitter_ads.twitter_ads__line_item_report', 'fqn': ['twitter_ads', 'twitter_ads__line_item_report'], 'alias': 'twitter_ads__line_item_report', 'checksum': {'name': 'sha256', 'checksum': 'db0229d29cf1dbd5701d716465c399fe7be337436c2887f82fc25918d98ca90b'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents the daily performance of ads at the account, campaign, and line item (ad group) level, within a placement in Twitter.\n', 'columns': {'campaign_id': {'name': 'campaign_id', 'description': "The ID of the line item's campaign.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': "The name of the line item's campaign.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The number of clicks on that date. Includes clicks on the URL (shortened or regular links), profile pic, screen name, username, detail, hashtags, and likes.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'The date of the performance.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions on that date.  This is the number of users who see a Promoted Ad either in their home timeline or search results.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'line_item_id': {'name': 'line_item_id', 'description': 'The ID of the line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'line_item_name': {'name': 'line_item_name', 'description': 'The name of the line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The amount of spend on that date.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend_micro': {'name': 'spend_micro', 'description': 'The amount of spend, in micros, on that date.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_clicks': {'name': 'url_clicks', 'description': 'The number of URL clicks on that date.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'placement': {'name': 'placement', 'description': "Where on Twitter the ad is being displayed. Possible values include 'ALL_ON_TWITTER', 'PUBLISHER_NETWORK', 'TWITTER_PROFILE', 'TWITTER_SEARCH', 'TWITTER_TIMELINE', and 'TAP_*', which are more granular options for `PUBLISHER_NETWORK`.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The ID of the related account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The name of the related account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser_domain': {'name': 'advertiser_domain', 'description': 'The website domain for this advertiser, without the protocol specification.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser_user_id': {'name': 'advertiser_user_id', 'description': 'The Twitter user identifier for the handle promoting the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'bid_type': {'name': 'bid_type', 'description': 'The bidding mechanism.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'bid_unit': {'name': 'bid_unit', 'description': 'The bid unit for this line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'charge_by': {'name': 'charge_by', 'description': 'The unit to charge this line item by.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'created_timestamp': {'name': 'created_timestamp', 'description': 'Timestamp of when a record was created.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'creative_source': {'name': 'creative_source', 'description': 'The source of the creatives for the line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': 'The currency in which metrics will be reported.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_deleted': {'name': 'is_deleted', 'description': 'Whether the record has been deleted or not.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'end_timestamp': {'name': 'end_timestamp', 'description': 'The timestamp at which the line item will stop being served.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'line_item_status': {'name': 'line_item_status', 'description': 'The status of the line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_status': {'name': 'campaign_status', 'description': "The status of the line item's related campaign.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'objective': {'name': 'objective', 'description': 'The campaign objective for this line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'optimization': {'name': 'optimization', 'description': 'The optimization setting to use with this line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'primary_web_event_tag': {'name': 'primary_web_event_tag', 'description': 'The identifier of the primary web event tag. Allows more accurate tracking of engagements for the campaign pertaining to this line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'product_type': {'name': 'product_type', 'description': 'The type of promoted product that this line item will contain.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'start_timestamp': {'name': 'start_timestamp', 'description': 'The timestamp at which the line item will start being served.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_timestamp': {'name': 'updated_timestamp', 'description': 'Timestamp of when the record was last updated in Google Ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'bid_amount': {'name': 'bid_amount', 'description': 'The bid amount to be associated with this line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'total_budget_amount': {'name': 'total_budget_amount', 'description': 'The total budget amount to be allocated to the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'target_cpa': {'name': 'target_cpa', 'description': 'The target cost per acquisition for the line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'twitter_ads://models\\twitter.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'twitter_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.533285, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads`.`twitter_ads__line_item_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nwith report as (\n\n    select *\n    from {{ var('line_item_report') }}\n),\n\nline_items as (\n\n    select *\n    from {{ var('line_item_history') }}\n    where is_latest_version\n),\n\ncampaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_latest_version\n),\n\naccounts as (\n\n    select *\n    from {{ var('account_history') }}\n    where is_latest_version\n),\n\nfinal as (\n\n    select \n        report.date_day,\n        report.placement, \n        report.account_id,\n        accounts.name as account_name,\n        line_items.campaign_id,\n        campaigns.campaign_name,\n        report.line_item_id,\n        line_items.name as line_item_name,\n        line_items.is_deleted,\n        line_items.entity_status as line_item_status,\n        campaigns.entity_status as campaign_status,\n        line_items.currency,\n        line_items.advertiser_domain,\n        line_items.advertiser_user_id,\n        line_items.bid_type,\n        line_items.bid_unit,\n        line_items.charge_by,\n        line_items.objective,\n        line_items.optimization,\n        line_items.product_type,\n        line_items.primary_web_event_tag,\n        line_items.creative_source,\n        line_items.start_timestamp,\n        line_items.end_timestamp,\n        line_items.created_timestamp,\n        line_items.updated_timestamp,\n        line_items.target_cpa,\n        line_items.total_budget_amount,\n        line_items.bid_amount,\n        sum(report.clicks) as clicks, \n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend,\n        sum(report.spend_micro) as spend_micro,\n        sum(report.url_clicks) as url_clicks\n\n        {{ fivetran_utils.persist_pass_through_columns('twitter_ads__line_item_report_passthrough_metrics', transform='sum')}}\n\n    from report \n    left join line_items\n        on report.line_item_id = line_items.line_item_id\n    left join campaigns \n        on line_items.campaign_id = campaigns.campaign_id\n    left join accounts\n        on report.account_id = accounts.account_id\n\n    {{ dbt_utils.group_by(n=29) }}\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_twitter_ads__line_item_report'], ['stg_twitter_ads__line_item_history'], ['stg_twitter_ads__campaign_history'], ['stg_twitter_ads__account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__line_item_report', 'model.twitter_ads_source.stg_twitter_ads__line_item_history', 'model.twitter_ads_source.stg_twitter_ads__campaign_history', 'model.twitter_ads_source.stg_twitter_ads__account_history']}, 'compiled_path': None}, 'model.twitter_ads.twitter_ads__promoted_tweet_report': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads', 'name': 'twitter_ads__promoted_tweet_report', 'resource_type': 'model', 'package_name': 'twitter_ads', 'path': 'twitter_ads__promoted_tweet_report.sql', 'original_file_path': 'models\\twitter_ads__promoted_tweet_report.sql', 'unique_id': 'model.twitter_ads.twitter_ads__promoted_tweet_report', 'fqn': ['twitter_ads', 'twitter_ads__promoted_tweet_report'], 'alias': 'twitter_ads__promoted_tweet_report', 'checksum': {'name': 'sha256', 'checksum': 'bfe92b3b7b4256289f1f52608543c3e81151c3e345dc27623c7e7658386058d6'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents the daily performance of ads at the account, campaign, line item (ad group), and promoted tweet level, within a placement in Twitter.\n', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date of the performance.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'placement': {'name': 'placement', 'description': "Where on Twitter the ad is being displayed. Possible values include 'ALL_ON_TWITTER', 'PUBLISHER_NETWORK', 'TWITTER_PROFILE', 'TWITTER_SEARCH', 'TWITTER_TIMELINE', and 'TAP_*', which are more granular options for `PUBLISHER_NETWORK`.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The ID of the related account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The name of the related account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID of the related campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the related campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'line_item_id': {'name': 'line_item_id', 'description': 'The ID of the related line item (ad group).', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'line_item_name': {'name': 'line_item_name', 'description': 'The ID of the related line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'promoted_tweet_id': {'name': 'promoted_tweet_id', 'description': 'The ID of the promoted tweet that the URL appeared in.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'tweet_id': {'name': 'tweet_id', 'description': 'The ID of the tweet that the URL appeared in.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'tweet_name': {'name': 'tweet_name', 'description': 'The name, if provided, of the tweet that the URL appeared in.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'full_text': {'name': 'full_text', 'description': 'The full text of the tweet that the URL appeared in.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': 'The currency all metrics for the account are set to.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The clicks for the promoted tweet + URL on that day. Includes clicks on the URL (shortened or regular links), profile pic, screen name, username, detail, hashtags, and likes.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The impressions for the promoted tweet + URL on that day.  This is the number of users who see a Promoted Ad either in their home timeline or search results.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend for the promoted tweet + URL on that day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend_micro': {'name': 'spend_micro', 'description': 'The spend, in micros, for the tweet + URL on that day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_clicks': {'name': 'url_clicks', 'description': 'The URL clicks for the promoted tweet + URL on that day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'approval_status': {'name': 'approval_status', 'description': 'The approval status of the promoted tweet.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'created_timestamp': {'name': 'created_timestamp', 'description': 'Timestamp of when a record was created.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_deleted': {'name': 'is_deleted', 'description': 'Whether the record has been deleted or not.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'promoted_tweet_status': {'name': 'promoted_tweet_status', 'description': 'The status of the promoted tweet.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_status': {'name': 'campaign_status', 'description': "The status of the tweet's campaign.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'line_item_status': {'name': 'line_item_status', 'description': "The status of the tweet's line item.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_timestamp': {'name': 'updated_timestamp', 'description': 'Timestamp of when the record was last updated in Google Ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'language': {'name': 'language', 'description': 'Two-letter language code of the tweet.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'twitter_ads://models\\twitter.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'twitter_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.5504713, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads`.`twitter_ads__promoted_tweet_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nwith report as (\n\n    select *\n    from {{ var('promoted_tweet_report') }}\n),\n\ncampaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_latest_version\n),\n\naccounts as (\n\n    select *\n    from {{ var('account_history') }}\n    where is_latest_version\n),\n\nline_items as (\n\n    select *\n    from {{ var('line_item_history') }}\n    where is_latest_version\n),\n\npromoted_tweets as (\n\n    select *\n    from {{ var('promoted_tweet_history') }}\n    where is_latest_version\n),\n\ntweets as (\n\n    select *\n    from {{ var('tweet') }}\n),\n\nfinal as (\n\n    select \n        report.date_day,\n        report.placement, \n        accounts.account_id,\n        accounts.name as account_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        line_items.line_item_id,\n        line_items.name as line_item_name,\n        promoted_tweets.promoted_tweet_id,\n        promoted_tweets.tweet_id,\n        tweets.name as tweet_name,\n        tweets.full_text,\n        promoted_tweets.is_deleted,\n        promoted_tweets.entity_status as promoted_tweet_status,\n        campaigns.entity_status as campaign_status,\n        line_items.entity_status as line_item_status,\n        tweets.language,\n        campaigns.currency,\n        promoted_tweets.approval_status,\n        promoted_tweets.created_timestamp,\n        promoted_tweets.updated_timestamp,\n        sum(report.clicks) as clicks, \n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend,\n        sum(report.spend_micro) as spend_micro,\n        sum(report.url_clicks) as url_clicks\n\n        {{ fivetran_utils.persist_pass_through_columns('twitter_ads__promoted_tweet_report_passthrough_metrics', transform='sum') }}\n\n    from report \n    left join promoted_tweets \n        on report.promoted_tweet_id = promoted_tweets.promoted_tweet_id\n    left join tweets\n        on promoted_tweets.tweet_id = tweets.tweet_id\n    left join line_items\n        on promoted_tweets.line_item_id = line_items.line_item_id\n    left join campaigns \n        on line_items.campaign_id = campaigns.campaign_id\n    left join accounts\n        on report.account_id = accounts.account_id\n\n    {{ dbt_utils.group_by(n=21) }}\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_twitter_ads__promoted_tweet_report'], ['stg_twitter_ads__campaign_history'], ['stg_twitter_ads__account_history'], ['stg_twitter_ads__line_item_history'], ['stg_twitter_ads__promoted_tweet_history'], ['stg_twitter_ads__tweet']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report', 'model.twitter_ads_source.stg_twitter_ads__campaign_history', 'model.twitter_ads_source.stg_twitter_ads__account_history', 'model.twitter_ads_source.stg_twitter_ads__line_item_history', 'model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history', 'model.twitter_ads_source.stg_twitter_ads__tweet']}, 'compiled_path': None}, 'model.twitter_ads.twitter_ads__url_report': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads', 'name': 'twitter_ads__url_report', 'resource_type': 'model', 'package_name': 'twitter_ads', 'path': 'twitter_ads__url_report.sql', 'original_file_path': 'models\\twitter_ads__url_report.sql', 'unique_id': 'model.twitter_ads.twitter_ads__url_report', 'fqn': ['twitter_ads', 'twitter_ads__url_report'], 'alias': 'twitter_ads__url_report', 'checksum': {'name': 'sha256', 'checksum': '06fc0ec0eca546e85c1f848988ec0e3b8c4c30504aa9d920c690fc58ed4ae5cb'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents the daily performance of ads at the account, campaign, line item (ad group), promoted tweet, and url level, within a placement in Twitter.\n', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date of the performance.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'placement': {'name': 'placement', 'description': "Where on Twitter the ad is being displayed. Possible values include 'ALL_ON_TWITTER', 'PUBLISHER_NETWORK', 'TWITTER_PROFILE', 'TWITTER_SEARCH', 'TWITTER_TIMELINE', and 'TAP_*', which are more granular options for `PUBLISHER_NETWORK`.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The ID of the related account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The name of the related account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID of the related campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the related campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'line_item_id': {'name': 'line_item_id', 'description': 'The ID of the related line item (ad group).', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'line_item_name': {'name': 'line_item_name', 'description': 'The ID of the related line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'promoted_tweet_id': {'name': 'promoted_tweet_id', 'description': 'The ID of the promoted tweet that the URL appeared in.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'tweet_id': {'name': 'tweet_id', 'description': 'The ID of the tweet that the URL appeared in.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'tweet_name': {'name': 'tweet_name', 'description': 'The name, if provided, of the tweet that the URL appeared in.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'tweet_full_text': {'name': 'tweet_full_text', 'description': 'The full text of the tweet that the URL appeared in.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'base_url': {'name': 'base_url', 'description': 'The base URL of the ad, extracted from the `expanded_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_host': {'name': 'url_host', 'description': 'The URL host of the ad, extracted from the `expanded_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_path': {'name': 'url_path', 'description': 'The URL path of the ad, extracted from the `expanded_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_source': {'name': 'utm_source', 'description': 'The utm_source parameter of the ad, extracted from the `expanded_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_medium': {'name': 'utm_medium', 'description': 'The utm_medium parameter of the ad, extracted from the `expanded_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_campaign': {'name': 'utm_campaign', 'description': 'The utm_campaign parameter of the ad, extracted from the `expanded_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_content': {'name': 'utm_content', 'description': 'The utm_content parameter of the ad, extracted from the `expanded_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_term': {'name': 'utm_term', 'description': 'The utm_term parameter of the ad, extracted from the `expanded_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'display_url': {'name': 'display_url', 'description': 'The URL as it will be displayed.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'expanded_url': {'name': 'expanded_url', 'description': 'The fully expanded URL.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': 'The currency all metrics for the account are set to.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The clicks for the promoted tweet + URL on that day. Includes clicks on the URL (shortened or regular links), profile pic, screen name, username, detail, hashtags, and likes.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The impressions for the promoted tweet + URL on that day.  This is the number of users who see a Promoted Ad either in their home timeline or search results.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend for the promoted tweet + URL on that day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend_micro': {'name': 'spend_micro', 'description': 'The spend, in micros, for the tweet + URL on that day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_clicks': {'name': 'url_clicks', 'description': 'The URL clicks for the promoted tweet + URL on that day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'twitter_ads://models\\twitter.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'twitter_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.5576773, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads`.`twitter_ads__url_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nwith report as (\n\n    select *\n    from {{ var('promoted_tweet_report') }}\n),\n\ncampaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_latest_version\n),\n\naccounts as (\n\n    select *\n    from {{ var('account_history') }}\n    where is_latest_version\n),\n\nline_items as (\n\n    select *\n    from {{ var('line_item_history') }}\n    where is_latest_version\n),\n\npromoted_tweets as (\n\n    select *\n    from {{ var('promoted_tweet_history') }}\n    where is_latest_version\n),\n\ntweets as (\n\n    select *\n    from {{ var('tweet') }}\n),\n\ntweet_url as (\n\n    select *\n    from {{ var('tweet_url') }}\n    where index = 0\n),\n\nfinal as (\n\n    select \n        report.date_day,\n        report.placement, \n        accounts.account_id,\n        accounts.name as account_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        line_items.line_item_id,\n        line_items.name as line_item_name,\n        promoted_tweets.promoted_tweet_id,\n        promoted_tweets.tweet_id,\n        tweets.name as tweet_name,\n        tweets.full_text as tweet_full_text,\n        tweet_url.base_url,\n        tweet_url.url_host,\n        tweet_url.url_path,\n        tweet_url.utm_source,\n        tweet_url.utm_medium,\n        tweet_url.utm_campaign,\n        tweet_url.utm_content,\n        tweet_url.utm_term,\n        tweet_url.expanded_url,\n        tweet_url.display_url,\n        campaigns.currency,\n        sum(report.clicks) as clicks, \n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend,\n        sum(report.spend_micro) as spend_micro,\n        sum(report.url_clicks) as url_clicks\n\n        {{ fivetran_utils.persist_pass_through_columns('twitter_ads__promoted_tweet_report_passthrough_metrics', transform='sum') }}\n\n    from report \n    left join promoted_tweets \n        on report.promoted_tweet_id = promoted_tweets.promoted_tweet_id\n    left join tweet_url \n        on promoted_tweets.tweet_id = tweet_url.tweet_id\n    left join tweets\n        on promoted_tweets.tweet_id = tweets.tweet_id\n    left join line_items\n        on promoted_tweets.line_item_id = line_items.line_item_id\n    left join campaigns \n        on line_items.campaign_id = campaigns.campaign_id\n    left join accounts\n        on report.account_id = accounts.account_id\n    \n    {% if var('ad_reporting__url_report__using_null_filter', True) %}\n        where tweet_url.expanded_url is not null\n    {% endif %}\n\n    {{ dbt_utils.group_by(n=23) }}\n\n    \n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_twitter_ads__promoted_tweet_report'], ['stg_twitter_ads__campaign_history'], ['stg_twitter_ads__account_history'], ['stg_twitter_ads__line_item_history'], ['stg_twitter_ads__promoted_tweet_history'], ['stg_twitter_ads__tweet'], ['stg_twitter_ads__tweet_url']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report', 'model.twitter_ads_source.stg_twitter_ads__campaign_history', 'model.twitter_ads_source.stg_twitter_ads__account_history', 'model.twitter_ads_source.stg_twitter_ads__line_item_history', 'model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history', 'model.twitter_ads_source.stg_twitter_ads__tweet', 'model.twitter_ads_source.stg_twitter_ads__tweet_url']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__account_history': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__account_history', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'stg_twitter_ads__account_history.sql', 'original_file_path': 'models\\stg_twitter_ads__account_history.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__account_history', 'fqn': ['twitter_ads_source', 'stg_twitter_ads__account_history'], 'alias': 'stg_twitter_ads__account_history', 'checksum': {'name': 'sha256', 'checksum': '9ac9bf89b2163524505de7f16c38d7103b3af267458bf5190428238b25b87bd4'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents a version of each account. The versions can be differentiated by the updated_at timestamp.', 'columns': {'approval_status': {'name': 'approval_status', 'description': 'The approval status of the account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'business_id': {'name': 'business_id', 'description': 'The ID of the related business.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'business_name': {'name': 'business_name', 'description': 'The name of the related business.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'created_timestamp': {'name': 'created_timestamp', 'description': 'The timestamp the account was created.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_deleted': {'name': 'is_deleted', 'description': 'Whether the record has been deleted or not.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The ID of the account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'industry_type': {'name': 'industry_type', 'description': 'The industry of the accounts.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'name': {'name': 'name', 'description': 'The name of the account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'timezone': {'name': 'timezone', 'description': 'The timezone the account is set to.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'timezone_switched_timestamp': {'name': 'timezone_switched_timestamp', 'description': "The timestamp the account's timezone was last changed.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_timestamp': {'name': 'updated_timestamp', 'description': 'The timestamp the account was last updated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_latest_version': {'name': 'is_latest_version', 'description': 'Whether the record is the most latest version for the account', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'salt': {'name': 'salt', 'description': 'The random encryption key used to hash data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'twitter_ads_source://models\\stg_twitter_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433487.67056, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__account_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nwith source as (\n\n    select *\n    from {{ ref('stg_twitter_ads__account_history_tmp') }}\n\n),\n\nfields as (\n\n    select\n    \n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_twitter_ads__account_history_tmp')),\n                staging_columns=get_account_history_columns()\n            )\n        }}\n\n    from source\n\n), \n\nfinal as (\n\n    select\n        approval_status,\n        business_id,\n        business_name,\n        created_at as created_timestamp,\n        deleted as is_deleted,\n        id as account_id,\n        industry_type,\n        name,\n        salt,\n        timezone,\n        timezone_switch_at as timezone_switched_timestamp,\n        updated_at as updated_timestamp,\n        row_number() over (partition by id order by updated_at desc) = 1 as is_latest_version\n    \n    from fields \n)\n\nselect * from final", 'language': 'sql', 'refs': [['stg_twitter_ads__account_history_tmp'], ['stg_twitter_ads__account_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.twitter_ads_source.get_account_history_columns', 'macro.fivetran_utils.fill_staging_columns'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__account_history_tmp', 'model.twitter_ads_source.stg_twitter_ads__account_history_tmp']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__campaign_history': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__campaign_history', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'stg_twitter_ads__campaign_history.sql', 'original_file_path': 'models\\stg_twitter_ads__campaign_history.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__campaign_history', 'fqn': ['twitter_ads_source', 'stg_twitter_ads__campaign_history'], 'alias': 'stg_twitter_ads__campaign_history', 'checksum': {'name': 'sha256', 'checksum': '774d386e9ad64cc31bc4067ef71444c35b0dd5b24e7635905ca4f774d6996934'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents a version of each campaign. The versions can be differentiated by the updated_at timestamp.', 'columns': {'account_id': {'name': 'account_id', 'description': 'The ID of the related account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'created_timestamp': {'name': 'created_timestamp', 'description': 'The timestamp the account was created.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': 'The currency all metrics for the account are set to.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_budget_amount_local_micro': {'name': 'daily_budget_amount_local_micro', 'description': 'The daily budget amount to be allocated to the campaign, in micros. The currency associated with the specified funding instrument will be used.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_deleted': {'name': 'is_deleted', 'description': 'Whether the record has been deleted or not.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'duration_in_days': {'name': 'duration_in_days', 'description': 'The time period within which the frequency_cap is achieved.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'end_timestamp': {'name': 'end_timestamp', 'description': 'The time the campaign will end', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'entity_status': {'name': 'entity_status', 'description': 'The status of the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'frequency_cap': {'name': 'frequency_cap', 'description': 'The maximum number of times an ad could be delivered to a user.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID of the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_servable': {'name': 'is_servable', 'description': 'Whether the campaign is in a state to be actively served to users.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_standard_delivery': {'name': 'is_standard_delivery', 'description': 'Whether standard delivery is enabled (vs accelerated delivery).', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'start_timestamp': {'name': 'start_timestamp', 'description': 'The time the campaign will start.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'total_budget_amount_local_micro': {'name': 'total_budget_amount_local_micro', 'description': 'The total budget amount to be allocated to the campaign, in micros.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_timestamp': {'name': 'updated_timestamp', 'description': 'The timestamp the account was last updated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_latest_version': {'name': 'is_latest_version', 'description': 'Whether the record is the most latest version for the campaign', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'funding_instrument_id': {'name': 'funding_instrument_id', 'description': 'Reference to the funding instrument.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_budget_amount': {'name': 'daily_budget_amount', 'description': 'The daily budget amount to be allocated to the campaign. The currency associated with the specified funding instrument will be used.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'total_budget_amount': {'name': 'total_budget_amount', 'description': 'The total budget amount to be allocated to the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'twitter_ads_source://models\\stg_twitter_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433487.674904, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__campaign_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nwith source as (\n\n    select *\n    from {{ ref('stg_twitter_ads__campaign_history_tmp') }}\n\n),\n\nfields as (\n\n    select\n    \n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_twitter_ads__campaign_history_tmp')),\n                staging_columns=get_campaign_history_columns()\n            )\n        }}\n\n    from source\n\n), \n\nfinal as (\n\n    select\n        account_id,\n        created_at as created_timestamp,\n        currency,\n        daily_budget_amount_local_micro,\n        deleted as is_deleted,\n        duration_in_days,\n        end_time as end_timestamp,\n        entity_status,\n        frequency_cap,\n        funding_instrument_id,\n        id as campaign_id,\n        name as campaign_name,\n        servable as is_servable,\n        standard_delivery as is_standard_delivery,\n        start_time as start_timestamp,\n        total_budget_amount_local_micro,\n        updated_at as updated_timestamp,\n        round(daily_budget_amount_local_micro / 1000000.0,2) as daily_budget_amount,\n        round(total_budget_amount_local_micro / 1000000.0,2) as total_budget_amount,\n        row_number() over (partition by id order by updated_at desc) = 1 as is_latest_version\n    \n    from fields \n)\n\nselect * from final", 'language': 'sql', 'refs': [['stg_twitter_ads__campaign_history_tmp'], ['stg_twitter_ads__campaign_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.twitter_ads_source.get_campaign_history_columns', 'macro.fivetran_utils.fill_staging_columns'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__campaign_history_tmp', 'model.twitter_ads_source.stg_twitter_ads__campaign_history_tmp']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__campaign_report': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__campaign_report', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'stg_twitter_ads__campaign_report.sql', 'original_file_path': 'models\\stg_twitter_ads__campaign_report.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__campaign_report', 'fqn': ['twitter_ads_source', 'stg_twitter_ads__campaign_report'], 'alias': 'stg_twitter_ads__campaign_report', 'checksum': {'name': 'sha256', 'checksum': 'f81071b6cdbc860c2ae2316870f010fe0f0fc2c8166fc3b2d5eeea729f6defcd'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the performance of an ad campaign on a given day, for its placement in Twitter.', 'columns': {'account_id': {'name': 'account_id', 'description': 'The ID of the related account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend_micro': {'name': 'spend_micro', 'description': 'The spend for the campaign on that day, in micros and in whichever currency was selected during account creation.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend for the campaign on that day in whichever currency was selected during account creation.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The clicks for the campaign on that day. Includes clicks on the URL (shortened or regular links), profile pic, screen name, username, detail, hashtags, and likes.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'The date of the performance.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The impressions for the campaign on that day.  This is the number of users who see a Promoted Ad either in their home timeline or search results.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID of the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_clicks': {'name': 'url_clicks', 'description': 'The url clicks for the campaign on that day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'placement': {'name': 'placement', 'description': "Where on Twitter the ad is being displayed. Possible values include 'ALL_ON_TWITTER', 'PUBLISHER_NETWORK', 'TWITTER_PROFILE', 'TWITTER_SEARCH', 'TWITTER_TIMELINE', and 'TAP_*', which are more granular options for `PUBLISHER_NETWORK`.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'twitter_ads_source://models\\stg_twitter_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433487.6950505, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__campaign_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_twitter_ads__campaign_report_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_twitter_ads__campaign_report_tmp')),\n                staging_columns=get_campaign_report_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select \n        {{ dbt.date_trunc('day', 'date') }} as date_day,\n        account_id,\n        campaign_id,\n        placement,\n        clicks,\n        impressions,\n        billed_charge_local_micro as spend_micro,\n        round(billed_charge_local_micro / 1000000.0,2) as spend,\n        url_clicks\n\n        {{ fivetran_utils.fill_pass_through_columns('twitter_ads__campaign_report_passthrough_metrics') }}\n    \n    from fields\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_twitter_ads__campaign_report_tmp'], ['stg_twitter_ads__campaign_report_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.twitter_ads_source.get_campaign_report_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.date_trunc', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__campaign_report_tmp', 'model.twitter_ads_source.stg_twitter_ads__campaign_report_tmp']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__line_item_history': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__line_item_history', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'stg_twitter_ads__line_item_history.sql', 'original_file_path': 'models\\stg_twitter_ads__line_item_history.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__line_item_history', 'fqn': ['twitter_ads_source', 'stg_twitter_ads__line_item_history'], 'alias': 'stg_twitter_ads__line_item_history', 'checksum': {'name': 'sha256', 'checksum': '46a8268335b747ca45d70e2b6f3c9a426b26a655d751cdc0843b4a3d41af8598'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents a version of each line item. The versions can be differentiated by the updated_at timestamp.', 'columns': {'advertiser_domain': {'name': 'advertiser_domain', 'description': 'The website domain for this advertiser, without the protocol specification.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser_user_id': {'name': 'advertiser_user_id', 'description': 'The Twitter user identifier for the handle promoting the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'automatically_select_bid': {'name': 'automatically_select_bid', 'description': 'Whether automatically optimize bidding is enabled based on daily budget and campaign flight dates.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'bid_amount_local_micro': {'name': 'bid_amount_local_micro', 'description': 'The bid amount to be associated with this line item, in micros.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'bid_type': {'name': 'bid_type', 'description': 'The bidding mechanism.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'bid_unit': {'name': 'bid_unit', 'description': 'The bid unit for this line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID of the related campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'charge_by': {'name': 'charge_by', 'description': 'The unit to charge this line item by.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'created_timestamp': {'name': 'created_timestamp', 'description': 'The timestamp the account was created.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'creative_source': {'name': 'creative_source', 'description': 'The source of the creatives for the line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': 'The currency in which metrics will be reported.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_deleted': {'name': 'is_deleted', 'description': 'Whether the record has been deleted or not.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'end_timestamp': {'name': 'end_timestamp', 'description': 'The timestamp at which the line item will stop being served.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'entity_status': {'name': 'entity_status', 'description': 'The status of the line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'line_item_id': {'name': 'line_item_id', 'description': 'The ID of the line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'name': {'name': 'name', 'description': 'The name of the line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'objective': {'name': 'objective', 'description': 'The campaign objective for this line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'optimization': {'name': 'optimization', 'description': 'The optimization setting to use with this line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'primary_web_event_tag': {'name': 'primary_web_event_tag', 'description': 'The identifier of the primary web event tag. Allows more accurate tracking of engagements for the campaign pertaining to this line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'product_type': {'name': 'product_type', 'description': 'The type of promoted product that this line item will contain.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'start_timestamp': {'name': 'start_timestamp', 'description': 'The timestamp at which the line item will start being served.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'target_cpa_local_micro': {'name': 'target_cpa_local_micro', 'description': 'The target cost per acquisition for the line item, in micros.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'total_budget_amount_local_micro': {'name': 'total_budget_amount_local_micro', 'description': 'The total budget amount to be allocated to the line item, in micros.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_timestamp': {'name': 'updated_timestamp', 'description': 'The timestamp the account was last updated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_latest_version': {'name': 'is_latest_version', 'description': 'Whether the record is the most latest version for the line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'bid_amount': {'name': 'bid_amount', 'description': 'The bid amount to be associated with this line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'total_budget_amount': {'name': 'total_budget_amount', 'description': 'The total budget amount to be allocated to the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'target_cpa': {'name': 'target_cpa', 'description': 'The target cost per acquisition for the line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'twitter_ads_source://models\\stg_twitter_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433487.6826112, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__line_item_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nwith source as (\n\n    select *\n    from {{ ref('stg_twitter_ads__line_item_history_tmp') }}\n\n),\n\nfields as (\n\n    select\n    \n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_twitter_ads__line_item_history_tmp')),\n                staging_columns=get_line_item_history_columns()\n            )\n        }}\n\n    from source\n\n), \n\nfinal as (\n\n    select\n        advertiser_domain,\n        advertiser_user_id,\n        automatically_select_bid,\n        bid_amount_local_micro,\n        bid_type,\n        bid_unit,\n        campaign_id,\n        charge_by,\n        created_at as created_timestamp,\n        creative_source,\n        currency,\n        deleted as is_deleted,\n        end_time as end_timestamp,\n        entity_status,\n        id as line_item_id,\n        name,\n        objective,\n        optimization,\n        primary_web_event_tag,\n        product_type,\n        start_time as start_timestamp,\n        target_cpa_local_micro,\n        total_budget_amount_local_micro,\n        updated_at as updated_timestamp,\n        round(bid_amount_local_micro / 1000000.0,2) as bid_amount,\n        round(total_budget_amount_local_micro / 1000000.0,2) as total_budget_amount,\n        round(target_cpa_local_micro / 1000000.0,2) as target_cpa,\n        row_number() over (partition by id order by updated_at desc) = 1 as is_latest_version\n    \n    from fields \n)\n\nselect * from final", 'language': 'sql', 'refs': [['stg_twitter_ads__line_item_history_tmp'], ['stg_twitter_ads__line_item_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.twitter_ads_source.get_line_item_history_columns', 'macro.fivetran_utils.fill_staging_columns'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__line_item_history_tmp', 'model.twitter_ads_source.stg_twitter_ads__line_item_history_tmp']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__line_item_keywords_report', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'stg_twitter_ads__line_item_keywords_report.sql', 'original_file_path': 'models\\stg_twitter_ads__line_item_keywords_report.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report', 'fqn': ['twitter_ads_source', 'stg_twitter_ads__line_item_keywords_report'], 'alias': 'stg_twitter_ads__line_item_keywords_report', 'checksum': {'name': 'sha256', 'checksum': 'b980b624c4483406f75c6c3f69c6ad4579616881539ba383f96f6e1b001df09a'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the performance of a line item (ad group) and keyword combination on a given day, for its placement in Twitter.', 'columns': {'keyword_id': {'name': 'keyword_id', 'description': "Unique key of the table built from the combination of 'account_id', 'line_item_id','segment', and 'placement' fields.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The ID of the related account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend_micro': {'name': 'spend_micro', 'description': 'The spend for the line item + keyword on that day, in micros and in whichever currency was selected during account creation.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend for the line item + keyword on that day in whichever currency was selected during account creation.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The clicks for the line item + keyword on that day. Includes clicks on the URL (shortened or regular links), profile pic, screen name, username, detail, hashtags, and likes.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'The date of the performance.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The impressions for the line item + keyword on that day.  This is the number of users who see a Promoted Ad either in their home timeline or search results.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'line_item_id': {'name': 'line_item_id', 'description': 'The ID of the line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_clicks': {'name': 'url_clicks', 'description': 'The url clicks for the line item + keyword on that day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword': {'name': 'keyword', 'description': 'The keyword whose performance is being tracked.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'placement': {'name': 'placement', 'description': "Where on Twitter the ad is being displayed. Possible values include 'ALL_ON_TWITTER', 'PUBLISHER_NETWORK', 'TWITTER_PROFILE', 'TWITTER_SEARCH', 'TWITTER_TIMELINE', and 'TAP_*', which are more granular options for `PUBLISHER_NETWORK`.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'twitter_ads_source://models\\stg_twitter_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433487.7009437, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__line_item_keywords_report`', 'raw_code': "{{ config(enabled=fivetran_utils.enabled_vars(['ad_reporting__twitter_ads_enabled','twitter_ads__using_keywords'])) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_twitter_ads__line_item_keywords_report_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_twitter_ads__line_item_keywords_report_tmp')),\n                staging_columns=get_line_item_keywords_report_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select \n        {{ dbt.date_trunc('day', 'date') }} as date_day,\n        {{ dbt_utils.generate_surrogate_key(['account_id', 'line_item_id','segment','placement']) }} as keyword_id,\n        account_id,\n        line_item_id,\n        segment as keyword,\n        placement,\n        clicks,\n        impressions,\n        billed_charge_local_micro as spend_micro,\n        round(billed_charge_local_micro / 1000000.0,2) as spend,\n        url_clicks\n\n        {{ fivetran_utils.fill_pass_through_columns('twitter_ads__line_item_keywords_report_passthrough_metrics') }}\n\n    from fields\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_twitter_ads__line_item_keywords_report_tmp'], ['stg_twitter_ads__line_item_keywords_report_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.enabled_vars', 'macro.twitter_ads_source.get_line_item_keywords_report_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.date_trunc', 'macro.dbt_utils.generate_surrogate_key', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report_tmp', 'model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report_tmp']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__line_item_report': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__line_item_report', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'stg_twitter_ads__line_item_report.sql', 'original_file_path': 'models\\stg_twitter_ads__line_item_report.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__line_item_report', 'fqn': ['twitter_ads_source', 'stg_twitter_ads__line_item_report'], 'alias': 'stg_twitter_ads__line_item_report', 'checksum': {'name': 'sha256', 'checksum': '3e4a99488dfe650a4fbdcd7a60b982d2044c2c2b3ad1be7479fc35c4b929d343'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the performance of a line item (ad group) on a given day, for its placement in Twitter.', 'columns': {'account_id': {'name': 'account_id', 'description': 'The ID of the related account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend_micro': {'name': 'spend_micro', 'description': 'The spend for the line item on that day, in micros and in whichever currency was selected during account creation.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend for the line item on that day in whichever currency was selected during account creation.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The clicks for the line item on that day. Includes clicks on the URL (shortened or regular links), profile pic, screen name, username, detail, hashtags, and likes.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'The date of the performance.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The impressions for the line item on that day.  This is the number of users who see a Promoted Ad either in their home timeline or search results.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'line_item_id': {'name': 'line_item_id', 'description': 'The ID of the line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_clicks': {'name': 'url_clicks', 'description': 'The url clicks for the line item on that day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'placement': {'name': 'placement', 'description': "Where on Twitter the ad is being displayed. Possible values include 'ALL_ON_TWITTER', 'PUBLISHER_NETWORK', 'TWITTER_PROFILE', 'TWITTER_SEARCH', 'TWITTER_TIMELINE', and 'TAP_*', which are more granular options for `PUBLISHER_NETWORK`.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'twitter_ads_source://models\\stg_twitter_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433487.6978247, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__line_item_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_twitter_ads__line_item_report_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_twitter_ads__line_item_report_tmp')),\n                staging_columns=get_line_item_report_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select \n        {{ dbt.date_trunc('day', 'date') }} as date_day,\n        account_id,\n        line_item_id,\n        placement,\n        clicks,\n        impressions,\n        billed_charge_local_micro as spend_micro,\n        round(billed_charge_local_micro / 1000000.0,2) as spend,\n        url_clicks\n\n        {{ fivetran_utils.fill_pass_through_columns('twitter_ads__line_item_report_passthrough_metrics') }}\n\n    from fields\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_twitter_ads__line_item_report_tmp'], ['stg_twitter_ads__line_item_report_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.twitter_ads_source.get_line_item_report_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.date_trunc', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__line_item_report_tmp', 'model.twitter_ads_source.stg_twitter_ads__line_item_report_tmp']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__promoted_tweet_history', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'stg_twitter_ads__promoted_tweet_history.sql', 'original_file_path': 'models\\stg_twitter_ads__promoted_tweet_history.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history', 'fqn': ['twitter_ads_source', 'stg_twitter_ads__promoted_tweet_history'], 'alias': 'stg_twitter_ads__promoted_tweet_history', 'checksum': {'name': 'sha256', 'checksum': 'c80a0cb29ef10133607a7a85d12f01b4a3dfe4100939746893a2ac56d17dd03b'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents a version of each promoted tweet. The versions can be differentiated by the updated_at timestamp.', 'columns': {'approval_status': {'name': 'approval_status', 'description': 'The approval status of the promoted tweet.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'created_timestamp': {'name': 'created_timestamp', 'description': 'The timestamp the account was created.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_deleted': {'name': 'is_deleted', 'description': 'Whether the record has been deleted or not.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'entity_status': {'name': 'entity_status', 'description': 'The status of the promoted tweet.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'promoted_tweet_id': {'name': 'promoted_tweet_id', 'description': 'The ID of the promoted tweet.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'line_item_id': {'name': 'line_item_id', 'description': 'The ID of the related line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'tweet_id': {'name': 'tweet_id', 'description': 'The ID of the related tweet.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_timestamp': {'name': 'updated_timestamp', 'description': 'The timestamp the account was last updated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_latest_version': {'name': 'is_latest_version', 'description': 'Whether the record is the most latest version for the promoted tweet.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'twitter_ads_source://models\\stg_twitter_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433487.6847818, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__promoted_tweet_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nwith source as (\n\n    select *\n    from {{ ref('stg_twitter_ads__promoted_tweet_history_tmp') }}\n\n),\n\nfields as (\n\n    select\n    \n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_twitter_ads__promoted_tweet_history_tmp')),\n                staging_columns=get_promoted_tweet_history_columns()\n            )\n        }}\n\n    from source\n\n), \n\nfinal as (\n\n    select\n        approval_status,\n        created_at as created_timestamp,\n        deleted as is_deleted,\n        entity_status,\n        id as promoted_tweet_id,\n        line_item_id,\n        tweet_id,\n        updated_at as updated_timestamp,\n        row_number() over (partition by id order by updated_at desc) = 1 as is_latest_version\n    from fields \n)\n\nselect * from final", 'language': 'sql', 'refs': [['stg_twitter_ads__promoted_tweet_history_tmp'], ['stg_twitter_ads__promoted_tweet_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.twitter_ads_source.get_promoted_tweet_history_columns', 'macro.fivetran_utils.fill_staging_columns'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history_tmp', 'model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history_tmp']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__promoted_tweet_report', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'stg_twitter_ads__promoted_tweet_report.sql', 'original_file_path': 'models\\stg_twitter_ads__promoted_tweet_report.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report', 'fqn': ['twitter_ads_source', 'stg_twitter_ads__promoted_tweet_report'], 'alias': 'stg_twitter_ads__promoted_tweet_report', 'checksum': {'name': 'sha256', 'checksum': '90aa40996baaf0ab4455ec96ddd1bb6e9fabee419da4496f9b534e0d866ac36d'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': "Each record represents the performance of a promoted tweet on a given day, in the tweet's defined placement.", 'columns': {'account_id': {'name': 'account_id', 'description': 'The ID of the related account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend_micro': {'name': 'spend_micro', 'description': 'The spend (in micros) for the promoted tweet on that day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend for the promoted tweet on that day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The clicks for the promoted tweet on that day. Includes clicks on the URL (shortened or regular links), profile pic, screen name, username, detail, hashtags, and likes.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'The date of the performance.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The impressions for the promoted tweet on that day.  This is the number of users who see a Promoted Ad either in their home timeline or search results.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'promoted_tweet_id': {'name': 'promoted_tweet_id', 'description': 'The ID of the related promoted tweet.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_clicks': {'name': 'url_clicks', 'description': 'The url clicks for the promoted tweet on that day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'placement': {'name': 'placement', 'description': "Where on Twitter the ad is being displayed. Possible values include 'ALL_ON_TWITTER', 'PUBLISHER_NETWORK', 'TWITTER_PROFILE', 'TWITTER_SEARCH', 'TWITTER_TIMELINE', and 'TAP_*', which are more granular options for `PUBLISHER_NETWORK`.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'twitter_ads_source://models\\stg_twitter_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433487.6885397, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__promoted_tweet_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nwith source as (\n\n    select *\n    from {{ ref('stg_twitter_ads__promoted_tweet_report_tmp') }}\n\n),\n\nrenamed as (\n\n    select\n    \n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_twitter_ads__promoted_tweet_report_tmp')),\n                staging_columns=get_promoted_tweet_report_columns()\n            )\n        }}\n\n    from source\n\n), spend_calc as (\n\n    select\n        {{ dbt.date_trunc('day', 'date') }} as date_day,\n        account_id,\n        promoted_tweet_id,\n        placement,\n        clicks as clicks,\n        impressions as impressions,\n        billed_charge_local_micro as spend_micro,\n        round(billed_charge_local_micro / 1000000.0,2) as spend,\n        url_clicks as url_clicks\n\n        {{ fivetran_utils.fill_pass_through_columns('twitter_ads__promoted_tweet_report_passthrough_metrics') }}\n    \n    from renamed\n\n)\n\nselect * from spend_calc", 'language': 'sql', 'refs': [['stg_twitter_ads__promoted_tweet_report_tmp'], ['stg_twitter_ads__promoted_tweet_report_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.twitter_ads_source.get_promoted_tweet_report_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.date_trunc', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report_tmp', 'model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report_tmp']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__tweet': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__tweet', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'stg_twitter_ads__tweet.sql', 'original_file_path': 'models\\stg_twitter_ads__tweet.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__tweet', 'fqn': ['twitter_ads_source', 'stg_twitter_ads__tweet'], 'alias': 'stg_twitter_ads__tweet', 'checksum': {'name': 'sha256', 'checksum': '495071fcb565d9bcb5f607119259a6a0db5f562833a4c5b4e6b415947b763e21'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents a tweet, promoted or not.', 'columns': {'account_id': {'name': 'account_id', 'description': 'The ID of the related account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'tweet_id': {'name': 'tweet_id', 'description': 'Unique identifier of the tweet.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'name': {'name': 'name', 'description': 'If provided, the non-public title of the tweet.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'full_text': {'name': 'full_text', 'description': "Full text of the tweet's content.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'language': {'name': 'language', 'description': 'Two-letter language code of the tweet.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'twitter_ads_source://models\\stg_twitter_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433487.7029407, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__tweet`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_twitter_ads__tweet_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_twitter_ads__tweet_tmp')),\n                staging_columns=get_tweet_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select \n        account_id,\n        id as tweet_id,\n        name,\n        full_text,\n        lang as language\n\n    from fields\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_twitter_ads__tweet_tmp'], ['stg_twitter_ads__tweet_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.twitter_ads_source.get_tweet_columns', 'macro.fivetran_utils.fill_staging_columns'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__tweet_tmp', 'model.twitter_ads_source.stg_twitter_ads__tweet_tmp']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__tweet_url': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__tweet_url', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'stg_twitter_ads__tweet_url.sql', 'original_file_path': 'models\\stg_twitter_ads__tweet_url.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__tweet_url', 'fqn': ['twitter_ads_source', 'stg_twitter_ads__tweet_url'], 'alias': 'stg_twitter_ads__tweet_url', 'checksum': {'name': 'sha256', 'checksum': '96ff5a0344a66484694df8a7eff61312f4b5e5dd177f81470447d7a4698ee2d1'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents a URL used in a tweet.', 'columns': {'display_url': {'name': 'display_url', 'description': 'The URL as it will be displayed.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'expanded_url': {'name': 'expanded_url', 'description': 'The fully expanded URL.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'index': {'name': 'index', 'description': 'The index of the URL within the tweet (ie if there are multiple URLs)', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'indices': {'name': 'indices', 'description': 'The start and end point of where the URL is placed in the tweet text.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'tweet_id': {'name': 'tweet_id', 'description': 'The ID of the related tweet.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url': {'name': 'url', 'description': "The 't.co' shortened URL.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'base_url': {'name': 'base_url', 'description': 'The base URL of the ad, extracted from the `expanded_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_host': {'name': 'url_host', 'description': 'The URL host of the ad, extracted from the `expanded_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_path': {'name': 'url_path', 'description': 'The URL path of the ad, extracted from the `expanded_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_source': {'name': 'utm_source', 'description': 'The utm_source parameter of the ad, extracted from the `expanded_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_medium': {'name': 'utm_medium', 'description': 'The utm_medium parameter of the ad, extracted from the `expanded_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_campaign': {'name': 'utm_campaign', 'description': 'The utm_campaign parameter of the ad, extracted from the `expanded_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_content': {'name': 'utm_content', 'description': 'The utm_content parameter of the ad, extracted from the `expanded_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_term': {'name': 'utm_term', 'description': 'The utm_term parameter of the ad, extracted from the `expanded_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'twitter_ads_source://models\\stg_twitter_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433487.691785, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__tweet_url`', 'raw_code': '{{ config(enabled=var(\'ad_reporting__twitter_ads_enabled\', True)) }}\n\nwith source as (\n\n    select *\n    from {{ ref(\'stg_twitter_ads__tweet_url_tmp\') }}\n\n),\n\nfields as (\n\n    select\n    \n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref(\'stg_twitter_ads__tweet_url_tmp\')),\n                staging_columns=get_tweet_url_columns()\n            )\n        }}\n\n    from source\n\n), \n\nfinal as (\n\n    select\n        display_url,\n        expanded_url,\n        index,\n        indices,\n        tweet_id,\n        url,\n        {{ dbt.split_part(\'expanded_url\', "\'?\'", 1) }} as base_url,\n        {{ dbt_utils.get_url_host(\'expanded_url\') }} as url_host,\n        \'/\' || {{ dbt_utils.get_url_path(\'expanded_url\') }} as url_path,\n        {{ dbt_utils.get_url_parameter(\'expanded_url\', \'utm_source\') }} as utm_source,\n        {{ dbt_utils.get_url_parameter(\'expanded_url\', \'utm_medium\') }} as utm_medium,\n        {{ dbt_utils.get_url_parameter(\'expanded_url\', \'utm_campaign\') }} as utm_campaign,\n        {{ dbt_utils.get_url_parameter(\'expanded_url\', \'utm_content\') }} as utm_content,\n        {{ dbt_utils.get_url_parameter(\'expanded_url\', \'utm_term\') }} as utm_term\n    \n    from fields\n\n)\n\nselect * from final', 'language': 'sql', 'refs': [['stg_twitter_ads__tweet_url_tmp'], ['stg_twitter_ads__tweet_url_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.twitter_ads_source.get_tweet_url_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.split_part', 'macro.dbt_utils.get_url_host', 'macro.dbt_utils.get_url_path', 'macro.dbt_utils.get_url_parameter'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__tweet_url_tmp', 'model.twitter_ads_source.stg_twitter_ads__tweet_url_tmp']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__account_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__account_history_tmp', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'tmp\\stg_twitter_ads__account_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_twitter_ads__account_history_tmp.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__account_history_tmp', 'fqn': ['twitter_ads_source', 'tmp', 'stg_twitter_ads__account_history_tmp'], 'alias': 'stg_twitter_ads__account_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '76ca411a663d62ed96988cf38c0ea000cb691006c8a9f4a6c326f357d874a7fc'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433484.7837048, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__account_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nselect *\nfrom {{ var('account_history') }}", 'language': 'sql', 'refs': [], 'sources': [['twitter_ads', 'account_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.twitter_ads_source.twitter_ads.account_history']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__campaign_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__campaign_history_tmp', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'tmp\\stg_twitter_ads__campaign_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_twitter_ads__campaign_history_tmp.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__campaign_history_tmp', 'fqn': ['twitter_ads_source', 'tmp', 'stg_twitter_ads__campaign_history_tmp'], 'alias': 'stg_twitter_ads__campaign_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '343754878288e6e847d9af5524d0dd1b09edffac90a7e83f0f8dbd610c028837'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433484.7923882, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__campaign_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nselect *\nfrom {{ var('campaign_history') }}", 'language': 'sql', 'refs': [], 'sources': [['twitter_ads', 'campaign_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.twitter_ads_source.twitter_ads.campaign_history']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__campaign_report_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__campaign_report_tmp', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'tmp\\stg_twitter_ads__campaign_report_tmp.sql', 'original_file_path': 'models\\tmp\\stg_twitter_ads__campaign_report_tmp.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__campaign_report_tmp', 'fqn': ['twitter_ads_source', 'tmp', 'stg_twitter_ads__campaign_report_tmp'], 'alias': 'stg_twitter_ads__campaign_report_tmp', 'checksum': {'name': 'sha256', 'checksum': 'cde4096c85a4069b4865fe37600bed81c625f2ec5e1cb91863d50888a217f562'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433484.798037, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__campaign_report_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('campaign_report') }}", 'language': 'sql', 'refs': [], 'sources': [['twitter_ads', 'campaign_report']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.twitter_ads_source.twitter_ads.campaign_report']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__line_item_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__line_item_history_tmp', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'tmp\\stg_twitter_ads__line_item_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_twitter_ads__line_item_history_tmp.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__line_item_history_tmp', 'fqn': ['twitter_ads_source', 'tmp', 'stg_twitter_ads__line_item_history_tmp'], 'alias': 'stg_twitter_ads__line_item_history_tmp', 'checksum': {'name': 'sha256', 'checksum': 'd796be56366271bfcc2f2d4d23b50372472b0e47a1ba5d62f09ea7218d842b07'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433484.8056767, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__line_item_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nselect *\nfrom {{ var('line_item_history') }}", 'language': 'sql', 'refs': [], 'sources': [['twitter_ads', 'line_item_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.twitter_ads_source.twitter_ads.line_item_history']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__line_item_keywords_report_tmp', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'tmp\\stg_twitter_ads__line_item_keywords_report_tmp.sql', 'original_file_path': 'models\\tmp\\stg_twitter_ads__line_item_keywords_report_tmp.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report_tmp', 'fqn': ['twitter_ads_source', 'tmp', 'stg_twitter_ads__line_item_keywords_report_tmp'], 'alias': 'stg_twitter_ads__line_item_keywords_report_tmp', 'checksum': {'name': 'sha256', 'checksum': '114060cd4737b070ccbc5aef04da886811de6b4bec7e6246e7e36df4f115d55e'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433484.814268, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__line_item_keywords_report_tmp`', 'raw_code': "{{ config(enabled=fivetran_utils.enabled_vars(['ad_reporting__twitter_ads_enabled','twitter_ads__using_keywords'])) }}\n\nselect * \nfrom {{ var('line_item_keywords_report') }}", 'language': 'sql', 'refs': [], 'sources': [['twitter_ads', 'line_item_keywords_report']], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.enabled_vars'], 'nodes': ['source.twitter_ads_source.twitter_ads.line_item_keywords_report']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__line_item_report_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__line_item_report_tmp', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'tmp\\stg_twitter_ads__line_item_report_tmp.sql', 'original_file_path': 'models\\tmp\\stg_twitter_ads__line_item_report_tmp.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__line_item_report_tmp', 'fqn': ['twitter_ads_source', 'tmp', 'stg_twitter_ads__line_item_report_tmp'], 'alias': 'stg_twitter_ads__line_item_report_tmp', 'checksum': {'name': 'sha256', 'checksum': '9e053b03293d2511468496eb5fafd60ca8a3883594d2b2a24bb61862fb53c552'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433484.8206115, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__line_item_report_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('line_item_report') }}", 'language': 'sql', 'refs': [], 'sources': [['twitter_ads', 'line_item_report']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.twitter_ads_source.twitter_ads.line_item_report']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__promoted_tweet_history_tmp', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'tmp\\stg_twitter_ads__promoted_tweet_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_twitter_ads__promoted_tweet_history_tmp.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history_tmp', 'fqn': ['twitter_ads_source', 'tmp', 'stg_twitter_ads__promoted_tweet_history_tmp'], 'alias': 'stg_twitter_ads__promoted_tweet_history_tmp', 'checksum': {'name': 'sha256', 'checksum': 'b528c88b68e5a01988e4fb4467e2298ac2be47cfe74ba3ac840044fd214f59da'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433484.8281364, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__promoted_tweet_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nselect *\nfrom {{ var('promoted_tweet_history') }}", 'language': 'sql', 'refs': [], 'sources': [['twitter_ads', 'promoted_tweet_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.twitter_ads_source.twitter_ads.promoted_tweet_history']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__promoted_tweet_report_tmp', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'tmp\\stg_twitter_ads__promoted_tweet_report_tmp.sql', 'original_file_path': 'models\\tmp\\stg_twitter_ads__promoted_tweet_report_tmp.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report_tmp', 'fqn': ['twitter_ads_source', 'tmp', 'stg_twitter_ads__promoted_tweet_report_tmp'], 'alias': 'stg_twitter_ads__promoted_tweet_report_tmp', 'checksum': {'name': 'sha256', 'checksum': '6bf2743294837bc2b2316127f2df7a40126f942a226653c2f7668e78d972856a'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433484.834522, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__promoted_tweet_report_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nselect *\nfrom {{ var('promoted_tweet_report') }}", 'language': 'sql', 'refs': [], 'sources': [['twitter_ads', 'promoted_tweet_report']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.twitter_ads_source.twitter_ads.promoted_tweet_report']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__tweet_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__tweet_tmp', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'tmp\\stg_twitter_ads__tweet_tmp.sql', 'original_file_path': 'models\\tmp\\stg_twitter_ads__tweet_tmp.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__tweet_tmp', 'fqn': ['twitter_ads_source', 'tmp', 'stg_twitter_ads__tweet_tmp'], 'alias': 'stg_twitter_ads__tweet_tmp', 'checksum': {'name': 'sha256', 'checksum': 'ed6397b8a2245ad4f4e79b75ed4ed8de08fdc4049d651c49e3849db6c073cafd'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433484.8434193, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__tweet_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('tweet') }}", 'language': 'sql', 'refs': [], 'sources': [['twitter_ads', 'tweet']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.twitter_ads_source.twitter_ads.tweet']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__tweet_url_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__tweet_url_tmp', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'tmp\\stg_twitter_ads__tweet_url_tmp.sql', 'original_file_path': 'models\\tmp\\stg_twitter_ads__tweet_url_tmp.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__tweet_url_tmp', 'fqn': ['twitter_ads_source', 'tmp', 'stg_twitter_ads__tweet_url_tmp'], 'alias': 'stg_twitter_ads__tweet_url_tmp', 'checksum': {'name': 'sha256', 'checksum': '9a7338e00449b6c913d5f3c059679ed5be9c64d82f22bb155f6b807124089552'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433484.8503282, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__tweet_url_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nselect *\nfrom {{ var('tweet_url') }}", 'language': 'sql', 'refs': [], 'sources': [['twitter_ads', 'tweet_url']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.twitter_ads_source.twitter_ads.tweet_url']}, 'compiled_path': None}, 'test.dbt_ads_test.unique_my_first_dbt_model_id.16e066b321': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'id', 'model': "{{ get_where_subquery(ref('my_first_dbt_model')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'unique_my_first_dbt_model_id', 'resource_type': 'test', 'package_name': 'dbt_ads_test', 'path': 'unique_my_first_dbt_model_id.sql', 'original_file_path': 'models\\example\\schema.yml', 'unique_id': 'test.dbt_ads_test.unique_my_first_dbt_model_id.16e066b321', 'fqn': ['dbt_ads_test', 'example', 'unique_my_first_dbt_model_id'], 'alias': 'unique_my_first_dbt_model_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433484.879982, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['my_first_dbt_model']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['model.dbt_ads_test.my_first_dbt_model']}, 'compiled_path': None, 'column_name': 'id', 'file_key_name': 'models.my_first_dbt_model'}, 'test.dbt_ads_test.not_null_my_first_dbt_model_id.5fb22c2710': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'id', 'model': "{{ get_where_subquery(ref('my_first_dbt_model')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_my_first_dbt_model_id', 'resource_type': 'test', 'package_name': 'dbt_ads_test', 'path': 'not_null_my_first_dbt_model_id.sql', 'original_file_path': 'models\\example\\schema.yml', 'unique_id': 'test.dbt_ads_test.not_null_my_first_dbt_model_id.5fb22c2710', 'fqn': ['dbt_ads_test', 'example', 'not_null_my_first_dbt_model_id'], 'alias': 'not_null_my_first_dbt_model_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433484.8819444, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['my_first_dbt_model']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.dbt_ads_test.my_first_dbt_model']}, 'compiled_path': None, 'column_name': 'id', 'file_key_name': 'models.my_first_dbt_model'}, 'test.dbt_ads_test.unique_my_second_dbt_model_id.57a0f8c493': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'id', 'model': "{{ get_where_subquery(ref('my_second_dbt_model')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'unique_my_second_dbt_model_id', 'resource_type': 'test', 'package_name': 'dbt_ads_test', 'path': 'unique_my_second_dbt_model_id.sql', 'original_file_path': 'models\\example\\schema.yml', 'unique_id': 'test.dbt_ads_test.unique_my_second_dbt_model_id.57a0f8c493', 'fqn': ['dbt_ads_test', 'example', 'unique_my_second_dbt_model_id'], 'alias': 'unique_my_second_dbt_model_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433484.8829713, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['my_second_dbt_model']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['model.dbt_ads_test.my_second_dbt_model']}, 'compiled_path': None, 'column_name': 'id', 'file_key_name': 'models.my_second_dbt_model'}, 'test.dbt_ads_test.not_null_my_second_dbt_model_id.151b76d778': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'id', 'model': "{{ get_where_subquery(ref('my_second_dbt_model')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_my_second_dbt_model_id', 'resource_type': 'test', 'package_name': 'dbt_ads_test', 'path': 'not_null_my_second_dbt_model_id.sql', 'original_file_path': 'models\\example\\schema.yml', 'unique_id': 'test.dbt_ads_test.not_null_my_second_dbt_model_id.151b76d778', 'fqn': ['dbt_ads_test', 'example', 'not_null_my_second_dbt_model_id'], 'alias': 'not_null_my_second_dbt_model_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433484.8849704, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['my_second_dbt_model']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.dbt_ads_test.my_second_dbt_model']}, 'compiled_path': None, 'column_name': 'id', 'file_key_name': 'models.my_second_dbt_model'}, 'test.ad_reporting.not_null_ad_reporting__account_report_account_id.316a64c022': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('ad_reporting__account_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_ad_reporting__account_report_account_id', 'resource_type': 'test', 'package_name': 'ad_reporting', 'path': 'not_null_ad_reporting__account_report_account_id.sql', 'original_file_path': 'models\\ad_reporting_models.yml', 'unique_id': 'test.ad_reporting.not_null_ad_reporting__account_report_account_id.316a64c022', 'fqn': ['ad_reporting', 'not_null_ad_reporting__account_report_account_id'], 'alias': 'not_null_ad_reporting__account_report_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433484.9610484, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['ad_reporting__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.ad_reporting.ad_reporting__account_report']}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.ad_reporting__account_report'}, 'test.ad_reporting.dbt_utils_unique_combination_of_columns_ad_reporting__account_report_platform__date_day__account_id.1cadcf1583': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['platform', 'date_day', 'account_id'], 'model': "{{ get_where_subquery(ref('ad_reporting__account_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_ad_reporting__account_report_platform__date_day__account_id', 'resource_type': 'test', 'package_name': 'ad_reporting', 'path': 'dbt_utils_unique_combination_o_096d5dbf3a188e4736e3d2c607a5a2ce.sql', 'original_file_path': 'models\\ad_reporting_models.yml', 'unique_id': 'test.ad_reporting.dbt_utils_unique_combination_of_columns_ad_reporting__account_report_platform__date_day__account_id.1cadcf1583', 'fqn': ['ad_reporting', 'dbt_utils_unique_combination_of_columns_ad_reporting__account_report_platform__date_day__account_id'], 'alias': 'dbt_utils_unique_combination_o_096d5dbf3a188e4736e3d2c607a5a2ce', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_096d5dbf3a188e4736e3d2c607a5a2ce', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_096d5dbf3a188e4736e3d2c607a5a2ce'}, 'created_at': 1694433484.9630334, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_096d5dbf3a188e4736e3d2c607a5a2ce'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_096d5dbf3a188e4736e3d2c607a5a2ce") }}', 'language': 'sql', 'refs': [['ad_reporting__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.ad_reporting.ad_reporting__account_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.ad_reporting__account_report'}, 'test.ad_reporting.not_null_ad_reporting__ad_group_report_ad_group_id.963e17e842': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('ad_reporting__ad_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_ad_reporting__ad_group_report_ad_group_id', 'resource_type': 'test', 'package_name': 'ad_reporting', 'path': 'not_null_ad_reporting__ad_group_report_ad_group_id.sql', 'original_file_path': 'models\\ad_reporting_models.yml', 'unique_id': 'test.ad_reporting.not_null_ad_reporting__ad_group_report_ad_group_id.963e17e842', 'fqn': ['ad_reporting', 'not_null_ad_reporting__ad_group_report_ad_group_id'], 'alias': 'not_null_ad_reporting__ad_group_report_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433484.9747314, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['ad_reporting__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.ad_reporting.ad_reporting__ad_group_report']}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.ad_reporting__ad_group_report'}, 'test.ad_reporting.dbt_utils_unique_combination_of_columns_ad_reporting__ad_group_report_platform__date_day__ad_group_id__campaign_id__account_id.2116e5a78a': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['platform', 'date_day', 'ad_group_id', 'campaign_id', 'account_id'], 'model': "{{ get_where_subquery(ref('ad_reporting__ad_group_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_ad_reporting__ad_group_report_platform__date_day__ad_group_id__campaign_id__account_id', 'resource_type': 'test', 'package_name': 'ad_reporting', 'path': 'dbt_utils_unique_combination_o_86fffff8dec06644eeb81f4837856342.sql', 'original_file_path': 'models\\ad_reporting_models.yml', 'unique_id': 'test.ad_reporting.dbt_utils_unique_combination_of_columns_ad_reporting__ad_group_report_platform__date_day__ad_group_id__campaign_id__account_id.2116e5a78a', 'fqn': ['ad_reporting', 'dbt_utils_unique_combination_of_columns_ad_reporting__ad_group_report_platform__date_day__ad_group_id__campaign_id__account_id'], 'alias': 'dbt_utils_unique_combination_o_86fffff8dec06644eeb81f4837856342', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_86fffff8dec06644eeb81f4837856342', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_86fffff8dec06644eeb81f4837856342'}, 'created_at': 1694433484.9757214, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_86fffff8dec06644eeb81f4837856342'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_86fffff8dec06644eeb81f4837856342") }}', 'language': 'sql', 'refs': [['ad_reporting__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.ad_reporting.ad_reporting__ad_group_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.ad_reporting__ad_group_report'}, 'test.ad_reporting.not_null_ad_reporting__ad_report_ad_id.f3eb210152': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('ad_reporting__ad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_ad_reporting__ad_report_ad_id', 'resource_type': 'test', 'package_name': 'ad_reporting', 'path': 'not_null_ad_reporting__ad_report_ad_id.sql', 'original_file_path': 'models\\ad_reporting_models.yml', 'unique_id': 'test.ad_reporting.not_null_ad_reporting__ad_report_ad_id.f3eb210152', 'fqn': ['ad_reporting', 'not_null_ad_reporting__ad_report_ad_id'], 'alias': 'not_null_ad_reporting__ad_report_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433484.982014, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['ad_reporting__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.ad_reporting.ad_reporting__ad_report']}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.ad_reporting__ad_report'}, 'test.ad_reporting.dbt_utils_unique_combination_of_columns_ad_reporting__ad_report_platform__date_day__ad_id__ad_group_id__campaign_id__account_id.3c5bc5ae55': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['platform', 'date_day', 'ad_id', 'ad_group_id', 'campaign_id', 'account_id'], 'model': "{{ get_where_subquery(ref('ad_reporting__ad_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_ad_reporting__ad_report_platform__date_day__ad_id__ad_group_id__campaign_id__account_id', 'resource_type': 'test', 'package_name': 'ad_reporting', 'path': 'dbt_utils_unique_combination_o_c3ce7d8d1708ef4f2ca05b498dce6f21.sql', 'original_file_path': 'models\\ad_reporting_models.yml', 'unique_id': 'test.ad_reporting.dbt_utils_unique_combination_of_columns_ad_reporting__ad_report_platform__date_day__ad_id__ad_group_id__campaign_id__account_id.3c5bc5ae55', 'fqn': ['ad_reporting', 'dbt_utils_unique_combination_of_columns_ad_reporting__ad_report_platform__date_day__ad_id__ad_group_id__campaign_id__account_id'], 'alias': 'dbt_utils_unique_combination_o_c3ce7d8d1708ef4f2ca05b498dce6f21', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_c3ce7d8d1708ef4f2ca05b498dce6f21', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_c3ce7d8d1708ef4f2ca05b498dce6f21'}, 'created_at': 1694433484.98302, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_c3ce7d8d1708ef4f2ca05b498dce6f21'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_c3ce7d8d1708ef4f2ca05b498dce6f21") }}', 'language': 'sql', 'refs': [['ad_reporting__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.ad_reporting.ad_reporting__ad_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.ad_reporting__ad_report'}, 'test.ad_reporting.not_null_ad_reporting__campaign_report_campaign_id.1cfaa7698b': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('ad_reporting__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_ad_reporting__campaign_report_campaign_id', 'resource_type': 'test', 'package_name': 'ad_reporting', 'path': 'not_null_ad_reporting__campaign_report_campaign_id.sql', 'original_file_path': 'models\\ad_reporting_models.yml', 'unique_id': 'test.ad_reporting.not_null_ad_reporting__campaign_report_campaign_id.1cfaa7698b', 'fqn': ['ad_reporting', 'not_null_ad_reporting__campaign_report_campaign_id'], 'alias': 'not_null_ad_reporting__campaign_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433484.9892986, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['ad_reporting__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.ad_reporting.ad_reporting__campaign_report']}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.ad_reporting__campaign_report'}, 'test.ad_reporting.dbt_utils_unique_combination_of_columns_ad_reporting__campaign_report_platform__date_day__campaign_id__account_id.4b3426da0f': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['platform', 'date_day', 'campaign_id', 'account_id'], 'model': "{{ get_where_subquery(ref('ad_reporting__campaign_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_ad_reporting__campaign_report_platform__date_day__campaign_id__account_id', 'resource_type': 'test', 'package_name': 'ad_reporting', 'path': 'dbt_utils_unique_combination_o_f617d9a2a7237faaa5a8bf82407d243f.sql', 'original_file_path': 'models\\ad_reporting_models.yml', 'unique_id': 'test.ad_reporting.dbt_utils_unique_combination_of_columns_ad_reporting__campaign_report_platform__date_day__campaign_id__account_id.4b3426da0f', 'fqn': ['ad_reporting', 'dbt_utils_unique_combination_of_columns_ad_reporting__campaign_report_platform__date_day__campaign_id__account_id'], 'alias': 'dbt_utils_unique_combination_o_f617d9a2a7237faaa5a8bf82407d243f', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_f617d9a2a7237faaa5a8bf82407d243f', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_f617d9a2a7237faaa5a8bf82407d243f'}, 'created_at': 1694433484.9913108, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_f617d9a2a7237faaa5a8bf82407d243f'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_f617d9a2a7237faaa5a8bf82407d243f") }}', 'language': 'sql', 'refs': [['ad_reporting__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.ad_reporting.ad_reporting__campaign_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.ad_reporting__campaign_report'}, 'test.ad_reporting.not_null_ad_reporting__keyword_report_keyword_id.51a45fb334': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'keyword_id', 'model': "{{ get_where_subquery(ref('ad_reporting__keyword_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_ad_reporting__keyword_report_keyword_id', 'resource_type': 'test', 'package_name': 'ad_reporting', 'path': 'not_null_ad_reporting__keyword_report_keyword_id.sql', 'original_file_path': 'models\\ad_reporting_models.yml', 'unique_id': 'test.ad_reporting.not_null_ad_reporting__keyword_report_keyword_id.51a45fb334', 'fqn': ['ad_reporting', 'not_null_ad_reporting__keyword_report_keyword_id'], 'alias': 'not_null_ad_reporting__keyword_report_keyword_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433484.995298, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['ad_reporting__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.ad_reporting.ad_reporting__keyword_report']}, 'compiled_path': None, 'column_name': 'keyword_id', 'file_key_name': 'models.ad_reporting__keyword_report'}, 'test.ad_reporting.dbt_utils_unique_combination_of_columns_ad_reporting__keyword_report_platform__date_day__keyword_id__keyword_match_type__ad_group_id__campaign_id__account_id.49b7b978b6': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['platform', 'date_day', 'keyword_id', 'keyword_match_type', 'ad_group_id', 'campaign_id', 'account_id'], 'model': "{{ get_where_subquery(ref('ad_reporting__keyword_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_ad_reporting__keyword_report_platform__date_day__keyword_id__keyword_match_type__ad_group_id__campaign_id__account_id', 'resource_type': 'test', 'package_name': 'ad_reporting', 'path': 'dbt_utils_unique_combination_o_5499321364b1d21748e920ddf811ea4e.sql', 'original_file_path': 'models\\ad_reporting_models.yml', 'unique_id': 'test.ad_reporting.dbt_utils_unique_combination_of_columns_ad_reporting__keyword_report_platform__date_day__keyword_id__keyword_match_type__ad_group_id__campaign_id__account_id.49b7b978b6', 'fqn': ['ad_reporting', 'dbt_utils_unique_combination_of_columns_ad_reporting__keyword_report_platform__date_day__keyword_id__keyword_match_type__ad_group_id__campaign_id__account_id'], 'alias': 'dbt_utils_unique_combination_o_5499321364b1d21748e920ddf811ea4e', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_5499321364b1d21748e920ddf811ea4e', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_5499321364b1d21748e920ddf811ea4e'}, 'created_at': 1694433484.9979613, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_5499321364b1d21748e920ddf811ea4e'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_5499321364b1d21748e920ddf811ea4e") }}', 'language': 'sql', 'refs': [['ad_reporting__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.ad_reporting.ad_reporting__keyword_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.ad_reporting__keyword_report'}, 'test.ad_reporting.not_null_ad_reporting__search_report_search_query.ee2f0fcafb': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'search_query', 'model': "{{ get_where_subquery(ref('ad_reporting__search_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_ad_reporting__search_report_search_query', 'resource_type': 'test', 'package_name': 'ad_reporting', 'path': 'not_null_ad_reporting__search_report_search_query.sql', 'original_file_path': 'models\\ad_reporting_models.yml', 'unique_id': 'test.ad_reporting.not_null_ad_reporting__search_report_search_query.ee2f0fcafb', 'fqn': ['ad_reporting', 'not_null_ad_reporting__search_report_search_query'], 'alias': 'not_null_ad_reporting__search_report_search_query', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.0039656, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['ad_reporting__search_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.ad_reporting.ad_reporting__search_report']}, 'compiled_path': None, 'column_name': 'search_query', 'file_key_name': 'models.ad_reporting__search_report'}, 'test.ad_reporting.dbt_utils_unique_combination_of_columns_ad_reporting__search_report_platform__date_day__search_query__search_match_type__keyword_id__ad_group_id__campaign_id__account_id.4efd457bbf': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['platform', 'date_day', 'search_query', 'search_match_type', 'keyword_id', 'ad_group_id', 'campaign_id', 'account_id'], 'model': "{{ get_where_subquery(ref('ad_reporting__search_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_ad_reporting__search_report_platform__date_day__search_query__search_match_type__keyword_id__ad_group_id__campaign_id__account_id', 'resource_type': 'test', 'package_name': 'ad_reporting', 'path': 'dbt_utils_unique_combination_o_437a89e9e4e53f95ce99529e3a181371.sql', 'original_file_path': 'models\\ad_reporting_models.yml', 'unique_id': 'test.ad_reporting.dbt_utils_unique_combination_of_columns_ad_reporting__search_report_platform__date_day__search_query__search_match_type__keyword_id__ad_group_id__campaign_id__account_id.4efd457bbf', 'fqn': ['ad_reporting', 'dbt_utils_unique_combination_of_columns_ad_reporting__search_report_platform__date_day__search_query__search_match_type__keyword_id__ad_group_id__campaign_id__account_id'], 'alias': 'dbt_utils_unique_combination_o_437a89e9e4e53f95ce99529e3a181371', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_437a89e9e4e53f95ce99529e3a181371', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_437a89e9e4e53f95ce99529e3a181371'}, 'created_at': 1694433485.0049653, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_437a89e9e4e53f95ce99529e3a181371'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_437a89e9e4e53f95ce99529e3a181371") }}', 'language': 'sql', 'refs': [['ad_reporting__search_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.ad_reporting.ad_reporting__search_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.ad_reporting__search_report'}, 'test.ad_reporting.not_null_ad_reporting__url_report_base_url.a29864e5b6': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'base_url', 'model': "{{ get_where_subquery(ref('ad_reporting__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_ad_reporting__url_report_base_url', 'resource_type': 'test', 'package_name': 'ad_reporting', 'path': 'not_null_ad_reporting__url_report_base_url.sql', 'original_file_path': 'models\\ad_reporting_models.yml', 'unique_id': 'test.ad_reporting.not_null_ad_reporting__url_report_base_url.a29864e5b6', 'fqn': ['ad_reporting', 'not_null_ad_reporting__url_report_base_url'], 'alias': 'not_null_ad_reporting__url_report_base_url', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True}, 'created_at': 1694433485.0124779, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(enabled=True) }}', 'language': 'sql', 'refs': [['ad_reporting__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.ad_reporting.ad_reporting__url_report']}, 'compiled_path': None, 'column_name': 'base_url', 'file_key_name': 'models.ad_reporting__url_report'}, 'test.ad_reporting.dbt_utils_unique_combination_of_columns_ad_reporting__url_report_platform__date_day__ad_group_id__campaign_id__account_id__base_url__url_host__url_path__utm_campaign__utm_content__utm_medium__utm_source__utm_term.cd216b1424': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['platform', 'date_day', 'ad_group_id', 'campaign_id', 'account_id', 'base_url', 'url_host', 'url_path', 'utm_campaign', 'utm_content', 'utm_medium', 'utm_source', 'utm_term'], 'model': "{{ get_where_subquery(ref('ad_reporting__url_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_ad_reporting__url_report_platform__date_day__ad_group_id__campaign_id__account_id__base_url__url_host__url_path__utm_campaign__utm_content__utm_medium__utm_source__utm_term', 'resource_type': 'test', 'package_name': 'ad_reporting', 'path': 'dbt_utils_unique_combination_o_996efa0d96cfeb69e01d6d9960ce6a10.sql', 'original_file_path': 'models\\ad_reporting_models.yml', 'unique_id': 'test.ad_reporting.dbt_utils_unique_combination_of_columns_ad_reporting__url_report_platform__date_day__ad_group_id__campaign_id__account_id__base_url__url_host__url_path__utm_campaign__utm_content__utm_medium__utm_source__utm_term.cd216b1424', 'fqn': ['ad_reporting', 'dbt_utils_unique_combination_of_columns_ad_reporting__url_report_platform__date_day__ad_group_id__campaign_id__account_id__base_url__url_host__url_path__utm_campaign__utm_content__utm_medium__utm_source__utm_term'], 'alias': 'dbt_utils_unique_combination_o_996efa0d96cfeb69e01d6d9960ce6a10', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_996efa0d96cfeb69e01d6d9960ce6a10', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_996efa0d96cfeb69e01d6d9960ce6a10'}, 'created_at': 1694433485.014478, 'config_call_dict': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_996efa0d96cfeb69e01d6d9960ce6a10'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(enabled=True,alias="dbt_utils_unique_combination_o_996efa0d96cfeb69e01d6d9960ce6a10") }}', 'language': 'sql', 'refs': [['ad_reporting__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.ad_reporting.ad_reporting__url_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.ad_reporting__url_report'}, 'test.amazon_ads.not_null_amazon_ads__account_report_profile_id.87fb8dbe66': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'profile_id', 'model': "{{ get_where_subquery(ref('amazon_ads__account_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_amazon_ads__account_report_profile_id', 'resource_type': 'test', 'package_name': 'amazon_ads', 'path': 'not_null_amazon_ads__account_report_profile_id.sql', 'original_file_path': 'models\\amazon_ads.yml', 'unique_id': 'test.amazon_ads.not_null_amazon_ads__account_report_profile_id.87fb8dbe66', 'fqn': ['amazon_ads', 'not_null_amazon_ads__account_report_profile_id'], 'alias': 'not_null_amazon_ads__account_report_profile_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.1376734, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['amazon_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'profile_id', 'file_key_name': 'models.amazon_ads__account_report'}, 'test.amazon_ads.not_null_amazon_ads__account_report_account_id.83adef7061': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('amazon_ads__account_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_amazon_ads__account_report_account_id', 'resource_type': 'test', 'package_name': 'amazon_ads', 'path': 'not_null_amazon_ads__account_report_account_id.sql', 'original_file_path': 'models\\amazon_ads.yml', 'unique_id': 'test.amazon_ads.not_null_amazon_ads__account_report_account_id.83adef7061', 'fqn': ['amazon_ads', 'not_null_amazon_ads__account_report_account_id'], 'alias': 'not_null_amazon_ads__account_report_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.1396778, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['amazon_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.amazon_ads__account_report'}, 'test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__account_report_date_day__profile_id.3d2673ade2': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'profile_id'], 'model': "{{ get_where_subquery(ref('amazon_ads__account_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_amazon_ads__account_report_date_day__profile_id', 'resource_type': 'test', 'package_name': 'amazon_ads', 'path': 'dbt_utils_unique_combination_o_6ed874aa44aa50dc6754845fe295cf06.sql', 'original_file_path': 'models\\amazon_ads.yml', 'unique_id': 'test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__account_report_date_day__profile_id.3d2673ade2', 'fqn': ['amazon_ads', 'dbt_utils_unique_combination_of_columns_amazon_ads__account_report_date_day__profile_id'], 'alias': 'dbt_utils_unique_combination_o_6ed874aa44aa50dc6754845fe295cf06', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_6ed874aa44aa50dc6754845fe295cf06', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_6ed874aa44aa50dc6754845fe295cf06'}, 'created_at': 1694433485.1416774, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_6ed874aa44aa50dc6754845fe295cf06'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_6ed874aa44aa50dc6754845fe295cf06") }}', 'language': 'sql', 'refs': [['amazon_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.amazon_ads__account_report'}, 'test.amazon_ads.not_null_amazon_ads__ad_group_report_ad_group_id.8a23dc123a': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('amazon_ads__ad_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_amazon_ads__ad_group_report_ad_group_id', 'resource_type': 'test', 'package_name': 'amazon_ads', 'path': 'not_null_amazon_ads__ad_group_report_ad_group_id.sql', 'original_file_path': 'models\\amazon_ads.yml', 'unique_id': 'test.amazon_ads.not_null_amazon_ads__ad_group_report_ad_group_id.8a23dc123a', 'fqn': ['amazon_ads', 'not_null_amazon_ads__ad_group_report_ad_group_id'], 'alias': 'not_null_amazon_ads__ad_group_report_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.1460452, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['amazon_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.amazon_ads__ad_group_report'}, 'test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__ad_group_report_date_day__ad_group_id.e2963c59e1': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'ad_group_id'], 'model': "{{ get_where_subquery(ref('amazon_ads__ad_group_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_amazon_ads__ad_group_report_date_day__ad_group_id', 'resource_type': 'test', 'package_name': 'amazon_ads', 'path': 'dbt_utils_unique_combination_o_18996a14b967587808436224f70e9241.sql', 'original_file_path': 'models\\amazon_ads.yml', 'unique_id': 'test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__ad_group_report_date_day__ad_group_id.e2963c59e1', 'fqn': ['amazon_ads', 'dbt_utils_unique_combination_of_columns_amazon_ads__ad_group_report_date_day__ad_group_id'], 'alias': 'dbt_utils_unique_combination_o_18996a14b967587808436224f70e9241', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_18996a14b967587808436224f70e9241', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_18996a14b967587808436224f70e9241'}, 'created_at': 1694433485.1485703, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_18996a14b967587808436224f70e9241'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_18996a14b967587808436224f70e9241") }}', 'language': 'sql', 'refs': [['amazon_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.amazon_ads__ad_group_report'}, 'test.amazon_ads.not_null_amazon_ads__ad_report_ad_id.93728159b3': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('amazon_ads__ad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_amazon_ads__ad_report_ad_id', 'resource_type': 'test', 'package_name': 'amazon_ads', 'path': 'not_null_amazon_ads__ad_report_ad_id.sql', 'original_file_path': 'models\\amazon_ads.yml', 'unique_id': 'test.amazon_ads.not_null_amazon_ads__ad_report_ad_id.93728159b3', 'fqn': ['amazon_ads', 'not_null_amazon_ads__ad_report_ad_id'], 'alias': 'not_null_amazon_ads__ad_report_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.1526148, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['amazon_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.amazon_ads__ad_report'}, 'test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__ad_report_date_day__ad_id.cb64b8d0f7': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'ad_id'], 'model': "{{ get_where_subquery(ref('amazon_ads__ad_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_amazon_ads__ad_report_date_day__ad_id', 'resource_type': 'test', 'package_name': 'amazon_ads', 'path': 'dbt_utils_unique_combination_o_7e938186a70fc693a9b0fdc4e976a536.sql', 'original_file_path': 'models\\amazon_ads.yml', 'unique_id': 'test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__ad_report_date_day__ad_id.cb64b8d0f7', 'fqn': ['amazon_ads', 'dbt_utils_unique_combination_of_columns_amazon_ads__ad_report_date_day__ad_id'], 'alias': 'dbt_utils_unique_combination_o_7e938186a70fc693a9b0fdc4e976a536', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_7e938186a70fc693a9b0fdc4e976a536', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_7e938186a70fc693a9b0fdc4e976a536'}, 'created_at': 1694433485.1536229, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_7e938186a70fc693a9b0fdc4e976a536'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_7e938186a70fc693a9b0fdc4e976a536") }}', 'language': 'sql', 'refs': [['amazon_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.amazon_ads__ad_report'}, 'test.amazon_ads.not_null_amazon_ads__campaign_report_campaign_id.a9cabadd7c': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('amazon_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_amazon_ads__campaign_report_campaign_id', 'resource_type': 'test', 'package_name': 'amazon_ads', 'path': 'not_null_amazon_ads__campaign_report_campaign_id.sql', 'original_file_path': 'models\\amazon_ads.yml', 'unique_id': 'test.amazon_ads.not_null_amazon_ads__campaign_report_campaign_id.a9cabadd7c', 'fqn': ['amazon_ads', 'not_null_amazon_ads__campaign_report_campaign_id'], 'alias': 'not_null_amazon_ads__campaign_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.1581519, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['amazon_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.amazon_ads__campaign_report'}, 'test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__campaign_report_date_day__campaign_id.32a2e699e0': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'campaign_id'], 'model': "{{ get_where_subquery(ref('amazon_ads__campaign_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_amazon_ads__campaign_report_date_day__campaign_id', 'resource_type': 'test', 'package_name': 'amazon_ads', 'path': 'dbt_utils_unique_combination_o_1ea261631e657e41cdd7eb8202913e33.sql', 'original_file_path': 'models\\amazon_ads.yml', 'unique_id': 'test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__campaign_report_date_day__campaign_id.32a2e699e0', 'fqn': ['amazon_ads', 'dbt_utils_unique_combination_of_columns_amazon_ads__campaign_report_date_day__campaign_id'], 'alias': 'dbt_utils_unique_combination_o_1ea261631e657e41cdd7eb8202913e33', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_1ea261631e657e41cdd7eb8202913e33', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_1ea261631e657e41cdd7eb8202913e33'}, 'created_at': 1694433485.1601562, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_1ea261631e657e41cdd7eb8202913e33'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_1ea261631e657e41cdd7eb8202913e33") }}', 'language': 'sql', 'refs': [['amazon_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.amazon_ads__campaign_report'}, 'test.amazon_ads.not_null_amazon_ads__portfolio_report_profile_id.1a910441c6': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'profile_id', 'model': "{{ get_where_subquery(ref('amazon_ads__portfolio_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_amazon_ads__portfolio_report_profile_id', 'resource_type': 'test', 'package_name': 'amazon_ads', 'path': 'not_null_amazon_ads__portfolio_report_profile_id.sql', 'original_file_path': 'models\\amazon_ads.yml', 'unique_id': 'test.amazon_ads.not_null_amazon_ads__portfolio_report_profile_id.1a910441c6', 'fqn': ['amazon_ads', 'not_null_amazon_ads__portfolio_report_profile_id'], 'alias': 'not_null_amazon_ads__portfolio_report_profile_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.1651554, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['amazon_ads__portfolio_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'profile_id', 'file_key_name': 'models.amazon_ads__portfolio_report'}, 'test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__portfolio_report_date_day__portfolio_id.1a53f40fd6': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'portfolio_id'], 'model': "{{ get_where_subquery(ref('amazon_ads__portfolio_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_amazon_ads__portfolio_report_date_day__portfolio_id', 'resource_type': 'test', 'package_name': 'amazon_ads', 'path': 'dbt_utils_unique_combination_o_2b914fbf0d57f280e6738a6bf6a2805f.sql', 'original_file_path': 'models\\amazon_ads.yml', 'unique_id': 'test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__portfolio_report_date_day__portfolio_id.1a53f40fd6', 'fqn': ['amazon_ads', 'dbt_utils_unique_combination_of_columns_amazon_ads__portfolio_report_date_day__portfolio_id'], 'alias': 'dbt_utils_unique_combination_o_2b914fbf0d57f280e6738a6bf6a2805f', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_2b914fbf0d57f280e6738a6bf6a2805f', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_2b914fbf0d57f280e6738a6bf6a2805f'}, 'created_at': 1694433485.1661553, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_2b914fbf0d57f280e6738a6bf6a2805f'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_2b914fbf0d57f280e6738a6bf6a2805f") }}', 'language': 'sql', 'refs': [['amazon_ads__portfolio_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.amazon_ads__portfolio_report'}, 'test.amazon_ads.not_null_amazon_ads__keyword_report_keyword_id.303f680e4a': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'keyword_id', 'model': "{{ get_where_subquery(ref('amazon_ads__keyword_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_amazon_ads__keyword_report_keyword_id', 'resource_type': 'test', 'package_name': 'amazon_ads', 'path': 'not_null_amazon_ads__keyword_report_keyword_id.sql', 'original_file_path': 'models\\amazon_ads.yml', 'unique_id': 'test.amazon_ads.not_null_amazon_ads__keyword_report_keyword_id.303f680e4a', 'fqn': ['amazon_ads', 'not_null_amazon_ads__keyword_report_keyword_id'], 'alias': 'not_null_amazon_ads__keyword_report_keyword_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.1706653, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['amazon_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'keyword_id', 'file_key_name': 'models.amazon_ads__keyword_report'}, 'test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__keyword_report_date_day__keyword_id.2f70b31a80': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'keyword_id'], 'model': "{{ get_where_subquery(ref('amazon_ads__keyword_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_amazon_ads__keyword_report_date_day__keyword_id', 'resource_type': 'test', 'package_name': 'amazon_ads', 'path': 'dbt_utils_unique_combination_o_5f7a5df7cd8d9aa6dcf433fbef667751.sql', 'original_file_path': 'models\\amazon_ads.yml', 'unique_id': 'test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__keyword_report_date_day__keyword_id.2f70b31a80', 'fqn': ['amazon_ads', 'dbt_utils_unique_combination_of_columns_amazon_ads__keyword_report_date_day__keyword_id'], 'alias': 'dbt_utils_unique_combination_o_5f7a5df7cd8d9aa6dcf433fbef667751', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_5f7a5df7cd8d9aa6dcf433fbef667751', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_5f7a5df7cd8d9aa6dcf433fbef667751'}, 'created_at': 1694433485.1726654, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_5f7a5df7cd8d9aa6dcf433fbef667751'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_5f7a5df7cd8d9aa6dcf433fbef667751") }}', 'language': 'sql', 'refs': [['amazon_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.amazon_ads__keyword_report'}, 'test.amazon_ads.not_null_amazon_ads__search_report_search_term.3c23d4658a': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'search_term', 'model': "{{ get_where_subquery(ref('amazon_ads__search_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_amazon_ads__search_report_search_term', 'resource_type': 'test', 'package_name': 'amazon_ads', 'path': 'not_null_amazon_ads__search_report_search_term.sql', 'original_file_path': 'models\\amazon_ads.yml', 'unique_id': 'test.amazon_ads.not_null_amazon_ads__search_report_search_term.3c23d4658a', 'fqn': ['amazon_ads', 'not_null_amazon_ads__search_report_search_term'], 'alias': 'not_null_amazon_ads__search_report_search_term', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.177171, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['amazon_ads__search_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'search_term', 'file_key_name': 'models.amazon_ads__search_report'}, 'test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__search_report_date_day__search_term__keyword_id.be92659f9f': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'search_term', 'keyword_id'], 'model': "{{ get_where_subquery(ref('amazon_ads__search_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_amazon_ads__search_report_date_day__search_term__keyword_id', 'resource_type': 'test', 'package_name': 'amazon_ads', 'path': 'dbt_utils_unique_combination_o_31232c8fcd8b9b4a5cc701d1caae2b67.sql', 'original_file_path': 'models\\amazon_ads.yml', 'unique_id': 'test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__search_report_date_day__search_term__keyword_id.be92659f9f', 'fqn': ['amazon_ads', 'dbt_utils_unique_combination_of_columns_amazon_ads__search_report_date_day__search_term__keyword_id'], 'alias': 'dbt_utils_unique_combination_o_31232c8fcd8b9b4a5cc701d1caae2b67', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_31232c8fcd8b9b4a5cc701d1caae2b67', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_31232c8fcd8b9b4a5cc701d1caae2b67'}, 'created_at': 1694433485.178192, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_31232c8fcd8b9b4a5cc701d1caae2b67'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_31232c8fcd8b9b4a5cc701d1caae2b67") }}', 'language': 'sql', 'refs': [['amazon_ads__search_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.amazon_ads__search_report'}, 'test.amazon_ads_source.not_null_stg_amazon_ads__ad_group_history_ad_group_id.6b524b990b': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('stg_amazon_ads__ad_group_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_amazon_ads__ad_group_history_ad_group_id', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'not_null_stg_amazon_ads__ad_group_history_ad_group_id.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.not_null_stg_amazon_ads__ad_group_history_ad_group_id.6b524b990b', 'fqn': ['amazon_ads_source', 'not_null_stg_amazon_ads__ad_group_history_ad_group_id'], 'alias': 'not_null_stg_amazon_ads__ad_group_history_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.275537, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_amazon_ads__ad_group_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.stg_amazon_ads__ad_group_history'}, 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__ad_group_history_ad_group_id__last_updated_date.9d2ad05ee9': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_group_id', 'last_updated_date'], 'model': "{{ get_where_subquery(ref('stg_amazon_ads__ad_group_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__ad_group_history_ad_group_id__last_updated_date', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'dbt_utils_unique_combination_o_b825bf39ab172d49ce4969d3360ae9a1.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__ad_group_history_ad_group_id__last_updated_date.9d2ad05ee9', 'fqn': ['amazon_ads_source', 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__ad_group_history_ad_group_id__last_updated_date'], 'alias': 'dbt_utils_unique_combination_o_b825bf39ab172d49ce4969d3360ae9a1', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_b825bf39ab172d49ce4969d3360ae9a1', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_b825bf39ab172d49ce4969d3360ae9a1'}, 'created_at': 1694433485.2772014, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_b825bf39ab172d49ce4969d3360ae9a1'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_b825bf39ab172d49ce4969d3360ae9a1") }}', 'language': 'sql', 'refs': [['stg_amazon_ads__ad_group_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_amazon_ads__ad_group_history'}, 'test.amazon_ads_source.not_null_stg_amazon_ads__ad_group_level_report_ad_group_id.ee4ef641c3': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('stg_amazon_ads__ad_group_level_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_amazon_ads__ad_group_level_report_ad_group_id', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'not_null_stg_amazon_ads__ad_group_level_report_ad_group_id.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.not_null_stg_amazon_ads__ad_group_level_report_ad_group_id.ee4ef641c3', 'fqn': ['amazon_ads_source', 'not_null_stg_amazon_ads__ad_group_level_report_ad_group_id'], 'alias': 'not_null_stg_amazon_ads__ad_group_level_report_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.2819834, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_amazon_ads__ad_group_level_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.stg_amazon_ads__ad_group_level_report'}, 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__ad_group_level_report_ad_group_id__date_day.f014d2ad94': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_group_id', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_amazon_ads__ad_group_level_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__ad_group_level_report_ad_group_id__date_day', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'dbt_utils_unique_combination_o_b23ba4f5baf6fbdd2fefaeb1251b311d.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__ad_group_level_report_ad_group_id__date_day.f014d2ad94', 'fqn': ['amazon_ads_source', 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__ad_group_level_report_ad_group_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_b23ba4f5baf6fbdd2fefaeb1251b311d', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_b23ba4f5baf6fbdd2fefaeb1251b311d', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_b23ba4f5baf6fbdd2fefaeb1251b311d'}, 'created_at': 1694433485.2840018, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_b23ba4f5baf6fbdd2fefaeb1251b311d'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_b23ba4f5baf6fbdd2fefaeb1251b311d") }}', 'language': 'sql', 'refs': [['stg_amazon_ads__ad_group_level_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_amazon_ads__ad_group_level_report'}, 'test.amazon_ads_source.not_null_stg_amazon_ads__advertised_product_report_ad_id.307c6bc8d4': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('stg_amazon_ads__advertised_product_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_amazon_ads__advertised_product_report_ad_id', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'not_null_stg_amazon_ads__advertised_product_report_ad_id.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.not_null_stg_amazon_ads__advertised_product_report_ad_id.307c6bc8d4', 'fqn': ['amazon_ads_source', 'not_null_stg_amazon_ads__advertised_product_report_ad_id'], 'alias': 'not_null_stg_amazon_ads__advertised_product_report_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.2885091, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_amazon_ads__advertised_product_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.stg_amazon_ads__advertised_product_report'}, 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__advertised_product_report_ad_id__date_day.866a51d99d': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_amazon_ads__advertised_product_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__advertised_product_report_ad_id__date_day', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'dbt_utils_unique_combination_o_aeb3570ec2093361b49d6d6843df0417.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__advertised_product_report_ad_id__date_day.866a51d99d', 'fqn': ['amazon_ads_source', 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__advertised_product_report_ad_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_aeb3570ec2093361b49d6d6843df0417', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_aeb3570ec2093361b49d6d6843df0417', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_aeb3570ec2093361b49d6d6843df0417'}, 'created_at': 1694433485.289511, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_aeb3570ec2093361b49d6d6843df0417'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_aeb3570ec2093361b49d6d6843df0417") }}', 'language': 'sql', 'refs': [['stg_amazon_ads__advertised_product_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_amazon_ads__advertised_product_report'}, 'test.amazon_ads_source.not_null_stg_amazon_ads__campaign_history_campaign_id.49e395897c': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_amazon_ads__campaign_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_amazon_ads__campaign_history_campaign_id', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'not_null_stg_amazon_ads__campaign_history_campaign_id.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.not_null_stg_amazon_ads__campaign_history_campaign_id.49e395897c', 'fqn': ['amazon_ads_source', 'not_null_stg_amazon_ads__campaign_history_campaign_id'], 'alias': 'not_null_stg_amazon_ads__campaign_history_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.2945113, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_amazon_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_amazon_ads__campaign_history'}, 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__campaign_history_campaign_id__last_updated_date.3a70468382': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', 'last_updated_date'], 'model': "{{ get_where_subquery(ref('stg_amazon_ads__campaign_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__campaign_history_campaign_id__last_updated_date', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'dbt_utils_unique_combination_o_ea36d6ecb42fc2f85eae0659671721d9.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__campaign_history_campaign_id__last_updated_date.3a70468382', 'fqn': ['amazon_ads_source', 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__campaign_history_campaign_id__last_updated_date'], 'alias': 'dbt_utils_unique_combination_o_ea36d6ecb42fc2f85eae0659671721d9', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_ea36d6ecb42fc2f85eae0659671721d9', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_ea36d6ecb42fc2f85eae0659671721d9'}, 'created_at': 1694433485.295511, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_ea36d6ecb42fc2f85eae0659671721d9'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_ea36d6ecb42fc2f85eae0659671721d9") }}', 'language': 'sql', 'refs': [['stg_amazon_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_amazon_ads__campaign_history'}, 'test.amazon_ads_source.not_null_stg_amazon_ads__campaign_level_report_campaign_id.1efec68194': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_amazon_ads__campaign_level_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_amazon_ads__campaign_level_report_campaign_id', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'not_null_stg_amazon_ads__campaign_level_report_campaign_id.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.not_null_stg_amazon_ads__campaign_level_report_campaign_id.1efec68194', 'fqn': ['amazon_ads_source', 'not_null_stg_amazon_ads__campaign_level_report_campaign_id'], 'alias': 'not_null_stg_amazon_ads__campaign_level_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.3013697, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_amazon_ads__campaign_level_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_amazon_ads__campaign_level_report'}, 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__campaign_level_report_campaign_id__date_day.8e5392b313': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_amazon_ads__campaign_level_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__campaign_level_report_campaign_id__date_day', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'dbt_utils_unique_combination_o_8181dab5f509aa221040aca686d2f748.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__campaign_level_report_campaign_id__date_day.8e5392b313', 'fqn': ['amazon_ads_source', 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__campaign_level_report_campaign_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_8181dab5f509aa221040aca686d2f748', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_8181dab5f509aa221040aca686d2f748', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_8181dab5f509aa221040aca686d2f748'}, 'created_at': 1694433485.3024483, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_8181dab5f509aa221040aca686d2f748'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_8181dab5f509aa221040aca686d2f748") }}', 'language': 'sql', 'refs': [['stg_amazon_ads__campaign_level_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_amazon_ads__campaign_level_report'}, 'test.amazon_ads_source.not_null_stg_amazon_ads__keyword_history_keyword_id.f21f6add6e': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'keyword_id', 'model': "{{ get_where_subquery(ref('stg_amazon_ads__keyword_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_amazon_ads__keyword_history_keyword_id', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'not_null_stg_amazon_ads__keyword_history_keyword_id.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.not_null_stg_amazon_ads__keyword_history_keyword_id.f21f6add6e', 'fqn': ['amazon_ads_source', 'not_null_stg_amazon_ads__keyword_history_keyword_id'], 'alias': 'not_null_stg_amazon_ads__keyword_history_keyword_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.307242, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_amazon_ads__keyword_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'keyword_id', 'file_key_name': 'models.stg_amazon_ads__keyword_history'}, 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__keyword_history_keyword_id__last_updated_date.fcd76c3197': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['keyword_id', 'last_updated_date'], 'model': "{{ get_where_subquery(ref('stg_amazon_ads__keyword_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__keyword_history_keyword_id__last_updated_date', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'dbt_utils_unique_combination_o_346b096ed77071642a51719dee42f3be.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__keyword_history_keyword_id__last_updated_date.fcd76c3197', 'fqn': ['amazon_ads_source', 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__keyword_history_keyword_id__last_updated_date'], 'alias': 'dbt_utils_unique_combination_o_346b096ed77071642a51719dee42f3be', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_346b096ed77071642a51719dee42f3be', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_346b096ed77071642a51719dee42f3be'}, 'created_at': 1694433485.3083346, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_346b096ed77071642a51719dee42f3be'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_346b096ed77071642a51719dee42f3be") }}', 'language': 'sql', 'refs': [['stg_amazon_ads__keyword_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_amazon_ads__keyword_history'}, 'test.amazon_ads_source.not_null_stg_amazon_ads__portfolio_history_portfolio_id.e22bb2ba02': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'portfolio_id', 'model': "{{ get_where_subquery(ref('stg_amazon_ads__portfolio_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_amazon_ads__portfolio_history_portfolio_id', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'not_null_stg_amazon_ads__portfolio_history_portfolio_id.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.not_null_stg_amazon_ads__portfolio_history_portfolio_id.e22bb2ba02', 'fqn': ['amazon_ads_source', 'not_null_stg_amazon_ads__portfolio_history_portfolio_id'], 'alias': 'not_null_stg_amazon_ads__portfolio_history_portfolio_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.3126948, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_amazon_ads__portfolio_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'portfolio_id', 'file_key_name': 'models.stg_amazon_ads__portfolio_history'}, 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__portfolio_history_portfolio_id__last_updated_date.72b1221050': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['portfolio_id', 'last_updated_date'], 'model': "{{ get_where_subquery(ref('stg_amazon_ads__portfolio_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__portfolio_history_portfolio_id__last_updated_date', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'dbt_utils_unique_combination_o_f34d615bb6f942bd1789096833bf4147.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__portfolio_history_portfolio_id__last_updated_date.72b1221050', 'fqn': ['amazon_ads_source', 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__portfolio_history_portfolio_id__last_updated_date'], 'alias': 'dbt_utils_unique_combination_o_f34d615bb6f942bd1789096833bf4147', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_f34d615bb6f942bd1789096833bf4147', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_f34d615bb6f942bd1789096833bf4147'}, 'created_at': 1694433485.3148673, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_f34d615bb6f942bd1789096833bf4147'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_f34d615bb6f942bd1789096833bf4147") }}', 'language': 'sql', 'refs': [['stg_amazon_ads__portfolio_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_amazon_ads__portfolio_history'}, 'test.amazon_ads_source.not_null_stg_amazon_ads__product_ad_history_ad_id.8744ab1cd8': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('stg_amazon_ads__product_ad_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_amazon_ads__product_ad_history_ad_id', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'not_null_stg_amazon_ads__product_ad_history_ad_id.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.not_null_stg_amazon_ads__product_ad_history_ad_id.8744ab1cd8', 'fqn': ['amazon_ads_source', 'not_null_stg_amazon_ads__product_ad_history_ad_id'], 'alias': 'not_null_stg_amazon_ads__product_ad_history_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.319785, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_amazon_ads__product_ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.stg_amazon_ads__product_ad_history'}, 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__product_ad_history_ad_id__last_updated_date.b0106257b4': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'last_updated_date'], 'model': "{{ get_where_subquery(ref('stg_amazon_ads__product_ad_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__product_ad_history_ad_id__last_updated_date', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'dbt_utils_unique_combination_o_ab95560d07b97f5673463efe945e7814.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__product_ad_history_ad_id__last_updated_date.b0106257b4', 'fqn': ['amazon_ads_source', 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__product_ad_history_ad_id__last_updated_date'], 'alias': 'dbt_utils_unique_combination_o_ab95560d07b97f5673463efe945e7814', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_ab95560d07b97f5673463efe945e7814', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_ab95560d07b97f5673463efe945e7814'}, 'created_at': 1694433485.3218746, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_ab95560d07b97f5673463efe945e7814'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_ab95560d07b97f5673463efe945e7814") }}', 'language': 'sql', 'refs': [['stg_amazon_ads__product_ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_amazon_ads__product_ad_history'}, 'test.amazon_ads_source.not_null_stg_amazon_ads__profile_profile_id.bd192c102b': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'profile_id', 'model': "{{ get_where_subquery(ref('stg_amazon_ads__profile')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_amazon_ads__profile_profile_id', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'not_null_stg_amazon_ads__profile_profile_id.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.not_null_stg_amazon_ads__profile_profile_id.bd192c102b', 'fqn': ['amazon_ads_source', 'not_null_stg_amazon_ads__profile_profile_id'], 'alias': 'not_null_stg_amazon_ads__profile_profile_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.32587, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_amazon_ads__profile']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'profile_id', 'file_key_name': 'models.stg_amazon_ads__profile'}, 'test.amazon_ads_source.not_null_stg_amazon_ads__targeting_keyword_report_keyword_id.101a3299d7': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'keyword_id', 'model': "{{ get_where_subquery(ref('stg_amazon_ads__targeting_keyword_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_amazon_ads__targeting_keyword_report_keyword_id', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'not_null_stg_amazon_ads__targeting_keyword_report_keyword_id.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.not_null_stg_amazon_ads__targeting_keyword_report_keyword_id.101a3299d7', 'fqn': ['amazon_ads_source', 'not_null_stg_amazon_ads__targeting_keyword_report_keyword_id'], 'alias': 'not_null_stg_amazon_ads__targeting_keyword_report_keyword_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.3274589, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_amazon_ads__targeting_keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'keyword_id', 'file_key_name': 'models.stg_amazon_ads__targeting_keyword_report'}, 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__targeting_keyword_report_keyword_id__date_day.cc516f7bcb': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['keyword_id', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_amazon_ads__targeting_keyword_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__targeting_keyword_report_keyword_id__date_day', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'dbt_utils_unique_combination_o_4a47e02be36493c13722699ad58e4de6.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__targeting_keyword_report_keyword_id__date_day.cc516f7bcb', 'fqn': ['amazon_ads_source', 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__targeting_keyword_report_keyword_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_4a47e02be36493c13722699ad58e4de6', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_4a47e02be36493c13722699ad58e4de6', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_4a47e02be36493c13722699ad58e4de6'}, 'created_at': 1694433485.3295317, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_4a47e02be36493c13722699ad58e4de6'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_4a47e02be36493c13722699ad58e4de6") }}', 'language': 'sql', 'refs': [['stg_amazon_ads__targeting_keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_amazon_ads__targeting_keyword_report'}, 'test.amazon_ads_source.not_null_stg_amazon_ads__search_term_ad_keyword_report_search_term.ef04af3b06': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'search_term', 'model': "{{ get_where_subquery(ref('stg_amazon_ads__search_term_ad_keyword_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_amazon_ads__search_term_ad_keyword_report_search_term', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'not_null_stg_amazon_ads__searc_f003e4b73838d347c57dd6506254bcfe.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.not_null_stg_amazon_ads__search_term_ad_keyword_report_search_term.ef04af3b06', 'fqn': ['amazon_ads_source', 'not_null_stg_amazon_ads__search_term_ad_keyword_report_search_term'], 'alias': 'not_null_stg_amazon_ads__searc_f003e4b73838d347c57dd6506254bcfe', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'not_null_stg_amazon_ads__searc_f003e4b73838d347c57dd6506254bcfe', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'not_null_stg_amazon_ads__searc_f003e4b73838d347c57dd6506254bcfe'}, 'created_at': 1694433485.3345373, 'config_call_dict': {'alias': 'not_null_stg_amazon_ads__searc_f003e4b73838d347c57dd6506254bcfe'}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias="not_null_stg_amazon_ads__searc_f003e4b73838d347c57dd6506254bcfe") }}', 'language': 'sql', 'refs': [['stg_amazon_ads__search_term_ad_keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'search_term', 'file_key_name': 'models.stg_amazon_ads__search_term_ad_keyword_report'}, 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__search_term_ad_keyword_report_search_term__keyword_id__date_day.fb8ba99693': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['search_term', 'keyword_id', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_amazon_ads__search_term_ad_keyword_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__search_term_ad_keyword_report_search_term__keyword_id__date_day', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'dbt_utils_unique_combination_o_13c9d53b5377a45a6af6b108d52f9f28.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__search_term_ad_keyword_report_search_term__keyword_id__date_day.fb8ba99693', 'fqn': ['amazon_ads_source', 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__search_term_ad_keyword_report_search_term__keyword_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_13c9d53b5377a45a6af6b108d52f9f28', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_13c9d53b5377a45a6af6b108d52f9f28', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_13c9d53b5377a45a6af6b108d52f9f28'}, 'created_at': 1694433485.335532, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_13c9d53b5377a45a6af6b108d52f9f28'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_13c9d53b5377a45a6af6b108d52f9f28") }}', 'language': 'sql', 'refs': [['stg_amazon_ads__search_term_ad_keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_amazon_ads__search_term_ad_keyword_report'}, 'test.apple_search_ads.not_null_apple_search_ads__ad_group_report_ad_group_id.60febec6b5': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('apple_search_ads__ad_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_apple_search_ads__ad_group_report_ad_group_id', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'not_null_apple_search_ads__ad_group_report_ad_group_id.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.not_null_apple_search_ads__ad_group_report_ad_group_id.60febec6b5', 'fqn': ['apple_search_ads', 'not_null_apple_search_ads__ad_group_report_ad_group_id'], 'alias': 'not_null_apple_search_ads__ad_group_report_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.3733687, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['apple_search_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads.apple_search_ads__ad_group_report']}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.apple_search_ads__ad_group_report'}, 'test.apple_search_ads.not_null_apple_search_ads__ad_group_report_date_day.e6ffb30b3c': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('apple_search_ads__ad_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_apple_search_ads__ad_group_report_date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'not_null_apple_search_ads__ad_group_report_date_day.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.not_null_apple_search_ads__ad_group_report_date_day.e6ffb30b3c', 'fqn': ['apple_search_ads', 'not_null_apple_search_ads__ad_group_report_date_day'], 'alias': 'not_null_apple_search_ads__ad_group_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.3753622, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['apple_search_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads.apple_search_ads__ad_group_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.apple_search_ads__ad_group_report'}, 'test.apple_search_ads.dbt_utils_unique_combination_of_columns_apple_search_ads__ad_group_report_organization_id__campaign_id__ad_group_id__date_day.19d180bab9': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['organization_id', 'campaign_id', 'ad_group_id', 'date_day'], 'model': "{{ get_where_subquery(ref('apple_search_ads__ad_group_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_apple_search_ads__ad_group_report_organization_id__campaign_id__ad_group_id__date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'dbt_utils_unique_combination_o_36b2ef766b4fc10b364ed4744c94afb2.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.dbt_utils_unique_combination_of_columns_apple_search_ads__ad_group_report_organization_id__campaign_id__ad_group_id__date_day.19d180bab9', 'fqn': ['apple_search_ads', 'dbt_utils_unique_combination_of_columns_apple_search_ads__ad_group_report_organization_id__campaign_id__ad_group_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_36b2ef766b4fc10b364ed4744c94afb2', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_36b2ef766b4fc10b364ed4744c94afb2', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_36b2ef766b4fc10b364ed4744c94afb2'}, 'created_at': 1694433485.37706, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_36b2ef766b4fc10b364ed4744c94afb2'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_36b2ef766b4fc10b364ed4744c94afb2") }}', 'language': 'sql', 'refs': [['apple_search_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.apple_search_ads.apple_search_ads__ad_group_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.apple_search_ads__ad_group_report'}, 'test.apple_search_ads.not_null_apple_search_ads__ad_report_ad_id.0ab2c5075c': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('apple_search_ads__ad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_apple_search_ads__ad_report_ad_id', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'not_null_apple_search_ads__ad_report_ad_id.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.not_null_apple_search_ads__ad_report_ad_id.0ab2c5075c', 'fqn': ['apple_search_ads', 'not_null_apple_search_ads__ad_report_ad_id'], 'alias': 'not_null_apple_search_ads__ad_report_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.3828845, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['apple_search_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads.apple_search_ads__ad_report']}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.apple_search_ads__ad_report'}, 'test.apple_search_ads.not_null_apple_search_ads__ad_report_date_day.b86c049e17': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('apple_search_ads__ad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_apple_search_ads__ad_report_date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'not_null_apple_search_ads__ad_report_date_day.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.not_null_apple_search_ads__ad_report_date_day.b86c049e17', 'fqn': ['apple_search_ads', 'not_null_apple_search_ads__ad_report_date_day'], 'alias': 'not_null_apple_search_ads__ad_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.3848877, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['apple_search_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads.apple_search_ads__ad_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.apple_search_ads__ad_report'}, 'test.apple_search_ads.dbt_utils_unique_combination_of_columns_apple_search_ads__ad_report_organization_id__campaign_id__ad_group_id__ad_id__date_day.54e27817a1': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['organization_id', 'campaign_id', 'ad_group_id', 'ad_id', 'date_day'], 'model': "{{ get_where_subquery(ref('apple_search_ads__ad_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_apple_search_ads__ad_report_organization_id__campaign_id__ad_group_id__ad_id__date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'dbt_utils_unique_combination_o_bd72aacf9db10be434541a5eb54a963c.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.dbt_utils_unique_combination_of_columns_apple_search_ads__ad_report_organization_id__campaign_id__ad_group_id__ad_id__date_day.54e27817a1', 'fqn': ['apple_search_ads', 'dbt_utils_unique_combination_of_columns_apple_search_ads__ad_report_organization_id__campaign_id__ad_group_id__ad_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_bd72aacf9db10be434541a5eb54a963c', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_bd72aacf9db10be434541a5eb54a963c', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_bd72aacf9db10be434541a5eb54a963c'}, 'created_at': 1694433485.3858852, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_bd72aacf9db10be434541a5eb54a963c'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_bd72aacf9db10be434541a5eb54a963c") }}', 'language': 'sql', 'refs': [['apple_search_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.apple_search_ads.apple_search_ads__ad_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.apple_search_ads__ad_report'}, 'test.apple_search_ads.not_null_apple_search_ads__campaign_report_campaign_id.e26ed1e146': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('apple_search_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_apple_search_ads__campaign_report_campaign_id', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'not_null_apple_search_ads__campaign_report_campaign_id.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.not_null_apple_search_ads__campaign_report_campaign_id.e26ed1e146', 'fqn': ['apple_search_ads', 'not_null_apple_search_ads__campaign_report_campaign_id'], 'alias': 'not_null_apple_search_ads__campaign_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.390831, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['apple_search_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads.apple_search_ads__campaign_report']}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.apple_search_ads__campaign_report'}, 'test.apple_search_ads.not_null_apple_search_ads__campaign_report_date_day.35652b8d1a': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('apple_search_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_apple_search_ads__campaign_report_date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'not_null_apple_search_ads__campaign_report_date_day.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.not_null_apple_search_ads__campaign_report_date_day.35652b8d1a', 'fqn': ['apple_search_ads', 'not_null_apple_search_ads__campaign_report_date_day'], 'alias': 'not_null_apple_search_ads__campaign_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.3929, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['apple_search_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads.apple_search_ads__campaign_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.apple_search_ads__campaign_report'}, 'test.apple_search_ads.dbt_utils_unique_combination_of_columns_apple_search_ads__campaign_report_organization_id__campaign_id__date_day.647e56213f': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['organization_id', 'campaign_id', 'date_day'], 'model': "{{ get_where_subquery(ref('apple_search_ads__campaign_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_apple_search_ads__campaign_report_organization_id__campaign_id__date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'dbt_utils_unique_combination_o_3acbf89c4e0b6809bc53bfa9067d89c5.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.dbt_utils_unique_combination_of_columns_apple_search_ads__campaign_report_organization_id__campaign_id__date_day.647e56213f', 'fqn': ['apple_search_ads', 'dbt_utils_unique_combination_of_columns_apple_search_ads__campaign_report_organization_id__campaign_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_3acbf89c4e0b6809bc53bfa9067d89c5', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_3acbf89c4e0b6809bc53bfa9067d89c5', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_3acbf89c4e0b6809bc53bfa9067d89c5'}, 'created_at': 1694433485.3948987, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_3acbf89c4e0b6809bc53bfa9067d89c5'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_3acbf89c4e0b6809bc53bfa9067d89c5") }}', 'language': 'sql', 'refs': [['apple_search_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.apple_search_ads.apple_search_ads__campaign_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.apple_search_ads__campaign_report'}, 'test.apple_search_ads.not_null_apple_search_ads__keyword_report_keyword_id.ea493710db': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'keyword_id', 'model': "{{ get_where_subquery(ref('apple_search_ads__keyword_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_apple_search_ads__keyword_report_keyword_id', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'not_null_apple_search_ads__keyword_report_keyword_id.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.not_null_apple_search_ads__keyword_report_keyword_id.ea493710db', 'fqn': ['apple_search_ads', 'not_null_apple_search_ads__keyword_report_keyword_id'], 'alias': 'not_null_apple_search_ads__keyword_report_keyword_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.3994472, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['apple_search_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads.apple_search_ads__keyword_report']}, 'compiled_path': None, 'column_name': 'keyword_id', 'file_key_name': 'models.apple_search_ads__keyword_report'}, 'test.apple_search_ads.not_null_apple_search_ads__keyword_report_date_day.3dec8d0e82': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('apple_search_ads__keyword_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_apple_search_ads__keyword_report_date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'not_null_apple_search_ads__keyword_report_date_day.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.not_null_apple_search_ads__keyword_report_date_day.3dec8d0e82', 'fqn': ['apple_search_ads', 'not_null_apple_search_ads__keyword_report_date_day'], 'alias': 'not_null_apple_search_ads__keyword_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.4014351, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['apple_search_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads.apple_search_ads__keyword_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.apple_search_ads__keyword_report'}, 'test.apple_search_ads.dbt_utils_unique_combination_of_columns_apple_search_ads__keyword_report_organization_id__campaign_id__ad_group_id__keyword_id__date_day.78fb033a13': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['organization_id', 'campaign_id', 'ad_group_id', 'keyword_id', 'date_day'], 'model': "{{ get_where_subquery(ref('apple_search_ads__keyword_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_apple_search_ads__keyword_report_organization_id__campaign_id__ad_group_id__keyword_id__date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'dbt_utils_unique_combination_o_533c8551a101baa56c397525cb8a9246.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.dbt_utils_unique_combination_of_columns_apple_search_ads__keyword_report_organization_id__campaign_id__ad_group_id__keyword_id__date_day.78fb033a13', 'fqn': ['apple_search_ads', 'dbt_utils_unique_combination_of_columns_apple_search_ads__keyword_report_organization_id__campaign_id__ad_group_id__keyword_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_533c8551a101baa56c397525cb8a9246', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_533c8551a101baa56c397525cb8a9246', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_533c8551a101baa56c397525cb8a9246'}, 'created_at': 1694433485.4024363, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_533c8551a101baa56c397525cb8a9246'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_533c8551a101baa56c397525cb8a9246") }}', 'language': 'sql', 'refs': [['apple_search_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.apple_search_ads.apple_search_ads__keyword_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.apple_search_ads__keyword_report'}, 'test.apple_search_ads.not_null_apple_search_ads__organization_report_organization_id.b6cf7d69f8': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'organization_id', 'model': "{{ get_where_subquery(ref('apple_search_ads__organization_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_apple_search_ads__organization_report_organization_id', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'not_null_apple_search_ads__organization_report_organization_id.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.not_null_apple_search_ads__organization_report_organization_id.b6cf7d69f8', 'fqn': ['apple_search_ads', 'not_null_apple_search_ads__organization_report_organization_id'], 'alias': 'not_null_apple_search_ads__organization_report_organization_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.4091349, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['apple_search_ads__organization_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads.apple_search_ads__organization_report']}, 'compiled_path': None, 'column_name': 'organization_id', 'file_key_name': 'models.apple_search_ads__organization_report'}, 'test.apple_search_ads.not_null_apple_search_ads__organization_report_date_day.5784fed523': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('apple_search_ads__organization_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_apple_search_ads__organization_report_date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'not_null_apple_search_ads__organization_report_date_day.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.not_null_apple_search_ads__organization_report_date_day.5784fed523', 'fqn': ['apple_search_ads', 'not_null_apple_search_ads__organization_report_date_day'], 'alias': 'not_null_apple_search_ads__organization_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.4110644, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['apple_search_ads__organization_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads.apple_search_ads__organization_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.apple_search_ads__organization_report'}, 'test.apple_search_ads.dbt_utils_unique_combination_of_columns_apple_search_ads__organization_report_organization_id__date_day.8bc84fccc3': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['organization_id', 'date_day'], 'model': "{{ get_where_subquery(ref('apple_search_ads__organization_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_apple_search_ads__organization_report_organization_id__date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'dbt_utils_unique_combination_o_f2f453668a8bb7c0387ed85fc7bfaf2d.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.dbt_utils_unique_combination_of_columns_apple_search_ads__organization_report_organization_id__date_day.8bc84fccc3', 'fqn': ['apple_search_ads', 'dbt_utils_unique_combination_of_columns_apple_search_ads__organization_report_organization_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_f2f453668a8bb7c0387ed85fc7bfaf2d', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_f2f453668a8bb7c0387ed85fc7bfaf2d', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_f2f453668a8bb7c0387ed85fc7bfaf2d'}, 'created_at': 1694433485.413132, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_f2f453668a8bb7c0387ed85fc7bfaf2d'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_f2f453668a8bb7c0387ed85fc7bfaf2d") }}', 'language': 'sql', 'refs': [['apple_search_ads__organization_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.apple_search_ads.apple_search_ads__organization_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.apple_search_ads__organization_report'}, 'test.apple_search_ads.not_null_apple_search_ads__search_term_report_date_day.1bc3b0d57c': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('apple_search_ads__search_term_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_apple_search_ads__search_term_report_date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'not_null_apple_search_ads__search_term_report_date_day.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.not_null_apple_search_ads__search_term_report_date_day.1bc3b0d57c', 'fqn': ['apple_search_ads', 'not_null_apple_search_ads__search_term_report_date_day'], 'alias': 'not_null_apple_search_ads__search_term_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.4171433, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['apple_search_ads__search_term_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads.apple_search_ads__search_term_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.apple_search_ads__search_term_report'}, 'test.apple_search_ads.not_null_apple_search_ads__search_term_report_search_term_text.aecc7447f7': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'search_term_text', 'model': "{{ get_where_subquery(ref('apple_search_ads__search_term_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_apple_search_ads__search_term_report_search_term_text', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'not_null_apple_search_ads__search_term_report_search_term_text.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.not_null_apple_search_ads__search_term_report_search_term_text.aecc7447f7', 'fqn': ['apple_search_ads', 'not_null_apple_search_ads__search_term_report_search_term_text'], 'alias': 'not_null_apple_search_ads__search_term_report_search_term_text', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.418504, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['apple_search_ads__search_term_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads.apple_search_ads__search_term_report']}, 'compiled_path': None, 'column_name': 'search_term_text', 'file_key_name': 'models.apple_search_ads__search_term_report'}, 'test.apple_search_ads.dbt_utils_unique_combination_of_columns_apple_search_ads__search_term_report_search_term_text__date_day.e60fe79ec4': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['search_term_text', 'date_day'], 'model': "{{ get_where_subquery(ref('apple_search_ads__search_term_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_apple_search_ads__search_term_report_search_term_text__date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'dbt_utils_unique_combination_o_7c3690db5ce751fbf1f2dff07b3a8690.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.dbt_utils_unique_combination_of_columns_apple_search_ads__search_term_report_search_term_text__date_day.e60fe79ec4', 'fqn': ['apple_search_ads', 'dbt_utils_unique_combination_of_columns_apple_search_ads__search_term_report_search_term_text__date_day'], 'alias': 'dbt_utils_unique_combination_o_7c3690db5ce751fbf1f2dff07b3a8690', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_7c3690db5ce751fbf1f2dff07b3a8690', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_7c3690db5ce751fbf1f2dff07b3a8690'}, 'created_at': 1694433485.4205694, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_7c3690db5ce751fbf1f2dff07b3a8690'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_7c3690db5ce751fbf1f2dff07b3a8690") }}', 'language': 'sql', 'refs': [['apple_search_ads__search_term_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.apple_search_ads.apple_search_ads__search_term_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.apple_search_ads__search_term_report'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_group_history_modified_at.e5d65fa28f': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'modified_at', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__ad_group_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__ad_group_history_modified_at', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__ad_group_history_modified_at.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_group_history_modified_at.e5d65fa28f', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__ad_group_history_modified_at'], 'alias': 'not_null_stg_apple_search_ads__ad_group_history_modified_at', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.4937468, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_group_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_group_history']}, 'compiled_path': None, 'column_name': 'modified_at', 'file_key_name': 'models.stg_apple_search_ads__ad_group_history'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_group_history_ad_group_id.dc128eecb7': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__ad_group_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__ad_group_history_ad_group_id', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__ad_group_history_ad_group_id.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_group_history_ad_group_id.dc128eecb7', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__ad_group_history_ad_group_id'], 'alias': 'not_null_stg_apple_search_ads__ad_group_history_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.4957469, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_group_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_group_history']}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.stg_apple_search_ads__ad_group_history'}, 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_group_history_ad_group_id__modified_at.84af14c83b': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_group_id', 'modified_at'], 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__ad_group_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_group_history_ad_group_id__modified_at', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'dbt_utils_unique_combination_o_d82553a0f3b4daa8d59460c85a542d4f.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_group_history_ad_group_id__modified_at.84af14c83b', 'fqn': ['apple_search_ads_source', 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_group_history_ad_group_id__modified_at'], 'alias': 'dbt_utils_unique_combination_o_d82553a0f3b4daa8d59460c85a542d4f', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_d82553a0f3b4daa8d59460c85a542d4f', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_d82553a0f3b4daa8d59460c85a542d4f'}, 'created_at': 1694433485.497347, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_d82553a0f3b4daa8d59460c85a542d4f'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_d82553a0f3b4daa8d59460c85a542d4f") }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_group_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_group_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_apple_search_ads__ad_group_history'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_group_report_ad_group_id.a115f9cfc1': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__ad_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__ad_group_report_ad_group_id', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__ad_group_report_ad_group_id.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_group_report_ad_group_id.a115f9cfc1', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__ad_group_report_ad_group_id'], 'alias': 'not_null_stg_apple_search_ads__ad_group_report_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.5033512, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_group_report']}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.stg_apple_search_ads__ad_group_report'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_group_report_date_day.4dfd46a43b': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__ad_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__ad_group_report_date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__ad_group_report_date_day.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_group_report_date_day.4dfd46a43b', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__ad_group_report_date_day'], 'alias': 'not_null_stg_apple_search_ads__ad_group_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.5053513, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_group_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_apple_search_ads__ad_group_report'}, 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_group_report_ad_group_id__date_day.a0fcc4e33c': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_group_id', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__ad_group_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_group_report_ad_group_id__date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'dbt_utils_unique_combination_o_107a9492c163887581fde6b34131e42d.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_group_report_ad_group_id__date_day.a0fcc4e33c', 'fqn': ['apple_search_ads_source', 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_group_report_ad_group_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_107a9492c163887581fde6b34131e42d', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_107a9492c163887581fde6b34131e42d', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_107a9492c163887581fde6b34131e42d'}, 'created_at': 1694433485.5079048, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_107a9492c163887581fde6b34131e42d'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_107a9492c163887581fde6b34131e42d") }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_group_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_apple_search_ads__ad_group_report'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_history_modified_at.2eea7e006d': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'modified_at', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__ad_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__ad_history_modified_at', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__ad_history_modified_at.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_history_modified_at.2eea7e006d', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__ad_history_modified_at'], 'alias': 'not_null_stg_apple_search_ads__ad_history_modified_at', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.5119083, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_history']}, 'compiled_path': None, 'column_name': 'modified_at', 'file_key_name': 'models.stg_apple_search_ads__ad_history'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_history_ad_id.4ad3bde32a': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__ad_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__ad_history_ad_id', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__ad_history_ad_id.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_history_ad_id.4ad3bde32a', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__ad_history_ad_id'], 'alias': 'not_null_stg_apple_search_ads__ad_history_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.5139081, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_history']}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.stg_apple_search_ads__ad_history'}, 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_history_ad_id__modified_at.38599b8cba': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'modified_at'], 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__ad_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_history_ad_id__modified_at', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'dbt_utils_unique_combination_o_ed0f61b146739c836defcf2fb6005d31.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_history_ad_id__modified_at.38599b8cba', 'fqn': ['apple_search_ads_source', 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_history_ad_id__modified_at'], 'alias': 'dbt_utils_unique_combination_o_ed0f61b146739c836defcf2fb6005d31', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_ed0f61b146739c836defcf2fb6005d31', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_ed0f61b146739c836defcf2fb6005d31'}, 'created_at': 1694433485.515908, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_ed0f61b146739c836defcf2fb6005d31'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_ed0f61b146739c836defcf2fb6005d31") }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_apple_search_ads__ad_history'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_report_date_day.e6252346d8': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__ad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__ad_report_date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__ad_report_date_day.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_report_date_day.e6252346d8', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__ad_report_date_day'], 'alias': 'not_null_stg_apple_search_ads__ad_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.5206516, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_apple_search_ads__ad_report'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_report_ad_group_id.a397755e9f': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__ad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__ad_report_ad_group_id', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__ad_report_ad_group_id.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_report_ad_group_id.a397755e9f', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__ad_report_ad_group_id'], 'alias': 'not_null_stg_apple_search_ads__ad_report_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.5212753, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_report']}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.stg_apple_search_ads__ad_report'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_report_ad_id.d08e760c58': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__ad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__ad_report_ad_id', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__ad_report_ad_id.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_report_ad_id.d08e760c58', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__ad_report_ad_id'], 'alias': 'not_null_stg_apple_search_ads__ad_report_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.5232966, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_report']}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.stg_apple_search_ads__ad_report'}, 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_report_ad_id__date_day__ad_group_id.0d8d23c516': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'date_day', 'ad_group_id'], 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__ad_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_report_ad_id__date_day__ad_group_id', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'dbt_utils_unique_combination_o_9ce5e828ce9fa0987b5e86cbcb1207b9.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_report_ad_id__date_day__ad_group_id.0d8d23c516', 'fqn': ['apple_search_ads_source', 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_report_ad_id__date_day__ad_group_id'], 'alias': 'dbt_utils_unique_combination_o_9ce5e828ce9fa0987b5e86cbcb1207b9', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_9ce5e828ce9fa0987b5e86cbcb1207b9', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_9ce5e828ce9fa0987b5e86cbcb1207b9'}, 'created_at': 1694433485.5253243, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_9ce5e828ce9fa0987b5e86cbcb1207b9'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_9ce5e828ce9fa0987b5e86cbcb1207b9") }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_apple_search_ads__ad_report'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__campaign_history_modified_at.f34a7a97c9': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'modified_at', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__campaign_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__campaign_history_modified_at', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__campaign_history_modified_at.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__campaign_history_modified_at.f34a7a97c9', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__campaign_history_modified_at'], 'alias': 'not_null_stg_apple_search_ads__campaign_history_modified_at', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.5295045, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__campaign_history']}, 'compiled_path': None, 'column_name': 'modified_at', 'file_key_name': 'models.stg_apple_search_ads__campaign_history'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__campaign_history_campaign_id.3f0f7502b8': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__campaign_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__campaign_history_campaign_id', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__campaign_history_campaign_id.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__campaign_history_campaign_id.3f0f7502b8', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__campaign_history_campaign_id'], 'alias': 'not_null_stg_apple_search_ads__campaign_history_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.5314407, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__campaign_history']}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_apple_search_ads__campaign_history'}, 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__campaign_history_campaign_id__modified_at.317f970af9': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', 'modified_at'], 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__campaign_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__campaign_history_campaign_id__modified_at', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'dbt_utils_unique_combination_o_055fa7e8a6c292e0f56d1feec61284a9.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__campaign_history_campaign_id__modified_at.317f970af9', 'fqn': ['apple_search_ads_source', 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__campaign_history_campaign_id__modified_at'], 'alias': 'dbt_utils_unique_combination_o_055fa7e8a6c292e0f56d1feec61284a9', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_055fa7e8a6c292e0f56d1feec61284a9', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_055fa7e8a6c292e0f56d1feec61284a9'}, 'created_at': 1694433485.5324538, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_055fa7e8a6c292e0f56d1feec61284a9'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_055fa7e8a6c292e0f56d1feec61284a9") }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__campaign_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_apple_search_ads__campaign_history'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__campaign_report_campaign_id.b83941e728': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__campaign_report_campaign_id', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__campaign_report_campaign_id.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__campaign_report_campaign_id.b83941e728', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__campaign_report_campaign_id'], 'alias': 'not_null_stg_apple_search_ads__campaign_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.5379999, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__campaign_report']}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_apple_search_ads__campaign_report'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__campaign_report_date_day.c8dc10a6f3': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__campaign_report_date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__campaign_report_date_day.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__campaign_report_date_day.c8dc10a6f3', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__campaign_report_date_day'], 'alias': 'not_null_stg_apple_search_ads__campaign_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.5390027, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__campaign_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_apple_search_ads__campaign_report'}, 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__campaign_report_campaign_id__date_day.bad41b0481': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__campaign_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__campaign_report_campaign_id__date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'dbt_utils_unique_combination_o_d8bdb244aa45cb237ef5189371733c07.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__campaign_report_campaign_id__date_day.bad41b0481', 'fqn': ['apple_search_ads_source', 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__campaign_report_campaign_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_d8bdb244aa45cb237ef5189371733c07', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_d8bdb244aa45cb237ef5189371733c07', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_d8bdb244aa45cb237ef5189371733c07'}, 'created_at': 1694433485.5410025, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_d8bdb244aa45cb237ef5189371733c07'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_d8bdb244aa45cb237ef5189371733c07") }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__campaign_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_apple_search_ads__campaign_report'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__keyword_history_modified_at.42fde5a287': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'modified_at', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__keyword_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__keyword_history_modified_at', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__keyword_history_modified_at.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__keyword_history_modified_at.42fde5a287', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__keyword_history_modified_at'], 'alias': 'not_null_stg_apple_search_ads__keyword_history_modified_at', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.5450025, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__keyword_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__keyword_history']}, 'compiled_path': None, 'column_name': 'modified_at', 'file_key_name': 'models.stg_apple_search_ads__keyword_history'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__keyword_history_keyword_id.889f83cfd2': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'keyword_id', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__keyword_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__keyword_history_keyword_id', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__keyword_history_keyword_id.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__keyword_history_keyword_id.889f83cfd2', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__keyword_history_keyword_id'], 'alias': 'not_null_stg_apple_search_ads__keyword_history_keyword_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.5475078, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__keyword_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__keyword_history']}, 'compiled_path': None, 'column_name': 'keyword_id', 'file_key_name': 'models.stg_apple_search_ads__keyword_history'}, 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__keyword_history_keyword_id__modified_at.7b06162d24': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['keyword_id', 'modified_at'], 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__keyword_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__keyword_history_keyword_id__modified_at', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'dbt_utils_unique_combination_o_26b09b2f81a50b0ba84b566cd7df85b5.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__keyword_history_keyword_id__modified_at.7b06162d24', 'fqn': ['apple_search_ads_source', 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__keyword_history_keyword_id__modified_at'], 'alias': 'dbt_utils_unique_combination_o_26b09b2f81a50b0ba84b566cd7df85b5', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_26b09b2f81a50b0ba84b566cd7df85b5', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_26b09b2f81a50b0ba84b566cd7df85b5'}, 'created_at': 1694433485.5485096, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_26b09b2f81a50b0ba84b566cd7df85b5'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_26b09b2f81a50b0ba84b566cd7df85b5") }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__keyword_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__keyword_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_apple_search_ads__keyword_history'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__keyword_report_keyword_id.501725b09e': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'keyword_id', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__keyword_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__keyword_report_keyword_id', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__keyword_report_keyword_id.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__keyword_report_keyword_id.501725b09e', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__keyword_report_keyword_id'], 'alias': 'not_null_stg_apple_search_ads__keyword_report_keyword_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.5535116, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__keyword_report']}, 'compiled_path': None, 'column_name': 'keyword_id', 'file_key_name': 'models.stg_apple_search_ads__keyword_report'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__keyword_report_date_day.16098db928': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__keyword_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__keyword_report_date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__keyword_report_date_day.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__keyword_report_date_day.16098db928', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__keyword_report_date_day'], 'alias': 'not_null_stg_apple_search_ads__keyword_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.5545115, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__keyword_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_apple_search_ads__keyword_report'}, 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__keyword_report_keyword_id__date_day.9f0099cff8': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['keyword_id', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__keyword_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__keyword_report_keyword_id__date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'dbt_utils_unique_combination_o_2ec7f68205f05a3b68cfa7324135a1a5.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__keyword_report_keyword_id__date_day.9f0099cff8', 'fqn': ['apple_search_ads_source', 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__keyword_report_keyword_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_2ec7f68205f05a3b68cfa7324135a1a5', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_2ec7f68205f05a3b68cfa7324135a1a5', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_2ec7f68205f05a3b68cfa7324135a1a5'}, 'created_at': 1694433485.5555115, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_2ec7f68205f05a3b68cfa7324135a1a5'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_2ec7f68205f05a3b68cfa7324135a1a5") }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__keyword_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_apple_search_ads__keyword_report'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__organization_organization_id.b013ce33cb': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'organization_id', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__organization')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__organization_organization_id', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__organization_organization_id.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__organization_organization_id.b013ce33cb', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__organization_organization_id'], 'alias': 'not_null_stg_apple_search_ads__organization_organization_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.5611367, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__organization']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__organization']}, 'compiled_path': None, 'column_name': 'organization_id', 'file_key_name': 'models.stg_apple_search_ads__organization'}, 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__organization_organization_id.8647048f7a': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['organization_id'], 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__organization')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__organization_organization_id', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'dbt_utils_unique_combination_o_53ded9060f9d3981217ae23e5d2ba89b.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__organization_organization_id.8647048f7a', 'fqn': ['apple_search_ads_source', 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__organization_organization_id'], 'alias': 'dbt_utils_unique_combination_o_53ded9060f9d3981217ae23e5d2ba89b', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_53ded9060f9d3981217ae23e5d2ba89b', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_53ded9060f9d3981217ae23e5d2ba89b'}, 'created_at': 1694433485.5621367, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_53ded9060f9d3981217ae23e5d2ba89b'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_53ded9060f9d3981217ae23e5d2ba89b") }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__organization']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__organization']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_apple_search_ads__organization'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__search_term_report__fivetran_id.aa430d1dad': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': '_fivetran_id', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__search_term_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__search_term_report__fivetran_id', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__search_term_report__fivetran_id.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__search_term_report__fivetran_id.aa430d1dad', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__search_term_report__fivetran_id'], 'alias': 'not_null_stg_apple_search_ads__search_term_report__fivetran_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.5661366, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__search_term_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__search_term_report']}, 'compiled_path': None, 'column_name': '_fivetran_id', 'file_key_name': 'models.stg_apple_search_ads__search_term_report'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__search_term_report_date_day.fd93df3302': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__search_term_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__search_term_report_date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__search_term_report_date_day.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__search_term_report_date_day.fd93df3302', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__search_term_report_date_day'], 'alias': 'not_null_stg_apple_search_ads__search_term_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.568339, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__search_term_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__search_term_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_apple_search_ads__search_term_report'}, 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__search_term_report__fivetran_id__date_day.aad2a48344': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['_fivetran_id', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__search_term_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__search_term_report__fivetran_id__date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'dbt_utils_unique_combination_o_4b957c6b8a75dcd1a6055884f71d71c1.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__search_term_report__fivetran_id__date_day.aad2a48344', 'fqn': ['apple_search_ads_source', 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__search_term_report__fivetran_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_4b957c6b8a75dcd1a6055884f71d71c1', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_4b957c6b8a75dcd1a6055884f71d71c1', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_4b957c6b8a75dcd1a6055884f71d71c1'}, 'created_at': 1694433485.5693612, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_4b957c6b8a75dcd1a6055884f71d71c1'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_4b957c6b8a75dcd1a6055884f71d71c1") }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__search_term_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__search_term_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_apple_search_ads__search_term_report'}, 'test.facebook_ads.not_null_facebook_ads__url_report_base_url.b7757e50be': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'base_url', 'model': "{{ get_where_subquery(ref('facebook_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_facebook_ads__url_report_base_url', 'resource_type': 'test', 'package_name': 'facebook_ads', 'path': 'not_null_facebook_ads__url_report_base_url.sql', 'original_file_path': 'models\\facebook.yml', 'unique_id': 'test.facebook_ads.not_null_facebook_ads__url_report_base_url.b7757e50be', 'fqn': ['facebook_ads', 'not_null_facebook_ads__url_report_base_url'], 'alias': 'not_null_facebook_ads__url_report_base_url', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True}, 'created_at': 1694433485.5997598, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(enabled=True) }}', 'language': 'sql', 'refs': [['facebook_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'base_url', 'file_key_name': 'models.facebook_ads__url_report'}, 'test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__url_report_date_day__account_id__campaign_id__ad_set_id__ad_id.03a7e82eb7': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'campaign_id', 'ad_set_id', 'ad_id'], 'model': "{{ get_where_subquery(ref('facebook_ads__url_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_facebook_ads__url_report_date_day__account_id__campaign_id__ad_set_id__ad_id', 'resource_type': 'test', 'package_name': 'facebook_ads', 'path': 'dbt_utils_unique_combination_o_bf91f5ef1059f34c9059e06e293717eb.sql', 'original_file_path': 'models\\facebook.yml', 'unique_id': 'test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__url_report_date_day__account_id__campaign_id__ad_set_id__ad_id.03a7e82eb7', 'fqn': ['facebook_ads', 'dbt_utils_unique_combination_of_columns_facebook_ads__url_report_date_day__account_id__campaign_id__ad_set_id__ad_id'], 'alias': 'dbt_utils_unique_combination_o_bf91f5ef1059f34c9059e06e293717eb', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_bf91f5ef1059f34c9059e06e293717eb', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_bf91f5ef1059f34c9059e06e293717eb'}, 'created_at': 1694433485.6017594, 'config_call_dict': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_bf91f5ef1059f34c9059e06e293717eb'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(enabled=True,alias="dbt_utils_unique_combination_o_bf91f5ef1059f34c9059e06e293717eb") }}', 'language': 'sql', 'refs': [['facebook_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.facebook_ads__url_report'}, 'test.facebook_ads.not_null_facebook_ads__ad_report_ad_id.3811d9c238': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('facebook_ads__ad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_facebook_ads__ad_report_ad_id', 'resource_type': 'test', 'package_name': 'facebook_ads', 'path': 'not_null_facebook_ads__ad_report_ad_id.sql', 'original_file_path': 'models\\facebook.yml', 'unique_id': 'test.facebook_ads.not_null_facebook_ads__ad_report_ad_id.3811d9c238', 'fqn': ['facebook_ads', 'not_null_facebook_ads__ad_report_ad_id'], 'alias': 'not_null_facebook_ads__ad_report_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.6057594, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['facebook_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.facebook_ads__ad_report'}, 'test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__ad_report_date_day__account_id__campaign_id__ad_set_id__ad_id.0a25b64738': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'campaign_id', 'ad_set_id', 'ad_id'], 'model': "{{ get_where_subquery(ref('facebook_ads__ad_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_facebook_ads__ad_report_date_day__account_id__campaign_id__ad_set_id__ad_id', 'resource_type': 'test', 'package_name': 'facebook_ads', 'path': 'dbt_utils_unique_combination_o_6751270b8425b93a72568a6ff0b52e2e.sql', 'original_file_path': 'models\\facebook.yml', 'unique_id': 'test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__ad_report_date_day__account_id__campaign_id__ad_set_id__ad_id.0a25b64738', 'fqn': ['facebook_ads', 'dbt_utils_unique_combination_of_columns_facebook_ads__ad_report_date_day__account_id__campaign_id__ad_set_id__ad_id'], 'alias': 'dbt_utils_unique_combination_o_6751270b8425b93a72568a6ff0b52e2e', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_6751270b8425b93a72568a6ff0b52e2e', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_6751270b8425b93a72568a6ff0b52e2e'}, 'created_at': 1694433485.608323, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_6751270b8425b93a72568a6ff0b52e2e'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_6751270b8425b93a72568a6ff0b52e2e") }}', 'language': 'sql', 'refs': [['facebook_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.facebook_ads__ad_report'}, 'test.facebook_ads.not_null_facebook_ads__ad_set_report_ad_set_id.1ac870f5e4': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_set_id', 'model': "{{ get_where_subquery(ref('facebook_ads__ad_set_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_facebook_ads__ad_set_report_ad_set_id', 'resource_type': 'test', 'package_name': 'facebook_ads', 'path': 'not_null_facebook_ads__ad_set_report_ad_set_id.sql', 'original_file_path': 'models\\facebook.yml', 'unique_id': 'test.facebook_ads.not_null_facebook_ads__ad_set_report_ad_set_id.1ac870f5e4', 'fqn': ['facebook_ads', 'not_null_facebook_ads__ad_set_report_ad_set_id'], 'alias': 'not_null_facebook_ads__ad_set_report_ad_set_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.6133256, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['facebook_ads__ad_set_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_set_id', 'file_key_name': 'models.facebook_ads__ad_set_report'}, 'test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__ad_set_report_date_day__account_id__campaign_id__ad_set_id.3dd4da872f': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'campaign_id', 'ad_set_id'], 'model': "{{ get_where_subquery(ref('facebook_ads__ad_set_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_facebook_ads__ad_set_report_date_day__account_id__campaign_id__ad_set_id', 'resource_type': 'test', 'package_name': 'facebook_ads', 'path': 'dbt_utils_unique_combination_o_b03f58e6a60804a93ab31dbb358dad74.sql', 'original_file_path': 'models\\facebook.yml', 'unique_id': 'test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__ad_set_report_date_day__account_id__campaign_id__ad_set_id.3dd4da872f', 'fqn': ['facebook_ads', 'dbt_utils_unique_combination_of_columns_facebook_ads__ad_set_report_date_day__account_id__campaign_id__ad_set_id'], 'alias': 'dbt_utils_unique_combination_o_b03f58e6a60804a93ab31dbb358dad74', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_b03f58e6a60804a93ab31dbb358dad74', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_b03f58e6a60804a93ab31dbb358dad74'}, 'created_at': 1694433485.6153252, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_b03f58e6a60804a93ab31dbb358dad74'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_b03f58e6a60804a93ab31dbb358dad74") }}', 'language': 'sql', 'refs': [['facebook_ads__ad_set_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.facebook_ads__ad_set_report'}, 'test.facebook_ads.not_null_facebook_ads__campaign_report_campaign_id.d4f96d8d21': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('facebook_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_facebook_ads__campaign_report_campaign_id', 'resource_type': 'test', 'package_name': 'facebook_ads', 'path': 'not_null_facebook_ads__campaign_report_campaign_id.sql', 'original_file_path': 'models\\facebook.yml', 'unique_id': 'test.facebook_ads.not_null_facebook_ads__campaign_report_campaign_id.d4f96d8d21', 'fqn': ['facebook_ads', 'not_null_facebook_ads__campaign_report_campaign_id'], 'alias': 'not_null_facebook_ads__campaign_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.6209068, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['facebook_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.facebook_ads__campaign_report'}, 'test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__campaign_report_date_day__account_id__campaign_id.7cd75107e6': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'campaign_id'], 'model': "{{ get_where_subquery(ref('facebook_ads__campaign_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_facebook_ads__campaign_report_date_day__account_id__campaign_id', 'resource_type': 'test', 'package_name': 'facebook_ads', 'path': 'dbt_utils_unique_combination_o_cf7853fdf8e24958f5a0e3e1b7c1ced1.sql', 'original_file_path': 'models\\facebook.yml', 'unique_id': 'test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__campaign_report_date_day__account_id__campaign_id.7cd75107e6', 'fqn': ['facebook_ads', 'dbt_utils_unique_combination_of_columns_facebook_ads__campaign_report_date_day__account_id__campaign_id'], 'alias': 'dbt_utils_unique_combination_o_cf7853fdf8e24958f5a0e3e1b7c1ced1', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_cf7853fdf8e24958f5a0e3e1b7c1ced1', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_cf7853fdf8e24958f5a0e3e1b7c1ced1'}, 'created_at': 1694433485.6219068, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_cf7853fdf8e24958f5a0e3e1b7c1ced1'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_cf7853fdf8e24958f5a0e3e1b7c1ced1") }}', 'language': 'sql', 'refs': [['facebook_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.facebook_ads__campaign_report'}, 'test.facebook_ads.not_null_facebook_ads__account_report_account_id.9be02b4024': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('facebook_ads__account_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_facebook_ads__account_report_account_id', 'resource_type': 'test', 'package_name': 'facebook_ads', 'path': 'not_null_facebook_ads__account_report_account_id.sql', 'original_file_path': 'models\\facebook.yml', 'unique_id': 'test.facebook_ads.not_null_facebook_ads__account_report_account_id.9be02b4024', 'fqn': ['facebook_ads', 'not_null_facebook_ads__account_report_account_id'], 'alias': 'not_null_facebook_ads__account_report_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.6269066, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['facebook_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.facebook_ads__account_report'}, 'test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__account_report_date_day__account_id.5a94423e40': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id'], 'model': "{{ get_where_subquery(ref('facebook_ads__account_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_facebook_ads__account_report_date_day__account_id', 'resource_type': 'test', 'package_name': 'facebook_ads', 'path': 'dbt_utils_unique_combination_o_19fe7721a9f8cd99b91dca268368654e.sql', 'original_file_path': 'models\\facebook.yml', 'unique_id': 'test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__account_report_date_day__account_id.5a94423e40', 'fqn': ['facebook_ads', 'dbt_utils_unique_combination_of_columns_facebook_ads__account_report_date_day__account_id'], 'alias': 'dbt_utils_unique_combination_o_19fe7721a9f8cd99b91dca268368654e', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_19fe7721a9f8cd99b91dca268368654e', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_19fe7721a9f8cd99b91dca268368654e'}, 'created_at': 1694433485.6284146, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_19fe7721a9f8cd99b91dca268368654e'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_19fe7721a9f8cd99b91dca268368654e") }}', 'language': 'sql', 'refs': [['facebook_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.facebook_ads__account_report'}, 'test.facebook_ads.not_null_facebook_ads__url_tags__fivetran_id.151d9515f3': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': '_fivetran_id', 'model': "{{ get_where_subquery(ref('facebook_ads__url_tags')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_facebook_ads__url_tags__fivetran_id', 'resource_type': 'test', 'package_name': 'facebook_ads', 'path': 'not_null_facebook_ads__url_tags__fivetran_id.sql', 'original_file_path': 'models\\facebook.yml', 'unique_id': 'test.facebook_ads.not_null_facebook_ads__url_tags__fivetran_id.151d9515f3', 'fqn': ['facebook_ads', 'not_null_facebook_ads__url_tags__fivetran_id'], 'alias': 'not_null_facebook_ads__url_tags__fivetran_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.6334167, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['facebook_ads__url_tags']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': '_fivetran_id', 'file_key_name': 'models.facebook_ads__url_tags'}, 'test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__url_tags__fivetran_id__key__type.ba044777d3': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['_fivetran_id', 'key', 'type'], 'model': "{{ get_where_subquery(ref('facebook_ads__url_tags')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_facebook_ads__url_tags__fivetran_id__key__type', 'resource_type': 'test', 'package_name': 'facebook_ads', 'path': 'dbt_utils_unique_combination_o_496bf013366c506c1f3135f19ec7080a.sql', 'original_file_path': 'models\\facebook.yml', 'unique_id': 'test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__url_tags__fivetran_id__key__type.ba044777d3', 'fqn': ['facebook_ads', 'dbt_utils_unique_combination_of_columns_facebook_ads__url_tags__fivetran_id__key__type'], 'alias': 'dbt_utils_unique_combination_o_496bf013366c506c1f3135f19ec7080a', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_496bf013366c506c1f3135f19ec7080a', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_496bf013366c506c1f3135f19ec7080a'}, 'created_at': 1694433485.6344168, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_496bf013366c506c1f3135f19ec7080a'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_496bf013366c506c1f3135f19ec7080a") }}', 'language': 'sql', 'refs': [['facebook_ads__url_tags']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.facebook_ads__url_tags'}, 'test.facebook_ads_source.not_null_stg_facebook_ads__account_history_account_id.f1cf38c40f': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('stg_facebook_ads__account_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_facebook_ads__account_history_account_id', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'not_null_stg_facebook_ads__account_history_account_id.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.not_null_stg_facebook_ads__account_history_account_id.f1cf38c40f', 'fqn': ['facebook_ads_source', 'not_null_stg_facebook_ads__account_history_account_id'], 'alias': 'not_null_stg_facebook_ads__account_history_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.6921473, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_facebook_ads__account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.stg_facebook_ads__account_history'}, 'test.facebook_ads_source.not_null_stg_facebook_ads__account_history__fivetran_synced.0570e35e1f': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': '_fivetran_synced', 'model': "{{ get_where_subquery(ref('stg_facebook_ads__account_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_facebook_ads__account_history__fivetran_synced', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'not_null_stg_facebook_ads__account_history__fivetran_synced.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.not_null_stg_facebook_ads__account_history__fivetran_synced.0570e35e1f', 'fqn': ['facebook_ads_source', 'not_null_stg_facebook_ads__account_history__fivetran_synced'], 'alias': 'not_null_stg_facebook_ads__account_history__fivetran_synced', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.6942954, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_facebook_ads__account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': '_fivetran_synced', 'file_key_name': 'models.stg_facebook_ads__account_history'}, 'test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__account_history_account_id___fivetran_synced.f9b4d28fa2': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['account_id', '_fivetran_synced'], 'model': "{{ get_where_subquery(ref('stg_facebook_ads__account_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_facebook_ads__account_history_account_id___fivetran_synced', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'dbt_utils_unique_combination_o_6c9521eb7e9747df57d9737e83cb864f.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__account_history_account_id___fivetran_synced.f9b4d28fa2', 'fqn': ['facebook_ads_source', 'dbt_utils_unique_combination_of_columns_stg_facebook_ads__account_history_account_id___fivetran_synced'], 'alias': 'dbt_utils_unique_combination_o_6c9521eb7e9747df57d9737e83cb864f', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_6c9521eb7e9747df57d9737e83cb864f', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_6c9521eb7e9747df57d9737e83cb864f'}, 'created_at': 1694433485.695319, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_6c9521eb7e9747df57d9737e83cb864f'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_6c9521eb7e9747df57d9737e83cb864f") }}', 'language': 'sql', 'refs': [['stg_facebook_ads__account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_facebook_ads__account_history'}, 'test.facebook_ads_source.not_null_stg_facebook_ads__ad_history_ad_id.11429d3064': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('stg_facebook_ads__ad_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_facebook_ads__ad_history_ad_id', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'not_null_stg_facebook_ads__ad_history_ad_id.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.not_null_stg_facebook_ads__ad_history_ad_id.11429d3064', 'fqn': ['facebook_ads_source', 'not_null_stg_facebook_ads__ad_history_ad_id'], 'alias': 'not_null_stg_facebook_ads__ad_history_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.700935, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_facebook_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.stg_facebook_ads__ad_history'}, 'test.facebook_ads_source.not_null_stg_facebook_ads__ad_history_updated_at.250a5a84e4': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'updated_at', 'model': "{{ get_where_subquery(ref('stg_facebook_ads__ad_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_facebook_ads__ad_history_updated_at', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'not_null_stg_facebook_ads__ad_history_updated_at.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.not_null_stg_facebook_ads__ad_history_updated_at.250a5a84e4', 'fqn': ['facebook_ads_source', 'not_null_stg_facebook_ads__ad_history_updated_at'], 'alias': 'not_null_stg_facebook_ads__ad_history_updated_at', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.701935, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_facebook_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'updated_at', 'file_key_name': 'models.stg_facebook_ads__ad_history'}, 'test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__ad_history_ad_id__updated_at.2922c18b58': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'updated_at'], 'model': "{{ get_where_subquery(ref('stg_facebook_ads__ad_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_facebook_ads__ad_history_ad_id__updated_at', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'dbt_utils_unique_combination_o_da2a7458e53ca8b420768a0c3e8e2137.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__ad_history_ad_id__updated_at.2922c18b58', 'fqn': ['facebook_ads_source', 'dbt_utils_unique_combination_of_columns_stg_facebook_ads__ad_history_ad_id__updated_at'], 'alias': 'dbt_utils_unique_combination_o_da2a7458e53ca8b420768a0c3e8e2137', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_da2a7458e53ca8b420768a0c3e8e2137', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_da2a7458e53ca8b420768a0c3e8e2137'}, 'created_at': 1694433485.7041805, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_da2a7458e53ca8b420768a0c3e8e2137'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_da2a7458e53ca8b420768a0c3e8e2137") }}', 'language': 'sql', 'refs': [['stg_facebook_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_facebook_ads__ad_history'}, 'test.facebook_ads_source.not_null_stg_facebook_ads__ad_set_history_ad_set_id.e19a1df1bb': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_set_id', 'model': "{{ get_where_subquery(ref('stg_facebook_ads__ad_set_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_facebook_ads__ad_set_history_ad_set_id', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'not_null_stg_facebook_ads__ad_set_history_ad_set_id.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.not_null_stg_facebook_ads__ad_set_history_ad_set_id.e19a1df1bb', 'fqn': ['facebook_ads_source', 'not_null_stg_facebook_ads__ad_set_history_ad_set_id'], 'alias': 'not_null_stg_facebook_ads__ad_set_history_ad_set_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.7087371, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_facebook_ads__ad_set_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_set_id', 'file_key_name': 'models.stg_facebook_ads__ad_set_history'}, 'test.facebook_ads_source.not_null_stg_facebook_ads__ad_set_history_updated_at.ef7fafe0fa': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'updated_at', 'model': "{{ get_where_subquery(ref('stg_facebook_ads__ad_set_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_facebook_ads__ad_set_history_updated_at', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'not_null_stg_facebook_ads__ad_set_history_updated_at.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.not_null_stg_facebook_ads__ad_set_history_updated_at.ef7fafe0fa', 'fqn': ['facebook_ads_source', 'not_null_stg_facebook_ads__ad_set_history_updated_at'], 'alias': 'not_null_stg_facebook_ads__ad_set_history_updated_at', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.7099044, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_facebook_ads__ad_set_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'updated_at', 'file_key_name': 'models.stg_facebook_ads__ad_set_history'}, 'test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__ad_set_history_ad_set_id__updated_at.0a60ad0fef': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_set_id', 'updated_at'], 'model': "{{ get_where_subquery(ref('stg_facebook_ads__ad_set_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_facebook_ads__ad_set_history_ad_set_id__updated_at', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'dbt_utils_unique_combination_o_214e0ea8c1d3eb6e1c1fae451c60969f.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__ad_set_history_ad_set_id__updated_at.0a60ad0fef', 'fqn': ['facebook_ads_source', 'dbt_utils_unique_combination_of_columns_stg_facebook_ads__ad_set_history_ad_set_id__updated_at'], 'alias': 'dbt_utils_unique_combination_o_214e0ea8c1d3eb6e1c1fae451c60969f', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_214e0ea8c1d3eb6e1c1fae451c60969f', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_214e0ea8c1d3eb6e1c1fae451c60969f'}, 'created_at': 1694433485.7119396, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_214e0ea8c1d3eb6e1c1fae451c60969f'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_214e0ea8c1d3eb6e1c1fae451c60969f") }}', 'language': 'sql', 'refs': [['stg_facebook_ads__ad_set_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_facebook_ads__ad_set_history'}, 'test.facebook_ads_source.not_null_stg_facebook_ads__campaign_history_campaign_id.1ca7a83852': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_facebook_ads__campaign_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_facebook_ads__campaign_history_campaign_id', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'not_null_stg_facebook_ads__campaign_history_campaign_id.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.not_null_stg_facebook_ads__campaign_history_campaign_id.1ca7a83852', 'fqn': ['facebook_ads_source', 'not_null_stg_facebook_ads__campaign_history_campaign_id'], 'alias': 'not_null_stg_facebook_ads__campaign_history_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.7167926, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_facebook_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_facebook_ads__campaign_history'}, 'test.facebook_ads_source.not_null_stg_facebook_ads__campaign_history_updated_at.9e59f99270': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'updated_at', 'model': "{{ get_where_subquery(ref('stg_facebook_ads__campaign_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_facebook_ads__campaign_history_updated_at', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'not_null_stg_facebook_ads__campaign_history_updated_at.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.not_null_stg_facebook_ads__campaign_history_updated_at.9e59f99270', 'fqn': ['facebook_ads_source', 'not_null_stg_facebook_ads__campaign_history_updated_at'], 'alias': 'not_null_stg_facebook_ads__campaign_history_updated_at', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.7178211, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_facebook_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'updated_at', 'file_key_name': 'models.stg_facebook_ads__campaign_history'}, 'test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__campaign_history_campaign_id__updated_at.7437b392c2': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', 'updated_at'], 'model': "{{ get_where_subquery(ref('stg_facebook_ads__campaign_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_facebook_ads__campaign_history_campaign_id__updated_at', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'dbt_utils_unique_combination_o_6067330a8eb187d5024e9840cd7cbd78.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__campaign_history_campaign_id__updated_at.7437b392c2', 'fqn': ['facebook_ads_source', 'dbt_utils_unique_combination_of_columns_stg_facebook_ads__campaign_history_campaign_id__updated_at'], 'alias': 'dbt_utils_unique_combination_o_6067330a8eb187d5024e9840cd7cbd78', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_6067330a8eb187d5024e9840cd7cbd78', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_6067330a8eb187d5024e9840cd7cbd78'}, 'created_at': 1694433485.719894, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_6067330a8eb187d5024e9840cd7cbd78'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_6067330a8eb187d5024e9840cd7cbd78") }}', 'language': 'sql', 'refs': [['stg_facebook_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_facebook_ads__campaign_history'}, 'test.facebook_ads_source.not_null_stg_facebook_ads__creative_history__fivetran_synced.3b0593cb4f': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': '_fivetran_synced', 'model': "{{ get_where_subquery(ref('stg_facebook_ads__creative_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_facebook_ads__creative_history__fivetran_synced', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'not_null_stg_facebook_ads__creative_history__fivetran_synced.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.not_null_stg_facebook_ads__creative_history__fivetran_synced.3b0593cb4f', 'fqn': ['facebook_ads_source', 'not_null_stg_facebook_ads__creative_history__fivetran_synced'], 'alias': 'not_null_stg_facebook_ads__creative_history__fivetran_synced', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.7239525, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_facebook_ads__creative_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': '_fivetran_synced', 'file_key_name': 'models.stg_facebook_ads__creative_history'}, 'test.facebook_ads_source.not_null_stg_facebook_ads__creative_history_creative_id.eb4d804261': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'creative_id', 'model': "{{ get_where_subquery(ref('stg_facebook_ads__creative_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_facebook_ads__creative_history_creative_id', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'not_null_stg_facebook_ads__creative_history_creative_id.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.not_null_stg_facebook_ads__creative_history_creative_id.eb4d804261', 'fqn': ['facebook_ads_source', 'not_null_stg_facebook_ads__creative_history_creative_id'], 'alias': 'not_null_stg_facebook_ads__creative_history_creative_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.7262404, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_facebook_ads__creative_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'creative_id', 'file_key_name': 'models.stg_facebook_ads__creative_history'}, 'test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__creative_history_creative_id___fivetran_synced.69ddc26562': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['creative_id', '_fivetran_synced'], 'model': "{{ get_where_subquery(ref('stg_facebook_ads__creative_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_facebook_ads__creative_history_creative_id___fivetran_synced', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'dbt_utils_unique_combination_o_c52d893dfedd530a7cd19c495da30217.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__creative_history_creative_id___fivetran_synced.69ddc26562', 'fqn': ['facebook_ads_source', 'dbt_utils_unique_combination_of_columns_stg_facebook_ads__creative_history_creative_id___fivetran_synced'], 'alias': 'dbt_utils_unique_combination_o_c52d893dfedd530a7cd19c495da30217', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_c52d893dfedd530a7cd19c495da30217', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_c52d893dfedd530a7cd19c495da30217'}, 'created_at': 1694433485.7277486, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_c52d893dfedd530a7cd19c495da30217'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_c52d893dfedd530a7cd19c495da30217") }}', 'language': 'sql', 'refs': [['stg_facebook_ads__creative_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_facebook_ads__creative_history'}, 'test.facebook_ads_source.not_null_stg_facebook_ads__basic_ad_ad_id.2611b250fc': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('stg_facebook_ads__basic_ad')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_facebook_ads__basic_ad_ad_id', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'not_null_stg_facebook_ads__basic_ad_ad_id.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.not_null_stg_facebook_ads__basic_ad_ad_id.2611b250fc', 'fqn': ['facebook_ads_source', 'not_null_stg_facebook_ads__basic_ad_ad_id'], 'alias': 'not_null_stg_facebook_ads__basic_ad_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.7317803, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_facebook_ads__basic_ad']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.stg_facebook_ads__basic_ad'}, 'test.facebook_ads_source.not_null_stg_facebook_ads__basic_ad_account_id.d06f6d861b': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('stg_facebook_ads__basic_ad')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_facebook_ads__basic_ad_account_id', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'not_null_stg_facebook_ads__basic_ad_account_id.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.not_null_stg_facebook_ads__basic_ad_account_id.d06f6d861b', 'fqn': ['facebook_ads_source', 'not_null_stg_facebook_ads__basic_ad_account_id'], 'alias': 'not_null_stg_facebook_ads__basic_ad_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.7337952, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_facebook_ads__basic_ad']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.stg_facebook_ads__basic_ad'}, 'test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__basic_ad_date_day__ad_id__account_id.bd909529e7': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'ad_id', 'account_id'], 'model': "{{ get_where_subquery(ref('stg_facebook_ads__basic_ad')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_facebook_ads__basic_ad_date_day__ad_id__account_id', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'dbt_utils_unique_combination_o_42caf2b48bab7db5c316ae2524dd0683.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__basic_ad_date_day__ad_id__account_id.bd909529e7', 'fqn': ['facebook_ads_source', 'dbt_utils_unique_combination_of_columns_stg_facebook_ads__basic_ad_date_day__ad_id__account_id'], 'alias': 'dbt_utils_unique_combination_o_42caf2b48bab7db5c316ae2524dd0683', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_42caf2b48bab7db5c316ae2524dd0683', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_42caf2b48bab7db5c316ae2524dd0683'}, 'created_at': 1694433485.735807, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_42caf2b48bab7db5c316ae2524dd0683'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_42caf2b48bab7db5c316ae2524dd0683") }}', 'language': 'sql', 'refs': [['stg_facebook_ads__basic_ad']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_facebook_ads__basic_ad'}, 'test.google_ads.not_null_google_ads__url_report_base_url.e3578c0f72': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'base_url', 'model': "{{ get_where_subquery(ref('google_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_google_ads__url_report_base_url', 'resource_type': 'test', 'package_name': 'google_ads', 'path': 'not_null_google_ads__url_report_base_url.sql', 'original_file_path': 'models\\google_ads.yml', 'unique_id': 'test.google_ads.not_null_google_ads__url_report_base_url.e3578c0f72', 'fqn': ['google_ads', 'not_null_google_ads__url_report_base_url'], 'alias': 'not_null_google_ads__url_report_base_url', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True}, 'created_at': 1694433485.8321397, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(enabled=True) }}', 'language': 'sql', 'refs': [['google_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads.google_ads__url_report']}, 'compiled_path': None, 'column_name': 'base_url', 'file_key_name': 'models.google_ads__url_report'}, 'test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__url_report_ad_id__ad_group_id__date_day.a59b8e007f': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'ad_group_id', 'date_day'], 'model': "{{ get_where_subquery(ref('google_ads__url_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_google_ads__url_report_ad_id__ad_group_id__date_day', 'resource_type': 'test', 'package_name': 'google_ads', 'path': 'dbt_utils_unique_combination_o_bea7bc66213b1115e2bf15aef06eda4b.sql', 'original_file_path': 'models\\google_ads.yml', 'unique_id': 'test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__url_report_ad_id__ad_group_id__date_day.a59b8e007f', 'fqn': ['google_ads', 'dbt_utils_unique_combination_of_columns_google_ads__url_report_ad_id__ad_group_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_bea7bc66213b1115e2bf15aef06eda4b', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_bea7bc66213b1115e2bf15aef06eda4b', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_bea7bc66213b1115e2bf15aef06eda4b'}, 'created_at': 1694433485.8341398, 'config_call_dict': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_bea7bc66213b1115e2bf15aef06eda4b'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(enabled=True,alias="dbt_utils_unique_combination_o_bea7bc66213b1115e2bf15aef06eda4b") }}', 'language': 'sql', 'refs': [['google_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.google_ads.google_ads__url_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.google_ads__url_report'}, 'test.google_ads.not_null_google_ads__account_report_account_id.abb0985422': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('google_ads__account_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_google_ads__account_report_account_id', 'resource_type': 'test', 'package_name': 'google_ads', 'path': 'not_null_google_ads__account_report_account_id.sql', 'original_file_path': 'models\\google_ads.yml', 'unique_id': 'test.google_ads.not_null_google_ads__account_report_account_id.abb0985422', 'fqn': ['google_ads', 'not_null_google_ads__account_report_account_id'], 'alias': 'not_null_google_ads__account_report_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.8396509, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['google_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads.google_ads__account_report']}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.google_ads__account_report'}, 'test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__account_report_account_id__date_day.c52089771e': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['account_id', 'date_day'], 'model': "{{ get_where_subquery(ref('google_ads__account_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_google_ads__account_report_account_id__date_day', 'resource_type': 'test', 'package_name': 'google_ads', 'path': 'dbt_utils_unique_combination_o_b50e4c9123068ddc911854925927d1f9.sql', 'original_file_path': 'models\\google_ads.yml', 'unique_id': 'test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__account_report_account_id__date_day.c52089771e', 'fqn': ['google_ads', 'dbt_utils_unique_combination_of_columns_google_ads__account_report_account_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_b50e4c9123068ddc911854925927d1f9', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_b50e4c9123068ddc911854925927d1f9', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_b50e4c9123068ddc911854925927d1f9'}, 'created_at': 1694433485.8406506, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_b50e4c9123068ddc911854925927d1f9'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_b50e4c9123068ddc911854925927d1f9") }}', 'language': 'sql', 'refs': [['google_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.google_ads.google_ads__account_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.google_ads__account_report'}, 'test.google_ads.not_null_google_ads__ad_group_report_ad_group_id.c186523c0c': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('google_ads__ad_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_google_ads__ad_group_report_ad_group_id', 'resource_type': 'test', 'package_name': 'google_ads', 'path': 'not_null_google_ads__ad_group_report_ad_group_id.sql', 'original_file_path': 'models\\google_ads.yml', 'unique_id': 'test.google_ads.not_null_google_ads__ad_group_report_ad_group_id.c186523c0c', 'fqn': ['google_ads', 'not_null_google_ads__ad_group_report_ad_group_id'], 'alias': 'not_null_google_ads__ad_group_report_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.8456504, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['google_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads.google_ads__ad_group_report']}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.google_ads__ad_group_report'}, 'test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__ad_group_report_ad_group_id__date_day.7c8e1c1a2f': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_group_id', 'date_day'], 'model': "{{ get_where_subquery(ref('google_ads__ad_group_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_google_ads__ad_group_report_ad_group_id__date_day', 'resource_type': 'test', 'package_name': 'google_ads', 'path': 'dbt_utils_unique_combination_o_3b4d505407b6ec52ee5fac7c553b0e4f.sql', 'original_file_path': 'models\\google_ads.yml', 'unique_id': 'test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__ad_group_report_ad_group_id__date_day.7c8e1c1a2f', 'fqn': ['google_ads', 'dbt_utils_unique_combination_of_columns_google_ads__ad_group_report_ad_group_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_3b4d505407b6ec52ee5fac7c553b0e4f', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_3b4d505407b6ec52ee5fac7c553b0e4f', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_3b4d505407b6ec52ee5fac7c553b0e4f'}, 'created_at': 1694433485.8472135, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_3b4d505407b6ec52ee5fac7c553b0e4f'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_3b4d505407b6ec52ee5fac7c553b0e4f") }}', 'language': 'sql', 'refs': [['google_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.google_ads.google_ads__ad_group_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.google_ads__ad_group_report'}, 'test.google_ads.not_null_google_ads__ad_report_ad_id.7bd6a287ad': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('google_ads__ad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_google_ads__ad_report_ad_id', 'resource_type': 'test', 'package_name': 'google_ads', 'path': 'not_null_google_ads__ad_report_ad_id.sql', 'original_file_path': 'models\\google_ads.yml', 'unique_id': 'test.google_ads.not_null_google_ads__ad_report_ad_id.7bd6a287ad', 'fqn': ['google_ads', 'not_null_google_ads__ad_report_ad_id'], 'alias': 'not_null_google_ads__ad_report_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.8522182, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['google_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads.google_ads__ad_report']}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.google_ads__ad_report'}, 'test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__ad_report_ad_id__ad_group_id__date_day.fe37ea1a7b': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'ad_group_id', 'date_day'], 'model': "{{ get_where_subquery(ref('google_ads__ad_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_google_ads__ad_report_ad_id__ad_group_id__date_day', 'resource_type': 'test', 'package_name': 'google_ads', 'path': 'dbt_utils_unique_combination_o_0e386e471201820d82331746820c6c2a.sql', 'original_file_path': 'models\\google_ads.yml', 'unique_id': 'test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__ad_report_ad_id__ad_group_id__date_day.fe37ea1a7b', 'fqn': ['google_ads', 'dbt_utils_unique_combination_of_columns_google_ads__ad_report_ad_id__ad_group_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_0e386e471201820d82331746820c6c2a', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_0e386e471201820d82331746820c6c2a', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_0e386e471201820d82331746820c6c2a'}, 'created_at': 1694433485.8532178, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_0e386e471201820d82331746820c6c2a'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_0e386e471201820d82331746820c6c2a") }}', 'language': 'sql', 'refs': [['google_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.google_ads.google_ads__ad_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.google_ads__ad_report'}, 'test.google_ads.not_null_google_ads__campaign_report_campaign_id.cc6694fa0e': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('google_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_google_ads__campaign_report_campaign_id', 'resource_type': 'test', 'package_name': 'google_ads', 'path': 'not_null_google_ads__campaign_report_campaign_id.sql', 'original_file_path': 'models\\google_ads.yml', 'unique_id': 'test.google_ads.not_null_google_ads__campaign_report_campaign_id.cc6694fa0e', 'fqn': ['google_ads', 'not_null_google_ads__campaign_report_campaign_id'], 'alias': 'not_null_google_ads__campaign_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.8577347, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['google_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads.google_ads__campaign_report']}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.google_ads__campaign_report'}, 'test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__campaign_report_campaign_id__advertising_channel_type__advertising_channel_subtype__date_day.f735cda469': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', 'advertising_channel_type', 'advertising_channel_subtype', 'date_day'], 'model': "{{ get_where_subquery(ref('google_ads__campaign_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_google_ads__campaign_report_campaign_id__advertising_channel_type__advertising_channel_subtype__date_day', 'resource_type': 'test', 'package_name': 'google_ads', 'path': 'dbt_utils_unique_combination_o_ec8528411c073564947c460da491432a.sql', 'original_file_path': 'models\\google_ads.yml', 'unique_id': 'test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__campaign_report_campaign_id__advertising_channel_type__advertising_channel_subtype__date_day.f735cda469', 'fqn': ['google_ads', 'dbt_utils_unique_combination_of_columns_google_ads__campaign_report_campaign_id__advertising_channel_type__advertising_channel_subtype__date_day'], 'alias': 'dbt_utils_unique_combination_o_ec8528411c073564947c460da491432a', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_ec8528411c073564947c460da491432a', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_ec8528411c073564947c460da491432a'}, 'created_at': 1694433485.859738, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_ec8528411c073564947c460da491432a'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_ec8528411c073564947c460da491432a") }}', 'language': 'sql', 'refs': [['google_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.google_ads.google_ads__campaign_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.google_ads__campaign_report'}, 'test.google_ads.not_null_google_ads__keyword_report_criterion_id.4cab66a055': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'criterion_id', 'model': "{{ get_where_subquery(ref('google_ads__keyword_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_google_ads__keyword_report_criterion_id', 'resource_type': 'test', 'package_name': 'google_ads', 'path': 'not_null_google_ads__keyword_report_criterion_id.sql', 'original_file_path': 'models\\google_ads.yml', 'unique_id': 'test.google_ads.not_null_google_ads__keyword_report_criterion_id.4cab66a055', 'fqn': ['google_ads', 'not_null_google_ads__keyword_report_criterion_id'], 'alias': 'not_null_google_ads__keyword_report_criterion_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.8647382, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['google_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads.google_ads__keyword_report']}, 'compiled_path': None, 'column_name': 'criterion_id', 'file_key_name': 'models.google_ads__keyword_report'}, 'test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__keyword_report_ad_group_id__criterion_id__date_day.214ff3497d': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_group_id', 'criterion_id', 'date_day'], 'model': "{{ get_where_subquery(ref('google_ads__keyword_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_google_ads__keyword_report_ad_group_id__criterion_id__date_day', 'resource_type': 'test', 'package_name': 'google_ads', 'path': 'dbt_utils_unique_combination_o_5f4b67cbf07cd9f52dc9ddc8771a9f97.sql', 'original_file_path': 'models\\google_ads.yml', 'unique_id': 'test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__keyword_report_ad_group_id__criterion_id__date_day.214ff3497d', 'fqn': ['google_ads', 'dbt_utils_unique_combination_of_columns_google_ads__keyword_report_ad_group_id__criterion_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_5f4b67cbf07cd9f52dc9ddc8771a9f97', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_5f4b67cbf07cd9f52dc9ddc8771a9f97', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_5f4b67cbf07cd9f52dc9ddc8771a9f97'}, 'created_at': 1694433485.8657384, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_5f4b67cbf07cd9f52dc9ddc8771a9f97'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_5f4b67cbf07cd9f52dc9ddc8771a9f97") }}', 'language': 'sql', 'refs': [['google_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.google_ads.google_ads__keyword_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.google_ads__keyword_report'}, 'test.google_ads_source.not_null_stg_google_ads__account_history_account_id.5ca373f51f': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('stg_google_ads__account_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_google_ads__account_history_account_id', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'not_null_stg_google_ads__account_history_account_id.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.not_null_stg_google_ads__account_history_account_id.5ca373f51f', 'fqn': ['google_ads_source', 'not_null_stg_google_ads__account_history_account_id'], 'alias': 'not_null_stg_google_ads__account_history_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.9379342, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_google_ads__account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads_source.stg_google_ads__account_history']}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.stg_google_ads__account_history'}, 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__account_history_account_id__updated_at.19f35742f1': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['account_id', 'updated_at'], 'model': "{{ get_where_subquery(ref('stg_google_ads__account_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_google_ads__account_history_account_id__updated_at', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'dbt_utils_unique_combination_o_73f21be54bd17f372632a4da939970a3.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__account_history_account_id__updated_at.19f35742f1', 'fqn': ['google_ads_source', 'dbt_utils_unique_combination_of_columns_stg_google_ads__account_history_account_id__updated_at'], 'alias': 'dbt_utils_unique_combination_o_73f21be54bd17f372632a4da939970a3', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_73f21be54bd17f372632a4da939970a3', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_73f21be54bd17f372632a4da939970a3'}, 'created_at': 1694433485.939945, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_73f21be54bd17f372632a4da939970a3'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_73f21be54bd17f372632a4da939970a3") }}', 'language': 'sql', 'refs': [['stg_google_ads__account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.google_ads_source.stg_google_ads__account_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_google_ads__account_history'}, 'test.google_ads_source.not_null_stg_google_ads__ad_group_history_ad_group_id.f6c7c939be': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('stg_google_ads__ad_group_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_google_ads__ad_group_history_ad_group_id', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'not_null_stg_google_ads__ad_group_history_ad_group_id.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.not_null_stg_google_ads__ad_group_history_ad_group_id.f6c7c939be', 'fqn': ['google_ads_source', 'not_null_stg_google_ads__ad_group_history_ad_group_id'], 'alias': 'not_null_stg_google_ads__ad_group_history_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.945154, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_google_ads__ad_group_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_group_history']}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.stg_google_ads__ad_group_history'}, 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__ad_group_history_ad_group_id__updated_at.096e8da5fd': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_group_id', 'updated_at'], 'model': "{{ get_where_subquery(ref('stg_google_ads__ad_group_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_google_ads__ad_group_history_ad_group_id__updated_at', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'dbt_utils_unique_combination_o_0c1cbeb5a9539431a7fbce6af1a21d7a.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__ad_group_history_ad_group_id__updated_at.096e8da5fd', 'fqn': ['google_ads_source', 'dbt_utils_unique_combination_of_columns_stg_google_ads__ad_group_history_ad_group_id__updated_at'], 'alias': 'dbt_utils_unique_combination_o_0c1cbeb5a9539431a7fbce6af1a21d7a', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_0c1cbeb5a9539431a7fbce6af1a21d7a', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_0c1cbeb5a9539431a7fbce6af1a21d7a'}, 'created_at': 1694433485.9471705, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_0c1cbeb5a9539431a7fbce6af1a21d7a'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_0c1cbeb5a9539431a7fbce6af1a21d7a") }}', 'language': 'sql', 'refs': [['stg_google_ads__ad_group_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_group_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_google_ads__ad_group_history'}, 'test.google_ads_source.not_null_stg_google_ads__ad_history_ad_id.8c23c38248': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('stg_google_ads__ad_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_google_ads__ad_history_ad_id', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'not_null_stg_google_ads__ad_history_ad_id.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.not_null_stg_google_ads__ad_history_ad_id.8c23c38248', 'fqn': ['google_ads_source', 'not_null_stg_google_ads__ad_history_ad_id'], 'alias': 'not_null_stg_google_ads__ad_history_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.951784, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_google_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_history']}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.stg_google_ads__ad_history'}, 'test.google_ads_source.dbt_expectations_expect_column_values_to_not_match_regex_list_stg_google_ads__ad_history_source_final_urls__any___.7dddbd81e7': {'test_metadata': {'name': 'expect_column_values_to_not_match_regex_list', 'kwargs': {'regex_list': ',', 'match_on': 'any', 'column_name': 'source_final_urls', 'model': "{{ get_where_subquery(ref('stg_google_ads__ad_history')) }}"}, 'namespace': 'dbt_expectations'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_expectations_expect_column_values_to_not_match_regex_list_stg_google_ads__ad_history_source_final_urls__any___', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'dbt_expectations_expect_column_f02cb56d69a9df1e600b3958899ceaa5.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.dbt_expectations_expect_column_values_to_not_match_regex_list_stg_google_ads__ad_history_source_final_urls__any___.7dddbd81e7', 'fqn': ['google_ads_source', 'dbt_expectations_expect_column_values_to_not_match_regex_list_stg_google_ads__ad_history_source_final_urls__any___'], 'alias': 'dbt_expectations_expect_column_f02cb56d69a9df1e600b3958899ceaa5', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_expectations_expect_column_f02cb56d69a9df1e600b3958899ceaa5', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'warn', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'severity': 'warn', 'alias': 'dbt_expectations_expect_column_f02cb56d69a9df1e600b3958899ceaa5'}, 'created_at': 1694433485.9538357, 'config_call_dict': {'severity': 'warn', 'alias': 'dbt_expectations_expect_column_f02cb56d69a9df1e600b3958899ceaa5'}, 'relation_name': None, 'raw_code': '{{ dbt_expectations.test_expect_column_values_to_not_match_regex_list(**_dbt_generic_test_kwargs) }}{{ config(severity="warn",alias="dbt_expectations_expect_column_f02cb56d69a9df1e600b3958899ceaa5") }}', 'language': 'sql', 'refs': [['stg_google_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_expectations.test_expect_column_values_to_not_match_regex_list', 'macro.dbt.get_where_subquery'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_history']}, 'compiled_path': None, 'column_name': 'source_final_urls', 'file_key_name': 'models.stg_google_ads__ad_history'}, 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__ad_history_ad_id__ad_group_id__updated_at.0c065b0a0b': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'ad_group_id', 'updated_at'], 'model': "{{ get_where_subquery(ref('stg_google_ads__ad_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_google_ads__ad_history_ad_id__ad_group_id__updated_at', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'dbt_utils_unique_combination_o_0cf5dbf0b60dae1b36794a079a6f8b74.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__ad_history_ad_id__ad_group_id__updated_at.0c065b0a0b', 'fqn': ['google_ads_source', 'dbt_utils_unique_combination_of_columns_stg_google_ads__ad_history_ad_id__ad_group_id__updated_at'], 'alias': 'dbt_utils_unique_combination_o_0cf5dbf0b60dae1b36794a079a6f8b74', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_0cf5dbf0b60dae1b36794a079a6f8b74', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_0cf5dbf0b60dae1b36794a079a6f8b74'}, 'created_at': 1694433485.9705024, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_0cf5dbf0b60dae1b36794a079a6f8b74'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_0cf5dbf0b60dae1b36794a079a6f8b74") }}', 'language': 'sql', 'refs': [['stg_google_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_google_ads__ad_history'}, 'test.google_ads_source.not_null_stg_google_ads__ad_stats_date_day.9a43c0fce4': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_google_ads__ad_stats')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_google_ads__ad_stats_date_day', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'not_null_stg_google_ads__ad_stats_date_day.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.not_null_stg_google_ads__ad_stats_date_day.9a43c0fce4', 'fqn': ['google_ads_source', 'not_null_stg_google_ads__ad_stats_date_day'], 'alias': 'not_null_stg_google_ads__ad_stats_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.9747741, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_google_ads__ad_stats']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_stats']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_google_ads__ad_stats'}, 'test.google_ads_source.not_null_stg_google_ads__ad_stats_ad_id.2612d83cc8': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('stg_google_ads__ad_stats')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_google_ads__ad_stats_ad_id', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'not_null_stg_google_ads__ad_stats_ad_id.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.not_null_stg_google_ads__ad_stats_ad_id.2612d83cc8', 'fqn': ['google_ads_source', 'not_null_stg_google_ads__ad_stats_ad_id'], 'alias': 'not_null_stg_google_ads__ad_stats_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.9767935, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_google_ads__ad_stats']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_stats']}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.stg_google_ads__ad_stats'}, 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__ad_stats_ad_id__ad_network_type__device__ad_group_id__keyword_ad_group_criterion__date_day.968b016451': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'ad_network_type', 'device', 'ad_group_id', 'keyword_ad_group_criterion', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_google_ads__ad_stats')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_google_ads__ad_stats_ad_id__ad_network_type__device__ad_group_id__keyword_ad_group_criterion__date_day', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'dbt_utils_unique_combination_o_0e6e3aa3d77b11d347e7c430ba7c2ea1.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__ad_stats_ad_id__ad_network_type__device__ad_group_id__keyword_ad_group_criterion__date_day.968b016451', 'fqn': ['google_ads_source', 'dbt_utils_unique_combination_of_columns_stg_google_ads__ad_stats_ad_id__ad_network_type__device__ad_group_id__keyword_ad_group_criterion__date_day'], 'alias': 'dbt_utils_unique_combination_o_0e6e3aa3d77b11d347e7c430ba7c2ea1', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_0e6e3aa3d77b11d347e7c430ba7c2ea1', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_0e6e3aa3d77b11d347e7c430ba7c2ea1'}, 'created_at': 1694433485.9783125, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_0e6e3aa3d77b11d347e7c430ba7c2ea1'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_0e6e3aa3d77b11d347e7c430ba7c2ea1") }}', 'language': 'sql', 'refs': [['stg_google_ads__ad_stats']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_stats']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_google_ads__ad_stats'}, 'test.google_ads_source.not_null_stg_google_ads__campaign_history_campaign_id.fa0c825e75': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_google_ads__campaign_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_google_ads__campaign_history_campaign_id', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'not_null_stg_google_ads__campaign_history_campaign_id.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.not_null_stg_google_ads__campaign_history_campaign_id.fa0c825e75', 'fqn': ['google_ads_source', 'not_null_stg_google_ads__campaign_history_campaign_id'], 'alias': 'not_null_stg_google_ads__campaign_history_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.984042, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_google_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads_source.stg_google_ads__campaign_history']}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_google_ads__campaign_history'}, 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__campaign_history_campaign_id__updated_at.8bf2733e86': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', 'updated_at'], 'model': "{{ get_where_subquery(ref('stg_google_ads__campaign_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_google_ads__campaign_history_campaign_id__updated_at', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'dbt_utils_unique_combination_o_bd5040437362e14b36ab7ce3eaa14d1d.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__campaign_history_campaign_id__updated_at.8bf2733e86', 'fqn': ['google_ads_source', 'dbt_utils_unique_combination_of_columns_stg_google_ads__campaign_history_campaign_id__updated_at'], 'alias': 'dbt_utils_unique_combination_o_bd5040437362e14b36ab7ce3eaa14d1d', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_bd5040437362e14b36ab7ce3eaa14d1d', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_bd5040437362e14b36ab7ce3eaa14d1d'}, 'created_at': 1694433485.9862037, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_bd5040437362e14b36ab7ce3eaa14d1d'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_bd5040437362e14b36ab7ce3eaa14d1d") }}', 'language': 'sql', 'refs': [['stg_google_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.google_ads_source.stg_google_ads__campaign_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_google_ads__campaign_history'}, 'test.google_ads_source.not_null_stg_google_ads__ad_group_criterion_history_criterion_id.7a0a8b8476': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'criterion_id', 'model': "{{ get_where_subquery(ref('stg_google_ads__ad_group_criterion_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_google_ads__ad_group_criterion_history_criterion_id', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'not_null_stg_google_ads__ad_gr_fa51ec93a9a1e739108966cace6ed031.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.not_null_stg_google_ads__ad_group_criterion_history_criterion_id.7a0a8b8476', 'fqn': ['google_ads_source', 'not_null_stg_google_ads__ad_group_criterion_history_criterion_id'], 'alias': 'not_null_stg_google_ads__ad_gr_fa51ec93a9a1e739108966cace6ed031', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'not_null_stg_google_ads__ad_gr_fa51ec93a9a1e739108966cace6ed031', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'not_null_stg_google_ads__ad_gr_fa51ec93a9a1e739108966cace6ed031'}, 'created_at': 1694433485.991006, 'config_call_dict': {'alias': 'not_null_stg_google_ads__ad_gr_fa51ec93a9a1e739108966cace6ed031'}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias="not_null_stg_google_ads__ad_gr_fa51ec93a9a1e739108966cace6ed031") }}', 'language': 'sql', 'refs': [['stg_google_ads__ad_group_criterion_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_group_criterion_history']}, 'compiled_path': None, 'column_name': 'criterion_id', 'file_key_name': 'models.stg_google_ads__ad_group_criterion_history'}, 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__ad_group_criterion_history_criterion_id__ad_group_id__updated_at.197bbc6816': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['criterion_id', 'ad_group_id', 'updated_at'], 'model': "{{ get_where_subquery(ref('stg_google_ads__ad_group_criterion_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_google_ads__ad_group_criterion_history_criterion_id__ad_group_id__updated_at', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'dbt_utils_unique_combination_o_2ce4e2825f6fe9034f28085d1444c1e8.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__ad_group_criterion_history_criterion_id__ad_group_id__updated_at.197bbc6816', 'fqn': ['google_ads_source', 'dbt_utils_unique_combination_of_columns_stg_google_ads__ad_group_criterion_history_criterion_id__ad_group_id__updated_at'], 'alias': 'dbt_utils_unique_combination_o_2ce4e2825f6fe9034f28085d1444c1e8', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_2ce4e2825f6fe9034f28085d1444c1e8', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_2ce4e2825f6fe9034f28085d1444c1e8'}, 'created_at': 1694433485.9920883, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_2ce4e2825f6fe9034f28085d1444c1e8'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_2ce4e2825f6fe9034f28085d1444c1e8") }}', 'language': 'sql', 'refs': [['stg_google_ads__ad_group_criterion_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_group_criterion_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_google_ads__ad_group_criterion_history'}, 'test.google_ads_source.not_null_stg_google_ads__ad_group_stats_date_day.3c6a221786': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_google_ads__ad_group_stats')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_google_ads__ad_group_stats_date_day', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'not_null_stg_google_ads__ad_group_stats_date_day.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.not_null_stg_google_ads__ad_group_stats_date_day.3c6a221786', 'fqn': ['google_ads_source', 'not_null_stg_google_ads__ad_group_stats_date_day'], 'alias': 'not_null_stg_google_ads__ad_group_stats_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.9971292, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_google_ads__ad_group_stats']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_group_stats']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_google_ads__ad_group_stats'}, 'test.google_ads_source.not_null_stg_google_ads__ad_group_stats_ad_group_id.a8d430f077': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('stg_google_ads__ad_group_stats')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_google_ads__ad_group_stats_ad_group_id', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'not_null_stg_google_ads__ad_group_stats_ad_group_id.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.not_null_stg_google_ads__ad_group_stats_ad_group_id.a8d430f077', 'fqn': ['google_ads_source', 'not_null_stg_google_ads__ad_group_stats_ad_group_id'], 'alias': 'not_null_stg_google_ads__ad_group_stats_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.9980485, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_google_ads__ad_group_stats']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_group_stats']}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.stg_google_ads__ad_group_stats'}, 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__ad_group_stats_ad_group_id__device__ad_network_type__date_day.ed55af6020': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_group_id', 'device', 'ad_network_type', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_google_ads__ad_group_stats')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_google_ads__ad_group_stats_ad_group_id__device__ad_network_type__date_day', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'dbt_utils_unique_combination_o_779a67237d95206a8de7fb9388c2108c.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__ad_group_stats_ad_group_id__device__ad_network_type__date_day.ed55af6020', 'fqn': ['google_ads_source', 'dbt_utils_unique_combination_of_columns_stg_google_ads__ad_group_stats_ad_group_id__device__ad_network_type__date_day'], 'alias': 'dbt_utils_unique_combination_o_779a67237d95206a8de7fb9388c2108c', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_779a67237d95206a8de7fb9388c2108c', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_779a67237d95206a8de7fb9388c2108c'}, 'created_at': 1694433486.000688, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_779a67237d95206a8de7fb9388c2108c'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_779a67237d95206a8de7fb9388c2108c") }}', 'language': 'sql', 'refs': [['stg_google_ads__ad_group_stats']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_group_stats']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_google_ads__ad_group_stats'}, 'test.google_ads_source.not_null_stg_google_ads__campaign_stats_date_day.dc097fd76b': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_google_ads__campaign_stats')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_google_ads__campaign_stats_date_day', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'not_null_stg_google_ads__campaign_stats_date_day.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.not_null_stg_google_ads__campaign_stats_date_day.dc097fd76b', 'fqn': ['google_ads_source', 'not_null_stg_google_ads__campaign_stats_date_day'], 'alias': 'not_null_stg_google_ads__campaign_stats_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.005071, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_google_ads__campaign_stats']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads_source.stg_google_ads__campaign_stats']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_google_ads__campaign_stats'}, 'test.google_ads_source.not_null_stg_google_ads__campaign_stats_campaign_id.11587fa10f': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_google_ads__campaign_stats')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_google_ads__campaign_stats_campaign_id', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'not_null_stg_google_ads__campaign_stats_campaign_id.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.not_null_stg_google_ads__campaign_stats_campaign_id.11587fa10f', 'fqn': ['google_ads_source', 'not_null_stg_google_ads__campaign_stats_campaign_id'], 'alias': 'not_null_stg_google_ads__campaign_stats_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.0070865, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_google_ads__campaign_stats']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads_source.stg_google_ads__campaign_stats']}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_google_ads__campaign_stats'}, 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__campaign_stats_campaign_id__ad_network_type__device__date_day.69600f7d45': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', 'ad_network_type', 'device', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_google_ads__campaign_stats')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_google_ads__campaign_stats_campaign_id__ad_network_type__device__date_day', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'dbt_utils_unique_combination_o_99cd4c79dd8197dda4f4ac2294fc9259.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__campaign_stats_campaign_id__ad_network_type__device__date_day.69600f7d45', 'fqn': ['google_ads_source', 'dbt_utils_unique_combination_of_columns_stg_google_ads__campaign_stats_campaign_id__ad_network_type__device__date_day'], 'alias': 'dbt_utils_unique_combination_o_99cd4c79dd8197dda4f4ac2294fc9259', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_99cd4c79dd8197dda4f4ac2294fc9259', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_99cd4c79dd8197dda4f4ac2294fc9259'}, 'created_at': 1694433486.007922, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_99cd4c79dd8197dda4f4ac2294fc9259'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_99cd4c79dd8197dda4f4ac2294fc9259") }}', 'language': 'sql', 'refs': [['stg_google_ads__campaign_stats']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.google_ads_source.stg_google_ads__campaign_stats']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_google_ads__campaign_stats'}, 'test.google_ads_source.not_null_stg_google_ads__keyword_stats_date_day.a9da72f74d': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_google_ads__keyword_stats')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_google_ads__keyword_stats_date_day', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'not_null_stg_google_ads__keyword_stats_date_day.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.not_null_stg_google_ads__keyword_stats_date_day.a9da72f74d', 'fqn': ['google_ads_source', 'not_null_stg_google_ads__keyword_stats_date_day'], 'alias': 'not_null_stg_google_ads__keyword_stats_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.0135572, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_google_ads__keyword_stats']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads_source.stg_google_ads__keyword_stats']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_google_ads__keyword_stats'}, 'test.google_ads_source.not_null_stg_google_ads__keyword_stats_keyword_id.f0945d6cf0': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'keyword_id', 'model': "{{ get_where_subquery(ref('stg_google_ads__keyword_stats')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_google_ads__keyword_stats_keyword_id', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'not_null_stg_google_ads__keyword_stats_keyword_id.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.not_null_stg_google_ads__keyword_stats_keyword_id.f0945d6cf0', 'fqn': ['google_ads_source', 'not_null_stg_google_ads__keyword_stats_keyword_id'], 'alias': 'not_null_stg_google_ads__keyword_stats_keyword_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.014668, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_google_ads__keyword_stats']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads_source.stg_google_ads__keyword_stats']}, 'compiled_path': None, 'column_name': 'keyword_id', 'file_key_name': 'models.stg_google_ads__keyword_stats'}, 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__keyword_stats_keyword_id__date_day.8f15198e68': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['keyword_id', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_google_ads__keyword_stats')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_google_ads__keyword_stats_keyword_id__date_day', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'dbt_utils_unique_combination_o_7e3d865f56378985172b621ddff21534.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__keyword_stats_keyword_id__date_day.8f15198e68', 'fqn': ['google_ads_source', 'dbt_utils_unique_combination_of_columns_stg_google_ads__keyword_stats_keyword_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_7e3d865f56378985172b621ddff21534', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_7e3d865f56378985172b621ddff21534', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_7e3d865f56378985172b621ddff21534'}, 'created_at': 1694433486.01576, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_7e3d865f56378985172b621ddff21534'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_7e3d865f56378985172b621ddff21534") }}', 'language': 'sql', 'refs': [['stg_google_ads__keyword_stats']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.google_ads_source.stg_google_ads__keyword_stats']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_google_ads__keyword_stats'}, 'test.google_ads_source.not_null_stg_google_ads__account_stats_account_id.2a9da5417b': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('stg_google_ads__account_stats')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_google_ads__account_stats_account_id', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'not_null_stg_google_ads__account_stats_account_id.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.not_null_stg_google_ads__account_stats_account_id.2a9da5417b', 'fqn': ['google_ads_source', 'not_null_stg_google_ads__account_stats_account_id'], 'alias': 'not_null_stg_google_ads__account_stats_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.0214744, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_google_ads__account_stats']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads_source.stg_google_ads__account_stats']}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.stg_google_ads__account_stats'}, 'test.google_ads_source.not_null_stg_google_ads__account_stats_date_day.57ac8772d5': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_google_ads__account_stats')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_google_ads__account_stats_date_day', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'not_null_stg_google_ads__account_stats_date_day.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.not_null_stg_google_ads__account_stats_date_day.57ac8772d5', 'fqn': ['google_ads_source', 'not_null_stg_google_ads__account_stats_date_day'], 'alias': 'not_null_stg_google_ads__account_stats_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.0234735, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_google_ads__account_stats']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads_source.stg_google_ads__account_stats']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_google_ads__account_stats'}, 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__account_stats_account_id__device__ad_network_type__date_day.3019f8a860': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['account_id', 'device', 'ad_network_type', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_google_ads__account_stats')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_google_ads__account_stats_account_id__device__ad_network_type__date_day', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'dbt_utils_unique_combination_o_c760910058eb575d2384e263c612c0c3.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__account_stats_account_id__device__ad_network_type__date_day.3019f8a860', 'fqn': ['google_ads_source', 'dbt_utils_unique_combination_of_columns_stg_google_ads__account_stats_account_id__device__ad_network_type__date_day'], 'alias': 'dbt_utils_unique_combination_o_c760910058eb575d2384e263c612c0c3', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_c760910058eb575d2384e263c612c0c3', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_c760910058eb575d2384e263c612c0c3'}, 'created_at': 1694433486.0244732, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_c760910058eb575d2384e263c612c0c3'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_c760910058eb575d2384e263c612c0c3") }}', 'language': 'sql', 'refs': [['stg_google_ads__account_stats']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.google_ads_source.stg_google_ads__account_stats']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_google_ads__account_stats'}, 'test.linkedin.not_null_linkedin_ads__account_report_account_id.0c34ea1842': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('linkedin_ads__account_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_linkedin_ads__account_report_account_id', 'resource_type': 'test', 'package_name': 'linkedin', 'path': 'not_null_linkedin_ads__account_report_account_id.sql', 'original_file_path': 'models\\linkedin.yml', 'unique_id': 'test.linkedin.not_null_linkedin_ads__account_report_account_id.0c34ea1842', 'fqn': ['linkedin', 'not_null_linkedin_ads__account_report_account_id'], 'alias': 'not_null_linkedin_ads__account_report_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.0628676, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['linkedin_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.linkedin_ads__account_report'}, 'test.linkedin.not_null_linkedin_ads__account_report_date_day.c4b33f8f53': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('linkedin_ads__account_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_linkedin_ads__account_report_date_day', 'resource_type': 'test', 'package_name': 'linkedin', 'path': 'not_null_linkedin_ads__account_report_date_day.sql', 'original_file_path': 'models\\linkedin.yml', 'unique_id': 'test.linkedin.not_null_linkedin_ads__account_report_date_day.c4b33f8f53', 'fqn': ['linkedin', 'not_null_linkedin_ads__account_report_date_day'], 'alias': 'not_null_linkedin_ads__account_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.0648837, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['linkedin_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.linkedin_ads__account_report'}, 'test.linkedin.dbt_utils_unique_combination_of_columns_linkedin_ads__account_report_date_day__account_id.a2dcede91c': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id'], 'model': "{{ get_where_subquery(ref('linkedin_ads__account_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_linkedin_ads__account_report_date_day__account_id', 'resource_type': 'test', 'package_name': 'linkedin', 'path': 'dbt_utils_unique_combination_o_0644abec3559f9c0247b709331bb1231.sql', 'original_file_path': 'models\\linkedin.yml', 'unique_id': 'test.linkedin.dbt_utils_unique_combination_of_columns_linkedin_ads__account_report_date_day__account_id.a2dcede91c', 'fqn': ['linkedin', 'dbt_utils_unique_combination_of_columns_linkedin_ads__account_report_date_day__account_id'], 'alias': 'dbt_utils_unique_combination_o_0644abec3559f9c0247b709331bb1231', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_0644abec3559f9c0247b709331bb1231', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_0644abec3559f9c0247b709331bb1231'}, 'created_at': 1694433486.0658896, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_0644abec3559f9c0247b709331bb1231'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_0644abec3559f9c0247b709331bb1231") }}', 'language': 'sql', 'refs': [['linkedin_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.linkedin_ads__account_report'}, 'test.linkedin.not_null_linkedin_ads__campaign_report_date_day.8d320b88b1': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('linkedin_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_linkedin_ads__campaign_report_date_day', 'resource_type': 'test', 'package_name': 'linkedin', 'path': 'not_null_linkedin_ads__campaign_report_date_day.sql', 'original_file_path': 'models\\linkedin.yml', 'unique_id': 'test.linkedin.not_null_linkedin_ads__campaign_report_date_day.8d320b88b1', 'fqn': ['linkedin', 'not_null_linkedin_ads__campaign_report_date_day'], 'alias': 'not_null_linkedin_ads__campaign_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.0731058, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['linkedin_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.linkedin_ads__campaign_report'}, 'test.linkedin.not_null_linkedin_ads__campaign_report_campaign_id.bf43964b15': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('linkedin_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_linkedin_ads__campaign_report_campaign_id', 'resource_type': 'test', 'package_name': 'linkedin', 'path': 'not_null_linkedin_ads__campaign_report_campaign_id.sql', 'original_file_path': 'models\\linkedin.yml', 'unique_id': 'test.linkedin.not_null_linkedin_ads__campaign_report_campaign_id.bf43964b15', 'fqn': ['linkedin', 'not_null_linkedin_ads__campaign_report_campaign_id'], 'alias': 'not_null_linkedin_ads__campaign_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.0743506, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['linkedin_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.linkedin_ads__campaign_report'}, 'test.linkedin.dbt_utils_unique_combination_of_columns_linkedin_ads__campaign_report_date_day__campaign_id__account_id__campaign_group_id.0b09b4b3f3': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'campaign_id', 'account_id', 'campaign_group_id'], 'model': "{{ get_where_subquery(ref('linkedin_ads__campaign_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_linkedin_ads__campaign_report_date_day__campaign_id__account_id__campaign_group_id', 'resource_type': 'test', 'package_name': 'linkedin', 'path': 'dbt_utils_unique_combination_o_fd56be6c8a6c070551363fa2fd8d2873.sql', 'original_file_path': 'models\\linkedin.yml', 'unique_id': 'test.linkedin.dbt_utils_unique_combination_of_columns_linkedin_ads__campaign_report_date_day__campaign_id__account_id__campaign_group_id.0b09b4b3f3', 'fqn': ['linkedin', 'dbt_utils_unique_combination_of_columns_linkedin_ads__campaign_report_date_day__campaign_id__account_id__campaign_group_id'], 'alias': 'dbt_utils_unique_combination_o_fd56be6c8a6c070551363fa2fd8d2873', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_fd56be6c8a6c070551363fa2fd8d2873', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_fd56be6c8a6c070551363fa2fd8d2873'}, 'created_at': 1694433486.0754344, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_fd56be6c8a6c070551363fa2fd8d2873'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_fd56be6c8a6c070551363fa2fd8d2873") }}', 'language': 'sql', 'refs': [['linkedin_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.linkedin_ads__campaign_report'}, 'test.linkedin.not_null_linkedin_ads__campaign_group_report_date_day.2676a1f76b': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('linkedin_ads__campaign_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_linkedin_ads__campaign_group_report_date_day', 'resource_type': 'test', 'package_name': 'linkedin', 'path': 'not_null_linkedin_ads__campaign_group_report_date_day.sql', 'original_file_path': 'models\\linkedin.yml', 'unique_id': 'test.linkedin.not_null_linkedin_ads__campaign_group_report_date_day.2676a1f76b', 'fqn': ['linkedin', 'not_null_linkedin_ads__campaign_group_report_date_day'], 'alias': 'not_null_linkedin_ads__campaign_group_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.0810497, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['linkedin_ads__campaign_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.linkedin_ads__campaign_group_report'}, 'test.linkedin.not_null_linkedin_ads__campaign_group_report_campaign_group_id.39b448cdaf': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_group_id', 'model': "{{ get_where_subquery(ref('linkedin_ads__campaign_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_linkedin_ads__campaign_group_report_campaign_group_id', 'resource_type': 'test', 'package_name': 'linkedin', 'path': 'not_null_linkedin_ads__campaign_group_report_campaign_group_id.sql', 'original_file_path': 'models\\linkedin.yml', 'unique_id': 'test.linkedin.not_null_linkedin_ads__campaign_group_report_campaign_group_id.39b448cdaf', 'fqn': ['linkedin', 'not_null_linkedin_ads__campaign_group_report_campaign_group_id'], 'alias': 'not_null_linkedin_ads__campaign_group_report_campaign_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.0830793, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['linkedin_ads__campaign_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_group_id', 'file_key_name': 'models.linkedin_ads__campaign_group_report'}, 'test.linkedin.dbt_utils_unique_combination_of_columns_linkedin_ads__campaign_group_report_date_day__campaign_group_id__account_id.f60989a7a6': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'campaign_group_id', 'account_id'], 'model': "{{ get_where_subquery(ref('linkedin_ads__campaign_group_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_linkedin_ads__campaign_group_report_date_day__campaign_group_id__account_id', 'resource_type': 'test', 'package_name': 'linkedin', 'path': 'dbt_utils_unique_combination_o_bcb471c45c713cd1ea59bd0229ed3f9e.sql', 'original_file_path': 'models\\linkedin.yml', 'unique_id': 'test.linkedin.dbt_utils_unique_combination_of_columns_linkedin_ads__campaign_group_report_date_day__campaign_group_id__account_id.f60989a7a6', 'fqn': ['linkedin', 'dbt_utils_unique_combination_of_columns_linkedin_ads__campaign_group_report_date_day__campaign_group_id__account_id'], 'alias': 'dbt_utils_unique_combination_o_bcb471c45c713cd1ea59bd0229ed3f9e', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_bcb471c45c713cd1ea59bd0229ed3f9e', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_bcb471c45c713cd1ea59bd0229ed3f9e'}, 'created_at': 1694433486.0842316, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_bcb471c45c713cd1ea59bd0229ed3f9e'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_bcb471c45c713cd1ea59bd0229ed3f9e") }}', 'language': 'sql', 'refs': [['linkedin_ads__campaign_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.linkedin_ads__campaign_group_report'}, 'test.linkedin.not_null_linkedin_ads__creative_report_date_day.0c6338b020': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('linkedin_ads__creative_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_linkedin_ads__creative_report_date_day', 'resource_type': 'test', 'package_name': 'linkedin', 'path': 'not_null_linkedin_ads__creative_report_date_day.sql', 'original_file_path': 'models\\linkedin.yml', 'unique_id': 'test.linkedin.not_null_linkedin_ads__creative_report_date_day.0c6338b020', 'fqn': ['linkedin', 'not_null_linkedin_ads__creative_report_date_day'], 'alias': 'not_null_linkedin_ads__creative_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.089183, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['linkedin_ads__creative_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.linkedin_ads__creative_report'}, 'test.linkedin.not_null_linkedin_ads__creative_report_creative_id.096d93f889': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'creative_id', 'model': "{{ get_where_subquery(ref('linkedin_ads__creative_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_linkedin_ads__creative_report_creative_id', 'resource_type': 'test', 'package_name': 'linkedin', 'path': 'not_null_linkedin_ads__creative_report_creative_id.sql', 'original_file_path': 'models\\linkedin.yml', 'unique_id': 'test.linkedin.not_null_linkedin_ads__creative_report_creative_id.096d93f889', 'fqn': ['linkedin', 'not_null_linkedin_ads__creative_report_creative_id'], 'alias': 'not_null_linkedin_ads__creative_report_creative_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.0917132, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['linkedin_ads__creative_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'creative_id', 'file_key_name': 'models.linkedin_ads__creative_report'}, 'test.linkedin.dbt_utils_unique_combination_of_columns_linkedin_ads__creative_report_date_day__creative_id__campaign_id__campaign_group_id__account_id.5c000e925f': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'creative_id', 'campaign_id', 'campaign_group_id', 'account_id'], 'model': "{{ get_where_subquery(ref('linkedin_ads__creative_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_linkedin_ads__creative_report_date_day__creative_id__campaign_id__campaign_group_id__account_id', 'resource_type': 'test', 'package_name': 'linkedin', 'path': 'dbt_utils_unique_combination_o_28cc8f6d273bc5b366ed325805452f92.sql', 'original_file_path': 'models\\linkedin.yml', 'unique_id': 'test.linkedin.dbt_utils_unique_combination_of_columns_linkedin_ads__creative_report_date_day__creative_id__campaign_id__campaign_group_id__account_id.5c000e925f', 'fqn': ['linkedin', 'dbt_utils_unique_combination_of_columns_linkedin_ads__creative_report_date_day__creative_id__campaign_id__campaign_group_id__account_id'], 'alias': 'dbt_utils_unique_combination_o_28cc8f6d273bc5b366ed325805452f92', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_28cc8f6d273bc5b366ed325805452f92', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_28cc8f6d273bc5b366ed325805452f92'}, 'created_at': 1694433486.0927904, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_28cc8f6d273bc5b366ed325805452f92'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_28cc8f6d273bc5b366ed325805452f92") }}', 'language': 'sql', 'refs': [['linkedin_ads__creative_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.linkedin_ads__creative_report'}, 'test.linkedin.not_null_linkedin_ads__url_report_date_day.48b540f315': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('linkedin_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_linkedin_ads__url_report_date_day', 'resource_type': 'test', 'package_name': 'linkedin', 'path': 'not_null_linkedin_ads__url_report_date_day.sql', 'original_file_path': 'models\\linkedin.yml', 'unique_id': 'test.linkedin.not_null_linkedin_ads__url_report_date_day.48b540f315', 'fqn': ['linkedin', 'not_null_linkedin_ads__url_report_date_day'], 'alias': 'not_null_linkedin_ads__url_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.0970857, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['linkedin_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.linkedin_ads__url_report'}, 'test.linkedin.not_null_linkedin_ads__url_report_creative_id.83967fe9d2': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'creative_id', 'model': "{{ get_where_subquery(ref('linkedin_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_linkedin_ads__url_report_creative_id', 'resource_type': 'test', 'package_name': 'linkedin', 'path': 'not_null_linkedin_ads__url_report_creative_id.sql', 'original_file_path': 'models\\linkedin.yml', 'unique_id': 'test.linkedin.not_null_linkedin_ads__url_report_creative_id.83967fe9d2', 'fqn': ['linkedin', 'not_null_linkedin_ads__url_report_creative_id'], 'alias': 'not_null_linkedin_ads__url_report_creative_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.1005623, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['linkedin_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'creative_id', 'file_key_name': 'models.linkedin_ads__url_report'}, 'test.linkedin.not_null_linkedin_ads__url_report_click_uri.81534087cb': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'click_uri', 'model': "{{ get_where_subquery(ref('linkedin_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_linkedin_ads__url_report_click_uri', 'resource_type': 'test', 'package_name': 'linkedin', 'path': 'not_null_linkedin_ads__url_report_click_uri.sql', 'original_file_path': 'models\\linkedin.yml', 'unique_id': 'test.linkedin.not_null_linkedin_ads__url_report_click_uri.81534087cb', 'fqn': ['linkedin', 'not_null_linkedin_ads__url_report_click_uri'], 'alias': 'not_null_linkedin_ads__url_report_click_uri', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True}, 'created_at': 1694433486.1025627, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(enabled=True) }}', 'language': 'sql', 'refs': [['linkedin_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'click_uri', 'file_key_name': 'models.linkedin_ads__url_report'}, 'test.linkedin.dbt_utils_unique_combination_of_columns_linkedin_ads__url_report_date_day__creative_id__campaign_id__campaign_group_id__account_id.d00d4a104d': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'creative_id', 'campaign_id', 'campaign_group_id', 'account_id'], 'model': "{{ get_where_subquery(ref('linkedin_ads__url_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_linkedin_ads__url_report_date_day__creative_id__campaign_id__campaign_group_id__account_id', 'resource_type': 'test', 'package_name': 'linkedin', 'path': 'dbt_utils_unique_combination_o_24d7d196c7f59231b7de190c11b33a2f.sql', 'original_file_path': 'models\\linkedin.yml', 'unique_id': 'test.linkedin.dbt_utils_unique_combination_of_columns_linkedin_ads__url_report_date_day__creative_id__campaign_id__campaign_group_id__account_id.d00d4a104d', 'fqn': ['linkedin', 'dbt_utils_unique_combination_of_columns_linkedin_ads__url_report_date_day__creative_id__campaign_id__campaign_group_id__account_id'], 'alias': 'dbt_utils_unique_combination_o_24d7d196c7f59231b7de190c11b33a2f', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_24d7d196c7f59231b7de190c11b33a2f', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_24d7d196c7f59231b7de190c11b33a2f'}, 'created_at': 1694433486.1045623, 'config_call_dict': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_24d7d196c7f59231b7de190c11b33a2f'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(enabled=True,alias="dbt_utils_unique_combination_o_24d7d196c7f59231b7de190c11b33a2f") }}', 'language': 'sql', 'refs': [['linkedin_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.linkedin_ads__url_report'}, 'test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_creative_creative_id.062abfe14b': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'creative_id', 'model': "{{ get_where_subquery(ref('stg_linkedin_ads__ad_analytics_by_creative')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_linkedin_ads__ad_analytics_by_creative_creative_id', 'resource_type': 'test', 'package_name': 'linkedin_source', 'path': 'not_null_stg_linkedin_ads__ad_analytics_by_creative_creative_id.sql', 'original_file_path': 'models\\stg_linkedin.yml', 'unique_id': 'test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_creative_creative_id.062abfe14b', 'fqn': ['linkedin_source', 'not_null_stg_linkedin_ads__ad_analytics_by_creative_creative_id'], 'alias': 'not_null_stg_linkedin_ads__ad_analytics_by_creative_creative_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.1641173, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_linkedin_ads__ad_analytics_by_creative']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'creative_id', 'file_key_name': 'models.stg_linkedin_ads__ad_analytics_by_creative'}, 'test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_creative_date_day.cb81bc4766': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_linkedin_ads__ad_analytics_by_creative')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_linkedin_ads__ad_analytics_by_creative_date_day', 'resource_type': 'test', 'package_name': 'linkedin_source', 'path': 'not_null_stg_linkedin_ads__ad_analytics_by_creative_date_day.sql', 'original_file_path': 'models\\stg_linkedin.yml', 'unique_id': 'test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_creative_date_day.cb81bc4766', 'fqn': ['linkedin_source', 'not_null_stg_linkedin_ads__ad_analytics_by_creative_date_day'], 'alias': 'not_null_stg_linkedin_ads__ad_analytics_by_creative_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.1651227, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_linkedin_ads__ad_analytics_by_creative']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_linkedin_ads__ad_analytics_by_creative'}, 'test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__ad_analytics_by_creative_date_day__creative_id.973a01e410': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'creative_id'], 'model': "{{ get_where_subquery(ref('stg_linkedin_ads__ad_analytics_by_creative')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_linkedin_ads__ad_analytics_by_creative_date_day__creative_id', 'resource_type': 'test', 'package_name': 'linkedin_source', 'path': 'dbt_utils_unique_combination_o_aafc2af91b093fc4d5ae0ca1f56acbf9.sql', 'original_file_path': 'models\\stg_linkedin.yml', 'unique_id': 'test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__ad_analytics_by_creative_date_day__creative_id.973a01e410', 'fqn': ['linkedin_source', 'dbt_utils_unique_combination_of_columns_stg_linkedin_ads__ad_analytics_by_creative_date_day__creative_id'], 'alias': 'dbt_utils_unique_combination_o_aafc2af91b093fc4d5ae0ca1f56acbf9', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_aafc2af91b093fc4d5ae0ca1f56acbf9', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_aafc2af91b093fc4d5ae0ca1f56acbf9'}, 'created_at': 1694433486.1671293, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_aafc2af91b093fc4d5ae0ca1f56acbf9'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_aafc2af91b093fc4d5ae0ca1f56acbf9") }}', 'language': 'sql', 'refs': [['stg_linkedin_ads__ad_analytics_by_creative']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_linkedin_ads__ad_analytics_by_creative'}, 'test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_campaign_campaign_id.d6ae242f1a': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_linkedin_ads__ad_analytics_by_campaign')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_linkedin_ads__ad_analytics_by_campaign_campaign_id', 'resource_type': 'test', 'package_name': 'linkedin_source', 'path': 'not_null_stg_linkedin_ads__ad_analytics_by_campaign_campaign_id.sql', 'original_file_path': 'models\\stg_linkedin.yml', 'unique_id': 'test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_campaign_campaign_id.d6ae242f1a', 'fqn': ['linkedin_source', 'not_null_stg_linkedin_ads__ad_analytics_by_campaign_campaign_id'], 'alias': 'not_null_stg_linkedin_ads__ad_analytics_by_campaign_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.1716776, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_linkedin_ads__ad_analytics_by_campaign']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_linkedin_ads__ad_analytics_by_campaign'}, 'test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_campaign_date_day.ef97bed766': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_linkedin_ads__ad_analytics_by_campaign')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_linkedin_ads__ad_analytics_by_campaign_date_day', 'resource_type': 'test', 'package_name': 'linkedin_source', 'path': 'not_null_stg_linkedin_ads__ad_analytics_by_campaign_date_day.sql', 'original_file_path': 'models\\stg_linkedin.yml', 'unique_id': 'test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_campaign_date_day.ef97bed766', 'fqn': ['linkedin_source', 'not_null_stg_linkedin_ads__ad_analytics_by_campaign_date_day'], 'alias': 'not_null_stg_linkedin_ads__ad_analytics_by_campaign_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.172686, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_linkedin_ads__ad_analytics_by_campaign']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_linkedin_ads__ad_analytics_by_campaign'}, 'test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__ad_analytics_by_campaign_date_day__campaign_id.b03f3dc81d': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'campaign_id'], 'model': "{{ get_where_subquery(ref('stg_linkedin_ads__ad_analytics_by_campaign')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_linkedin_ads__ad_analytics_by_campaign_date_day__campaign_id', 'resource_type': 'test', 'package_name': 'linkedin_source', 'path': 'dbt_utils_unique_combination_o_8315cf2be67da0ba2aede716f1af891c.sql', 'original_file_path': 'models\\stg_linkedin.yml', 'unique_id': 'test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__ad_analytics_by_campaign_date_day__campaign_id.b03f3dc81d', 'fqn': ['linkedin_source', 'dbt_utils_unique_combination_of_columns_stg_linkedin_ads__ad_analytics_by_campaign_date_day__campaign_id'], 'alias': 'dbt_utils_unique_combination_o_8315cf2be67da0ba2aede716f1af891c', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_8315cf2be67da0ba2aede716f1af891c', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_8315cf2be67da0ba2aede716f1af891c'}, 'created_at': 1694433486.1747003, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_8315cf2be67da0ba2aede716f1af891c'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_8315cf2be67da0ba2aede716f1af891c") }}', 'language': 'sql', 'refs': [['stg_linkedin_ads__ad_analytics_by_campaign']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_linkedin_ads__ad_analytics_by_campaign'}, 'test.linkedin_source.not_null_stg_linkedin_ads__creative_history_creative_id.4d51d55474': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'creative_id', 'model': "{{ get_where_subquery(ref('stg_linkedin_ads__creative_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_linkedin_ads__creative_history_creative_id', 'resource_type': 'test', 'package_name': 'linkedin_source', 'path': 'not_null_stg_linkedin_ads__creative_history_creative_id.sql', 'original_file_path': 'models\\stg_linkedin.yml', 'unique_id': 'test.linkedin_source.not_null_stg_linkedin_ads__creative_history_creative_id.4d51d55474', 'fqn': ['linkedin_source', 'not_null_stg_linkedin_ads__creative_history_creative_id'], 'alias': 'not_null_stg_linkedin_ads__creative_history_creative_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.179355, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_linkedin_ads__creative_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'creative_id', 'file_key_name': 'models.stg_linkedin_ads__creative_history'}, 'test.linkedin_source.not_null_stg_linkedin_ads__campaign_history_campaign_id.b026971ca2': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_linkedin_ads__campaign_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_linkedin_ads__campaign_history_campaign_id', 'resource_type': 'test', 'package_name': 'linkedin_source', 'path': 'not_null_stg_linkedin_ads__campaign_history_campaign_id.sql', 'original_file_path': 'models\\stg_linkedin.yml', 'unique_id': 'test.linkedin_source.not_null_stg_linkedin_ads__campaign_history_campaign_id.b026971ca2', 'fqn': ['linkedin_source', 'not_null_stg_linkedin_ads__campaign_history_campaign_id'], 'alias': 'not_null_stg_linkedin_ads__campaign_history_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.180971, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_linkedin_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_linkedin_ads__campaign_history'}, 'test.linkedin_source.not_null_stg_linkedin_ads__campaign_history_version_tag.64954cc469': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'version_tag', 'model': "{{ get_where_subquery(ref('stg_linkedin_ads__campaign_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_linkedin_ads__campaign_history_version_tag', 'resource_type': 'test', 'package_name': 'linkedin_source', 'path': 'not_null_stg_linkedin_ads__campaign_history_version_tag.sql', 'original_file_path': 'models\\stg_linkedin.yml', 'unique_id': 'test.linkedin_source.not_null_stg_linkedin_ads__campaign_history_version_tag.64954cc469', 'fqn': ['linkedin_source', 'not_null_stg_linkedin_ads__campaign_history_version_tag'], 'alias': 'not_null_stg_linkedin_ads__campaign_history_version_tag', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.181973, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_linkedin_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'version_tag', 'file_key_name': 'models.stg_linkedin_ads__campaign_history'}, 'test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__campaign_history_version_tag__campaign_id.2d20780793': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['version_tag', 'campaign_id'], 'model': "{{ get_where_subquery(ref('stg_linkedin_ads__campaign_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_linkedin_ads__campaign_history_version_tag__campaign_id', 'resource_type': 'test', 'package_name': 'linkedin_source', 'path': 'dbt_utils_unique_combination_o_04241a97ca756b5a2103a7a728e18361.sql', 'original_file_path': 'models\\stg_linkedin.yml', 'unique_id': 'test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__campaign_history_version_tag__campaign_id.2d20780793', 'fqn': ['linkedin_source', 'dbt_utils_unique_combination_of_columns_stg_linkedin_ads__campaign_history_version_tag__campaign_id'], 'alias': 'dbt_utils_unique_combination_o_04241a97ca756b5a2103a7a728e18361', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_04241a97ca756b5a2103a7a728e18361', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_04241a97ca756b5a2103a7a728e18361'}, 'created_at': 1694433486.1839726, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_04241a97ca756b5a2103a7a728e18361'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_04241a97ca756b5a2103a7a728e18361") }}', 'language': 'sql', 'refs': [['stg_linkedin_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_linkedin_ads__campaign_history'}, 'test.linkedin_source.not_null_stg_linkedin_ads__campaign_group_history_campaign_group_id.3888f3777d': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_group_id', 'model': "{{ get_where_subquery(ref('stg_linkedin_ads__campaign_group_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_linkedin_ads__campaign_group_history_campaign_group_id', 'resource_type': 'test', 'package_name': 'linkedin_source', 'path': 'not_null_stg_linkedin_ads__cam_ff659fc451955e2142e65b7eefd44f9a.sql', 'original_file_path': 'models\\stg_linkedin.yml', 'unique_id': 'test.linkedin_source.not_null_stg_linkedin_ads__campaign_group_history_campaign_group_id.3888f3777d', 'fqn': ['linkedin_source', 'not_null_stg_linkedin_ads__campaign_group_history_campaign_group_id'], 'alias': 'not_null_stg_linkedin_ads__cam_ff659fc451955e2142e65b7eefd44f9a', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'not_null_stg_linkedin_ads__cam_ff659fc451955e2142e65b7eefd44f9a', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'not_null_stg_linkedin_ads__cam_ff659fc451955e2142e65b7eefd44f9a'}, 'created_at': 1694433486.1884897, 'config_call_dict': {'alias': 'not_null_stg_linkedin_ads__cam_ff659fc451955e2142e65b7eefd44f9a'}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias="not_null_stg_linkedin_ads__cam_ff659fc451955e2142e65b7eefd44f9a") }}', 'language': 'sql', 'refs': [['stg_linkedin_ads__campaign_group_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_group_id', 'file_key_name': 'models.stg_linkedin_ads__campaign_group_history'}, 'test.linkedin_source.not_null_stg_linkedin_ads__campaign_group_history_last_modified_at.a716e2a7ea': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'last_modified_at', 'model': "{{ get_where_subquery(ref('stg_linkedin_ads__campaign_group_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_linkedin_ads__campaign_group_history_last_modified_at', 'resource_type': 'test', 'package_name': 'linkedin_source', 'path': 'not_null_stg_linkedin_ads__cam_2e7858c2b570943ef2af34e42f5302bd.sql', 'original_file_path': 'models\\stg_linkedin.yml', 'unique_id': 'test.linkedin_source.not_null_stg_linkedin_ads__campaign_group_history_last_modified_at.a716e2a7ea', 'fqn': ['linkedin_source', 'not_null_stg_linkedin_ads__campaign_group_history_last_modified_at'], 'alias': 'not_null_stg_linkedin_ads__cam_2e7858c2b570943ef2af34e42f5302bd', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'not_null_stg_linkedin_ads__cam_2e7858c2b570943ef2af34e42f5302bd', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'not_null_stg_linkedin_ads__cam_2e7858c2b570943ef2af34e42f5302bd'}, 'created_at': 1694433486.1894894, 'config_call_dict': {'alias': 'not_null_stg_linkedin_ads__cam_2e7858c2b570943ef2af34e42f5302bd'}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias="not_null_stg_linkedin_ads__cam_2e7858c2b570943ef2af34e42f5302bd") }}', 'language': 'sql', 'refs': [['stg_linkedin_ads__campaign_group_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'last_modified_at', 'file_key_name': 'models.stg_linkedin_ads__campaign_group_history'}, 'test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__campaign_group_history_last_modified_at__campaign_group_id.e761ddb4da': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['last_modified_at', 'campaign_group_id'], 'model': "{{ get_where_subquery(ref('stg_linkedin_ads__campaign_group_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_linkedin_ads__campaign_group_history_last_modified_at__campaign_group_id', 'resource_type': 'test', 'package_name': 'linkedin_source', 'path': 'dbt_utils_unique_combination_o_03fa025e903c1ddc393db8f138302b14.sql', 'original_file_path': 'models\\stg_linkedin.yml', 'unique_id': 'test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__campaign_group_history_last_modified_at__campaign_group_id.e761ddb4da', 'fqn': ['linkedin_source', 'dbt_utils_unique_combination_of_columns_stg_linkedin_ads__campaign_group_history_last_modified_at__campaign_group_id'], 'alias': 'dbt_utils_unique_combination_o_03fa025e903c1ddc393db8f138302b14', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_03fa025e903c1ddc393db8f138302b14', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_03fa025e903c1ddc393db8f138302b14'}, 'created_at': 1694433486.1914895, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_03fa025e903c1ddc393db8f138302b14'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_03fa025e903c1ddc393db8f138302b14") }}', 'language': 'sql', 'refs': [['stg_linkedin_ads__campaign_group_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_linkedin_ads__campaign_group_history'}, 'test.linkedin_source.not_null_stg_linkedin_ads__account_history_account_id.a9fa7f93c0': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('stg_linkedin_ads__account_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_linkedin_ads__account_history_account_id', 'resource_type': 'test', 'package_name': 'linkedin_source', 'path': 'not_null_stg_linkedin_ads__account_history_account_id.sql', 'original_file_path': 'models\\stg_linkedin.yml', 'unique_id': 'test.linkedin_source.not_null_stg_linkedin_ads__account_history_account_id.a9fa7f93c0', 'fqn': ['linkedin_source', 'not_null_stg_linkedin_ads__account_history_account_id'], 'alias': 'not_null_stg_linkedin_ads__account_history_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.1954904, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_linkedin_ads__account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.stg_linkedin_ads__account_history'}, 'test.linkedin_source.not_null_stg_linkedin_ads__account_history_version_tag.58c46c5d81': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'version_tag', 'model': "{{ get_where_subquery(ref('stg_linkedin_ads__account_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_linkedin_ads__account_history_version_tag', 'resource_type': 'test', 'package_name': 'linkedin_source', 'path': 'not_null_stg_linkedin_ads__account_history_version_tag.sql', 'original_file_path': 'models\\stg_linkedin.yml', 'unique_id': 'test.linkedin_source.not_null_stg_linkedin_ads__account_history_version_tag.58c46c5d81', 'fqn': ['linkedin_source', 'not_null_stg_linkedin_ads__account_history_version_tag'], 'alias': 'not_null_stg_linkedin_ads__account_history_version_tag', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.1980436, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_linkedin_ads__account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'version_tag', 'file_key_name': 'models.stg_linkedin_ads__account_history'}, 'test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__account_history_account_id__version_tag.9a655993ce': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['account_id', 'version_tag'], 'model': "{{ get_where_subquery(ref('stg_linkedin_ads__account_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_linkedin_ads__account_history_account_id__version_tag', 'resource_type': 'test', 'package_name': 'linkedin_source', 'path': 'dbt_utils_unique_combination_o_e080bf5d4722552a352202d7efd9af55.sql', 'original_file_path': 'models\\stg_linkedin.yml', 'unique_id': 'test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__account_history_account_id__version_tag.9a655993ce', 'fqn': ['linkedin_source', 'dbt_utils_unique_combination_of_columns_stg_linkedin_ads__account_history_account_id__version_tag'], 'alias': 'dbt_utils_unique_combination_o_e080bf5d4722552a352202d7efd9af55', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_e080bf5d4722552a352202d7efd9af55', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_e080bf5d4722552a352202d7efd9af55'}, 'created_at': 1694433486.199045, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_e080bf5d4722552a352202d7efd9af55'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_e080bf5d4722552a352202d7efd9af55") }}', 'language': 'sql', 'refs': [['stg_linkedin_ads__account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_linkedin_ads__account_history'}, 'test.microsoft_ads.not_null_microsoft_ads__account_report_account_id.f88e46157e': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('microsoft_ads__account_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_microsoft_ads__account_report_account_id', 'resource_type': 'test', 'package_name': 'microsoft_ads', 'path': 'not_null_microsoft_ads__account_report_account_id.sql', 'original_file_path': 'models\\microsoft_ads.yml', 'unique_id': 'test.microsoft_ads.not_null_microsoft_ads__account_report_account_id.f88e46157e', 'fqn': ['microsoft_ads', 'not_null_microsoft_ads__account_report_account_id'], 'alias': 'not_null_microsoft_ads__account_report_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.2455027, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['microsoft_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.microsoft_ads__account_report'}, 'test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__account_report_date_day__account_id__device_os__device_type__network__currency_code.2d5faac68f': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'device_os', 'device_type', 'network', 'currency_code'], 'model': "{{ get_where_subquery(ref('microsoft_ads__account_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_microsoft_ads__account_report_date_day__account_id__device_os__device_type__network__currency_code', 'resource_type': 'test', 'package_name': 'microsoft_ads', 'path': 'dbt_utils_unique_combination_o_9284db0a761f9f76982a86a301c98668.sql', 'original_file_path': 'models\\microsoft_ads.yml', 'unique_id': 'test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__account_report_date_day__account_id__device_os__device_type__network__currency_code.2d5faac68f', 'fqn': ['microsoft_ads', 'dbt_utils_unique_combination_of_columns_microsoft_ads__account_report_date_day__account_id__device_os__device_type__network__currency_code'], 'alias': 'dbt_utils_unique_combination_o_9284db0a761f9f76982a86a301c98668', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_9284db0a761f9f76982a86a301c98668', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_9284db0a761f9f76982a86a301c98668'}, 'created_at': 1694433486.2471087, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_9284db0a761f9f76982a86a301c98668'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_9284db0a761f9f76982a86a301c98668") }}', 'language': 'sql', 'refs': [['microsoft_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.microsoft_ads__account_report'}, 'test.microsoft_ads.not_null_microsoft_ads__ad_group_report_ad_group_id.1974ec5ab9': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('microsoft_ads__ad_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_microsoft_ads__ad_group_report_ad_group_id', 'resource_type': 'test', 'package_name': 'microsoft_ads', 'path': 'not_null_microsoft_ads__ad_group_report_ad_group_id.sql', 'original_file_path': 'models\\microsoft_ads.yml', 'unique_id': 'test.microsoft_ads.not_null_microsoft_ads__ad_group_report_ad_group_id.1974ec5ab9', 'fqn': ['microsoft_ads', 'not_null_microsoft_ads__ad_group_report_ad_group_id'], 'alias': 'not_null_microsoft_ads__ad_group_report_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.2531123, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['microsoft_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.microsoft_ads__ad_group_report'}, 'test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__ad_group_report_date_day__account_id__campaign_id__ad_group_id__device_os__device_type__network__currency_code.87353ef6b3': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'campaign_id', 'ad_group_id', 'device_os', 'device_type', 'network', 'currency_code'], 'model': "{{ get_where_subquery(ref('microsoft_ads__ad_group_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_microsoft_ads__ad_group_report_date_day__account_id__campaign_id__ad_group_id__device_os__device_type__network__currency_code', 'resource_type': 'test', 'package_name': 'microsoft_ads', 'path': 'dbt_utils_unique_combination_o_40dfe26196c4c6b90b8b7492df4c01d6.sql', 'original_file_path': 'models\\microsoft_ads.yml', 'unique_id': 'test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__ad_group_report_date_day__account_id__campaign_id__ad_group_id__device_os__device_type__network__currency_code.87353ef6b3', 'fqn': ['microsoft_ads', 'dbt_utils_unique_combination_of_columns_microsoft_ads__ad_group_report_date_day__account_id__campaign_id__ad_group_id__device_os__device_type__network__currency_code'], 'alias': 'dbt_utils_unique_combination_o_40dfe26196c4c6b90b8b7492df4c01d6', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_40dfe26196c4c6b90b8b7492df4c01d6', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_40dfe26196c4c6b90b8b7492df4c01d6'}, 'created_at': 1694433486.2551122, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_40dfe26196c4c6b90b8b7492df4c01d6'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_40dfe26196c4c6b90b8b7492df4c01d6") }}', 'language': 'sql', 'refs': [['microsoft_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.microsoft_ads__ad_group_report'}, 'test.microsoft_ads.not_null_microsoft_ads__ad_report_ad_id.b089709125': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('microsoft_ads__ad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_microsoft_ads__ad_report_ad_id', 'resource_type': 'test', 'package_name': 'microsoft_ads', 'path': 'not_null_microsoft_ads__ad_report_ad_id.sql', 'original_file_path': 'models\\microsoft_ads.yml', 'unique_id': 'test.microsoft_ads.not_null_microsoft_ads__ad_report_ad_id.b089709125', 'fqn': ['microsoft_ads', 'not_null_microsoft_ads__ad_report_ad_id'], 'alias': 'not_null_microsoft_ads__ad_report_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.2640831, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['microsoft_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.microsoft_ads__ad_report'}, 'test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__ad_report_date_day__account_id__campaign_id__ad_group_id__ad_id__ad_type__device_os__device_type__network__currency_code.4b91f31686': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'campaign_id', 'ad_group_id', 'ad_id', 'ad_type', 'device_os', 'device_type', 'network', 'currency_code'], 'model': "{{ get_where_subquery(ref('microsoft_ads__ad_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_microsoft_ads__ad_report_date_day__account_id__campaign_id__ad_group_id__ad_id__ad_type__device_os__device_type__network__currency_code', 'resource_type': 'test', 'package_name': 'microsoft_ads', 'path': 'dbt_utils_unique_combination_o_77fd1448acda33bd9d2c0555648d2822.sql', 'original_file_path': 'models\\microsoft_ads.yml', 'unique_id': 'test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__ad_report_date_day__account_id__campaign_id__ad_group_id__ad_id__ad_type__device_os__device_type__network__currency_code.4b91f31686', 'fqn': ['microsoft_ads', 'dbt_utils_unique_combination_of_columns_microsoft_ads__ad_report_date_day__account_id__campaign_id__ad_group_id__ad_id__ad_type__device_os__device_type__network__currency_code'], 'alias': 'dbt_utils_unique_combination_o_77fd1448acda33bd9d2c0555648d2822', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_77fd1448acda33bd9d2c0555648d2822', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_77fd1448acda33bd9d2c0555648d2822'}, 'created_at': 1694433486.2660625, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_77fd1448acda33bd9d2c0555648d2822'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_77fd1448acda33bd9d2c0555648d2822") }}', 'language': 'sql', 'refs': [['microsoft_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.microsoft_ads__ad_report'}, 'test.microsoft_ads.not_null_microsoft_ads__campaign_report_campaign_id.67aa50e1f8': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('microsoft_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_microsoft_ads__campaign_report_campaign_id', 'resource_type': 'test', 'package_name': 'microsoft_ads', 'path': 'not_null_microsoft_ads__campaign_report_campaign_id.sql', 'original_file_path': 'models\\microsoft_ads.yml', 'unique_id': 'test.microsoft_ads.not_null_microsoft_ads__campaign_report_campaign_id.67aa50e1f8', 'fqn': ['microsoft_ads', 'not_null_microsoft_ads__campaign_report_campaign_id'], 'alias': 'not_null_microsoft_ads__campaign_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.2737348, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['microsoft_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.microsoft_ads__campaign_report'}, 'test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__campaign_report_date_day__account_id__campaign_id__device_os__device_type__network__currency_code.d7e35aaa9b': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'campaign_id', 'device_os', 'device_type', 'network', 'currency_code'], 'model': "{{ get_where_subquery(ref('microsoft_ads__campaign_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_microsoft_ads__campaign_report_date_day__account_id__campaign_id__device_os__device_type__network__currency_code', 'resource_type': 'test', 'package_name': 'microsoft_ads', 'path': 'dbt_utils_unique_combination_o_90115110f76cc54bfcc637b8965bda7a.sql', 'original_file_path': 'models\\microsoft_ads.yml', 'unique_id': 'test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__campaign_report_date_day__account_id__campaign_id__device_os__device_type__network__currency_code.d7e35aaa9b', 'fqn': ['microsoft_ads', 'dbt_utils_unique_combination_of_columns_microsoft_ads__campaign_report_date_day__account_id__campaign_id__device_os__device_type__network__currency_code'], 'alias': 'dbt_utils_unique_combination_o_90115110f76cc54bfcc637b8965bda7a', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_90115110f76cc54bfcc637b8965bda7a', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_90115110f76cc54bfcc637b8965bda7a'}, 'created_at': 1694433486.2756872, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_90115110f76cc54bfcc637b8965bda7a'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_90115110f76cc54bfcc637b8965bda7a") }}', 'language': 'sql', 'refs': [['microsoft_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.microsoft_ads__campaign_report'}, 'test.microsoft_ads.not_null_microsoft_ads__keyword_report_keyword_id.da1d648d3b': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'keyword_id', 'model': "{{ get_where_subquery(ref('microsoft_ads__keyword_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_microsoft_ads__keyword_report_keyword_id', 'resource_type': 'test', 'package_name': 'microsoft_ads', 'path': 'not_null_microsoft_ads__keyword_report_keyword_id.sql', 'original_file_path': 'models\\microsoft_ads.yml', 'unique_id': 'test.microsoft_ads.not_null_microsoft_ads__keyword_report_keyword_id.da1d648d3b', 'fqn': ['microsoft_ads', 'not_null_microsoft_ads__keyword_report_keyword_id'], 'alias': 'not_null_microsoft_ads__keyword_report_keyword_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.2821443, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['microsoft_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'keyword_id', 'file_key_name': 'models.microsoft_ads__keyword_report'}, 'test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__keyword_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__device_os__device_type__network__currency_code.9ddafdcbe9': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'campaign_id', 'ad_group_id', 'ad_id', 'keyword_id', 'device_os', 'device_type', 'network', 'currency_code'], 'model': "{{ get_where_subquery(ref('microsoft_ads__keyword_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_microsoft_ads__keyword_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__device_os__device_type__network__currency_code', 'resource_type': 'test', 'package_name': 'microsoft_ads', 'path': 'dbt_utils_unique_combination_o_44d9a6d860076a5eefdaf319891f3854.sql', 'original_file_path': 'models\\microsoft_ads.yml', 'unique_id': 'test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__keyword_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__device_os__device_type__network__currency_code.9ddafdcbe9', 'fqn': ['microsoft_ads', 'dbt_utils_unique_combination_of_columns_microsoft_ads__keyword_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__device_os__device_type__network__currency_code'], 'alias': 'dbt_utils_unique_combination_o_44d9a6d860076a5eefdaf319891f3854', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_44d9a6d860076a5eefdaf319891f3854', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_44d9a6d860076a5eefdaf319891f3854'}, 'created_at': 1694433486.2841418, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_44d9a6d860076a5eefdaf319891f3854'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_44d9a6d860076a5eefdaf319891f3854") }}', 'language': 'sql', 'refs': [['microsoft_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.microsoft_ads__keyword_report'}, 'test.microsoft_ads.not_null_microsoft_ads__search_report_search_query.fa3625d66d': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'search_query', 'model': "{{ get_where_subquery(ref('microsoft_ads__search_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_microsoft_ads__search_report_search_query', 'resource_type': 'test', 'package_name': 'microsoft_ads', 'path': 'not_null_microsoft_ads__search_report_search_query.sql', 'original_file_path': 'models\\microsoft_ads.yml', 'unique_id': 'test.microsoft_ads.not_null_microsoft_ads__search_report_search_query.fa3625d66d', 'fqn': ['microsoft_ads', 'not_null_microsoft_ads__search_report_search_query'], 'alias': 'not_null_microsoft_ads__search_report_search_query', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.2913496, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['microsoft_ads__search_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'search_query', 'file_key_name': 'models.microsoft_ads__search_report'}, 'test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__search_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__search_query__device_os__device_type__network__match_type.8b1ebd50a3': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'campaign_id', 'ad_group_id', 'ad_id', 'keyword_id', 'search_query', 'device_os', 'device_type', 'network', 'match_type'], 'model': "{{ get_where_subquery(ref('microsoft_ads__search_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_microsoft_ads__search_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__search_query__device_os__device_type__network__match_type', 'resource_type': 'test', 'package_name': 'microsoft_ads', 'path': 'dbt_utils_unique_combination_o_b73fdaf0afd1eb1f0b0e2311ce77d70d.sql', 'original_file_path': 'models\\microsoft_ads.yml', 'unique_id': 'test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__search_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__search_query__device_os__device_type__network__match_type.8b1ebd50a3', 'fqn': ['microsoft_ads', 'dbt_utils_unique_combination_of_columns_microsoft_ads__search_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__search_query__device_os__device_type__network__match_type'], 'alias': 'dbt_utils_unique_combination_o_b73fdaf0afd1eb1f0b0e2311ce77d70d', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_b73fdaf0afd1eb1f0b0e2311ce77d70d', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_b73fdaf0afd1eb1f0b0e2311ce77d70d'}, 'created_at': 1694433486.2923508, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_b73fdaf0afd1eb1f0b0e2311ce77d70d'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_b73fdaf0afd1eb1f0b0e2311ce77d70d") }}', 'language': 'sql', 'refs': [['microsoft_ads__search_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.microsoft_ads__search_report'}, 'test.microsoft_ads.not_null_microsoft_ads__url_report_base_url.c1af50307a': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'base_url', 'model': "{{ get_where_subquery(ref('microsoft_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_microsoft_ads__url_report_base_url', 'resource_type': 'test', 'package_name': 'microsoft_ads', 'path': 'not_null_microsoft_ads__url_report_base_url.sql', 'original_file_path': 'models\\microsoft_ads.yml', 'unique_id': 'test.microsoft_ads.not_null_microsoft_ads__url_report_base_url.c1af50307a', 'fqn': ['microsoft_ads', 'not_null_microsoft_ads__url_report_base_url'], 'alias': 'not_null_microsoft_ads__url_report_base_url', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True}, 'created_at': 1694433486.3009567, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(enabled=True) }}', 'language': 'sql', 'refs': [['microsoft_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'base_url', 'file_key_name': 'models.microsoft_ads__url_report'}, 'test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__url_report_date_day__account_id__campaign_id__ad_group_id__ad_id__device_os__device_type__network__currency_code.070da99eb7': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'campaign_id', 'ad_group_id', 'ad_id', 'device_os', 'device_type', 'network', 'currency_code'], 'model': "{{ get_where_subquery(ref('microsoft_ads__url_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_microsoft_ads__url_report_date_day__account_id__campaign_id__ad_group_id__ad_id__device_os__device_type__network__currency_code', 'resource_type': 'test', 'package_name': 'microsoft_ads', 'path': 'dbt_utils_unique_combination_o_64edf902e79ea377b0f44b91e375b432.sql', 'original_file_path': 'models\\microsoft_ads.yml', 'unique_id': 'test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__url_report_date_day__account_id__campaign_id__ad_group_id__ad_id__device_os__device_type__network__currency_code.070da99eb7', 'fqn': ['microsoft_ads', 'dbt_utils_unique_combination_of_columns_microsoft_ads__url_report_date_day__account_id__campaign_id__ad_group_id__ad_id__device_os__device_type__network__currency_code'], 'alias': 'dbt_utils_unique_combination_o_64edf902e79ea377b0f44b91e375b432', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_64edf902e79ea377b0f44b91e375b432', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_64edf902e79ea377b0f44b91e375b432'}, 'created_at': 1694433486.3039613, 'config_call_dict': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_64edf902e79ea377b0f44b91e375b432'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(enabled=True,alias="dbt_utils_unique_combination_o_64edf902e79ea377b0f44b91e375b432") }}', 'language': 'sql', 'refs': [['microsoft_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.microsoft_ads__url_report'}, 'test.microsoft_ads_source.not_null_stg_microsoft_ads__account_history_account_id.cc273ee54e': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__account_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_microsoft_ads__account_history_account_id', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'not_null_stg_microsoft_ads__account_history_account_id.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.not_null_stg_microsoft_ads__account_history_account_id.cc273ee54e', 'fqn': ['microsoft_ads_source', 'not_null_stg_microsoft_ads__account_history_account_id'], 'alias': 'not_null_stg_microsoft_ads__account_history_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.40561, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.stg_microsoft_ads__account_history'}, 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__account_history_account_id__modified_at.5975327479': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['account_id', 'modified_at'], 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__account_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__account_history_account_id__modified_at', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'dbt_utils_unique_combination_o_11cb28b23f58e7c1362184b4fa6c2fe7.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__account_history_account_id__modified_at.5975327479', 'fqn': ['microsoft_ads_source', 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__account_history_account_id__modified_at'], 'alias': 'dbt_utils_unique_combination_o_11cb28b23f58e7c1362184b4fa6c2fe7', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_11cb28b23f58e7c1362184b4fa6c2fe7', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_11cb28b23f58e7c1362184b4fa6c2fe7'}, 'created_at': 1694433486.40718, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_11cb28b23f58e7c1362184b4fa6c2fe7'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_11cb28b23f58e7c1362184b4fa6c2fe7") }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_microsoft_ads__account_history'}, 'test.microsoft_ads_source.not_null_stg_microsoft_ads__account_daily_report_account_id.b17f45fe79': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__account_daily_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_microsoft_ads__account_daily_report_account_id', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'not_null_stg_microsoft_ads__account_daily_report_account_id.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.not_null_stg_microsoft_ads__account_daily_report_account_id.b17f45fe79', 'fqn': ['microsoft_ads_source', 'not_null_stg_microsoft_ads__account_daily_report_account_id'], 'alias': 'not_null_stg_microsoft_ads__account_daily_report_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.4116313, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__account_daily_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.stg_microsoft_ads__account_daily_report'}, 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__account_daily_report_date_day__account_id__device_os__device_type__network__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other.85ae65d69a': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'device_os', 'device_type', 'network', 'currency_code', 'ad_distribution', 'bid_match_type', 'delivered_match_type', 'top_vs_other'], 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__account_daily_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__account_daily_report_date_day__account_id__device_os__device_type__network__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'dbt_utils_unique_combination_o_cc3a3d15707b6220c07fd845626d47d3.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__account_daily_report_date_day__account_id__device_os__device_type__network__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other.85ae65d69a', 'fqn': ['microsoft_ads_source', 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__account_daily_report_date_day__account_id__device_os__device_type__network__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other'], 'alias': 'dbt_utils_unique_combination_o_cc3a3d15707b6220c07fd845626d47d3', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_cc3a3d15707b6220c07fd845626d47d3', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_cc3a3d15707b6220c07fd845626d47d3'}, 'created_at': 1694433486.4139075, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_cc3a3d15707b6220c07fd845626d47d3'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_cc3a3d15707b6220c07fd845626d47d3") }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__account_daily_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_microsoft_ads__account_daily_report'}, 'test.microsoft_ads_source.not_null_stg_microsoft_ads__ad_group_history_ad_group_id.c8353342b7': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__ad_group_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_microsoft_ads__ad_group_history_ad_group_id', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'not_null_stg_microsoft_ads__ad_group_history_ad_group_id.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.not_null_stg_microsoft_ads__ad_group_history_ad_group_id.c8353342b7', 'fqn': ['microsoft_ads_source', 'not_null_stg_microsoft_ads__ad_group_history_ad_group_id'], 'alias': 'not_null_stg_microsoft_ads__ad_group_history_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.419868, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__ad_group_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.stg_microsoft_ads__ad_group_history'}, 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_group_history_ad_group_id__modified_at.12004c9de0': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_group_id', 'modified_at'], 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__ad_group_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_group_history_ad_group_id__modified_at', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'dbt_utils_unique_combination_o_29c954196a0dc02a0d6371d1a73027bb.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_group_history_ad_group_id__modified_at.12004c9de0', 'fqn': ['microsoft_ads_source', 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_group_history_ad_group_id__modified_at'], 'alias': 'dbt_utils_unique_combination_o_29c954196a0dc02a0d6371d1a73027bb', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_29c954196a0dc02a0d6371d1a73027bb', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_29c954196a0dc02a0d6371d1a73027bb'}, 'created_at': 1694433486.4220533, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_29c954196a0dc02a0d6371d1a73027bb'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_29c954196a0dc02a0d6371d1a73027bb") }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__ad_group_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_microsoft_ads__ad_group_history'}, 'test.microsoft_ads_source.not_null_stg_microsoft_ads__ad_group_daily_report_ad_group_id.3e03e6eff7': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__ad_group_daily_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_microsoft_ads__ad_group_daily_report_ad_group_id', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'not_null_stg_microsoft_ads__ad_group_daily_report_ad_group_id.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.not_null_stg_microsoft_ads__ad_group_daily_report_ad_group_id.3e03e6eff7', 'fqn': ['microsoft_ads_source', 'not_null_stg_microsoft_ads__ad_group_daily_report_ad_group_id'], 'alias': 'not_null_stg_microsoft_ads__ad_group_daily_report_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.4253156, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__ad_group_daily_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.stg_microsoft_ads__ad_group_daily_report'}, 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_group_daily_report_date_day__account_id__campaign_id__ad_group_id__device_os__device_type__network__language__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other.8792b4adf4': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'campaign_id', 'ad_group_id', 'device_os', 'device_type', 'network', 'language', 'currency_code', 'ad_distribution', 'bid_match_type', 'delivered_match_type', 'top_vs_other'], 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__ad_group_daily_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_group_daily_report_date_day__account_id__campaign_id__ad_group_id__device_os__device_type__network__language__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'dbt_utils_unique_combination_o_3da4052d148940c4b772fa07b9cd0016.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_group_daily_report_date_day__account_id__campaign_id__ad_group_id__device_os__device_type__network__language__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other.8792b4adf4', 'fqn': ['microsoft_ads_source', 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_group_daily_report_date_day__account_id__campaign_id__ad_group_id__device_os__device_type__network__language__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other'], 'alias': 'dbt_utils_unique_combination_o_3da4052d148940c4b772fa07b9cd0016', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_3da4052d148940c4b772fa07b9cd0016', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_3da4052d148940c4b772fa07b9cd0016'}, 'created_at': 1694433486.4279761, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_3da4052d148940c4b772fa07b9cd0016'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_3da4052d148940c4b772fa07b9cd0016") }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__ad_group_daily_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_microsoft_ads__ad_group_daily_report'}, 'test.microsoft_ads_source.not_null_stg_microsoft_ads__ad_history_ad_id.6d02c26574': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__ad_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_microsoft_ads__ad_history_ad_id', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'not_null_stg_microsoft_ads__ad_history_ad_id.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.not_null_stg_microsoft_ads__ad_history_ad_id.6d02c26574', 'fqn': ['microsoft_ads_source', 'not_null_stg_microsoft_ads__ad_history_ad_id'], 'alias': 'not_null_stg_microsoft_ads__ad_history_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.435636, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.stg_microsoft_ads__ad_history'}, 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_history_ad_id__modified_at.1f05b4ee6f': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'modified_at'], 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__ad_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_history_ad_id__modified_at', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'dbt_utils_unique_combination_o_dccf83ffe0fa59cf437b9dc8e3b754cb.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_history_ad_id__modified_at.1f05b4ee6f', 'fqn': ['microsoft_ads_source', 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_history_ad_id__modified_at'], 'alias': 'dbt_utils_unique_combination_o_dccf83ffe0fa59cf437b9dc8e3b754cb', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_dccf83ffe0fa59cf437b9dc8e3b754cb', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_dccf83ffe0fa59cf437b9dc8e3b754cb'}, 'created_at': 1694433486.4372108, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_dccf83ffe0fa59cf437b9dc8e3b754cb'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_dccf83ffe0fa59cf437b9dc8e3b754cb") }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_microsoft_ads__ad_history'}, 'test.microsoft_ads_source.not_null_stg_microsoft_ads__ad_daily_report_ad_id.1ed6689aa8': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__ad_daily_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_microsoft_ads__ad_daily_report_ad_id', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'not_null_stg_microsoft_ads__ad_daily_report_ad_id.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.not_null_stg_microsoft_ads__ad_daily_report_ad_id.1ed6689aa8', 'fqn': ['microsoft_ads_source', 'not_null_stg_microsoft_ads__ad_daily_report_ad_id'], 'alias': 'not_null_stg_microsoft_ads__ad_daily_report_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.4413047, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__ad_daily_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.stg_microsoft_ads__ad_daily_report'}, 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_daily_report_date_day__account_id__campaign_id__ad_group_id__ad_id__device_os__device_type__network__language__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other.80e8146841': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'campaign_id', 'ad_group_id', 'ad_id', 'device_os', 'device_type', 'network', 'language', 'currency_code', 'ad_distribution', 'bid_match_type', 'delivered_match_type', 'top_vs_other'], 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__ad_daily_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_daily_report_date_day__account_id__campaign_id__ad_group_id__ad_id__device_os__device_type__network__language__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'dbt_utils_unique_combination_o_29e31bfeb4535a5db2d2c94e28201269.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_daily_report_date_day__account_id__campaign_id__ad_group_id__ad_id__device_os__device_type__network__language__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other.80e8146841', 'fqn': ['microsoft_ads_source', 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_daily_report_date_day__account_id__campaign_id__ad_group_id__ad_id__device_os__device_type__network__language__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other'], 'alias': 'dbt_utils_unique_combination_o_29e31bfeb4535a5db2d2c94e28201269', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_29e31bfeb4535a5db2d2c94e28201269', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_29e31bfeb4535a5db2d2c94e28201269'}, 'created_at': 1694433486.443375, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_29e31bfeb4535a5db2d2c94e28201269'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_29e31bfeb4535a5db2d2c94e28201269") }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__ad_daily_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_microsoft_ads__ad_daily_report'}, 'test.microsoft_ads_source.not_null_stg_microsoft_ads__campaign_history_campaign_id.ee080a2122': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__campaign_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_microsoft_ads__campaign_history_campaign_id', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'not_null_stg_microsoft_ads__campaign_history_campaign_id.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.not_null_stg_microsoft_ads__campaign_history_campaign_id.ee080a2122', 'fqn': ['microsoft_ads_source', 'not_null_stg_microsoft_ads__campaign_history_campaign_id'], 'alias': 'not_null_stg_microsoft_ads__campaign_history_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.4511654, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_microsoft_ads__campaign_history'}, 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__campaign_history_campaign_id__modified_at.d2a9279427': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', 'modified_at'], 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__campaign_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__campaign_history_campaign_id__modified_at', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'dbt_utils_unique_combination_o_9884c7b093c29b10bef342a8424fc7e0.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__campaign_history_campaign_id__modified_at.d2a9279427', 'fqn': ['microsoft_ads_source', 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__campaign_history_campaign_id__modified_at'], 'alias': 'dbt_utils_unique_combination_o_9884c7b093c29b10bef342a8424fc7e0', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_9884c7b093c29b10bef342a8424fc7e0', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_9884c7b093c29b10bef342a8424fc7e0'}, 'created_at': 1694433486.4521606, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_9884c7b093c29b10bef342a8424fc7e0'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_9884c7b093c29b10bef342a8424fc7e0") }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_microsoft_ads__campaign_history'}, 'test.microsoft_ads_source.not_null_stg_microsoft_ads__campaign_daily_report_campaign_id.8ac0418e84': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__campaign_daily_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_microsoft_ads__campaign_daily_report_campaign_id', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'not_null_stg_microsoft_ads__campaign_daily_report_campaign_id.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.not_null_stg_microsoft_ads__campaign_daily_report_campaign_id.8ac0418e84', 'fqn': ['microsoft_ads_source', 'not_null_stg_microsoft_ads__campaign_daily_report_campaign_id'], 'alias': 'not_null_stg_microsoft_ads__campaign_daily_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.4571266, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__campaign_daily_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_microsoft_ads__campaign_daily_report'}, 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__campaign_daily_report_date_day__account_id__campaign_id__device_os__device_type__network__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other__budget_association_status.6f2312e762': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'campaign_id', 'device_os', 'device_type', 'network', 'currency_code', 'ad_distribution', 'bid_match_type', 'delivered_match_type', 'top_vs_other', 'budget_association_status'], 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__campaign_daily_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__campaign_daily_report_date_day__account_id__campaign_id__device_os__device_type__network__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other__budget_association_status', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'dbt_utils_unique_combination_o_3d58d273ca86ec068f90d76d9e472d27.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__campaign_daily_report_date_day__account_id__campaign_id__device_os__device_type__network__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other__budget_association_status.6f2312e762', 'fqn': ['microsoft_ads_source', 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__campaign_daily_report_date_day__account_id__campaign_id__device_os__device_type__network__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other__budget_association_status'], 'alias': 'dbt_utils_unique_combination_o_3d58d273ca86ec068f90d76d9e472d27', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_3d58d273ca86ec068f90d76d9e472d27', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_3d58d273ca86ec068f90d76d9e472d27'}, 'created_at': 1694433486.4592006, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_3d58d273ca86ec068f90d76d9e472d27'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_3d58d273ca86ec068f90d76d9e472d27") }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__campaign_daily_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_microsoft_ads__campaign_daily_report'}, 'test.microsoft_ads_source.not_null_stg_microsoft_ads__keyword_history_keyword_id.19164a6209': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'keyword_id', 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__keyword_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_microsoft_ads__keyword_history_keyword_id', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'not_null_stg_microsoft_ads__keyword_history_keyword_id.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.not_null_stg_microsoft_ads__keyword_history_keyword_id.19164a6209', 'fqn': ['microsoft_ads_source', 'not_null_stg_microsoft_ads__keyword_history_keyword_id'], 'alias': 'not_null_stg_microsoft_ads__keyword_history_keyword_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.4662035, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__keyword_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'keyword_id', 'file_key_name': 'models.stg_microsoft_ads__keyword_history'}, 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__keyword_history_keyword_id__modified_at.e1c525286c': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['keyword_id', 'modified_at'], 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__keyword_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__keyword_history_keyword_id__modified_at', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'dbt_utils_unique_combination_o_92d3a0a582798627a8df5ec246b5ec67.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__keyword_history_keyword_id__modified_at.e1c525286c', 'fqn': ['microsoft_ads_source', 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__keyword_history_keyword_id__modified_at'], 'alias': 'dbt_utils_unique_combination_o_92d3a0a582798627a8df5ec246b5ec67', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_92d3a0a582798627a8df5ec246b5ec67', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_92d3a0a582798627a8df5ec246b5ec67'}, 'created_at': 1694433486.467136, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_92d3a0a582798627a8df5ec246b5ec67'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_92d3a0a582798627a8df5ec246b5ec67") }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__keyword_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_microsoft_ads__keyword_history'}, 'test.microsoft_ads_source.not_null_stg_microsoft_ads__keyword_daily_report_keyword_id.e16b8c5047': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'keyword_id', 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__keyword_daily_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_microsoft_ads__keyword_daily_report_keyword_id', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'not_null_stg_microsoft_ads__keyword_daily_report_keyword_id.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.not_null_stg_microsoft_ads__keyword_daily_report_keyword_id.e16b8c5047', 'fqn': ['microsoft_ads_source', 'not_null_stg_microsoft_ads__keyword_daily_report_keyword_id'], 'alias': 'not_null_stg_microsoft_ads__keyword_daily_report_keyword_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.472392, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__keyword_daily_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'keyword_id', 'file_key_name': 'models.stg_microsoft_ads__keyword_daily_report'}, 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__keyword_daily_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__device_os__device_type__network__language__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other.c6f46d202a': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'campaign_id', 'ad_group_id', 'ad_id', 'keyword_id', 'device_os', 'device_type', 'network', 'language', 'currency_code', 'ad_distribution', 'bid_match_type', 'delivered_match_type', 'top_vs_other'], 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__keyword_daily_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__keyword_daily_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__device_os__device_type__network__language__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'dbt_utils_unique_combination_o_9a7282cfedb49cdf2e4d14422bce0ed7.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__keyword_daily_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__device_os__device_type__network__language__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other.c6f46d202a', 'fqn': ['microsoft_ads_source', 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__keyword_daily_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__device_os__device_type__network__language__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other'], 'alias': 'dbt_utils_unique_combination_o_9a7282cfedb49cdf2e4d14422bce0ed7', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_9a7282cfedb49cdf2e4d14422bce0ed7', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_9a7282cfedb49cdf2e4d14422bce0ed7'}, 'created_at': 1694433486.4743545, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_9a7282cfedb49cdf2e4d14422bce0ed7'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_9a7282cfedb49cdf2e4d14422bce0ed7") }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__keyword_daily_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_microsoft_ads__keyword_daily_report'}, 'test.microsoft_ads_source.not_null_stg_microsoft_ads__search_daily_report_search_query.57f687adcc': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'search_query', 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__search_daily_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_microsoft_ads__search_daily_report_search_query', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'not_null_stg_microsoft_ads__search_daily_report_search_query.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.not_null_stg_microsoft_ads__search_daily_report_search_query.57f687adcc', 'fqn': ['microsoft_ads_source', 'not_null_stg_microsoft_ads__search_daily_report_search_query'], 'alias': 'not_null_stg_microsoft_ads__search_daily_report_search_query', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.4817307, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__search_daily_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'search_query', 'file_key_name': 'models.stg_microsoft_ads__search_daily_report'}, 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__search_daily_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__search_query__device_os__device_type__network__language__bid_match_type__delivered_match_type__top_vs_other.03cf031d0c': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'campaign_id', 'ad_group_id', 'ad_id', 'keyword_id', 'search_query', 'device_os', 'device_type', 'network', 'language', 'bid_match_type', 'delivered_match_type', 'top_vs_other'], 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__search_daily_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__search_daily_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__search_query__device_os__device_type__network__language__bid_match_type__delivered_match_type__top_vs_other', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'dbt_utils_unique_combination_o_b05df3e2693998bbea08961dfab31379.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__search_daily_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__search_query__device_os__device_type__network__language__bid_match_type__delivered_match_type__top_vs_other.03cf031d0c', 'fqn': ['microsoft_ads_source', 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__search_daily_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__search_query__device_os__device_type__network__language__bid_match_type__delivered_match_type__top_vs_other'], 'alias': 'dbt_utils_unique_combination_o_b05df3e2693998bbea08961dfab31379', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_b05df3e2693998bbea08961dfab31379', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_b05df3e2693998bbea08961dfab31379'}, 'created_at': 1694433486.4838107, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_b05df3e2693998bbea08961dfab31379'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_b05df3e2693998bbea08961dfab31379") }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__search_daily_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_microsoft_ads__search_daily_report'}, 'test.pinterest.not_null_pinterest_ads__url_report_date_day.b09048037e': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('pinterest_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_pinterest_ads__url_report_date_day', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'not_null_pinterest_ads__url_report_date_day.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.not_null_pinterest_ads__url_report_date_day.b09048037e', 'fqn': ['pinterest', 'not_null_pinterest_ads__url_report_date_day'], 'alias': 'not_null_pinterest_ads__url_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.5241444, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['pinterest_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.pinterest_ads__url_report'}, 'test.pinterest.not_null_pinterest_ads__url_report_destination_url.0bb7f30502': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'destination_url', 'model': "{{ get_where_subquery(ref('pinterest_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_pinterest_ads__url_report_destination_url', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'not_null_pinterest_ads__url_report_destination_url.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.not_null_pinterest_ads__url_report_destination_url.0bb7f30502', 'fqn': ['pinterest', 'not_null_pinterest_ads__url_report_destination_url'], 'alias': 'not_null_pinterest_ads__url_report_destination_url', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True}, 'created_at': 1694433486.5261438, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(enabled=True) }}', 'language': 'sql', 'refs': [['pinterest_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'destination_url', 'file_key_name': 'models.pinterest_ads__url_report'}, 'test.pinterest.not_null_pinterest_ads__url_report_pin_promotion_id.0da711ad6a': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'pin_promotion_id', 'model': "{{ get_where_subquery(ref('pinterest_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_pinterest_ads__url_report_pin_promotion_id', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'not_null_pinterest_ads__url_report_pin_promotion_id.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.not_null_pinterest_ads__url_report_pin_promotion_id.0da711ad6a', 'fqn': ['pinterest', 'not_null_pinterest_ads__url_report_pin_promotion_id'], 'alias': 'not_null_pinterest_ads__url_report_pin_promotion_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.5286567, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['pinterest_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'pin_promotion_id', 'file_key_name': 'models.pinterest_ads__url_report'}, 'test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__url_report_pin_promotion_id__ad_group_id__campaign_id__advertiser_id__date_day.bd87b032c8': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['pin_promotion_id', 'ad_group_id', 'campaign_id', 'advertiser_id', 'date_day'], 'model': "{{ get_where_subquery(ref('pinterest_ads__url_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_pinterest_ads__url_report_pin_promotion_id__ad_group_id__campaign_id__advertiser_id__date_day', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'dbt_utils_unique_combination_o_21473120856be0adc6b82e83f018c3a4.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__url_report_pin_promotion_id__ad_group_id__campaign_id__advertiser_id__date_day.bd87b032c8', 'fqn': ['pinterest', 'dbt_utils_unique_combination_of_columns_pinterest_ads__url_report_pin_promotion_id__ad_group_id__campaign_id__advertiser_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_21473120856be0adc6b82e83f018c3a4', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_21473120856be0adc6b82e83f018c3a4', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_21473120856be0adc6b82e83f018c3a4'}, 'created_at': 1694433486.530656, 'config_call_dict': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_21473120856be0adc6b82e83f018c3a4'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(enabled=True,alias="dbt_utils_unique_combination_o_21473120856be0adc6b82e83f018c3a4") }}', 'language': 'sql', 'refs': [['pinterest_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.pinterest_ads__url_report'}, 'test.pinterest.not_null_pinterest_ads__ad_group_report_date_day.ed7c27b8a7': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('pinterest_ads__ad_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_pinterest_ads__ad_group_report_date_day', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'not_null_pinterest_ads__ad_group_report_date_day.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.not_null_pinterest_ads__ad_group_report_date_day.ed7c27b8a7', 'fqn': ['pinterest', 'not_null_pinterest_ads__ad_group_report_date_day'], 'alias': 'not_null_pinterest_ads__ad_group_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.5357263, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['pinterest_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.pinterest_ads__ad_group_report'}, 'test.pinterest.not_null_pinterest_ads__ad_group_report_ad_group_id.134f9ac6c2': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('pinterest_ads__ad_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_pinterest_ads__ad_group_report_ad_group_id', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'not_null_pinterest_ads__ad_group_report_ad_group_id.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.not_null_pinterest_ads__ad_group_report_ad_group_id.134f9ac6c2', 'fqn': ['pinterest', 'not_null_pinterest_ads__ad_group_report_ad_group_id'], 'alias': 'not_null_pinterest_ads__ad_group_report_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.537433, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['pinterest_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.pinterest_ads__ad_group_report'}, 'test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__ad_group_report_ad_group_id__advertiser_id__campaign_id__date_day.d207b7d69d': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_group_id', 'advertiser_id', 'campaign_id', 'date_day'], 'model': "{{ get_where_subquery(ref('pinterest_ads__ad_group_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_pinterest_ads__ad_group_report_ad_group_id__advertiser_id__campaign_id__date_day', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'dbt_utils_unique_combination_o_54d3e3ee8528adecb1b6bc6aef476506.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__ad_group_report_ad_group_id__advertiser_id__campaign_id__date_day.d207b7d69d', 'fqn': ['pinterest', 'dbt_utils_unique_combination_of_columns_pinterest_ads__ad_group_report_ad_group_id__advertiser_id__campaign_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_54d3e3ee8528adecb1b6bc6aef476506', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_54d3e3ee8528adecb1b6bc6aef476506', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_54d3e3ee8528adecb1b6bc6aef476506'}, 'created_at': 1694433486.539504, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_54d3e3ee8528adecb1b6bc6aef476506'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_54d3e3ee8528adecb1b6bc6aef476506") }}', 'language': 'sql', 'refs': [['pinterest_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.pinterest_ads__ad_group_report'}, 'test.pinterest.not_null_pinterest_ads__campaign_report_date_day.10ac8272bf': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('pinterest_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_pinterest_ads__campaign_report_date_day', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'not_null_pinterest_ads__campaign_report_date_day.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.not_null_pinterest_ads__campaign_report_date_day.10ac8272bf', 'fqn': ['pinterest', 'not_null_pinterest_ads__campaign_report_date_day'], 'alias': 'not_null_pinterest_ads__campaign_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.5445051, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['pinterest_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.pinterest_ads__campaign_report'}, 'test.pinterest.not_null_pinterest_ads__campaign_report_campaign_id.8001ea60f2': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('pinterest_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_pinterest_ads__campaign_report_campaign_id', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'not_null_pinterest_ads__campaign_report_campaign_id.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.not_null_pinterest_ads__campaign_report_campaign_id.8001ea60f2', 'fqn': ['pinterest', 'not_null_pinterest_ads__campaign_report_campaign_id'], 'alias': 'not_null_pinterest_ads__campaign_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.5455067, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['pinterest_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.pinterest_ads__campaign_report'}, 'test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__campaign_report_campaign_id__advertiser_id__date_day.b5752d5279': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', 'advertiser_id', 'date_day'], 'model': "{{ get_where_subquery(ref('pinterest_ads__campaign_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_pinterest_ads__campaign_report_campaign_id__advertiser_id__date_day', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'dbt_utils_unique_combination_o_87addc13a4108165c61e6604961b7334.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__campaign_report_campaign_id__advertiser_id__date_day.b5752d5279', 'fqn': ['pinterest', 'dbt_utils_unique_combination_of_columns_pinterest_ads__campaign_report_campaign_id__advertiser_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_87addc13a4108165c61e6604961b7334', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_87addc13a4108165c61e6604961b7334', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_87addc13a4108165c61e6604961b7334'}, 'created_at': 1694433486.5471916, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_87addc13a4108165c61e6604961b7334'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_87addc13a4108165c61e6604961b7334") }}', 'language': 'sql', 'refs': [['pinterest_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.pinterest_ads__campaign_report'}, 'test.pinterest.not_null_pinterest_ads__advertiser_report_date_day.aedeceeeca': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('pinterest_ads__advertiser_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_pinterest_ads__advertiser_report_date_day', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'not_null_pinterest_ads__advertiser_report_date_day.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.not_null_pinterest_ads__advertiser_report_date_day.aedeceeeca', 'fqn': ['pinterest', 'not_null_pinterest_ads__advertiser_report_date_day'], 'alias': 'not_null_pinterest_ads__advertiser_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.5522637, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['pinterest_ads__advertiser_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.pinterest_ads__advertiser_report'}, 'test.pinterest.not_null_pinterest_ads__advertiser_report_advertiser_id.13380f0672': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'advertiser_id', 'model': "{{ get_where_subquery(ref('pinterest_ads__advertiser_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_pinterest_ads__advertiser_report_advertiser_id', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'not_null_pinterest_ads__advertiser_report_advertiser_id.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.not_null_pinterest_ads__advertiser_report_advertiser_id.13380f0672', 'fqn': ['pinterest', 'not_null_pinterest_ads__advertiser_report_advertiser_id'], 'alias': 'not_null_pinterest_ads__advertiser_report_advertiser_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.5542634, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['pinterest_ads__advertiser_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'advertiser_id', 'file_key_name': 'models.pinterest_ads__advertiser_report'}, 'test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__advertiser_report_advertiser_id__date_day.990badbc11': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['advertiser_id', 'date_day'], 'model': "{{ get_where_subquery(ref('pinterest_ads__advertiser_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_pinterest_ads__advertiser_report_advertiser_id__date_day', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'dbt_utils_unique_combination_o_262423074d5ab98a7cfbb922eecfa81f.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__advertiser_report_advertiser_id__date_day.990badbc11', 'fqn': ['pinterest', 'dbt_utils_unique_combination_of_columns_pinterest_ads__advertiser_report_advertiser_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_262423074d5ab98a7cfbb922eecfa81f', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_262423074d5ab98a7cfbb922eecfa81f', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_262423074d5ab98a7cfbb922eecfa81f'}, 'created_at': 1694433486.5552645, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_262423074d5ab98a7cfbb922eecfa81f'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_262423074d5ab98a7cfbb922eecfa81f") }}', 'language': 'sql', 'refs': [['pinterest_ads__advertiser_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.pinterest_ads__advertiser_report'}, 'test.pinterest.not_null_pinterest_ads__keyword_report_date_day.23130e9fba': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('pinterest_ads__keyword_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_pinterest_ads__keyword_report_date_day', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'not_null_pinterest_ads__keyword_report_date_day.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.not_null_pinterest_ads__keyword_report_date_day.23130e9fba', 'fqn': ['pinterest', 'not_null_pinterest_ads__keyword_report_date_day'], 'alias': 'not_null_pinterest_ads__keyword_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.5602422, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['pinterest_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.pinterest_ads__keyword_report'}, 'test.pinterest.not_null_pinterest_ads__keyword_report_keyword_id.0d73460198': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'keyword_id', 'model': "{{ get_where_subquery(ref('pinterest_ads__keyword_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_pinterest_ads__keyword_report_keyword_id', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'not_null_pinterest_ads__keyword_report_keyword_id.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.not_null_pinterest_ads__keyword_report_keyword_id.0d73460198', 'fqn': ['pinterest', 'not_null_pinterest_ads__keyword_report_keyword_id'], 'alias': 'not_null_pinterest_ads__keyword_report_keyword_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.561249, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['pinterest_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'keyword_id', 'file_key_name': 'models.pinterest_ads__keyword_report'}, 'test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__keyword_report_keyword_id__ad_group_id__campaign_id__advertiser_id__date_day.b7517b039d': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['keyword_id', 'ad_group_id', 'campaign_id', 'advertiser_id', 'date_day'], 'model': "{{ get_where_subquery(ref('pinterest_ads__keyword_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_pinterest_ads__keyword_report_keyword_id__ad_group_id__campaign_id__advertiser_id__date_day', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'dbt_utils_unique_combination_o_5ffb6b9c10d3e5615e425ea53e66643f.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__keyword_report_keyword_id__ad_group_id__campaign_id__advertiser_id__date_day.b7517b039d', 'fqn': ['pinterest', 'dbt_utils_unique_combination_of_columns_pinterest_ads__keyword_report_keyword_id__ad_group_id__campaign_id__advertiser_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_5ffb6b9c10d3e5615e425ea53e66643f', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_5ffb6b9c10d3e5615e425ea53e66643f', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_5ffb6b9c10d3e5615e425ea53e66643f'}, 'created_at': 1694433486.563254, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_5ffb6b9c10d3e5615e425ea53e66643f'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_5ffb6b9c10d3e5615e425ea53e66643f") }}', 'language': 'sql', 'refs': [['pinterest_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.pinterest_ads__keyword_report'}, 'test.pinterest.not_null_pinterest_ads__pin_promotion_report_date_day.3128d28cfd': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('pinterest_ads__pin_promotion_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_pinterest_ads__pin_promotion_report_date_day', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'not_null_pinterest_ads__pin_promotion_report_date_day.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.not_null_pinterest_ads__pin_promotion_report_date_day.3128d28cfd', 'fqn': ['pinterest', 'not_null_pinterest_ads__pin_promotion_report_date_day'], 'alias': 'not_null_pinterest_ads__pin_promotion_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.5694134, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['pinterest_ads__pin_promotion_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.pinterest_ads__pin_promotion_report'}, 'test.pinterest.not_null_pinterest_ads__pin_promotion_report_pin_promotion_id.2540e0a561': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'pin_promotion_id', 'model': "{{ get_where_subquery(ref('pinterest_ads__pin_promotion_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_pinterest_ads__pin_promotion_report_pin_promotion_id', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'not_null_pinterest_ads__pin_promotion_report_pin_promotion_id.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.not_null_pinterest_ads__pin_promotion_report_pin_promotion_id.2540e0a561', 'fqn': ['pinterest', 'not_null_pinterest_ads__pin_promotion_report_pin_promotion_id'], 'alias': 'not_null_pinterest_ads__pin_promotion_report_pin_promotion_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.57083, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['pinterest_ads__pin_promotion_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'pin_promotion_id', 'file_key_name': 'models.pinterest_ads__pin_promotion_report'}, 'test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__pin_promotion_report_pin_promotion_id__ad_group_id__campaign_id__advertiser_id__date_day.1db3ffb1b3': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['pin_promotion_id', 'ad_group_id', 'campaign_id', 'advertiser_id', 'date_day'], 'model': "{{ get_where_subquery(ref('pinterest_ads__pin_promotion_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_pinterest_ads__pin_promotion_report_pin_promotion_id__ad_group_id__campaign_id__advertiser_id__date_day', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'dbt_utils_unique_combination_o_2f4efa18af7508110970522dca80a52c.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__pin_promotion_report_pin_promotion_id__ad_group_id__campaign_id__advertiser_id__date_day.1db3ffb1b3', 'fqn': ['pinterest', 'dbt_utils_unique_combination_of_columns_pinterest_ads__pin_promotion_report_pin_promotion_id__ad_group_id__campaign_id__advertiser_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_2f4efa18af7508110970522dca80a52c', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_2f4efa18af7508110970522dca80a52c', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_2f4efa18af7508110970522dca80a52c'}, 'created_at': 1694433486.572347, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_2f4efa18af7508110970522dca80a52c'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_2f4efa18af7508110970522dca80a52c") }}', 'language': 'sql', 'refs': [['pinterest_ads__pin_promotion_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.pinterest_ads__pin_promotion_report'}, 'test.pinterest_source.not_null_stg_pinterest_ads__ad_group_history_ad_group_id.220c6220be': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__ad_group_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_pinterest_ads__ad_group_history_ad_group_id', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'not_null_stg_pinterest_ads__ad_group_history_ad_group_id.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.not_null_stg_pinterest_ads__ad_group_history_ad_group_id.220c6220be', 'fqn': ['pinterest_source', 'not_null_stg_pinterest_ads__ad_group_history_ad_group_id'], 'alias': 'not_null_stg_pinterest_ads__ad_group_history_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.72025, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__ad_group_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.stg_pinterest_ads__ad_group_history'}, 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__ad_group_history_ad_group_id___fivetran_synced.1132e1f339': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_group_id', '_fivetran_synced'], 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__ad_group_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__ad_group_history_ad_group_id___fivetran_synced', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'dbt_utils_unique_combination_o_14ec492421aa290adbd40aba9f38efa7.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__ad_group_history_ad_group_id___fivetran_synced.1132e1f339', 'fqn': ['pinterest_source', 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__ad_group_history_ad_group_id___fivetran_synced'], 'alias': 'dbt_utils_unique_combination_o_14ec492421aa290adbd40aba9f38efa7', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_14ec492421aa290adbd40aba9f38efa7', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_14ec492421aa290adbd40aba9f38efa7'}, 'created_at': 1694433486.7222602, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_14ec492421aa290adbd40aba9f38efa7'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_14ec492421aa290adbd40aba9f38efa7") }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__ad_group_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_pinterest_ads__ad_group_history'}, 'test.pinterest_source.not_null_stg_pinterest_ads__campaign_history_campaign_id.60cb10d341': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__campaign_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_pinterest_ads__campaign_history_campaign_id', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'not_null_stg_pinterest_ads__campaign_history_campaign_id.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.not_null_stg_pinterest_ads__campaign_history_campaign_id.60cb10d341', 'fqn': ['pinterest_source', 'not_null_stg_pinterest_ads__campaign_history_campaign_id'], 'alias': 'not_null_stg_pinterest_ads__campaign_history_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.7271793, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_pinterest_ads__campaign_history'}, 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__campaign_history_campaign_id___fivetran_synced.eff7196b87': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', '_fivetran_synced'], 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__campaign_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__campaign_history_campaign_id___fivetran_synced', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'dbt_utils_unique_combination_o_0f71f27ed6b0ce2d4940b4361559871b.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__campaign_history_campaign_id___fivetran_synced.eff7196b87', 'fqn': ['pinterest_source', 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__campaign_history_campaign_id___fivetran_synced'], 'alias': 'dbt_utils_unique_combination_o_0f71f27ed6b0ce2d4940b4361559871b', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_0f71f27ed6b0ce2d4940b4361559871b', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_0f71f27ed6b0ce2d4940b4361559871b'}, 'created_at': 1694433486.7277694, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_0f71f27ed6b0ce2d4940b4361559871b'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_0f71f27ed6b0ce2d4940b4361559871b") }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_pinterest_ads__campaign_history'}, 'test.pinterest_source.not_null_stg_pinterest_ads__pin_promotion_history_pin_promotion_id.171995cd34': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'pin_promotion_id', 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__pin_promotion_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_pinterest_ads__pin_promotion_history_pin_promotion_id', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'not_null_stg_pinterest_ads__pi_5cf03dfc3d2615f9d68ae62d55aa2b8f.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.not_null_stg_pinterest_ads__pin_promotion_history_pin_promotion_id.171995cd34', 'fqn': ['pinterest_source', 'not_null_stg_pinterest_ads__pin_promotion_history_pin_promotion_id'], 'alias': 'not_null_stg_pinterest_ads__pi_5cf03dfc3d2615f9d68ae62d55aa2b8f', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'not_null_stg_pinterest_ads__pi_5cf03dfc3d2615f9d68ae62d55aa2b8f', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'not_null_stg_pinterest_ads__pi_5cf03dfc3d2615f9d68ae62d55aa2b8f'}, 'created_at': 1694433486.7328541, 'config_call_dict': {'alias': 'not_null_stg_pinterest_ads__pi_5cf03dfc3d2615f9d68ae62d55aa2b8f'}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias="not_null_stg_pinterest_ads__pi_5cf03dfc3d2615f9d68ae62d55aa2b8f") }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__pin_promotion_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'pin_promotion_id', 'file_key_name': 'models.stg_pinterest_ads__pin_promotion_history'}, 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__pin_promotion_history__fivetran_synced__pin_promotion_id.8e9ab31ea9': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['_fivetran_synced', 'pin_promotion_id'], 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__pin_promotion_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__pin_promotion_history__fivetran_synced__pin_promotion_id', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'dbt_utils_unique_combination_o_e0501de9c3316348957b42725bcba175.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__pin_promotion_history__fivetran_synced__pin_promotion_id.8e9ab31ea9', 'fqn': ['pinterest_source', 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__pin_promotion_history__fivetran_synced__pin_promotion_id'], 'alias': 'dbt_utils_unique_combination_o_e0501de9c3316348957b42725bcba175', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_e0501de9c3316348957b42725bcba175', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_e0501de9c3316348957b42725bcba175'}, 'created_at': 1694433486.7338562, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_e0501de9c3316348957b42725bcba175'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_e0501de9c3316348957b42725bcba175") }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__pin_promotion_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_pinterest_ads__pin_promotion_history'}, 'test.pinterest_source.not_null_stg_pinterest_ads__pin_promotion_report_date_day.ed272212a1': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__pin_promotion_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_pinterest_ads__pin_promotion_report_date_day', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'not_null_stg_pinterest_ads__pin_promotion_report_date_day.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.not_null_stg_pinterest_ads__pin_promotion_report_date_day.ed272212a1', 'fqn': ['pinterest_source', 'not_null_stg_pinterest_ads__pin_promotion_report_date_day'], 'alias': 'not_null_stg_pinterest_ads__pin_promotion_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.7382202, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__pin_promotion_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_pinterest_ads__pin_promotion_report'}, 'test.pinterest_source.not_null_stg_pinterest_ads__pin_promotion_report_pin_promotion_id.9c3c9f71ab': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'pin_promotion_id', 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__pin_promotion_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_pinterest_ads__pin_promotion_report_pin_promotion_id', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'not_null_stg_pinterest_ads__pi_d0985f4b7b2bc6d5ec7f384cc03d6f4b.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.not_null_stg_pinterest_ads__pin_promotion_report_pin_promotion_id.9c3c9f71ab', 'fqn': ['pinterest_source', 'not_null_stg_pinterest_ads__pin_promotion_report_pin_promotion_id'], 'alias': 'not_null_stg_pinterest_ads__pi_d0985f4b7b2bc6d5ec7f384cc03d6f4b', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'not_null_stg_pinterest_ads__pi_d0985f4b7b2bc6d5ec7f384cc03d6f4b', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'not_null_stg_pinterest_ads__pi_d0985f4b7b2bc6d5ec7f384cc03d6f4b'}, 'created_at': 1694433486.7412648, 'config_call_dict': {'alias': 'not_null_stg_pinterest_ads__pi_d0985f4b7b2bc6d5ec7f384cc03d6f4b'}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias="not_null_stg_pinterest_ads__pi_d0985f4b7b2bc6d5ec7f384cc03d6f4b") }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__pin_promotion_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'pin_promotion_id', 'file_key_name': 'models.stg_pinterest_ads__pin_promotion_report'}, 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__pin_promotion_report_date_day__pin_promotion_id__ad_group_id__campaign_id__advertiser_id.7ea04e6024': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'pin_promotion_id', 'ad_group_id', 'campaign_id', 'advertiser_id'], 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__pin_promotion_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__pin_promotion_report_date_day__pin_promotion_id__ad_group_id__campaign_id__advertiser_id', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'dbt_utils_unique_combination_o_b200b80456022485be650ebe0c64fc19.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__pin_promotion_report_date_day__pin_promotion_id__ad_group_id__campaign_id__advertiser_id.7ea04e6024', 'fqn': ['pinterest_source', 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__pin_promotion_report_date_day__pin_promotion_id__ad_group_id__campaign_id__advertiser_id'], 'alias': 'dbt_utils_unique_combination_o_b200b80456022485be650ebe0c64fc19', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_b200b80456022485be650ebe0c64fc19', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_b200b80456022485be650ebe0c64fc19'}, 'created_at': 1694433486.7422605, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_b200b80456022485be650ebe0c64fc19'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_b200b80456022485be650ebe0c64fc19") }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__pin_promotion_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_pinterest_ads__pin_promotion_report'}, 'test.pinterest_source.not_null_stg_pinterest_ads__ad_group_report_date_day.80e8904c4c': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__ad_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_pinterest_ads__ad_group_report_date_day', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'not_null_stg_pinterest_ads__ad_group_report_date_day.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.not_null_stg_pinterest_ads__ad_group_report_date_day.80e8904c4c', 'fqn': ['pinterest_source', 'not_null_stg_pinterest_ads__ad_group_report_date_day'], 'alias': 'not_null_stg_pinterest_ads__ad_group_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.7472475, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_pinterest_ads__ad_group_report'}, 'test.pinterest_source.not_null_stg_pinterest_ads__ad_group_report_ad_group_id.bb8cf3c471': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__ad_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_pinterest_ads__ad_group_report_ad_group_id', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'not_null_stg_pinterest_ads__ad_group_report_ad_group_id.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.not_null_stg_pinterest_ads__ad_group_report_ad_group_id.bb8cf3c471', 'fqn': ['pinterest_source', 'not_null_stg_pinterest_ads__ad_group_report_ad_group_id'], 'alias': 'not_null_stg_pinterest_ads__ad_group_report_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.7485933, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.stg_pinterest_ads__ad_group_report'}, 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__ad_group_report_date_day__ad_group_id__campaign_id__advertiser_id.3800c02b0e': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'ad_group_id', 'campaign_id', 'advertiser_id'], 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__ad_group_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__ad_group_report_date_day__ad_group_id__campaign_id__advertiser_id', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'dbt_utils_unique_combination_o_e8f9cd4890106f736fbaf772885876c8.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__ad_group_report_date_day__ad_group_id__campaign_id__advertiser_id.3800c02b0e', 'fqn': ['pinterest_source', 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__ad_group_report_date_day__ad_group_id__campaign_id__advertiser_id'], 'alias': 'dbt_utils_unique_combination_o_e8f9cd4890106f736fbaf772885876c8', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_e8f9cd4890106f736fbaf772885876c8', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_e8f9cd4890106f736fbaf772885876c8'}, 'created_at': 1694433486.7506566, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_e8f9cd4890106f736fbaf772885876c8'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_e8f9cd4890106f736fbaf772885876c8") }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_pinterest_ads__ad_group_report'}, 'test.pinterest_source.not_null_stg_pinterest_ads__advertiser_history_advertiser_id.7d24f665fb': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'advertiser_id', 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__advertiser_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_pinterest_ads__advertiser_history_advertiser_id', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'not_null_stg_pinterest_ads__advertiser_history_advertiser_id.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.not_null_stg_pinterest_ads__advertiser_history_advertiser_id.7d24f665fb', 'fqn': ['pinterest_source', 'not_null_stg_pinterest_ads__advertiser_history_advertiser_id'], 'alias': 'not_null_stg_pinterest_ads__advertiser_history_advertiser_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.7555885, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__advertiser_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'advertiser_id', 'file_key_name': 'models.stg_pinterest_ads__advertiser_history'}, 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__advertiser_history_updated_at__advertiser_id.94e8f4de4b': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['updated_at', 'advertiser_id'], 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__advertiser_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__advertiser_history_updated_at__advertiser_id', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'dbt_utils_unique_combination_o_ac571a135eb9bbe6db1401c33b830733.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__advertiser_history_updated_at__advertiser_id.94e8f4de4b', 'fqn': ['pinterest_source', 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__advertiser_history_updated_at__advertiser_id'], 'alias': 'dbt_utils_unique_combination_o_ac571a135eb9bbe6db1401c33b830733', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_ac571a135eb9bbe6db1401c33b830733', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_ac571a135eb9bbe6db1401c33b830733'}, 'created_at': 1694433486.7582507, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_ac571a135eb9bbe6db1401c33b830733'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_ac571a135eb9bbe6db1401c33b830733") }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__advertiser_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_pinterest_ads__advertiser_history'}, 'test.pinterest_source.not_null_stg_pinterest_ads__advertiser_report_date_day.153bd03c95': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__advertiser_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_pinterest_ads__advertiser_report_date_day', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'not_null_stg_pinterest_ads__advertiser_report_date_day.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.not_null_stg_pinterest_ads__advertiser_report_date_day.153bd03c95', 'fqn': ['pinterest_source', 'not_null_stg_pinterest_ads__advertiser_report_date_day'], 'alias': 'not_null_stg_pinterest_ads__advertiser_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.7623332, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__advertiser_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_pinterest_ads__advertiser_report'}, 'test.pinterest_source.not_null_stg_pinterest_ads__advertiser_report_advertiser_id.1b16ed73ff': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'advertiser_id', 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__advertiser_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_pinterest_ads__advertiser_report_advertiser_id', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'not_null_stg_pinterest_ads__advertiser_report_advertiser_id.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.not_null_stg_pinterest_ads__advertiser_report_advertiser_id.1b16ed73ff', 'fqn': ['pinterest_source', 'not_null_stg_pinterest_ads__advertiser_report_advertiser_id'], 'alias': 'not_null_stg_pinterest_ads__advertiser_report_advertiser_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.7643225, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__advertiser_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'advertiser_id', 'file_key_name': 'models.stg_pinterest_ads__advertiser_report'}, 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__advertiser_report_date_day__advertiser_id.e92ce8a9c0': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'advertiser_id'], 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__advertiser_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__advertiser_report_date_day__advertiser_id', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'dbt_utils_unique_combination_o_7440d10d36ca9b555b1bb533d442c6de.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__advertiser_report_date_day__advertiser_id.e92ce8a9c0', 'fqn': ['pinterest_source', 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__advertiser_report_date_day__advertiser_id'], 'alias': 'dbt_utils_unique_combination_o_7440d10d36ca9b555b1bb533d442c6de', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_7440d10d36ca9b555b1bb533d442c6de', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_7440d10d36ca9b555b1bb533d442c6de'}, 'created_at': 1694433486.7653236, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_7440d10d36ca9b555b1bb533d442c6de'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_7440d10d36ca9b555b1bb533d442c6de") }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__advertiser_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_pinterest_ads__advertiser_report'}, 'test.pinterest_source.not_null_stg_pinterest_ads__campaign_report_date_day.7ef5fb1238': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_pinterest_ads__campaign_report_date_day', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'not_null_stg_pinterest_ads__campaign_report_date_day.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.not_null_stg_pinterest_ads__campaign_report_date_day.7ef5fb1238', 'fqn': ['pinterest_source', 'not_null_stg_pinterest_ads__campaign_report_date_day'], 'alias': 'not_null_stg_pinterest_ads__campaign_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.7709963, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_pinterest_ads__campaign_report'}, 'test.pinterest_source.not_null_stg_pinterest_ads__campaign_report_campaign_id.a287eba0fc': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_pinterest_ads__campaign_report_campaign_id', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'not_null_stg_pinterest_ads__campaign_report_campaign_id.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.not_null_stg_pinterest_ads__campaign_report_campaign_id.a287eba0fc', 'fqn': ['pinterest_source', 'not_null_stg_pinterest_ads__campaign_report_campaign_id'], 'alias': 'not_null_stg_pinterest_ads__campaign_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.771995, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_pinterest_ads__campaign_report'}, 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__campaign_report_date_day__campaign_id__advertiser_id.ff47cb8abc': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'campaign_id', 'advertiser_id'], 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__campaign_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__campaign_report_date_day__campaign_id__advertiser_id', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'dbt_utils_unique_combination_o_ea5276bb765474198ad51f22f75fccbf.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__campaign_report_date_day__campaign_id__advertiser_id.ff47cb8abc', 'fqn': ['pinterest_source', 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__campaign_report_date_day__campaign_id__advertiser_id'], 'alias': 'dbt_utils_unique_combination_o_ea5276bb765474198ad51f22f75fccbf', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_ea5276bb765474198ad51f22f75fccbf', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_ea5276bb765474198ad51f22f75fccbf'}, 'created_at': 1694433486.7740092, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_ea5276bb765474198ad51f22f75fccbf'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_ea5276bb765474198ad51f22f75fccbf") }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_pinterest_ads__campaign_report'}, 'test.pinterest_source.not_null_stg_pinterest_ads__keyword_history_keyword_id.246889377a': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'keyword_id', 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__keyword_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_pinterest_ads__keyword_history_keyword_id', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'not_null_stg_pinterest_ads__keyword_history_keyword_id.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.not_null_stg_pinterest_ads__keyword_history_keyword_id.246889377a', 'fqn': ['pinterest_source', 'not_null_stg_pinterest_ads__keyword_history_keyword_id'], 'alias': 'not_null_stg_pinterest_ads__keyword_history_keyword_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.7786937, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__keyword_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'keyword_id', 'file_key_name': 'models.stg_pinterest_ads__keyword_history'}, 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__keyword_history_keyword_id__ad_group_id___fivetran_synced.d122faa877': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['keyword_id', 'ad_group_id', '_fivetran_synced'], 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__keyword_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__keyword_history_keyword_id__ad_group_id___fivetran_synced', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'dbt_utils_unique_combination_o_ed0c009a9ff1bbb46e1ea2a210b25628.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__keyword_history_keyword_id__ad_group_id___fivetran_synced.d122faa877', 'fqn': ['pinterest_source', 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__keyword_history_keyword_id__ad_group_id___fivetran_synced'], 'alias': 'dbt_utils_unique_combination_o_ed0c009a9ff1bbb46e1ea2a210b25628', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_ed0c009a9ff1bbb46e1ea2a210b25628', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_ed0c009a9ff1bbb46e1ea2a210b25628'}, 'created_at': 1694433486.7796829, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_ed0c009a9ff1bbb46e1ea2a210b25628'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_ed0c009a9ff1bbb46e1ea2a210b25628") }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__keyword_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_pinterest_ads__keyword_history'}, 'test.pinterest_source.not_null_stg_pinterest_ads__keyword_report_date_day.9937216300': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__keyword_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_pinterest_ads__keyword_report_date_day', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'not_null_stg_pinterest_ads__keyword_report_date_day.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.not_null_stg_pinterest_ads__keyword_report_date_day.9937216300', 'fqn': ['pinterest_source', 'not_null_stg_pinterest_ads__keyword_report_date_day'], 'alias': 'not_null_stg_pinterest_ads__keyword_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.7855237, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_pinterest_ads__keyword_report'}, 'test.pinterest_source.not_null_stg_pinterest_ads__keyword_report_keyword_id.5f00679c48': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'keyword_id', 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__keyword_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_pinterest_ads__keyword_report_keyword_id', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'not_null_stg_pinterest_ads__keyword_report_keyword_id.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.not_null_stg_pinterest_ads__keyword_report_keyword_id.5f00679c48', 'fqn': ['pinterest_source', 'not_null_stg_pinterest_ads__keyword_report_keyword_id'], 'alias': 'not_null_stg_pinterest_ads__keyword_report_keyword_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.7870357, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'keyword_id', 'file_key_name': 'models.stg_pinterest_ads__keyword_report'}, 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__keyword_report_date_day__keyword_id__pin_promotion_id__ad_group_id__campaign_id__advertiser_id.9504d17df6': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'keyword_id', 'pin_promotion_id', 'ad_group_id', 'campaign_id', 'advertiser_id'], 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__keyword_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__keyword_report_date_day__keyword_id__pin_promotion_id__ad_group_id__campaign_id__advertiser_id', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'dbt_utils_unique_combination_o_b825b00d7629c7441a3daa35cf249236.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__keyword_report_date_day__keyword_id__pin_promotion_id__ad_group_id__campaign_id__advertiser_id.9504d17df6', 'fqn': ['pinterest_source', 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__keyword_report_date_day__keyword_id__pin_promotion_id__ad_group_id__campaign_id__advertiser_id'], 'alias': 'dbt_utils_unique_combination_o_b825b00d7629c7441a3daa35cf249236', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_b825b00d7629c7441a3daa35cf249236', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_b825b00d7629c7441a3daa35cf249236'}, 'created_at': 1694433486.7890537, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_b825b00d7629c7441a3daa35cf249236'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_b825b00d7629c7441a3daa35cf249236") }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_pinterest_ads__keyword_report'}, 'test.reddit_ads.not_null_reddit_ads__account_report_date_day.7b43e6cb90': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('reddit_ads__account_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_reddit_ads__account_report_date_day', 'resource_type': 'test', 'package_name': 'reddit_ads', 'path': 'not_null_reddit_ads__account_report_date_day.sql', 'original_file_path': 'models\\reddit_ads.yml', 'unique_id': 'test.reddit_ads.not_null_reddit_ads__account_report_date_day.7b43e6cb90', 'fqn': ['reddit_ads', 'not_null_reddit_ads__account_report_date_day'], 'alias': 'not_null_reddit_ads__account_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.8199008, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['reddit_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.reddit_ads__account_report'}, 'test.reddit_ads.not_null_reddit_ads__account_report_account_id.16f11188c5': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('reddit_ads__account_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_reddit_ads__account_report_account_id', 'resource_type': 'test', 'package_name': 'reddit_ads', 'path': 'not_null_reddit_ads__account_report_account_id.sql', 'original_file_path': 'models\\reddit_ads.yml', 'unique_id': 'test.reddit_ads.not_null_reddit_ads__account_report_account_id.16f11188c5', 'fqn': ['reddit_ads', 'not_null_reddit_ads__account_report_account_id'], 'alias': 'not_null_reddit_ads__account_report_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.8228905, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['reddit_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.reddit_ads__account_report'}, 'test.reddit_ads.dbt_utils_unique_combination_of_columns_reddit_ads__account_report_date_day__account_id__attribution_type__currency__status__time_zone_id.3cf3359ef6': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'attribution_type', 'currency', 'status', 'time_zone_id'], 'model': "{{ get_where_subquery(ref('reddit_ads__account_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_reddit_ads__account_report_date_day__account_id__attribution_type__currency__status__time_zone_id', 'resource_type': 'test', 'package_name': 'reddit_ads', 'path': 'dbt_utils_unique_combination_o_3d8bb3cd9b494e634cbe651b87c95c5c.sql', 'original_file_path': 'models\\reddit_ads.yml', 'unique_id': 'test.reddit_ads.dbt_utils_unique_combination_of_columns_reddit_ads__account_report_date_day__account_id__attribution_type__currency__status__time_zone_id.3cf3359ef6', 'fqn': ['reddit_ads', 'dbt_utils_unique_combination_of_columns_reddit_ads__account_report_date_day__account_id__attribution_type__currency__status__time_zone_id'], 'alias': 'dbt_utils_unique_combination_o_3d8bb3cd9b494e634cbe651b87c95c5c', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_3d8bb3cd9b494e634cbe651b87c95c5c', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_3d8bb3cd9b494e634cbe651b87c95c5c'}, 'created_at': 1694433486.8238919, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_3d8bb3cd9b494e634cbe651b87c95c5c'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_3d8bb3cd9b494e634cbe651b87c95c5c") }}', 'language': 'sql', 'refs': [['reddit_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.reddit_ads__account_report'}, 'test.reddit_ads.not_null_reddit_ads__ad_group_report_date_day.6463e6f6f7': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('reddit_ads__ad_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_reddit_ads__ad_group_report_date_day', 'resource_type': 'test', 'package_name': 'reddit_ads', 'path': 'not_null_reddit_ads__ad_group_report_date_day.sql', 'original_file_path': 'models\\reddit_ads.yml', 'unique_id': 'test.reddit_ads.not_null_reddit_ads__ad_group_report_date_day.6463e6f6f7', 'fqn': ['reddit_ads', 'not_null_reddit_ads__ad_group_report_date_day'], 'alias': 'not_null_reddit_ads__ad_group_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.8290505, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['reddit_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.reddit_ads__ad_group_report'}, 'test.reddit_ads.not_null_reddit_ads__ad_group_report_ad_group_id.057bd60604': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('reddit_ads__ad_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_reddit_ads__ad_group_report_ad_group_id', 'resource_type': 'test', 'package_name': 'reddit_ads', 'path': 'not_null_reddit_ads__ad_group_report_ad_group_id.sql', 'original_file_path': 'models\\reddit_ads.yml', 'unique_id': 'test.reddit_ads.not_null_reddit_ads__ad_group_report_ad_group_id.057bd60604', 'fqn': ['reddit_ads', 'not_null_reddit_ads__ad_group_report_ad_group_id'], 'alias': 'not_null_reddit_ads__ad_group_report_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.8311331, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['reddit_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.reddit_ads__ad_group_report'}, 'test.reddit_ads.dbt_utils_unique_combination_of_columns_reddit_ads__ad_group_report_date_day__account_id__ad_group_id__campaign_id__currency.dfbea50191': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'ad_group_id', 'campaign_id', 'currency'], 'model': "{{ get_where_subquery(ref('reddit_ads__ad_group_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_reddit_ads__ad_group_report_date_day__account_id__ad_group_id__campaign_id__currency', 'resource_type': 'test', 'package_name': 'reddit_ads', 'path': 'dbt_utils_unique_combination_o_26ca3532f8a33d2fce6b4615a82a8a85.sql', 'original_file_path': 'models\\reddit_ads.yml', 'unique_id': 'test.reddit_ads.dbt_utils_unique_combination_of_columns_reddit_ads__ad_group_report_date_day__account_id__ad_group_id__campaign_id__currency.dfbea50191', 'fqn': ['reddit_ads', 'dbt_utils_unique_combination_of_columns_reddit_ads__ad_group_report_date_day__account_id__ad_group_id__campaign_id__currency'], 'alias': 'dbt_utils_unique_combination_o_26ca3532f8a33d2fce6b4615a82a8a85', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_26ca3532f8a33d2fce6b4615a82a8a85', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_26ca3532f8a33d2fce6b4615a82a8a85'}, 'created_at': 1694433486.8321354, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_26ca3532f8a33d2fce6b4615a82a8a85'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_26ca3532f8a33d2fce6b4615a82a8a85") }}', 'language': 'sql', 'refs': [['reddit_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.reddit_ads__ad_group_report'}, 'test.reddit_ads.not_null_reddit_ads__ad_report_date_day.608b21c69a': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('reddit_ads__ad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_reddit_ads__ad_report_date_day', 'resource_type': 'test', 'package_name': 'reddit_ads', 'path': 'not_null_reddit_ads__ad_report_date_day.sql', 'original_file_path': 'models\\reddit_ads.yml', 'unique_id': 'test.reddit_ads.not_null_reddit_ads__ad_report_date_day.608b21c69a', 'fqn': ['reddit_ads', 'not_null_reddit_ads__ad_report_date_day'], 'alias': 'not_null_reddit_ads__ad_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.838718, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['reddit_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.reddit_ads__ad_report'}, 'test.reddit_ads.not_null_reddit_ads__ad_report_ad_id.1da054a14e': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('reddit_ads__ad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_reddit_ads__ad_report_ad_id', 'resource_type': 'test', 'package_name': 'reddit_ads', 'path': 'not_null_reddit_ads__ad_report_ad_id.sql', 'original_file_path': 'models\\reddit_ads.yml', 'unique_id': 'test.reddit_ads.not_null_reddit_ads__ad_report_ad_id.1da054a14e', 'fqn': ['reddit_ads', 'not_null_reddit_ads__ad_report_ad_id'], 'alias': 'not_null_reddit_ads__ad_report_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.8397472, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['reddit_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.reddit_ads__ad_report'}, 'test.reddit_ads.dbt_utils_unique_combination_of_columns_reddit_ads__ad_report_date_day__ad_id__post_id__account_id__ad_group_id__campaign_id__currency.a428678f1d': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'ad_id', 'post_id', 'account_id', 'ad_group_id', 'campaign_id', 'currency'], 'model': "{{ get_where_subquery(ref('reddit_ads__ad_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_reddit_ads__ad_report_date_day__ad_id__post_id__account_id__ad_group_id__campaign_id__currency', 'resource_type': 'test', 'package_name': 'reddit_ads', 'path': 'dbt_utils_unique_combination_o_4eab5cc4f2139517296d6ffd11d624ff.sql', 'original_file_path': 'models\\reddit_ads.yml', 'unique_id': 'test.reddit_ads.dbt_utils_unique_combination_of_columns_reddit_ads__ad_report_date_day__ad_id__post_id__account_id__ad_group_id__campaign_id__currency.a428678f1d', 'fqn': ['reddit_ads', 'dbt_utils_unique_combination_of_columns_reddit_ads__ad_report_date_day__ad_id__post_id__account_id__ad_group_id__campaign_id__currency'], 'alias': 'dbt_utils_unique_combination_o_4eab5cc4f2139517296d6ffd11d624ff', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_4eab5cc4f2139517296d6ffd11d624ff', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_4eab5cc4f2139517296d6ffd11d624ff'}, 'created_at': 1694433486.840748, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_4eab5cc4f2139517296d6ffd11d624ff'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_4eab5cc4f2139517296d6ffd11d624ff") }}', 'language': 'sql', 'refs': [['reddit_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.reddit_ads__ad_report'}, 'test.reddit_ads.not_null_reddit_ads__campaign_report_date_day.f79cca4131': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('reddit_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_reddit_ads__campaign_report_date_day', 'resource_type': 'test', 'package_name': 'reddit_ads', 'path': 'not_null_reddit_ads__campaign_report_date_day.sql', 'original_file_path': 'models\\reddit_ads.yml', 'unique_id': 'test.reddit_ads.not_null_reddit_ads__campaign_report_date_day.f79cca4131', 'fqn': ['reddit_ads', 'not_null_reddit_ads__campaign_report_date_day'], 'alias': 'not_null_reddit_ads__campaign_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.8473184, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['reddit_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.reddit_ads__campaign_report'}, 'test.reddit_ads.not_null_reddit_ads__campaign_report_campaign_id.f5491a0b49': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('reddit_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_reddit_ads__campaign_report_campaign_id', 'resource_type': 'test', 'package_name': 'reddit_ads', 'path': 'not_null_reddit_ads__campaign_report_campaign_id.sql', 'original_file_path': 'models\\reddit_ads.yml', 'unique_id': 'test.reddit_ads.not_null_reddit_ads__campaign_report_campaign_id.f5491a0b49', 'fqn': ['reddit_ads', 'not_null_reddit_ads__campaign_report_campaign_id'], 'alias': 'not_null_reddit_ads__campaign_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.849324, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['reddit_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.reddit_ads__campaign_report'}, 'test.reddit_ads.dbt_utils_unique_combination_of_columns_reddit_ads__campaign_report_date_day__account_id__campaign_id__currency.aec7cd25af': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'campaign_id', 'currency'], 'model': "{{ get_where_subquery(ref('reddit_ads__campaign_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_reddit_ads__campaign_report_date_day__account_id__campaign_id__currency', 'resource_type': 'test', 'package_name': 'reddit_ads', 'path': 'dbt_utils_unique_combination_o_0738174addeafd145c0eef0d3f4e9f8e.sql', 'original_file_path': 'models\\reddit_ads.yml', 'unique_id': 'test.reddit_ads.dbt_utils_unique_combination_of_columns_reddit_ads__campaign_report_date_day__account_id__campaign_id__currency.aec7cd25af', 'fqn': ['reddit_ads', 'dbt_utils_unique_combination_of_columns_reddit_ads__campaign_report_date_day__account_id__campaign_id__currency'], 'alias': 'dbt_utils_unique_combination_o_0738174addeafd145c0eef0d3f4e9f8e', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_0738174addeafd145c0eef0d3f4e9f8e', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_0738174addeafd145c0eef0d3f4e9f8e'}, 'created_at': 1694433486.8503966, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_0738174addeafd145c0eef0d3f4e9f8e'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_0738174addeafd145c0eef0d3f4e9f8e") }}', 'language': 'sql', 'refs': [['reddit_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.reddit_ads__campaign_report'}, 'test.reddit_ads.not_null_reddit_ads__url_report_date_day.4b0f6363da': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('reddit_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_reddit_ads__url_report_date_day', 'resource_type': 'test', 'package_name': 'reddit_ads', 'path': 'not_null_reddit_ads__url_report_date_day.sql', 'original_file_path': 'models\\reddit_ads.yml', 'unique_id': 'test.reddit_ads.not_null_reddit_ads__url_report_date_day.4b0f6363da', 'fqn': ['reddit_ads', 'not_null_reddit_ads__url_report_date_day'], 'alias': 'not_null_reddit_ads__url_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.8553946, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['reddit_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.reddit_ads__url_report'}, 'test.reddit_ads.not_null_reddit_ads__url_report_ad_id.8ff83da2b0': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('reddit_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_reddit_ads__url_report_ad_id', 'resource_type': 'test', 'package_name': 'reddit_ads', 'path': 'not_null_reddit_ads__url_report_ad_id.sql', 'original_file_path': 'models\\reddit_ads.yml', 'unique_id': 'test.reddit_ads.not_null_reddit_ads__url_report_ad_id.8ff83da2b0', 'fqn': ['reddit_ads', 'not_null_reddit_ads__url_report_ad_id'], 'alias': 'not_null_reddit_ads__url_report_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.857074, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['reddit_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.reddit_ads__url_report'}, 'test.reddit_ads.not_null_reddit_ads__url_report_base_url.2f585bebcb': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'base_url', 'model': "{{ get_where_subquery(ref('reddit_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_reddit_ads__url_report_base_url', 'resource_type': 'test', 'package_name': 'reddit_ads', 'path': 'not_null_reddit_ads__url_report_base_url.sql', 'original_file_path': 'models\\reddit_ads.yml', 'unique_id': 'test.reddit_ads.not_null_reddit_ads__url_report_base_url.2f585bebcb', 'fqn': ['reddit_ads', 'not_null_reddit_ads__url_report_base_url'], 'alias': 'not_null_reddit_ads__url_report_base_url', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True}, 'created_at': 1694433486.8591516, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(enabled=True) }}', 'language': 'sql', 'refs': [['reddit_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'base_url', 'file_key_name': 'models.reddit_ads__url_report'}, 'test.reddit_ads.dbt_utils_unique_combination_of_columns_reddit_ads__url_report_date_day__click_url__ad_id__account_id__ad_group_id__campaign_id__post_id__currency.b14eb4e958': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'click_url', 'ad_id', 'account_id', 'ad_group_id', 'campaign_id', 'post_id', 'currency'], 'model': "{{ get_where_subquery(ref('reddit_ads__url_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_reddit_ads__url_report_date_day__click_url__ad_id__account_id__ad_group_id__campaign_id__post_id__currency', 'resource_type': 'test', 'package_name': 'reddit_ads', 'path': 'dbt_utils_unique_combination_o_7c37e73689ac90ae73618b69a9503d2f.sql', 'original_file_path': 'models\\reddit_ads.yml', 'unique_id': 'test.reddit_ads.dbt_utils_unique_combination_of_columns_reddit_ads__url_report_date_day__click_url__ad_id__account_id__ad_group_id__campaign_id__post_id__currency.b14eb4e958', 'fqn': ['reddit_ads', 'dbt_utils_unique_combination_of_columns_reddit_ads__url_report_date_day__click_url__ad_id__account_id__ad_group_id__campaign_id__post_id__currency'], 'alias': 'dbt_utils_unique_combination_o_7c37e73689ac90ae73618b69a9503d2f', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_7c37e73689ac90ae73618b69a9503d2f', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_7c37e73689ac90ae73618b69a9503d2f'}, 'created_at': 1694433486.8611445, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_7c37e73689ac90ae73618b69a9503d2f'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_7c37e73689ac90ae73618b69a9503d2f") }}', 'language': 'sql', 'refs': [['reddit_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.reddit_ads__url_report'}, 'test.reddit_ads_source.unique_stg_reddit_ads__account_account_id.0c6fcb698e': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('stg_reddit_ads__account')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'unique_stg_reddit_ads__account_account_id', 'resource_type': 'test', 'package_name': 'reddit_ads_source', 'path': 'unique_stg_reddit_ads__account_account_id.sql', 'original_file_path': 'models\\stg_reddit_ads.yml', 'unique_id': 'test.reddit_ads_source.unique_stg_reddit_ads__account_account_id.0c6fcb698e', 'fqn': ['reddit_ads_source', 'unique_stg_reddit_ads__account_account_id'], 'alias': 'unique_stg_reddit_ads__account_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.9381304, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_reddit_ads__account']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': []}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.stg_reddit_ads__account'}, 'test.reddit_ads_source.not_null_stg_reddit_ads__account_account_id.512f0b8078': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('stg_reddit_ads__account')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_reddit_ads__account_account_id', 'resource_type': 'test', 'package_name': 'reddit_ads_source', 'path': 'not_null_stg_reddit_ads__account_account_id.sql', 'original_file_path': 'models\\stg_reddit_ads.yml', 'unique_id': 'test.reddit_ads_source.not_null_stg_reddit_ads__account_account_id.512f0b8078', 'fqn': ['reddit_ads_source', 'not_null_stg_reddit_ads__account_account_id'], 'alias': 'not_null_stg_reddit_ads__account_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.9402132, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_reddit_ads__account']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.stg_reddit_ads__account'}, 'test.reddit_ads_source.not_null_stg_reddit_ads__account_report_account_id.1f2a0195de': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('stg_reddit_ads__account_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_reddit_ads__account_report_account_id', 'resource_type': 'test', 'package_name': 'reddit_ads_source', 'path': 'not_null_stg_reddit_ads__account_report_account_id.sql', 'original_file_path': 'models\\stg_reddit_ads.yml', 'unique_id': 'test.reddit_ads_source.not_null_stg_reddit_ads__account_report_account_id.1f2a0195de', 'fqn': ['reddit_ads_source', 'not_null_stg_reddit_ads__account_report_account_id'], 'alias': 'not_null_stg_reddit_ads__account_report_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.9421308, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_reddit_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.stg_reddit_ads__account_report'}, 'test.reddit_ads_source.dbt_utils_unique_combination_of_columns_stg_reddit_ads__account_report_account_id__date_day.74570496be': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['account_id', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_reddit_ads__account_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_reddit_ads__account_report_account_id__date_day', 'resource_type': 'test', 'package_name': 'reddit_ads_source', 'path': 'dbt_utils_unique_combination_o_ce15e0a86725614888661e5d48ff93d8.sql', 'original_file_path': 'models\\stg_reddit_ads.yml', 'unique_id': 'test.reddit_ads_source.dbt_utils_unique_combination_of_columns_stg_reddit_ads__account_report_account_id__date_day.74570496be', 'fqn': ['reddit_ads_source', 'dbt_utils_unique_combination_of_columns_stg_reddit_ads__account_report_account_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_ce15e0a86725614888661e5d48ff93d8', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_ce15e0a86725614888661e5d48ff93d8', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_ce15e0a86725614888661e5d48ff93d8'}, 'created_at': 1694433486.9432094, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_ce15e0a86725614888661e5d48ff93d8'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_ce15e0a86725614888661e5d48ff93d8") }}', 'language': 'sql', 'refs': [['stg_reddit_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_reddit_ads__account_report'}, 'test.reddit_ads_source.unique_stg_reddit_ads__ad_ad_id.3d62901652': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('stg_reddit_ads__ad')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'unique_stg_reddit_ads__ad_ad_id', 'resource_type': 'test', 'package_name': 'reddit_ads_source', 'path': 'unique_stg_reddit_ads__ad_ad_id.sql', 'original_file_path': 'models\\stg_reddit_ads.yml', 'unique_id': 'test.reddit_ads_source.unique_stg_reddit_ads__ad_ad_id.3d62901652', 'fqn': ['reddit_ads_source', 'unique_stg_reddit_ads__ad_ad_id'], 'alias': 'unique_stg_reddit_ads__ad_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.948367, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_reddit_ads__ad']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.stg_reddit_ads__ad'}, 'test.reddit_ads_source.not_null_stg_reddit_ads__ad_ad_id.40188b63dd': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('stg_reddit_ads__ad')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_reddit_ads__ad_ad_id', 'resource_type': 'test', 'package_name': 'reddit_ads_source', 'path': 'not_null_stg_reddit_ads__ad_ad_id.sql', 'original_file_path': 'models\\stg_reddit_ads.yml', 'unique_id': 'test.reddit_ads_source.not_null_stg_reddit_ads__ad_ad_id.40188b63dd', 'fqn': ['reddit_ads_source', 'not_null_stg_reddit_ads__ad_ad_id'], 'alias': 'not_null_stg_reddit_ads__ad_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.9494395, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_reddit_ads__ad']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.stg_reddit_ads__ad'}, 'test.reddit_ads_source.not_null_stg_reddit_ads__ad_report_ad_id.c4af84b857': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('stg_reddit_ads__ad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_reddit_ads__ad_report_ad_id', 'resource_type': 'test', 'package_name': 'reddit_ads_source', 'path': 'not_null_stg_reddit_ads__ad_report_ad_id.sql', 'original_file_path': 'models\\stg_reddit_ads.yml', 'unique_id': 'test.reddit_ads_source.not_null_stg_reddit_ads__ad_report_ad_id.c4af84b857', 'fqn': ['reddit_ads_source', 'not_null_stg_reddit_ads__ad_report_ad_id'], 'alias': 'not_null_stg_reddit_ads__ad_report_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.95143, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_reddit_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.stg_reddit_ads__ad_report'}, 'test.reddit_ads_source.dbt_utils_unique_combination_of_columns_stg_reddit_ads__ad_report_ad_id__date_day.ce868b0b1a': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_reddit_ads__ad_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_reddit_ads__ad_report_ad_id__date_day', 'resource_type': 'test', 'package_name': 'reddit_ads_source', 'path': 'dbt_utils_unique_combination_o_d08f30f7cadd776325492b45b5ac30ff.sql', 'original_file_path': 'models\\stg_reddit_ads.yml', 'unique_id': 'test.reddit_ads_source.dbt_utils_unique_combination_of_columns_stg_reddit_ads__ad_report_ad_id__date_day.ce868b0b1a', 'fqn': ['reddit_ads_source', 'dbt_utils_unique_combination_of_columns_stg_reddit_ads__ad_report_ad_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_d08f30f7cadd776325492b45b5ac30ff', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_d08f30f7cadd776325492b45b5ac30ff', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_d08f30f7cadd776325492b45b5ac30ff'}, 'created_at': 1694433486.953435, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_d08f30f7cadd776325492b45b5ac30ff'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_d08f30f7cadd776325492b45b5ac30ff") }}', 'language': 'sql', 'refs': [['stg_reddit_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_reddit_ads__ad_report'}, 'test.reddit_ads_source.unique_stg_reddit_ads__ad_group_ad_group_id.d3dc0d7503': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('stg_reddit_ads__ad_group')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'unique_stg_reddit_ads__ad_group_ad_group_id', 'resource_type': 'test', 'package_name': 'reddit_ads_source', 'path': 'unique_stg_reddit_ads__ad_group_ad_group_id.sql', 'original_file_path': 'models\\stg_reddit_ads.yml', 'unique_id': 'test.reddit_ads_source.unique_stg_reddit_ads__ad_group_ad_group_id.d3dc0d7503', 'fqn': ['reddit_ads_source', 'unique_stg_reddit_ads__ad_group_ad_group_id'], 'alias': 'unique_stg_reddit_ads__ad_group_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.9570923, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_reddit_ads__ad_group']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.stg_reddit_ads__ad_group'}, 'test.reddit_ads_source.not_null_stg_reddit_ads__ad_group_ad_group_id.65795d8dc2': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('stg_reddit_ads__ad_group')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_reddit_ads__ad_group_ad_group_id', 'resource_type': 'test', 'package_name': 'reddit_ads_source', 'path': 'not_null_stg_reddit_ads__ad_group_ad_group_id.sql', 'original_file_path': 'models\\stg_reddit_ads.yml', 'unique_id': 'test.reddit_ads_source.not_null_stg_reddit_ads__ad_group_ad_group_id.65795d8dc2', 'fqn': ['reddit_ads_source', 'not_null_stg_reddit_ads__ad_group_ad_group_id'], 'alias': 'not_null_stg_reddit_ads__ad_group_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.9591708, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_reddit_ads__ad_group']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.stg_reddit_ads__ad_group'}, 'test.reddit_ads_source.not_null_stg_reddit_ads__ad_group_report_ad_group_id.9836cd084d': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('stg_reddit_ads__ad_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_reddit_ads__ad_group_report_ad_group_id', 'resource_type': 'test', 'package_name': 'reddit_ads_source', 'path': 'not_null_stg_reddit_ads__ad_group_report_ad_group_id.sql', 'original_file_path': 'models\\stg_reddit_ads.yml', 'unique_id': 'test.reddit_ads_source.not_null_stg_reddit_ads__ad_group_report_ad_group_id.9836cd084d', 'fqn': ['reddit_ads_source', 'not_null_stg_reddit_ads__ad_group_report_ad_group_id'], 'alias': 'not_null_stg_reddit_ads__ad_group_report_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.9611666, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_reddit_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.stg_reddit_ads__ad_group_report'}, 'test.reddit_ads_source.dbt_utils_unique_combination_of_columns_stg_reddit_ads__ad_group_report_ad_group_id__date_day.19b8b9b788': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_group_id', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_reddit_ads__ad_group_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_reddit_ads__ad_group_report_ad_group_id__date_day', 'resource_type': 'test', 'package_name': 'reddit_ads_source', 'path': 'dbt_utils_unique_combination_o_e81a8a636bdf4c2d4a757b798e0b86ac.sql', 'original_file_path': 'models\\stg_reddit_ads.yml', 'unique_id': 'test.reddit_ads_source.dbt_utils_unique_combination_of_columns_stg_reddit_ads__ad_group_report_ad_group_id__date_day.19b8b9b788', 'fqn': ['reddit_ads_source', 'dbt_utils_unique_combination_of_columns_stg_reddit_ads__ad_group_report_ad_group_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_e81a8a636bdf4c2d4a757b798e0b86ac', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_e81a8a636bdf4c2d4a757b798e0b86ac', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_e81a8a636bdf4c2d4a757b798e0b86ac'}, 'created_at': 1694433486.962167, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_e81a8a636bdf4c2d4a757b798e0b86ac'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_e81a8a636bdf4c2d4a757b798e0b86ac") }}', 'language': 'sql', 'refs': [['stg_reddit_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_reddit_ads__ad_group_report'}, 'test.reddit_ads_source.unique_stg_reddit_ads__campaign_campaign_id.3c4fccf1e4': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_reddit_ads__campaign')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'unique_stg_reddit_ads__campaign_campaign_id', 'resource_type': 'test', 'package_name': 'reddit_ads_source', 'path': 'unique_stg_reddit_ads__campaign_campaign_id.sql', 'original_file_path': 'models\\stg_reddit_ads.yml', 'unique_id': 'test.reddit_ads_source.unique_stg_reddit_ads__campaign_campaign_id.3c4fccf1e4', 'fqn': ['reddit_ads_source', 'unique_stg_reddit_ads__campaign_campaign_id'], 'alias': 'unique_stg_reddit_ads__campaign_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.9670954, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_reddit_ads__campaign']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_reddit_ads__campaign'}, 'test.reddit_ads_source.not_null_stg_reddit_ads__campaign_campaign_id.f3f24e4682': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_reddit_ads__campaign')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_reddit_ads__campaign_campaign_id', 'resource_type': 'test', 'package_name': 'reddit_ads_source', 'path': 'not_null_stg_reddit_ads__campaign_campaign_id.sql', 'original_file_path': 'models\\stg_reddit_ads.yml', 'unique_id': 'test.reddit_ads_source.not_null_stg_reddit_ads__campaign_campaign_id.f3f24e4682', 'fqn': ['reddit_ads_source', 'not_null_stg_reddit_ads__campaign_campaign_id'], 'alias': 'not_null_stg_reddit_ads__campaign_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.968175, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_reddit_ads__campaign']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_reddit_ads__campaign'}, 'test.reddit_ads_source.not_null_stg_reddit_ads__campaign_report_campaign_id.c717612b4f': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_reddit_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_reddit_ads__campaign_report_campaign_id', 'resource_type': 'test', 'package_name': 'reddit_ads_source', 'path': 'not_null_stg_reddit_ads__campaign_report_campaign_id.sql', 'original_file_path': 'models\\stg_reddit_ads.yml', 'unique_id': 'test.reddit_ads_source.not_null_stg_reddit_ads__campaign_report_campaign_id.c717612b4f', 'fqn': ['reddit_ads_source', 'not_null_stg_reddit_ads__campaign_report_campaign_id'], 'alias': 'not_null_stg_reddit_ads__campaign_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.9702477, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_reddit_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_reddit_ads__campaign_report'}, 'test.reddit_ads_source.dbt_utils_unique_combination_of_columns_stg_reddit_ads__campaign_report_campaign_id__date_day.9b02fea13d': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_reddit_ads__campaign_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_reddit_ads__campaign_report_campaign_id__date_day', 'resource_type': 'test', 'package_name': 'reddit_ads_source', 'path': 'dbt_utils_unique_combination_o_8cc4902d24c7376a8ef501eb589e12a1.sql', 'original_file_path': 'models\\stg_reddit_ads.yml', 'unique_id': 'test.reddit_ads_source.dbt_utils_unique_combination_of_columns_stg_reddit_ads__campaign_report_campaign_id__date_day.9b02fea13d', 'fqn': ['reddit_ads_source', 'dbt_utils_unique_combination_of_columns_stg_reddit_ads__campaign_report_campaign_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_8cc4902d24c7376a8ef501eb589e12a1', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_8cc4902d24c7376a8ef501eb589e12a1', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_8cc4902d24c7376a8ef501eb589e12a1'}, 'created_at': 1694433486.9712493, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_8cc4902d24c7376a8ef501eb589e12a1'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_8cc4902d24c7376a8ef501eb589e12a1") }}', 'language': 'sql', 'refs': [['stg_reddit_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_reddit_ads__campaign_report'}, 'test.snapchat_ads.not_null_snapchat_ads__account_report_date_day.688d7ed260': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('snapchat_ads__account_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_snapchat_ads__account_report_date_day', 'resource_type': 'test', 'package_name': 'snapchat_ads', 'path': 'not_null_snapchat_ads__account_report_date_day.sql', 'original_file_path': 'models\\snapchat.yml', 'unique_id': 'test.snapchat_ads.not_null_snapchat_ads__account_report_date_day.688d7ed260', 'fqn': ['snapchat_ads', 'not_null_snapchat_ads__account_report_date_day'], 'alias': 'not_null_snapchat_ads__account_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.9999506, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['snapchat_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads.snapchat_ads__account_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.snapchat_ads__account_report'}, 'test.snapchat_ads.not_null_snapchat_ads__account_report_ad_account_id.589c81966b': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_account_id', 'model': "{{ get_where_subquery(ref('snapchat_ads__account_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_snapchat_ads__account_report_ad_account_id', 'resource_type': 'test', 'package_name': 'snapchat_ads', 'path': 'not_null_snapchat_ads__account_report_ad_account_id.sql', 'original_file_path': 'models\\snapchat.yml', 'unique_id': 'test.snapchat_ads.not_null_snapchat_ads__account_report_ad_account_id.589c81966b', 'fqn': ['snapchat_ads', 'not_null_snapchat_ads__account_report_ad_account_id'], 'alias': 'not_null_snapchat_ads__account_report_ad_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.0009503, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['snapchat_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads.snapchat_ads__account_report']}, 'compiled_path': None, 'column_name': 'ad_account_id', 'file_key_name': 'models.snapchat_ads__account_report'}, 'test.snapchat_ads.dbt_utils_unique_combination_of_columns_snapchat_ads__account_report_ad_account_id__date_day.da5545b8e6': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_account_id', 'date_day'], 'model': "{{ get_where_subquery(ref('snapchat_ads__account_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_snapchat_ads__account_report_ad_account_id__date_day', 'resource_type': 'test', 'package_name': 'snapchat_ads', 'path': 'dbt_utils_unique_combination_o_524356cb3f1f45c140605a4e4e3e3292.sql', 'original_file_path': 'models\\snapchat.yml', 'unique_id': 'test.snapchat_ads.dbt_utils_unique_combination_of_columns_snapchat_ads__account_report_ad_account_id__date_day.da5545b8e6', 'fqn': ['snapchat_ads', 'dbt_utils_unique_combination_of_columns_snapchat_ads__account_report_ad_account_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_524356cb3f1f45c140605a4e4e3e3292', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_524356cb3f1f45c140605a4e4e3e3292', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_524356cb3f1f45c140605a4e4e3e3292'}, 'created_at': 1694433487.0029504, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_524356cb3f1f45c140605a4e4e3e3292'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_524356cb3f1f45c140605a4e4e3e3292") }}', 'language': 'sql', 'refs': [['snapchat_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.snapchat_ads.snapchat_ads__account_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.snapchat_ads__account_report'}, 'test.snapchat_ads.not_null_snapchat_ads__ad_report_date_day.7c5350c8fe': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('snapchat_ads__ad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_snapchat_ads__ad_report_date_day', 'resource_type': 'test', 'package_name': 'snapchat_ads', 'path': 'not_null_snapchat_ads__ad_report_date_day.sql', 'original_file_path': 'models\\snapchat.yml', 'unique_id': 'test.snapchat_ads.not_null_snapchat_ads__ad_report_date_day.7c5350c8fe', 'fqn': ['snapchat_ads', 'not_null_snapchat_ads__ad_report_date_day'], 'alias': 'not_null_snapchat_ads__ad_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.007456, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['snapchat_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads.snapchat_ads__ad_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.snapchat_ads__ad_report'}, 'test.snapchat_ads.not_null_snapchat_ads__ad_report_ad_id.9000850744': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('snapchat_ads__ad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_snapchat_ads__ad_report_ad_id', 'resource_type': 'test', 'package_name': 'snapchat_ads', 'path': 'not_null_snapchat_ads__ad_report_ad_id.sql', 'original_file_path': 'models\\snapchat.yml', 'unique_id': 'test.snapchat_ads.not_null_snapchat_ads__ad_report_ad_id.9000850744', 'fqn': ['snapchat_ads', 'not_null_snapchat_ads__ad_report_ad_id'], 'alias': 'not_null_snapchat_ads__ad_report_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.009461, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['snapchat_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads.snapchat_ads__ad_report']}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.snapchat_ads__ad_report'}, 'test.snapchat_ads.dbt_utils_unique_combination_of_columns_snapchat_ads__ad_report_ad_id__date_day.68c2c0de57': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'date_day'], 'model': "{{ get_where_subquery(ref('snapchat_ads__ad_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_snapchat_ads__ad_report_ad_id__date_day', 'resource_type': 'test', 'package_name': 'snapchat_ads', 'path': 'dbt_utils_unique_combination_o_d89cc6fe00f1619f552cd79cf8e1cf2b.sql', 'original_file_path': 'models\\snapchat.yml', 'unique_id': 'test.snapchat_ads.dbt_utils_unique_combination_of_columns_snapchat_ads__ad_report_ad_id__date_day.68c2c0de57', 'fqn': ['snapchat_ads', 'dbt_utils_unique_combination_of_columns_snapchat_ads__ad_report_ad_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_d89cc6fe00f1619f552cd79cf8e1cf2b', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_d89cc6fe00f1619f552cd79cf8e1cf2b', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_d89cc6fe00f1619f552cd79cf8e1cf2b'}, 'created_at': 1694433487.011461, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_d89cc6fe00f1619f552cd79cf8e1cf2b'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_d89cc6fe00f1619f552cd79cf8e1cf2b") }}', 'language': 'sql', 'refs': [['snapchat_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.snapchat_ads.snapchat_ads__ad_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.snapchat_ads__ad_report'}, 'test.snapchat_ads.not_null_snapchat_ads__campaign_report_date_day.4e4e31223b': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('snapchat_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_snapchat_ads__campaign_report_date_day', 'resource_type': 'test', 'package_name': 'snapchat_ads', 'path': 'not_null_snapchat_ads__campaign_report_date_day.sql', 'original_file_path': 'models\\snapchat.yml', 'unique_id': 'test.snapchat_ads.not_null_snapchat_ads__campaign_report_date_day.4e4e31223b', 'fqn': ['snapchat_ads', 'not_null_snapchat_ads__campaign_report_date_day'], 'alias': 'not_null_snapchat_ads__campaign_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.0169692, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['snapchat_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads.snapchat_ads__campaign_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.snapchat_ads__campaign_report'}, 'test.snapchat_ads.not_null_snapchat_ads__campaign_report_campaign_id.19fd7135ac': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('snapchat_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_snapchat_ads__campaign_report_campaign_id', 'resource_type': 'test', 'package_name': 'snapchat_ads', 'path': 'not_null_snapchat_ads__campaign_report_campaign_id.sql', 'original_file_path': 'models\\snapchat.yml', 'unique_id': 'test.snapchat_ads.not_null_snapchat_ads__campaign_report_campaign_id.19fd7135ac', 'fqn': ['snapchat_ads', 'not_null_snapchat_ads__campaign_report_campaign_id'], 'alias': 'not_null_snapchat_ads__campaign_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.0180209, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['snapchat_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads.snapchat_ads__campaign_report']}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.snapchat_ads__campaign_report'}, 'test.snapchat_ads.dbt_utils_unique_combination_of_columns_snapchat_ads__campaign_report_campaign_id__date_day.dfc5f7da4e': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', 'date_day'], 'model': "{{ get_where_subquery(ref('snapchat_ads__campaign_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_snapchat_ads__campaign_report_campaign_id__date_day', 'resource_type': 'test', 'package_name': 'snapchat_ads', 'path': 'dbt_utils_unique_combination_o_113e94adc3e9beee92a4d84c51a5a72e.sql', 'original_file_path': 'models\\snapchat.yml', 'unique_id': 'test.snapchat_ads.dbt_utils_unique_combination_of_columns_snapchat_ads__campaign_report_campaign_id__date_day.dfc5f7da4e', 'fqn': ['snapchat_ads', 'dbt_utils_unique_combination_of_columns_snapchat_ads__campaign_report_campaign_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_113e94adc3e9beee92a4d84c51a5a72e', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_113e94adc3e9beee92a4d84c51a5a72e', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_113e94adc3e9beee92a4d84c51a5a72e'}, 'created_at': 1694433487.0201833, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_113e94adc3e9beee92a4d84c51a5a72e'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_113e94adc3e9beee92a4d84c51a5a72e") }}', 'language': 'sql', 'refs': [['snapchat_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.snapchat_ads.snapchat_ads__campaign_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.snapchat_ads__campaign_report'}, 'test.snapchat_ads.not_null_snapchat_ads__ad_squad_report_date_day.39118ca639': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('snapchat_ads__ad_squad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_snapchat_ads__ad_squad_report_date_day', 'resource_type': 'test', 'package_name': 'snapchat_ads', 'path': 'not_null_snapchat_ads__ad_squad_report_date_day.sql', 'original_file_path': 'models\\snapchat.yml', 'unique_id': 'test.snapchat_ads.not_null_snapchat_ads__ad_squad_report_date_day.39118ca639', 'fqn': ['snapchat_ads', 'not_null_snapchat_ads__ad_squad_report_date_day'], 'alias': 'not_null_snapchat_ads__ad_squad_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.02422, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['snapchat_ads__ad_squad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads.snapchat_ads__ad_squad_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.snapchat_ads__ad_squad_report'}, 'test.snapchat_ads.not_null_snapchat_ads__ad_squad_report_ad_squad_id.424c0bbffe': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_squad_id', 'model': "{{ get_where_subquery(ref('snapchat_ads__ad_squad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_snapchat_ads__ad_squad_report_ad_squad_id', 'resource_type': 'test', 'package_name': 'snapchat_ads', 'path': 'not_null_snapchat_ads__ad_squad_report_ad_squad_id.sql', 'original_file_path': 'models\\snapchat.yml', 'unique_id': 'test.snapchat_ads.not_null_snapchat_ads__ad_squad_report_ad_squad_id.424c0bbffe', 'fqn': ['snapchat_ads', 'not_null_snapchat_ads__ad_squad_report_ad_squad_id'], 'alias': 'not_null_snapchat_ads__ad_squad_report_ad_squad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.026234, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['snapchat_ads__ad_squad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads.snapchat_ads__ad_squad_report']}, 'compiled_path': None, 'column_name': 'ad_squad_id', 'file_key_name': 'models.snapchat_ads__ad_squad_report'}, 'test.snapchat_ads.dbt_utils_unique_combination_of_columns_snapchat_ads__ad_squad_report_ad_squad_id__date_day.027a518f3c': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_squad_id', 'date_day'], 'model': "{{ get_where_subquery(ref('snapchat_ads__ad_squad_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_snapchat_ads__ad_squad_report_ad_squad_id__date_day', 'resource_type': 'test', 'package_name': 'snapchat_ads', 'path': 'dbt_utils_unique_combination_o_75177eef68a3eb0454e7209b1fcecc7f.sql', 'original_file_path': 'models\\snapchat.yml', 'unique_id': 'test.snapchat_ads.dbt_utils_unique_combination_of_columns_snapchat_ads__ad_squad_report_ad_squad_id__date_day.027a518f3c', 'fqn': ['snapchat_ads', 'dbt_utils_unique_combination_of_columns_snapchat_ads__ad_squad_report_ad_squad_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_75177eef68a3eb0454e7209b1fcecc7f', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_75177eef68a3eb0454e7209b1fcecc7f', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_75177eef68a3eb0454e7209b1fcecc7f'}, 'created_at': 1694433487.0277421, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_75177eef68a3eb0454e7209b1fcecc7f'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_75177eef68a3eb0454e7209b1fcecc7f") }}', 'language': 'sql', 'refs': [['snapchat_ads__ad_squad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.snapchat_ads.snapchat_ads__ad_squad_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.snapchat_ads__ad_squad_report'}, 'test.snapchat_ads.not_null_snapchat_ads__url_report_date_day.bcbe87a7f6': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('snapchat_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_snapchat_ads__url_report_date_day', 'resource_type': 'test', 'package_name': 'snapchat_ads', 'path': 'not_null_snapchat_ads__url_report_date_day.sql', 'original_file_path': 'models\\snapchat.yml', 'unique_id': 'test.snapchat_ads.not_null_snapchat_ads__url_report_date_day.bcbe87a7f6', 'fqn': ['snapchat_ads', 'not_null_snapchat_ads__url_report_date_day'], 'alias': 'not_null_snapchat_ads__url_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.0317683, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['snapchat_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads.snapchat_ads__url_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.snapchat_ads__url_report'}, 'test.snapchat_ads.not_null_snapchat_ads__url_report_ad_id.ecbdfc0d78': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('snapchat_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_snapchat_ads__url_report_ad_id', 'resource_type': 'test', 'package_name': 'snapchat_ads', 'path': 'not_null_snapchat_ads__url_report_ad_id.sql', 'original_file_path': 'models\\snapchat.yml', 'unique_id': 'test.snapchat_ads.not_null_snapchat_ads__url_report_ad_id.ecbdfc0d78', 'fqn': ['snapchat_ads', 'not_null_snapchat_ads__url_report_ad_id'], 'alias': 'not_null_snapchat_ads__url_report_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.033782, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['snapchat_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads.snapchat_ads__url_report']}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.snapchat_ads__url_report'}, 'test.snapchat_ads.not_null_snapchat_ads__url_report_base_url.15676dc1de': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'base_url', 'model': "{{ get_where_subquery(ref('snapchat_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_snapchat_ads__url_report_base_url', 'resource_type': 'test', 'package_name': 'snapchat_ads', 'path': 'not_null_snapchat_ads__url_report_base_url.sql', 'original_file_path': 'models\\snapchat.yml', 'unique_id': 'test.snapchat_ads.not_null_snapchat_ads__url_report_base_url.15676dc1de', 'fqn': ['snapchat_ads', 'not_null_snapchat_ads__url_report_base_url'], 'alias': 'not_null_snapchat_ads__url_report_base_url', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True}, 'created_at': 1694433487.0357885, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(enabled=True) }}', 'language': 'sql', 'refs': [['snapchat_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads.snapchat_ads__url_report']}, 'compiled_path': None, 'column_name': 'base_url', 'file_key_name': 'models.snapchat_ads__url_report'}, 'test.snapchat_ads.dbt_utils_unique_combination_of_columns_snapchat_ads__url_report_ad_id__date_day.54edc1b2be': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'date_day'], 'model': "{{ get_where_subquery(ref('snapchat_ads__url_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_snapchat_ads__url_report_ad_id__date_day', 'resource_type': 'test', 'package_name': 'snapchat_ads', 'path': 'dbt_utils_unique_combination_o_bbe78d99026ed63397aa69997ed2d6a7.sql', 'original_file_path': 'models\\snapchat.yml', 'unique_id': 'test.snapchat_ads.dbt_utils_unique_combination_of_columns_snapchat_ads__url_report_ad_id__date_day.54edc1b2be', 'fqn': ['snapchat_ads', 'dbt_utils_unique_combination_of_columns_snapchat_ads__url_report_ad_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_bbe78d99026ed63397aa69997ed2d6a7', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_bbe78d99026ed63397aa69997ed2d6a7', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_bbe78d99026ed63397aa69997ed2d6a7'}, 'created_at': 1694433487.038297, 'config_call_dict': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_bbe78d99026ed63397aa69997ed2d6a7'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(enabled=True,alias="dbt_utils_unique_combination_o_bbe78d99026ed63397aa69997ed2d6a7") }}', 'language': 'sql', 'refs': [['snapchat_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.snapchat_ads.snapchat_ads__url_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.snapchat_ads__url_report'}, 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_account_history__fivetran_synced.2d5dd77824': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': '_fivetran_synced', 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__ad_account_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_snapchat_ads__ad_account_history__fivetran_synced', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'not_null_stg_snapchat_ads__ad_account_history__fivetran_synced.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_account_history__fivetran_synced.2d5dd77824', 'fqn': ['snapchat_ads_source', 'not_null_stg_snapchat_ads__ad_account_history__fivetran_synced'], 'alias': 'not_null_stg_snapchat_ads__ad_account_history__fivetran_synced', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.1150315, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_account_history']}, 'compiled_path': None, 'column_name': '_fivetran_synced', 'file_key_name': 'models.stg_snapchat_ads__ad_account_history'}, 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_account_history_ad_account_id.426d71d605': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_account_id', 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__ad_account_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_snapchat_ads__ad_account_history_ad_account_id', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'not_null_stg_snapchat_ads__ad_account_history_ad_account_id.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_account_history_ad_account_id.426d71d605', 'fqn': ['snapchat_ads_source', 'not_null_stg_snapchat_ads__ad_account_history_ad_account_id'], 'alias': 'not_null_stg_snapchat_ads__ad_account_history_ad_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.1175392, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_account_history']}, 'compiled_path': None, 'column_name': 'ad_account_id', 'file_key_name': 'models.stg_snapchat_ads__ad_account_history'}, 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_account_history_ad_account_id___fivetran_synced.cd4fd6b0be': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_account_id', '_fivetran_synced'], 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__ad_account_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_account_history_ad_account_id___fivetran_synced', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'dbt_utils_unique_combination_o_3852df57bdc45c0c215b1863f3f9075d.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_account_history_ad_account_id___fivetran_synced.cd4fd6b0be', 'fqn': ['snapchat_ads_source', 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_account_history_ad_account_id___fivetran_synced'], 'alias': 'dbt_utils_unique_combination_o_3852df57bdc45c0c215b1863f3f9075d', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_3852df57bdc45c0c215b1863f3f9075d', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_3852df57bdc45c0c215b1863f3f9075d'}, 'created_at': 1694433487.118543, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_3852df57bdc45c0c215b1863f3f9075d'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_3852df57bdc45c0c215b1863f3f9075d") }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_account_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_snapchat_ads__ad_account_history'}, 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_history__fivetran_synced.1607c70fda': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': '_fivetran_synced', 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__ad_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_snapchat_ads__ad_history__fivetran_synced', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'not_null_stg_snapchat_ads__ad_history__fivetran_synced.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_history__fivetran_synced.1607c70fda', 'fqn': ['snapchat_ads_source', 'not_null_stg_snapchat_ads__ad_history__fivetran_synced'], 'alias': 'not_null_stg_snapchat_ads__ad_history__fivetran_synced', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.1235428, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_history']}, 'compiled_path': None, 'column_name': '_fivetran_synced', 'file_key_name': 'models.stg_snapchat_ads__ad_history'}, 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_history_ad_id.e9d367fd15': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__ad_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_snapchat_ads__ad_history_ad_id', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'not_null_stg_snapchat_ads__ad_history_ad_id.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_history_ad_id.e9d367fd15', 'fqn': ['snapchat_ads_source', 'not_null_stg_snapchat_ads__ad_history_ad_id'], 'alias': 'not_null_stg_snapchat_ads__ad_history_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.1255426, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_history']}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.stg_snapchat_ads__ad_history'}, 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_history_ad_id___fivetran_synced.f84924f13b': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', '_fivetran_synced'], 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__ad_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_history_ad_id___fivetran_synced', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'dbt_utils_unique_combination_o_f4293c0007c439c8e914dcbf1296b060.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_history_ad_id___fivetran_synced.f84924f13b', 'fqn': ['snapchat_ads_source', 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_history_ad_id___fivetran_synced'], 'alias': 'dbt_utils_unique_combination_o_f4293c0007c439c8e914dcbf1296b060', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_f4293c0007c439c8e914dcbf1296b060', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_f4293c0007c439c8e914dcbf1296b060'}, 'created_at': 1694433487.127123, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_f4293c0007c439c8e914dcbf1296b060'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_f4293c0007c439c8e914dcbf1296b060") }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_snapchat_ads__ad_history'}, 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_hourly_report_ad_id.7e763de19d': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__ad_hourly_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_snapchat_ads__ad_hourly_report_ad_id', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'not_null_stg_snapchat_ads__ad_hourly_report_ad_id.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_hourly_report_ad_id.7e763de19d', 'fqn': ['snapchat_ads_source', 'not_null_stg_snapchat_ads__ad_hourly_report_ad_id'], 'alias': 'not_null_stg_snapchat_ads__ad_hourly_report_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.132129, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_hourly_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report']}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.stg_snapchat_ads__ad_hourly_report'}, 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_hourly_report_date_hour.666cda1cd7': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_hour', 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__ad_hourly_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_snapchat_ads__ad_hourly_report_date_hour', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'not_null_stg_snapchat_ads__ad_hourly_report_date_hour.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_hourly_report_date_hour.666cda1cd7', 'fqn': ['snapchat_ads_source', 'not_null_stg_snapchat_ads__ad_hourly_report_date_hour'], 'alias': 'not_null_stg_snapchat_ads__ad_hourly_report_date_hour', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.1331284, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_hourly_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report']}, 'compiled_path': None, 'column_name': 'date_hour', 'file_key_name': 'models.stg_snapchat_ads__ad_hourly_report'}, 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_hourly_report_ad_id__date_hour.1a4ef6182a': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'date_hour'], 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__ad_hourly_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_hourly_report_ad_id__date_hour', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'dbt_utils_unique_combination_o_51be039d7f287e51c6f47e98ae48f8ea.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_hourly_report_ad_id__date_hour.1a4ef6182a', 'fqn': ['snapchat_ads_source', 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_hourly_report_ad_id__date_hour'], 'alias': 'dbt_utils_unique_combination_o_51be039d7f287e51c6f47e98ae48f8ea', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_51be039d7f287e51c6f47e98ae48f8ea', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_51be039d7f287e51c6f47e98ae48f8ea'}, 'created_at': 1694433487.135128, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_51be039d7f287e51c6f47e98ae48f8ea'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_51be039d7f287e51c6f47e98ae48f8ea") }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_hourly_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_snapchat_ads__ad_hourly_report'}, 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_squad_history__fivetran_synced.7ed7d105ae': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': '_fivetran_synced', 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__ad_squad_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_snapchat_ads__ad_squad_history__fivetran_synced', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'not_null_stg_snapchat_ads__ad_squad_history__fivetran_synced.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_squad_history__fivetran_synced.7ed7d105ae', 'fqn': ['snapchat_ads_source', 'not_null_stg_snapchat_ads__ad_squad_history__fivetran_synced'], 'alias': 'not_null_stg_snapchat_ads__ad_squad_history__fivetran_synced', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.1396391, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_squad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history']}, 'compiled_path': None, 'column_name': '_fivetran_synced', 'file_key_name': 'models.stg_snapchat_ads__ad_squad_history'}, 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_squad_history_ad_squad_id.71c7122278': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_squad_id', 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__ad_squad_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_snapchat_ads__ad_squad_history_ad_squad_id', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'not_null_stg_snapchat_ads__ad_squad_history_ad_squad_id.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_squad_history_ad_squad_id.71c7122278', 'fqn': ['snapchat_ads_source', 'not_null_stg_snapchat_ads__ad_squad_history_ad_squad_id'], 'alias': 'not_null_stg_snapchat_ads__ad_squad_history_ad_squad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.140639, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_squad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history']}, 'compiled_path': None, 'column_name': 'ad_squad_id', 'file_key_name': 'models.stg_snapchat_ads__ad_squad_history'}, 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_squad_history_ad_squad_id___fivetran_synced.200b225a27': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_squad_id', '_fivetran_synced'], 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__ad_squad_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_squad_history_ad_squad_id___fivetran_synced', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'dbt_utils_unique_combination_o_e1915f47a6425292156cafe7be652128.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_squad_history_ad_squad_id___fivetran_synced.200b225a27', 'fqn': ['snapchat_ads_source', 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_squad_history_ad_squad_id___fivetran_synced'], 'alias': 'dbt_utils_unique_combination_o_e1915f47a6425292156cafe7be652128', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_e1915f47a6425292156cafe7be652128', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_e1915f47a6425292156cafe7be652128'}, 'created_at': 1694433487.142639, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_e1915f47a6425292156cafe7be652128'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_e1915f47a6425292156cafe7be652128") }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_squad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_snapchat_ads__ad_squad_history'}, 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_squad_hourly_report_ad_squad_id.ab16aa72c9': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_squad_id', 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__ad_squad_hourly_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_snapchat_ads__ad_squad_hourly_report_ad_squad_id', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'not_null_stg_snapchat_ads__ad_squad_hourly_report_ad_squad_id.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_squad_hourly_report_ad_squad_id.ab16aa72c9', 'fqn': ['snapchat_ads_source', 'not_null_stg_snapchat_ads__ad_squad_hourly_report_ad_squad_id'], 'alias': 'not_null_stg_snapchat_ads__ad_squad_hourly_report_ad_squad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.1471622, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_squad_hourly_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report']}, 'compiled_path': None, 'column_name': 'ad_squad_id', 'file_key_name': 'models.stg_snapchat_ads__ad_squad_hourly_report'}, 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_squad_hourly_report_date_hour.6f0b63a9cb': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_hour', 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__ad_squad_hourly_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_snapchat_ads__ad_squad_hourly_report_date_hour', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'not_null_stg_snapchat_ads__ad_squad_hourly_report_date_hour.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_squad_hourly_report_date_hour.6f0b63a9cb', 'fqn': ['snapchat_ads_source', 'not_null_stg_snapchat_ads__ad_squad_hourly_report_date_hour'], 'alias': 'not_null_stg_snapchat_ads__ad_squad_hourly_report_date_hour', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.1491985, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_squad_hourly_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report']}, 'compiled_path': None, 'column_name': 'date_hour', 'file_key_name': 'models.stg_snapchat_ads__ad_squad_hourly_report'}, 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_squad_hourly_report_ad_squad_id__date_hour.774a407e69': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_squad_id', 'date_hour'], 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__ad_squad_hourly_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_squad_hourly_report_ad_squad_id__date_hour', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'dbt_utils_unique_combination_o_f511cc57cc2f37ea815924cccff18bc3.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_squad_hourly_report_ad_squad_id__date_hour.774a407e69', 'fqn': ['snapchat_ads_source', 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_squad_hourly_report_ad_squad_id__date_hour'], 'alias': 'dbt_utils_unique_combination_o_f511cc57cc2f37ea815924cccff18bc3', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_f511cc57cc2f37ea815924cccff18bc3', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_f511cc57cc2f37ea815924cccff18bc3'}, 'created_at': 1694433487.1502023, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_f511cc57cc2f37ea815924cccff18bc3'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_f511cc57cc2f37ea815924cccff18bc3") }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_squad_hourly_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_snapchat_ads__ad_squad_hourly_report'}, 'test.snapchat_ads_source.not_null_stg_snapchat_ads__campaign_history__fivetran_synced.55bc48b3ec': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': '_fivetran_synced', 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__campaign_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_snapchat_ads__campaign_history__fivetran_synced', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'not_null_stg_snapchat_ads__campaign_history__fivetran_synced.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.not_null_stg_snapchat_ads__campaign_history__fivetran_synced.55bc48b3ec', 'fqn': ['snapchat_ads_source', 'not_null_stg_snapchat_ads__campaign_history__fivetran_synced'], 'alias': 'not_null_stg_snapchat_ads__campaign_history__fivetran_synced', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.1552024, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__campaign_history']}, 'compiled_path': None, 'column_name': '_fivetran_synced', 'file_key_name': 'models.stg_snapchat_ads__campaign_history'}, 'test.snapchat_ads_source.not_null_stg_snapchat_ads__campaign_history_campaign_id.f74a0fb8c0': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__campaign_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_snapchat_ads__campaign_history_campaign_id', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'not_null_stg_snapchat_ads__campaign_history_campaign_id.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.not_null_stg_snapchat_ads__campaign_history_campaign_id.f74a0fb8c0', 'fqn': ['snapchat_ads_source', 'not_null_stg_snapchat_ads__campaign_history_campaign_id'], 'alias': 'not_null_stg_snapchat_ads__campaign_history_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.1562026, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__campaign_history']}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_snapchat_ads__campaign_history'}, 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__campaign_history_campaign_id___fivetran_synced.31b9fb6777': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', '_fivetran_synced'], 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__campaign_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__campaign_history_campaign_id___fivetran_synced', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'dbt_utils_unique_combination_o_57987eae5ec7cafd860959dc1cd2003b.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__campaign_history_campaign_id___fivetran_synced.31b9fb6777', 'fqn': ['snapchat_ads_source', 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__campaign_history_campaign_id___fivetran_synced'], 'alias': 'dbt_utils_unique_combination_o_57987eae5ec7cafd860959dc1cd2003b', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_57987eae5ec7cafd860959dc1cd2003b', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_57987eae5ec7cafd860959dc1cd2003b'}, 'created_at': 1694433487.157718, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_57987eae5ec7cafd860959dc1cd2003b'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_57987eae5ec7cafd860959dc1cd2003b") }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__campaign_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_snapchat_ads__campaign_history'}, 'test.snapchat_ads_source.not_null_stg_snapchat_ads__campaign_hourly_report_campaign_id.f255c38a3e': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__campaign_hourly_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_snapchat_ads__campaign_hourly_report_campaign_id', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'not_null_stg_snapchat_ads__campaign_hourly_report_campaign_id.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.not_null_stg_snapchat_ads__campaign_hourly_report_campaign_id.f255c38a3e', 'fqn': ['snapchat_ads_source', 'not_null_stg_snapchat_ads__campaign_hourly_report_campaign_id'], 'alias': 'not_null_stg_snapchat_ads__campaign_hourly_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.162721, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__campaign_hourly_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report']}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_snapchat_ads__campaign_hourly_report'}, 'test.snapchat_ads_source.not_null_stg_snapchat_ads__campaign_hourly_report_date_hour.0bc4218ac8': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_hour', 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__campaign_hourly_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_snapchat_ads__campaign_hourly_report_date_hour', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'not_null_stg_snapchat_ads__campaign_hourly_report_date_hour.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.not_null_stg_snapchat_ads__campaign_hourly_report_date_hour.0bc4218ac8', 'fqn': ['snapchat_ads_source', 'not_null_stg_snapchat_ads__campaign_hourly_report_date_hour'], 'alias': 'not_null_stg_snapchat_ads__campaign_hourly_report_date_hour', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.1647205, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__campaign_hourly_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report']}, 'compiled_path': None, 'column_name': 'date_hour', 'file_key_name': 'models.stg_snapchat_ads__campaign_hourly_report'}, 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__campaign_hourly_report_campaign_id__date_hour.64293afa9c': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', 'date_hour'], 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__campaign_hourly_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__campaign_hourly_report_campaign_id__date_hour', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'dbt_utils_unique_combination_o_0cd5a718b668452c6086029c1d653cd2.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__campaign_hourly_report_campaign_id__date_hour.64293afa9c', 'fqn': ['snapchat_ads_source', 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__campaign_hourly_report_campaign_id__date_hour'], 'alias': 'dbt_utils_unique_combination_o_0cd5a718b668452c6086029c1d653cd2', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_0cd5a718b668452c6086029c1d653cd2', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_0cd5a718b668452c6086029c1d653cd2'}, 'created_at': 1694433487.165721, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_0cd5a718b668452c6086029c1d653cd2'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_0cd5a718b668452c6086029c1d653cd2") }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__campaign_hourly_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_snapchat_ads__campaign_hourly_report'}, 'test.snapchat_ads_source.not_null_stg_snapchat_ads__creative_history__fivetran_synced.b9c95b4380': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': '_fivetran_synced', 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__creative_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_snapchat_ads__creative_history__fivetran_synced', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'not_null_stg_snapchat_ads__creative_history__fivetran_synced.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.not_null_stg_snapchat_ads__creative_history__fivetran_synced.b9c95b4380', 'fqn': ['snapchat_ads_source', 'not_null_stg_snapchat_ads__creative_history__fivetran_synced'], 'alias': 'not_null_stg_snapchat_ads__creative_history__fivetran_synced', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.170322, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__creative_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__creative_history']}, 'compiled_path': None, 'column_name': '_fivetran_synced', 'file_key_name': 'models.stg_snapchat_ads__creative_history'}, 'test.snapchat_ads_source.not_null_stg_snapchat_ads__creative_history_creative_id.09c83690f4': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'creative_id', 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__creative_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_snapchat_ads__creative_history_creative_id', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'not_null_stg_snapchat_ads__creative_history_creative_id.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.not_null_stg_snapchat_ads__creative_history_creative_id.09c83690f4', 'fqn': ['snapchat_ads_source', 'not_null_stg_snapchat_ads__creative_history_creative_id'], 'alias': 'not_null_stg_snapchat_ads__creative_history_creative_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.1723218, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__creative_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__creative_history']}, 'compiled_path': None, 'column_name': 'creative_id', 'file_key_name': 'models.stg_snapchat_ads__creative_history'}, 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__creative_history_creative_id___fivetran_synced.c6f6c78b99': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['creative_id', '_fivetran_synced'], 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__creative_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__creative_history_creative_id___fivetran_synced', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'dbt_utils_unique_combination_o_6b9615128ce9ee3b9b92bc0b5f9bc33d.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__creative_history_creative_id___fivetran_synced.c6f6c78b99', 'fqn': ['snapchat_ads_source', 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__creative_history_creative_id___fivetran_synced'], 'alias': 'dbt_utils_unique_combination_o_6b9615128ce9ee3b9b92bc0b5f9bc33d', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_6b9615128ce9ee3b9b92bc0b5f9bc33d', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_6b9615128ce9ee3b9b92bc0b5f9bc33d'}, 'created_at': 1694433487.1733217, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_6b9615128ce9ee3b9b92bc0b5f9bc33d'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_6b9615128ce9ee3b9b92bc0b5f9bc33d") }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__creative_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__creative_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_snapchat_ads__creative_history'}, 'test.snapchat_ads_source.not_null_stg_snapchat_ads__creative_url_tag_history_creative_id.7ff6bb9c1b': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'creative_id', 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__creative_url_tag_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_snapchat_ads__creative_url_tag_history_creative_id', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'not_null_stg_snapchat_ads__creative_url_tag_history_creative_id.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.not_null_stg_snapchat_ads__creative_url_tag_history_creative_id.7ff6bb9c1b', 'fqn': ['snapchat_ads_source', 'not_null_stg_snapchat_ads__creative_url_tag_history_creative_id'], 'alias': 'not_null_stg_snapchat_ads__creative_url_tag_history_creative_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.1779244, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__creative_url_tag_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history']}, 'compiled_path': None, 'column_name': 'creative_id', 'file_key_name': 'models.stg_snapchat_ads__creative_url_tag_history'}, 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__creative_url_tag_history_creative_id__param_key__updated_at.cc3fa6acbe': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['creative_id', 'param_key', 'updated_at'], 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__creative_url_tag_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__creative_url_tag_history_creative_id__param_key__updated_at', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'dbt_utils_unique_combination_o_bf5f1fe7986f7917e2a647b5f7b1f985.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__creative_url_tag_history_creative_id__param_key__updated_at.cc3fa6acbe', 'fqn': ['snapchat_ads_source', 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__creative_url_tag_history_creative_id__param_key__updated_at'], 'alias': 'dbt_utils_unique_combination_o_bf5f1fe7986f7917e2a647b5f7b1f985', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_bf5f1fe7986f7917e2a647b5f7b1f985', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_bf5f1fe7986f7917e2a647b5f7b1f985'}, 'created_at': 1694433487.178924, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_bf5f1fe7986f7917e2a647b5f7b1f985'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_bf5f1fe7986f7917e2a647b5f7b1f985") }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__creative_url_tag_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_snapchat_ads__creative_url_tag_history'}, 'test.tiktok_ads.not_null_tiktok_ads__advertiser_report_date_day.1276998c99': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('tiktok_ads__advertiser_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_tiktok_ads__advertiser_report_date_day', 'resource_type': 'test', 'package_name': 'tiktok_ads', 'path': 'not_null_tiktok_ads__advertiser_report_date_day.sql', 'original_file_path': 'models\\tiktok_ads.yml', 'unique_id': 'test.tiktok_ads.not_null_tiktok_ads__advertiser_report_date_day.1276998c99', 'fqn': ['tiktok_ads', 'not_null_tiktok_ads__advertiser_report_date_day'], 'alias': 'not_null_tiktok_ads__advertiser_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.2314043, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['tiktok_ads__advertiser_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads.tiktok_ads__advertiser_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.tiktok_ads__advertiser_report'}, 'test.tiktok_ads.not_null_tiktok_ads__advertiser_report_advertiser_id.f956c568ce': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'advertiser_id', 'model': "{{ get_where_subquery(ref('tiktok_ads__advertiser_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_tiktok_ads__advertiser_report_advertiser_id', 'resource_type': 'test', 'package_name': 'tiktok_ads', 'path': 'not_null_tiktok_ads__advertiser_report_advertiser_id.sql', 'original_file_path': 'models\\tiktok_ads.yml', 'unique_id': 'test.tiktok_ads.not_null_tiktok_ads__advertiser_report_advertiser_id.f956c568ce', 'fqn': ['tiktok_ads', 'not_null_tiktok_ads__advertiser_report_advertiser_id'], 'alias': 'not_null_tiktok_ads__advertiser_report_advertiser_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.2324042, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['tiktok_ads__advertiser_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads.tiktok_ads__advertiser_report']}, 'compiled_path': None, 'column_name': 'advertiser_id', 'file_key_name': 'models.tiktok_ads__advertiser_report'}, 'test.tiktok_ads.dbt_utils_unique_combination_of_columns_tiktok_ads__advertiser_report_advertiser_id__date_day.d298bb3cf9': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['advertiser_id', 'date_day'], 'model': "{{ get_where_subquery(ref('tiktok_ads__advertiser_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_tiktok_ads__advertiser_report_advertiser_id__date_day', 'resource_type': 'test', 'package_name': 'tiktok_ads', 'path': 'dbt_utils_unique_combination_o_64e56e18897a7d7395bde426b0634f89.sql', 'original_file_path': 'models\\tiktok_ads.yml', 'unique_id': 'test.tiktok_ads.dbt_utils_unique_combination_of_columns_tiktok_ads__advertiser_report_advertiser_id__date_day.d298bb3cf9', 'fqn': ['tiktok_ads', 'dbt_utils_unique_combination_of_columns_tiktok_ads__advertiser_report_advertiser_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_64e56e18897a7d7395bde426b0634f89', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_64e56e18897a7d7395bde426b0634f89', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_64e56e18897a7d7395bde426b0634f89'}, 'created_at': 1694433487.2344038, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_64e56e18897a7d7395bde426b0634f89'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_64e56e18897a7d7395bde426b0634f89") }}', 'language': 'sql', 'refs': [['tiktok_ads__advertiser_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.tiktok_ads.tiktok_ads__advertiser_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.tiktok_ads__advertiser_report'}, 'test.tiktok_ads.not_null_tiktok_ads__ad_report_date_day.d61ee4a5ed': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('tiktok_ads__ad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_tiktok_ads__ad_report_date_day', 'resource_type': 'test', 'package_name': 'tiktok_ads', 'path': 'not_null_tiktok_ads__ad_report_date_day.sql', 'original_file_path': 'models\\tiktok_ads.yml', 'unique_id': 'test.tiktok_ads.not_null_tiktok_ads__ad_report_date_day.d61ee4a5ed', 'fqn': ['tiktok_ads', 'not_null_tiktok_ads__ad_report_date_day'], 'alias': 'not_null_tiktok_ads__ad_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.2390342, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['tiktok_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads.tiktok_ads__ad_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.tiktok_ads__ad_report'}, 'test.tiktok_ads.not_null_tiktok_ads__ad_report_ad_id.2d8166e707': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('tiktok_ads__ad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_tiktok_ads__ad_report_ad_id', 'resource_type': 'test', 'package_name': 'tiktok_ads', 'path': 'not_null_tiktok_ads__ad_report_ad_id.sql', 'original_file_path': 'models\\tiktok_ads.yml', 'unique_id': 'test.tiktok_ads.not_null_tiktok_ads__ad_report_ad_id.2d8166e707', 'fqn': ['tiktok_ads', 'not_null_tiktok_ads__ad_report_ad_id'], 'alias': 'not_null_tiktok_ads__ad_report_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.241036, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['tiktok_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads.tiktok_ads__ad_report']}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.tiktok_ads__ad_report'}, 'test.tiktok_ads.dbt_utils_unique_combination_of_columns_tiktok_ads__ad_report_ad_id__ad_group_id__campaign_id__advertiser_id__date_day.3a887710fb': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'ad_group_id', 'campaign_id', 'advertiser_id', 'date_day'], 'model': "{{ get_where_subquery(ref('tiktok_ads__ad_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_tiktok_ads__ad_report_ad_id__ad_group_id__campaign_id__advertiser_id__date_day', 'resource_type': 'test', 'package_name': 'tiktok_ads', 'path': 'dbt_utils_unique_combination_o_ef4585527dd6080f5f2e4d7aa8408c85.sql', 'original_file_path': 'models\\tiktok_ads.yml', 'unique_id': 'test.tiktok_ads.dbt_utils_unique_combination_of_columns_tiktok_ads__ad_report_ad_id__ad_group_id__campaign_id__advertiser_id__date_day.3a887710fb', 'fqn': ['tiktok_ads', 'dbt_utils_unique_combination_of_columns_tiktok_ads__ad_report_ad_id__ad_group_id__campaign_id__advertiser_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_ef4585527dd6080f5f2e4d7aa8408c85', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_ef4585527dd6080f5f2e4d7aa8408c85', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_ef4585527dd6080f5f2e4d7aa8408c85'}, 'created_at': 1694433487.2420359, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_ef4585527dd6080f5f2e4d7aa8408c85'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_ef4585527dd6080f5f2e4d7aa8408c85") }}', 'language': 'sql', 'refs': [['tiktok_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.tiktok_ads.tiktok_ads__ad_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.tiktok_ads__ad_report'}, 'test.tiktok_ads.not_null_tiktok_ads__ad_group_report_date_day.e39164964e': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('tiktok_ads__ad_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_tiktok_ads__ad_group_report_date_day', 'resource_type': 'test', 'package_name': 'tiktok_ads', 'path': 'not_null_tiktok_ads__ad_group_report_date_day.sql', 'original_file_path': 'models\\tiktok_ads.yml', 'unique_id': 'test.tiktok_ads.not_null_tiktok_ads__ad_group_report_date_day.e39164964e', 'fqn': ['tiktok_ads', 'not_null_tiktok_ads__ad_group_report_date_day'], 'alias': 'not_null_tiktok_ads__ad_group_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.2475424, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['tiktok_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads.tiktok_ads__ad_group_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.tiktok_ads__ad_group_report'}, 'test.tiktok_ads.not_null_tiktok_ads__ad_group_report_ad_group_id.17fb8710f4': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('tiktok_ads__ad_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_tiktok_ads__ad_group_report_ad_group_id', 'resource_type': 'test', 'package_name': 'tiktok_ads', 'path': 'not_null_tiktok_ads__ad_group_report_ad_group_id.sql', 'original_file_path': 'models\\tiktok_ads.yml', 'unique_id': 'test.tiktok_ads.not_null_tiktok_ads__ad_group_report_ad_group_id.17fb8710f4', 'fqn': ['tiktok_ads', 'not_null_tiktok_ads__ad_group_report_ad_group_id'], 'alias': 'not_null_tiktok_ads__ad_group_report_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.2485445, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['tiktok_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads.tiktok_ads__ad_group_report']}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.tiktok_ads__ad_group_report'}, 'test.tiktok_ads.dbt_utils_unique_combination_of_columns_tiktok_ads__ad_group_report_ad_group_id__campaign_id__advertiser_id__date_day.ecd611f27e': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_group_id', 'campaign_id', 'advertiser_id', 'date_day'], 'model': "{{ get_where_subquery(ref('tiktok_ads__ad_group_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_tiktok_ads__ad_group_report_ad_group_id__campaign_id__advertiser_id__date_day', 'resource_type': 'test', 'package_name': 'tiktok_ads', 'path': 'dbt_utils_unique_combination_o_61fb67766378fce3f732a5c7a2a8cec0.sql', 'original_file_path': 'models\\tiktok_ads.yml', 'unique_id': 'test.tiktok_ads.dbt_utils_unique_combination_of_columns_tiktok_ads__ad_group_report_ad_group_id__campaign_id__advertiser_id__date_day.ecd611f27e', 'fqn': ['tiktok_ads', 'dbt_utils_unique_combination_of_columns_tiktok_ads__ad_group_report_ad_group_id__campaign_id__advertiser_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_61fb67766378fce3f732a5c7a2a8cec0', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_61fb67766378fce3f732a5c7a2a8cec0', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_61fb67766378fce3f732a5c7a2a8cec0'}, 'created_at': 1694433487.2505465, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_61fb67766378fce3f732a5c7a2a8cec0'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_61fb67766378fce3f732a5c7a2a8cec0") }}', 'language': 'sql', 'refs': [['tiktok_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.tiktok_ads.tiktok_ads__ad_group_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.tiktok_ads__ad_group_report'}, 'test.tiktok_ads.not_null_tiktok_ads__campaign_report_date_day.3807b0e836': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('tiktok_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_tiktok_ads__campaign_report_date_day', 'resource_type': 'test', 'package_name': 'tiktok_ads', 'path': 'not_null_tiktok_ads__campaign_report_date_day.sql', 'original_file_path': 'models\\tiktok_ads.yml', 'unique_id': 'test.tiktok_ads.not_null_tiktok_ads__campaign_report_date_day.3807b0e836', 'fqn': ['tiktok_ads', 'not_null_tiktok_ads__campaign_report_date_day'], 'alias': 'not_null_tiktok_ads__campaign_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.2555568, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['tiktok_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads.tiktok_ads__campaign_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.tiktok_ads__campaign_report'}, 'test.tiktok_ads.not_null_tiktok_ads__campaign_report_campaign_id.8a2b0c8ef8': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('tiktok_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_tiktok_ads__campaign_report_campaign_id', 'resource_type': 'test', 'package_name': 'tiktok_ads', 'path': 'not_null_tiktok_ads__campaign_report_campaign_id.sql', 'original_file_path': 'models\\tiktok_ads.yml', 'unique_id': 'test.tiktok_ads.not_null_tiktok_ads__campaign_report_campaign_id.8a2b0c8ef8', 'fqn': ['tiktok_ads', 'not_null_tiktok_ads__campaign_report_campaign_id'], 'alias': 'not_null_tiktok_ads__campaign_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.2571166, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['tiktok_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads.tiktok_ads__campaign_report']}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.tiktok_ads__campaign_report'}, 'test.tiktok_ads.dbt_utils_unique_combination_of_columns_tiktok_ads__campaign_report_campaign_id__advertiser_id__date_day.03c4f86b19': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', 'advertiser_id', 'date_day'], 'model': "{{ get_where_subquery(ref('tiktok_ads__campaign_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_tiktok_ads__campaign_report_campaign_id__advertiser_id__date_day', 'resource_type': 'test', 'package_name': 'tiktok_ads', 'path': 'dbt_utils_unique_combination_o_65ff4fe3d3440b03aa9c35fc3e4bc645.sql', 'original_file_path': 'models\\tiktok_ads.yml', 'unique_id': 'test.tiktok_ads.dbt_utils_unique_combination_of_columns_tiktok_ads__campaign_report_campaign_id__advertiser_id__date_day.03c4f86b19', 'fqn': ['tiktok_ads', 'dbt_utils_unique_combination_of_columns_tiktok_ads__campaign_report_campaign_id__advertiser_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_65ff4fe3d3440b03aa9c35fc3e4bc645', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_65ff4fe3d3440b03aa9c35fc3e4bc645', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_65ff4fe3d3440b03aa9c35fc3e4bc645'}, 'created_at': 1694433487.259119, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_65ff4fe3d3440b03aa9c35fc3e4bc645'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_65ff4fe3d3440b03aa9c35fc3e4bc645") }}', 'language': 'sql', 'refs': [['tiktok_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.tiktok_ads.tiktok_ads__campaign_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.tiktok_ads__campaign_report'}, 'test.tiktok_ads.not_null_tiktok_ads__url_report_date_day.d593573eff': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('tiktok_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_tiktok_ads__url_report_date_day', 'resource_type': 'test', 'package_name': 'tiktok_ads', 'path': 'not_null_tiktok_ads__url_report_date_day.sql', 'original_file_path': 'models\\tiktok_ads.yml', 'unique_id': 'test.tiktok_ads.not_null_tiktok_ads__url_report_date_day.d593573eff', 'fqn': ['tiktok_ads', 'not_null_tiktok_ads__url_report_date_day'], 'alias': 'not_null_tiktok_ads__url_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.2641215, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['tiktok_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads.tiktok_ads__url_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.tiktok_ads__url_report'}, 'test.tiktok_ads.not_null_tiktok_ads__url_report_ad_id.6c41067bd0': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('tiktok_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_tiktok_ads__url_report_ad_id', 'resource_type': 'test', 'package_name': 'tiktok_ads', 'path': 'not_null_tiktok_ads__url_report_ad_id.sql', 'original_file_path': 'models\\tiktok_ads.yml', 'unique_id': 'test.tiktok_ads.not_null_tiktok_ads__url_report_ad_id.6c41067bd0', 'fqn': ['tiktok_ads', 'not_null_tiktok_ads__url_report_ad_id'], 'alias': 'not_null_tiktok_ads__url_report_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.2651207, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['tiktok_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads.tiktok_ads__url_report']}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.tiktok_ads__url_report'}, 'test.tiktok_ads.not_null_tiktok_ads__url_report_base_url.37afef2e1b': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'base_url', 'model': "{{ get_where_subquery(ref('tiktok_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_tiktok_ads__url_report_base_url', 'resource_type': 'test', 'package_name': 'tiktok_ads', 'path': 'not_null_tiktok_ads__url_report_base_url.sql', 'original_file_path': 'models\\tiktok_ads.yml', 'unique_id': 'test.tiktok_ads.not_null_tiktok_ads__url_report_base_url.37afef2e1b', 'fqn': ['tiktok_ads', 'not_null_tiktok_ads__url_report_base_url'], 'alias': 'not_null_tiktok_ads__url_report_base_url', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True}, 'created_at': 1694433487.2676268, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(enabled=True) }}', 'language': 'sql', 'refs': [['tiktok_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads.tiktok_ads__url_report']}, 'compiled_path': None, 'column_name': 'base_url', 'file_key_name': 'models.tiktok_ads__url_report'}, 'test.tiktok_ads.dbt_utils_unique_combination_of_columns_tiktok_ads__url_report_ad_id__ad_group_id__campaign_id__advertiser_id__date_day.cf95489e47': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'ad_group_id', 'campaign_id', 'advertiser_id', 'date_day'], 'model': "{{ get_where_subquery(ref('tiktok_ads__url_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_tiktok_ads__url_report_ad_id__ad_group_id__campaign_id__advertiser_id__date_day', 'resource_type': 'test', 'package_name': 'tiktok_ads', 'path': 'dbt_utils_unique_combination_o_1cddc99c1bc045b4142e991924c5fa50.sql', 'original_file_path': 'models\\tiktok_ads.yml', 'unique_id': 'test.tiktok_ads.dbt_utils_unique_combination_of_columns_tiktok_ads__url_report_ad_id__ad_group_id__campaign_id__advertiser_id__date_day.cf95489e47', 'fqn': ['tiktok_ads', 'dbt_utils_unique_combination_of_columns_tiktok_ads__url_report_ad_id__ad_group_id__campaign_id__advertiser_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_1cddc99c1bc045b4142e991924c5fa50', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_1cddc99c1bc045b4142e991924c5fa50', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_1cddc99c1bc045b4142e991924c5fa50'}, 'created_at': 1694433487.270631, 'config_call_dict': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_1cddc99c1bc045b4142e991924c5fa50'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(enabled=True,alias="dbt_utils_unique_combination_o_1cddc99c1bc045b4142e991924c5fa50") }}', 'language': 'sql', 'refs': [['tiktok_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.tiktok_ads.tiktok_ads__url_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.tiktok_ads__url_report'}, 'test.tiktok_ads_source.unique_stg_tiktok_ads__advertiser_advertiser_id.078391ba66': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'advertiser_id', 'model': "{{ get_where_subquery(ref('stg_tiktok_ads__advertiser')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'unique_stg_tiktok_ads__advertiser_advertiser_id', 'resource_type': 'test', 'package_name': 'tiktok_ads_source', 'path': 'unique_stg_tiktok_ads__advertiser_advertiser_id.sql', 'original_file_path': 'models\\stg_tiktok_ads.yml', 'unique_id': 'test.tiktok_ads_source.unique_stg_tiktok_ads__advertiser_advertiser_id.078391ba66', 'fqn': ['tiktok_ads_source', 'unique_stg_tiktok_ads__advertiser_advertiser_id'], 'alias': 'unique_stg_tiktok_ads__advertiser_advertiser_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.3931904, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_tiktok_ads__advertiser']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__advertiser']}, 'compiled_path': None, 'column_name': 'advertiser_id', 'file_key_name': 'models.stg_tiktok_ads__advertiser'}, 'test.tiktok_ads_source.not_null_stg_tiktok_ads__advertiser_advertiser_id.5deab92def': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'advertiser_id', 'model': "{{ get_where_subquery(ref('stg_tiktok_ads__advertiser')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_tiktok_ads__advertiser_advertiser_id', 'resource_type': 'test', 'package_name': 'tiktok_ads_source', 'path': 'not_null_stg_tiktok_ads__advertiser_advertiser_id.sql', 'original_file_path': 'models\\stg_tiktok_ads.yml', 'unique_id': 'test.tiktok_ads_source.not_null_stg_tiktok_ads__advertiser_advertiser_id.5deab92def', 'fqn': ['tiktok_ads_source', 'not_null_stg_tiktok_ads__advertiser_advertiser_id'], 'alias': 'not_null_stg_tiktok_ads__advertiser_advertiser_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.3961916, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_tiktok_ads__advertiser']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__advertiser']}, 'compiled_path': None, 'column_name': 'advertiser_id', 'file_key_name': 'models.stg_tiktok_ads__advertiser'}, 'test.tiktok_ads_source.not_null_stg_tiktok_ads__ad_group_history_ad_group_id.04778d7fad': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('stg_tiktok_ads__ad_group_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_tiktok_ads__ad_group_history_ad_group_id', 'resource_type': 'test', 'package_name': 'tiktok_ads_source', 'path': 'not_null_stg_tiktok_ads__ad_group_history_ad_group_id.sql', 'original_file_path': 'models\\stg_tiktok_ads.yml', 'unique_id': 'test.tiktok_ads_source.not_null_stg_tiktok_ads__ad_group_history_ad_group_id.04778d7fad', 'fqn': ['tiktok_ads_source', 'not_null_stg_tiktok_ads__ad_group_history_ad_group_id'], 'alias': 'not_null_stg_tiktok_ads__ad_group_history_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.3986988, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_group_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_group_history']}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.stg_tiktok_ads__ad_group_history'}, 'test.tiktok_ads_source.dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_group_history_ad_group_id__updated_at.cec78c01de': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_group_id', 'updated_at'], 'model': "{{ get_where_subquery(ref('stg_tiktok_ads__ad_group_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_group_history_ad_group_id__updated_at', 'resource_type': 'test', 'package_name': 'tiktok_ads_source', 'path': 'dbt_utils_unique_combination_o_353c130a41ba5d6aab13dbda36b226c8.sql', 'original_file_path': 'models\\stg_tiktok_ads.yml', 'unique_id': 'test.tiktok_ads_source.dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_group_history_ad_group_id__updated_at.cec78c01de', 'fqn': ['tiktok_ads_source', 'dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_group_history_ad_group_id__updated_at'], 'alias': 'dbt_utils_unique_combination_o_353c130a41ba5d6aab13dbda36b226c8', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_353c130a41ba5d6aab13dbda36b226c8', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_353c130a41ba5d6aab13dbda36b226c8'}, 'created_at': 1694433487.399702, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_353c130a41ba5d6aab13dbda36b226c8'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_353c130a41ba5d6aab13dbda36b226c8") }}', 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_group_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_group_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_tiktok_ads__ad_group_history'}, 'test.tiktok_ads_source.not_null_stg_tiktok_ads__ad_history_ad_id.4ffd05b23a': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('stg_tiktok_ads__ad_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_tiktok_ads__ad_history_ad_id', 'resource_type': 'test', 'package_name': 'tiktok_ads_source', 'path': 'not_null_stg_tiktok_ads__ad_history_ad_id.sql', 'original_file_path': 'models\\stg_tiktok_ads.yml', 'unique_id': 'test.tiktok_ads_source.not_null_stg_tiktok_ads__ad_history_ad_id.4ffd05b23a', 'fqn': ['tiktok_ads_source', 'not_null_stg_tiktok_ads__ad_history_ad_id'], 'alias': 'not_null_stg_tiktok_ads__ad_history_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.404702, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_history']}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.stg_tiktok_ads__ad_history'}, 'test.tiktok_ads_source.dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_history_ad_id__updated_at.66b86b4dd1': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'updated_at'], 'model': "{{ get_where_subquery(ref('stg_tiktok_ads__ad_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_history_ad_id__updated_at', 'resource_type': 'test', 'package_name': 'tiktok_ads_source', 'path': 'dbt_utils_unique_combination_o_fe2e43690b07f6a6cbd499af54b7738f.sql', 'original_file_path': 'models\\stg_tiktok_ads.yml', 'unique_id': 'test.tiktok_ads_source.dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_history_ad_id__updated_at.66b86b4dd1', 'fqn': ['tiktok_ads_source', 'dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_history_ad_id__updated_at'], 'alias': 'dbt_utils_unique_combination_o_fe2e43690b07f6a6cbd499af54b7738f', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_fe2e43690b07f6a6cbd499af54b7738f', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_fe2e43690b07f6a6cbd499af54b7738f'}, 'created_at': 1694433487.4057016, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_fe2e43690b07f6a6cbd499af54b7738f'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_fe2e43690b07f6a6cbd499af54b7738f") }}', 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_tiktok_ads__ad_history'}, 'test.tiktok_ads_source.not_null_stg_tiktok_ads__campaign_history_campaign_id.7f9147d1e1': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_tiktok_ads__campaign_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_tiktok_ads__campaign_history_campaign_id', 'resource_type': 'test', 'package_name': 'tiktok_ads_source', 'path': 'not_null_stg_tiktok_ads__campaign_history_campaign_id.sql', 'original_file_path': 'models\\stg_tiktok_ads.yml', 'unique_id': 'test.tiktok_ads_source.not_null_stg_tiktok_ads__campaign_history_campaign_id.7f9147d1e1', 'fqn': ['tiktok_ads_source', 'not_null_stg_tiktok_ads__campaign_history_campaign_id'], 'alias': 'not_null_stg_tiktok_ads__campaign_history_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.4102435, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_tiktok_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__campaign_history']}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_tiktok_ads__campaign_history'}, 'test.tiktok_ads_source.dbt_utils_unique_combination_of_columns_stg_tiktok_ads__campaign_history_campaign_id__updated_at.72bf07011b': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', 'updated_at'], 'model': "{{ get_where_subquery(ref('stg_tiktok_ads__campaign_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_tiktok_ads__campaign_history_campaign_id__updated_at', 'resource_type': 'test', 'package_name': 'tiktok_ads_source', 'path': 'dbt_utils_unique_combination_o_843ebfc08785d00a296625f469aa2000.sql', 'original_file_path': 'models\\stg_tiktok_ads.yml', 'unique_id': 'test.tiktok_ads_source.dbt_utils_unique_combination_of_columns_stg_tiktok_ads__campaign_history_campaign_id__updated_at.72bf07011b', 'fqn': ['tiktok_ads_source', 'dbt_utils_unique_combination_of_columns_stg_tiktok_ads__campaign_history_campaign_id__updated_at'], 'alias': 'dbt_utils_unique_combination_o_843ebfc08785d00a296625f469aa2000', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_843ebfc08785d00a296625f469aa2000', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_843ebfc08785d00a296625f469aa2000'}, 'created_at': 1694433487.41226, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_843ebfc08785d00a296625f469aa2000'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_843ebfc08785d00a296625f469aa2000") }}', 'language': 'sql', 'refs': [['stg_tiktok_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__campaign_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_tiktok_ads__campaign_history'}, 'test.tiktok_ads_source.not_null_stg_tiktok_ads__ad_report_hourly_ad_id.ee84d783ed': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('stg_tiktok_ads__ad_report_hourly')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_tiktok_ads__ad_report_hourly_ad_id', 'resource_type': 'test', 'package_name': 'tiktok_ads_source', 'path': 'not_null_stg_tiktok_ads__ad_report_hourly_ad_id.sql', 'original_file_path': 'models\\stg_tiktok_ads.yml', 'unique_id': 'test.tiktok_ads_source.not_null_stg_tiktok_ads__ad_report_hourly_ad_id.ee84d783ed', 'fqn': ['tiktok_ads_source', 'not_null_stg_tiktok_ads__ad_report_hourly_ad_id'], 'alias': 'not_null_stg_tiktok_ads__ad_report_hourly_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.417249, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_report_hourly']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly']}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.stg_tiktok_ads__ad_report_hourly'}, 'test.tiktok_ads_source.not_null_stg_tiktok_ads__ad_report_hourly_stat_time_hour.9e2a2dca81': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'stat_time_hour', 'model': "{{ get_where_subquery(ref('stg_tiktok_ads__ad_report_hourly')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_tiktok_ads__ad_report_hourly_stat_time_hour', 'resource_type': 'test', 'package_name': 'tiktok_ads_source', 'path': 'not_null_stg_tiktok_ads__ad_report_hourly_stat_time_hour.sql', 'original_file_path': 'models\\stg_tiktok_ads.yml', 'unique_id': 'test.tiktok_ads_source.not_null_stg_tiktok_ads__ad_report_hourly_stat_time_hour.9e2a2dca81', 'fqn': ['tiktok_ads_source', 'not_null_stg_tiktok_ads__ad_report_hourly_stat_time_hour'], 'alias': 'not_null_stg_tiktok_ads__ad_report_hourly_stat_time_hour', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.418756, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_report_hourly']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly']}, 'compiled_path': None, 'column_name': 'stat_time_hour', 'file_key_name': 'models.stg_tiktok_ads__ad_report_hourly'}, 'test.tiktok_ads_source.dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_report_hourly_ad_id__stat_time_hour.e70f8cef6d': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'stat_time_hour'], 'model': "{{ get_where_subquery(ref('stg_tiktok_ads__ad_report_hourly')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_report_hourly_ad_id__stat_time_hour', 'resource_type': 'test', 'package_name': 'tiktok_ads_source', 'path': 'dbt_utils_unique_combination_o_e6913172297a173fb855f92cf72b08dc.sql', 'original_file_path': 'models\\stg_tiktok_ads.yml', 'unique_id': 'test.tiktok_ads_source.dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_report_hourly_ad_id__stat_time_hour.e70f8cef6d', 'fqn': ['tiktok_ads_source', 'dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_report_hourly_ad_id__stat_time_hour'], 'alias': 'dbt_utils_unique_combination_o_e6913172297a173fb855f92cf72b08dc', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_e6913172297a173fb855f92cf72b08dc', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_e6913172297a173fb855f92cf72b08dc'}, 'created_at': 1694433487.420758, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_e6913172297a173fb855f92cf72b08dc'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_e6913172297a173fb855f92cf72b08dc") }}', 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_report_hourly']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_tiktok_ads__ad_report_hourly'}, 'test.tiktok_ads_source.not_null_stg_tiktok_ads__ad_group_report_hourly_ad_group_id.8da17119f1': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('stg_tiktok_ads__ad_group_report_hourly')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_tiktok_ads__ad_group_report_hourly_ad_group_id', 'resource_type': 'test', 'package_name': 'tiktok_ads_source', 'path': 'not_null_stg_tiktok_ads__ad_group_report_hourly_ad_group_id.sql', 'original_file_path': 'models\\stg_tiktok_ads.yml', 'unique_id': 'test.tiktok_ads_source.not_null_stg_tiktok_ads__ad_group_report_hourly_ad_group_id.8da17119f1', 'fqn': ['tiktok_ads_source', 'not_null_stg_tiktok_ads__ad_group_report_hourly_ad_group_id'], 'alias': 'not_null_stg_tiktok_ads__ad_group_report_hourly_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.4247584, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_group_report_hourly']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly']}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.stg_tiktok_ads__ad_group_report_hourly'}, 'test.tiktok_ads_source.not_null_stg_tiktok_ads__ad_group_report_hourly_stat_time_hour.ca4b495127': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'stat_time_hour', 'model': "{{ get_where_subquery(ref('stg_tiktok_ads__ad_group_report_hourly')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_tiktok_ads__ad_group_report_hourly_stat_time_hour', 'resource_type': 'test', 'package_name': 'tiktok_ads_source', 'path': 'not_null_stg_tiktok_ads__ad_group_report_hourly_stat_time_hour.sql', 'original_file_path': 'models\\stg_tiktok_ads.yml', 'unique_id': 'test.tiktok_ads_source.not_null_stg_tiktok_ads__ad_group_report_hourly_stat_time_hour.ca4b495127', 'fqn': ['tiktok_ads_source', 'not_null_stg_tiktok_ads__ad_group_report_hourly_stat_time_hour'], 'alias': 'not_null_stg_tiktok_ads__ad_group_report_hourly_stat_time_hour', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.4257581, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_group_report_hourly']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly']}, 'compiled_path': None, 'column_name': 'stat_time_hour', 'file_key_name': 'models.stg_tiktok_ads__ad_group_report_hourly'}, 'test.tiktok_ads_source.dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_group_report_hourly_ad_group_id__stat_time_hour.1aeaeb71ad': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_group_id', 'stat_time_hour'], 'model': "{{ get_where_subquery(ref('stg_tiktok_ads__ad_group_report_hourly')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_group_report_hourly_ad_group_id__stat_time_hour', 'resource_type': 'test', 'package_name': 'tiktok_ads_source', 'path': 'dbt_utils_unique_combination_o_b8146651452c0bd776f5ad7184463e60.sql', 'original_file_path': 'models\\stg_tiktok_ads.yml', 'unique_id': 'test.tiktok_ads_source.dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_group_report_hourly_ad_group_id__stat_time_hour.1aeaeb71ad', 'fqn': ['tiktok_ads_source', 'dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_group_report_hourly_ad_group_id__stat_time_hour'], 'alias': 'dbt_utils_unique_combination_o_b8146651452c0bd776f5ad7184463e60', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_b8146651452c0bd776f5ad7184463e60', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_b8146651452c0bd776f5ad7184463e60'}, 'created_at': 1694433487.4283385, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_b8146651452c0bd776f5ad7184463e60'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_b8146651452c0bd776f5ad7184463e60") }}', 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_group_report_hourly']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_tiktok_ads__ad_group_report_hourly'}, 'test.tiktok_ads_source.not_null_stg_tiktok_ads__campaign_report_hourly_campaign_id.ef898379fb': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_tiktok_ads__campaign_report_hourly')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_tiktok_ads__campaign_report_hourly_campaign_id', 'resource_type': 'test', 'package_name': 'tiktok_ads_source', 'path': 'not_null_stg_tiktok_ads__campaign_report_hourly_campaign_id.sql', 'original_file_path': 'models\\stg_tiktok_ads.yml', 'unique_id': 'test.tiktok_ads_source.not_null_stg_tiktok_ads__campaign_report_hourly_campaign_id.ef898379fb', 'fqn': ['tiktok_ads_source', 'not_null_stg_tiktok_ads__campaign_report_hourly_campaign_id'], 'alias': 'not_null_stg_tiktok_ads__campaign_report_hourly_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.4323416, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_tiktok_ads__campaign_report_hourly']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly']}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_tiktok_ads__campaign_report_hourly'}, 'test.tiktok_ads_source.not_null_stg_tiktok_ads__campaign_report_hourly_stat_time_hour.e75e13184c': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'stat_time_hour', 'model': "{{ get_where_subquery(ref('stg_tiktok_ads__campaign_report_hourly')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_tiktok_ads__campaign_report_hourly_stat_time_hour', 'resource_type': 'test', 'package_name': 'tiktok_ads_source', 'path': 'not_null_stg_tiktok_ads__campaign_report_hourly_stat_time_hour.sql', 'original_file_path': 'models\\stg_tiktok_ads.yml', 'unique_id': 'test.tiktok_ads_source.not_null_stg_tiktok_ads__campaign_report_hourly_stat_time_hour.e75e13184c', 'fqn': ['tiktok_ads_source', 'not_null_stg_tiktok_ads__campaign_report_hourly_stat_time_hour'], 'alias': 'not_null_stg_tiktok_ads__campaign_report_hourly_stat_time_hour', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.4343412, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_tiktok_ads__campaign_report_hourly']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly']}, 'compiled_path': None, 'column_name': 'stat_time_hour', 'file_key_name': 'models.stg_tiktok_ads__campaign_report_hourly'}, 'test.tiktok_ads_source.dbt_utils_unique_combination_of_columns_stg_tiktok_ads__campaign_report_hourly_campaign_id__stat_time_hour.8e4a1e4b34': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', 'stat_time_hour'], 'model': "{{ get_where_subquery(ref('stg_tiktok_ads__campaign_report_hourly')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_tiktok_ads__campaign_report_hourly_campaign_id__stat_time_hour', 'resource_type': 'test', 'package_name': 'tiktok_ads_source', 'path': 'dbt_utils_unique_combination_o_28d20c1f14a23926a21e229d68eb6b16.sql', 'original_file_path': 'models\\stg_tiktok_ads.yml', 'unique_id': 'test.tiktok_ads_source.dbt_utils_unique_combination_of_columns_stg_tiktok_ads__campaign_report_hourly_campaign_id__stat_time_hour.8e4a1e4b34', 'fqn': ['tiktok_ads_source', 'dbt_utils_unique_combination_of_columns_stg_tiktok_ads__campaign_report_hourly_campaign_id__stat_time_hour'], 'alias': 'dbt_utils_unique_combination_o_28d20c1f14a23926a21e229d68eb6b16', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_28d20c1f14a23926a21e229d68eb6b16', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_28d20c1f14a23926a21e229d68eb6b16'}, 'created_at': 1694433487.4353411, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_28d20c1f14a23926a21e229d68eb6b16'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_28d20c1f14a23926a21e229d68eb6b16") }}', 'language': 'sql', 'refs': [['stg_tiktok_ads__campaign_report_hourly']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_tiktok_ads__campaign_report_hourly'}, 'test.twitter_ads.not_null_twitter_ads__campaign_report_campaign_id.03b1c451b8': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('twitter_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_twitter_ads__campaign_report_campaign_id', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'not_null_twitter_ads__campaign_report_campaign_id.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.not_null_twitter_ads__campaign_report_campaign_id.03b1c451b8', 'fqn': ['twitter_ads', 'not_null_twitter_ads__campaign_report_campaign_id'], 'alias': 'not_null_twitter_ads__campaign_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.5587184, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['twitter_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads.twitter_ads__campaign_report']}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.twitter_ads__campaign_report'}, 'test.twitter_ads.not_null_twitter_ads__campaign_report_date_day.2b30b279b0': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('twitter_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_twitter_ads__campaign_report_date_day', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'not_null_twitter_ads__campaign_report_date_day.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.not_null_twitter_ads__campaign_report_date_day.2b30b279b0', 'fqn': ['twitter_ads', 'not_null_twitter_ads__campaign_report_date_day'], 'alias': 'not_null_twitter_ads__campaign_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.5597985, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['twitter_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads.twitter_ads__campaign_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.twitter_ads__campaign_report'}, 'test.twitter_ads.not_null_twitter_ads__campaign_report_placement.c66d252e82': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'placement', 'model': "{{ get_where_subquery(ref('twitter_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_twitter_ads__campaign_report_placement', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'not_null_twitter_ads__campaign_report_placement.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.not_null_twitter_ads__campaign_report_placement.c66d252e82', 'fqn': ['twitter_ads', 'not_null_twitter_ads__campaign_report_placement'], 'alias': 'not_null_twitter_ads__campaign_report_placement', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.561883, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['twitter_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads.twitter_ads__campaign_report']}, 'compiled_path': None, 'column_name': 'placement', 'file_key_name': 'models.twitter_ads__campaign_report'}, 'test.twitter_ads.dbt_utils_unique_combination_of_columns_twitter_ads__campaign_report_date_day__campaign_id__placement__account_id.2b09fa5421': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'campaign_id', 'placement', 'account_id'], 'model': "{{ get_where_subquery(ref('twitter_ads__campaign_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_twitter_ads__campaign_report_date_day__campaign_id__placement__account_id', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'dbt_utils_unique_combination_o_f0c2d7aacdea4290554fab175e962a63.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.dbt_utils_unique_combination_of_columns_twitter_ads__campaign_report_date_day__campaign_id__placement__account_id.2b09fa5421', 'fqn': ['twitter_ads', 'dbt_utils_unique_combination_of_columns_twitter_ads__campaign_report_date_day__campaign_id__placement__account_id'], 'alias': 'dbt_utils_unique_combination_o_f0c2d7aacdea4290554fab175e962a63', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_f0c2d7aacdea4290554fab175e962a63', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_f0c2d7aacdea4290554fab175e962a63'}, 'created_at': 1694433487.5628881, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_f0c2d7aacdea4290554fab175e962a63'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_f0c2d7aacdea4290554fab175e962a63") }}', 'language': 'sql', 'refs': [['twitter_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.twitter_ads.twitter_ads__campaign_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.twitter_ads__campaign_report'}, 'test.twitter_ads.not_null_twitter_ads__line_item_report_date_day.86c934e8ce': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('twitter_ads__line_item_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_twitter_ads__line_item_report_date_day', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'not_null_twitter_ads__line_item_report_date_day.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.not_null_twitter_ads__line_item_report_date_day.86c934e8ce', 'fqn': ['twitter_ads', 'not_null_twitter_ads__line_item_report_date_day'], 'alias': 'not_null_twitter_ads__line_item_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.5689535, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['twitter_ads__line_item_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads.twitter_ads__line_item_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.twitter_ads__line_item_report'}, 'test.twitter_ads.not_null_twitter_ads__line_item_report_line_item_id.0462d58211': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'line_item_id', 'model': "{{ get_where_subquery(ref('twitter_ads__line_item_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_twitter_ads__line_item_report_line_item_id', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'not_null_twitter_ads__line_item_report_line_item_id.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.not_null_twitter_ads__line_item_report_line_item_id.0462d58211', 'fqn': ['twitter_ads', 'not_null_twitter_ads__line_item_report_line_item_id'], 'alias': 'not_null_twitter_ads__line_item_report_line_item_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.5710442, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['twitter_ads__line_item_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads.twitter_ads__line_item_report']}, 'compiled_path': None, 'column_name': 'line_item_id', 'file_key_name': 'models.twitter_ads__line_item_report'}, 'test.twitter_ads.not_null_twitter_ads__line_item_report_placement.f103369312': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'placement', 'model': "{{ get_where_subquery(ref('twitter_ads__line_item_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_twitter_ads__line_item_report_placement', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'not_null_twitter_ads__line_item_report_placement.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.not_null_twitter_ads__line_item_report_placement.f103369312', 'fqn': ['twitter_ads', 'not_null_twitter_ads__line_item_report_placement'], 'alias': 'not_null_twitter_ads__line_item_report_placement', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.5729668, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['twitter_ads__line_item_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads.twitter_ads__line_item_report']}, 'compiled_path': None, 'column_name': 'placement', 'file_key_name': 'models.twitter_ads__line_item_report'}, 'test.twitter_ads.dbt_utils_unique_combination_of_columns_twitter_ads__line_item_report_date_day__line_item_id__placement__campaign_id__account_id.0e972e010a': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'line_item_id', 'placement', 'campaign_id', 'account_id'], 'model': "{{ get_where_subquery(ref('twitter_ads__line_item_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_twitter_ads__line_item_report_date_day__line_item_id__placement__campaign_id__account_id', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'dbt_utils_unique_combination_o_fe15946b61e393e614a50ba3e361c168.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.dbt_utils_unique_combination_of_columns_twitter_ads__line_item_report_date_day__line_item_id__placement__campaign_id__account_id.0e972e010a', 'fqn': ['twitter_ads', 'dbt_utils_unique_combination_of_columns_twitter_ads__line_item_report_date_day__line_item_id__placement__campaign_id__account_id'], 'alias': 'dbt_utils_unique_combination_o_fe15946b61e393e614a50ba3e361c168', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_fe15946b61e393e614a50ba3e361c168', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_fe15946b61e393e614a50ba3e361c168'}, 'created_at': 1694433487.5739658, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_fe15946b61e393e614a50ba3e361c168'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_fe15946b61e393e614a50ba3e361c168") }}', 'language': 'sql', 'refs': [['twitter_ads__line_item_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.twitter_ads.twitter_ads__line_item_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.twitter_ads__line_item_report'}, 'test.twitter_ads.not_null_twitter_ads__account_report_date_day.84896c5846': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('twitter_ads__account_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_twitter_ads__account_report_date_day', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'not_null_twitter_ads__account_report_date_day.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.not_null_twitter_ads__account_report_date_day.84896c5846', 'fqn': ['twitter_ads', 'not_null_twitter_ads__account_report_date_day'], 'alias': 'not_null_twitter_ads__account_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.579711, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['twitter_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads.twitter_ads__account_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.twitter_ads__account_report'}, 'test.twitter_ads.not_null_twitter_ads__account_report_placement.157dcb6194': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'placement', 'model': "{{ get_where_subquery(ref('twitter_ads__account_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_twitter_ads__account_report_placement', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'not_null_twitter_ads__account_report_placement.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.not_null_twitter_ads__account_report_placement.157dcb6194', 'fqn': ['twitter_ads', 'not_null_twitter_ads__account_report_placement'], 'alias': 'not_null_twitter_ads__account_report_placement', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.580709, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['twitter_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads.twitter_ads__account_report']}, 'compiled_path': None, 'column_name': 'placement', 'file_key_name': 'models.twitter_ads__account_report'}, 'test.twitter_ads.not_null_twitter_ads__account_report_account_id.90d5808908': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('twitter_ads__account_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_twitter_ads__account_report_account_id', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'not_null_twitter_ads__account_report_account_id.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.not_null_twitter_ads__account_report_account_id.90d5808908', 'fqn': ['twitter_ads', 'not_null_twitter_ads__account_report_account_id'], 'alias': 'not_null_twitter_ads__account_report_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.58247, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['twitter_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads.twitter_ads__account_report']}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.twitter_ads__account_report'}, 'test.twitter_ads.dbt_utils_unique_combination_of_columns_twitter_ads__account_report_date_day__account_id__placement.a29cf85a4f': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'placement'], 'model': "{{ get_where_subquery(ref('twitter_ads__account_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_twitter_ads__account_report_date_day__account_id__placement', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'dbt_utils_unique_combination_o_75283810b353bfd3176c68c506c1da2f.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.dbt_utils_unique_combination_of_columns_twitter_ads__account_report_date_day__account_id__placement.a29cf85a4f', 'fqn': ['twitter_ads', 'dbt_utils_unique_combination_of_columns_twitter_ads__account_report_date_day__account_id__placement'], 'alias': 'dbt_utils_unique_combination_o_75283810b353bfd3176c68c506c1da2f', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_75283810b353bfd3176c68c506c1da2f', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_75283810b353bfd3176c68c506c1da2f'}, 'created_at': 1694433487.5845408, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_75283810b353bfd3176c68c506c1da2f'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_75283810b353bfd3176c68c506c1da2f") }}', 'language': 'sql', 'refs': [['twitter_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.twitter_ads.twitter_ads__account_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.twitter_ads__account_report'}, 'test.twitter_ads.not_null_twitter_ads__keyword_report_date_day.e0ce90c1ec': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('twitter_ads__keyword_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_twitter_ads__keyword_report_date_day', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'not_null_twitter_ads__keyword_report_date_day.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.not_null_twitter_ads__keyword_report_date_day.e0ce90c1ec', 'fqn': ['twitter_ads', 'not_null_twitter_ads__keyword_report_date_day'], 'alias': 'not_null_twitter_ads__keyword_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.590091, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['twitter_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads.twitter_ads__keyword_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.twitter_ads__keyword_report'}, 'test.twitter_ads.not_null_twitter_ads__keyword_report_keyword_id.91efa0a538': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'keyword_id', 'model': "{{ get_where_subquery(ref('twitter_ads__keyword_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_twitter_ads__keyword_report_keyword_id', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'not_null_twitter_ads__keyword_report_keyword_id.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.not_null_twitter_ads__keyword_report_keyword_id.91efa0a538', 'fqn': ['twitter_ads', 'not_null_twitter_ads__keyword_report_keyword_id'], 'alias': 'not_null_twitter_ads__keyword_report_keyword_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.5910907, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['twitter_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads.twitter_ads__keyword_report']}, 'compiled_path': None, 'column_name': 'keyword_id', 'file_key_name': 'models.twitter_ads__keyword_report'}, 'test.twitter_ads.dbt_utils_unique_combination_of_columns_twitter_ads__keyword_report_date_day__keyword_id__campaign_id.bb43190c39': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'keyword_id', 'campaign_id'], 'model': "{{ get_where_subquery(ref('twitter_ads__keyword_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_twitter_ads__keyword_report_date_day__keyword_id__campaign_id', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'dbt_utils_unique_combination_o_5dd02ea4aea03fbc902c8987427642b1.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.dbt_utils_unique_combination_of_columns_twitter_ads__keyword_report_date_day__keyword_id__campaign_id.bb43190c39', 'fqn': ['twitter_ads', 'dbt_utils_unique_combination_of_columns_twitter_ads__keyword_report_date_day__keyword_id__campaign_id'], 'alias': 'dbt_utils_unique_combination_o_5dd02ea4aea03fbc902c8987427642b1', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_5dd02ea4aea03fbc902c8987427642b1', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_5dd02ea4aea03fbc902c8987427642b1'}, 'created_at': 1694433487.5930908, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_5dd02ea4aea03fbc902c8987427642b1'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_5dd02ea4aea03fbc902c8987427642b1") }}', 'language': 'sql', 'refs': [['twitter_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.twitter_ads.twitter_ads__keyword_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.twitter_ads__keyword_report'}, 'test.twitter_ads.not_null_twitter_ads__promoted_tweet_report_placement.d89c9b27e5': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'placement', 'model': "{{ get_where_subquery(ref('twitter_ads__promoted_tweet_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_twitter_ads__promoted_tweet_report_placement', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'not_null_twitter_ads__promoted_tweet_report_placement.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.not_null_twitter_ads__promoted_tweet_report_placement.d89c9b27e5', 'fqn': ['twitter_ads', 'not_null_twitter_ads__promoted_tweet_report_placement'], 'alias': 'not_null_twitter_ads__promoted_tweet_report_placement', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.5975962, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['twitter_ads__promoted_tweet_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads.twitter_ads__promoted_tweet_report']}, 'compiled_path': None, 'column_name': 'placement', 'file_key_name': 'models.twitter_ads__promoted_tweet_report'}, 'test.twitter_ads.not_null_twitter_ads__promoted_tweet_report_promoted_tweet_id.5df08e154e': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'promoted_tweet_id', 'model': "{{ get_where_subquery(ref('twitter_ads__promoted_tweet_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_twitter_ads__promoted_tweet_report_promoted_tweet_id', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'not_null_twitter_ads__promoted_tweet_report_promoted_tweet_id.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.not_null_twitter_ads__promoted_tweet_report_promoted_tweet_id.5df08e154e', 'fqn': ['twitter_ads', 'not_null_twitter_ads__promoted_tweet_report_promoted_tweet_id'], 'alias': 'not_null_twitter_ads__promoted_tweet_report_promoted_tweet_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.5996, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['twitter_ads__promoted_tweet_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads.twitter_ads__promoted_tweet_report']}, 'compiled_path': None, 'column_name': 'promoted_tweet_id', 'file_key_name': 'models.twitter_ads__promoted_tweet_report'}, 'test.twitter_ads.dbt_utils_unique_combination_of_columns_twitter_ads__promoted_tweet_report_date_day__promoted_tweet_id__placement__line_item_id__campaign_id__account_id.a46b1b4082': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'promoted_tweet_id', 'placement', 'line_item_id', 'campaign_id', 'account_id'], 'model': "{{ get_where_subquery(ref('twitter_ads__promoted_tweet_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_twitter_ads__promoted_tweet_report_date_day__promoted_tweet_id__placement__line_item_id__campaign_id__account_id', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'dbt_utils_unique_combination_o_b6b8c6a3d568e7fb95f74b1851950fe1.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.dbt_utils_unique_combination_of_columns_twitter_ads__promoted_tweet_report_date_day__promoted_tweet_id__placement__line_item_id__campaign_id__account_id.a46b1b4082', 'fqn': ['twitter_ads', 'dbt_utils_unique_combination_of_columns_twitter_ads__promoted_tweet_report_date_day__promoted_tweet_id__placement__line_item_id__campaign_id__account_id'], 'alias': 'dbt_utils_unique_combination_o_b6b8c6a3d568e7fb95f74b1851950fe1', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_b6b8c6a3d568e7fb95f74b1851950fe1', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_b6b8c6a3d568e7fb95f74b1851950fe1'}, 'created_at': 1694433487.6006002, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_b6b8c6a3d568e7fb95f74b1851950fe1'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_b6b8c6a3d568e7fb95f74b1851950fe1") }}', 'language': 'sql', 'refs': [['twitter_ads__promoted_tweet_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.twitter_ads.twitter_ads__promoted_tweet_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.twitter_ads__promoted_tweet_report'}, 'test.twitter_ads.not_null_twitter_ads__url_report_date_day.33fcb7e04b': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('twitter_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_twitter_ads__url_report_date_day', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'not_null_twitter_ads__url_report_date_day.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.not_null_twitter_ads__url_report_date_day.33fcb7e04b', 'fqn': ['twitter_ads', 'not_null_twitter_ads__url_report_date_day'], 'alias': 'not_null_twitter_ads__url_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.6056004, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['twitter_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads.twitter_ads__url_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.twitter_ads__url_report'}, 'test.twitter_ads.not_null_twitter_ads__url_report_placement.92ca3b192e': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'placement', 'model': "{{ get_where_subquery(ref('twitter_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_twitter_ads__url_report_placement', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'not_null_twitter_ads__url_report_placement.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.not_null_twitter_ads__url_report_placement.92ca3b192e', 'fqn': ['twitter_ads', 'not_null_twitter_ads__url_report_placement'], 'alias': 'not_null_twitter_ads__url_report_placement', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.60818, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['twitter_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads.twitter_ads__url_report']}, 'compiled_path': None, 'column_name': 'placement', 'file_key_name': 'models.twitter_ads__url_report'}, 'test.twitter_ads.not_null_twitter_ads__url_report_promoted_tweet_id.d690f99143': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'promoted_tweet_id', 'model': "{{ get_where_subquery(ref('twitter_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_twitter_ads__url_report_promoted_tweet_id', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'not_null_twitter_ads__url_report_promoted_tweet_id.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.not_null_twitter_ads__url_report_promoted_tweet_id.d690f99143', 'fqn': ['twitter_ads', 'not_null_twitter_ads__url_report_promoted_tweet_id'], 'alias': 'not_null_twitter_ads__url_report_promoted_tweet_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.60918, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['twitter_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads.twitter_ads__url_report']}, 'compiled_path': None, 'column_name': 'promoted_tweet_id', 'file_key_name': 'models.twitter_ads__url_report'}, 'test.twitter_ads.not_null_twitter_ads__url_report_base_url.dfd7ab549e': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'base_url', 'model': "{{ get_where_subquery(ref('twitter_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_twitter_ads__url_report_base_url', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'not_null_twitter_ads__url_report_base_url.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.not_null_twitter_ads__url_report_base_url.dfd7ab549e', 'fqn': ['twitter_ads', 'not_null_twitter_ads__url_report_base_url'], 'alias': 'not_null_twitter_ads__url_report_base_url', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True}, 'created_at': 1694433487.612182, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(enabled=True) }}', 'language': 'sql', 'refs': [['twitter_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads.twitter_ads__url_report']}, 'compiled_path': None, 'column_name': 'base_url', 'file_key_name': 'models.twitter_ads__url_report'}, 'test.twitter_ads.dbt_utils_unique_combination_of_columns_twitter_ads__url_report_date_day__promoted_tweet_id__placement__line_item_id__campaign_id__account_id.30b826d8ff': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'promoted_tweet_id', 'placement', 'line_item_id', 'campaign_id', 'account_id'], 'model': "{{ get_where_subquery(ref('twitter_ads__url_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_twitter_ads__url_report_date_day__promoted_tweet_id__placement__line_item_id__campaign_id__account_id', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'dbt_utils_unique_combination_o_1e39c518397cb3ec9468966307298ff7.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.dbt_utils_unique_combination_of_columns_twitter_ads__url_report_date_day__promoted_tweet_id__placement__line_item_id__campaign_id__account_id.30b826d8ff', 'fqn': ['twitter_ads', 'dbt_utils_unique_combination_of_columns_twitter_ads__url_report_date_day__promoted_tweet_id__placement__line_item_id__campaign_id__account_id'], 'alias': 'dbt_utils_unique_combination_o_1e39c518397cb3ec9468966307298ff7', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_1e39c518397cb3ec9468966307298ff7', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_1e39c518397cb3ec9468966307298ff7'}, 'created_at': 1694433487.6141822, 'config_call_dict': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_1e39c518397cb3ec9468966307298ff7'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(enabled=True,alias="dbt_utils_unique_combination_o_1e39c518397cb3ec9468966307298ff7") }}', 'language': 'sql', 'refs': [['twitter_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.twitter_ads.twitter_ads__url_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.twitter_ads__url_report'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__account_history_account_id.66fb3601e2': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__account_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__account_history_account_id', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__account_history_account_id.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__account_history_account_id.66fb3601e2', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__account_history_account_id'], 'alias': 'not_null_stg_twitter_ads__account_history_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.7039413, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_twitter_ads__account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__account_history']}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.stg_twitter_ads__account_history'}, 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__account_history_account_id__updated_timestamp.2725b1ff40': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['account_id', 'updated_timestamp'], 'model': "{{ get_where_subquery(ref('stg_twitter_ads__account_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__account_history_account_id__updated_timestamp', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'dbt_utils_unique_combination_o_568d1f63aee1f98c5b03795b1c7ce6e0.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__account_history_account_id__updated_timestamp.2725b1ff40', 'fqn': ['twitter_ads_source', 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__account_history_account_id__updated_timestamp'], 'alias': 'dbt_utils_unique_combination_o_568d1f63aee1f98c5b03795b1c7ce6e0', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_568d1f63aee1f98c5b03795b1c7ce6e0', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_568d1f63aee1f98c5b03795b1c7ce6e0'}, 'created_at': 1694433487.70593, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_568d1f63aee1f98c5b03795b1c7ce6e0'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_568d1f63aee1f98c5b03795b1c7ce6e0") }}', 'language': 'sql', 'refs': [['stg_twitter_ads__account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__account_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_twitter_ads__account_history'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__campaign_history_campaign_id.51218487ce': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__campaign_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__campaign_history_campaign_id', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__campaign_history_campaign_id.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__campaign_history_campaign_id.51218487ce', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__campaign_history_campaign_id'], 'alias': 'not_null_stg_twitter_ads__campaign_history_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.7111511, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_twitter_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__campaign_history']}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_twitter_ads__campaign_history'}, 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__campaign_history_campaign_id__updated_timestamp.c7054e5b55': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', 'updated_timestamp'], 'model': "{{ get_where_subquery(ref('stg_twitter_ads__campaign_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__campaign_history_campaign_id__updated_timestamp', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'dbt_utils_unique_combination_o_3a2db0bbb04188c2d34d0a3918a671e2.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__campaign_history_campaign_id__updated_timestamp.c7054e5b55', 'fqn': ['twitter_ads_source', 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__campaign_history_campaign_id__updated_timestamp'], 'alias': 'dbt_utils_unique_combination_o_3a2db0bbb04188c2d34d0a3918a671e2', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_3a2db0bbb04188c2d34d0a3918a671e2', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_3a2db0bbb04188c2d34d0a3918a671e2'}, 'created_at': 1694433487.7131512, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_3a2db0bbb04188c2d34d0a3918a671e2'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_3a2db0bbb04188c2d34d0a3918a671e2") }}', 'language': 'sql', 'refs': [['stg_twitter_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__campaign_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_twitter_ads__campaign_history'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__line_item_history_line_item_id.2cef040809': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'line_item_id', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__line_item_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__line_item_history_line_item_id', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__line_item_history_line_item_id.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__line_item_history_line_item_id.2cef040809', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__line_item_history_line_item_id'], 'alias': 'not_null_stg_twitter_ads__line_item_history_line_item_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.7186592, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_twitter_ads__line_item_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__line_item_history']}, 'compiled_path': None, 'column_name': 'line_item_id', 'file_key_name': 'models.stg_twitter_ads__line_item_history'}, 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__line_item_history_line_item_id__updated_timestamp.b12672e022': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['line_item_id', 'updated_timestamp'], 'model': "{{ get_where_subquery(ref('stg_twitter_ads__line_item_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__line_item_history_line_item_id__updated_timestamp', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'dbt_utils_unique_combination_o_46813227544cee5d3f0e709e692abea3.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__line_item_history_line_item_id__updated_timestamp.b12672e022', 'fqn': ['twitter_ads_source', 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__line_item_history_line_item_id__updated_timestamp'], 'alias': 'dbt_utils_unique_combination_o_46813227544cee5d3f0e709e692abea3', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_46813227544cee5d3f0e709e692abea3', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_46813227544cee5d3f0e709e692abea3'}, 'created_at': 1694433487.719661, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_46813227544cee5d3f0e709e692abea3'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_46813227544cee5d3f0e709e692abea3") }}', 'language': 'sql', 'refs': [['stg_twitter_ads__line_item_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__line_item_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_twitter_ads__line_item_history'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__promoted_tweet_history_promoted_tweet_id.f447a1cd09': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'promoted_tweet_id', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__promoted_tweet_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__promoted_tweet_history_promoted_tweet_id', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__prom_b9fd075f90e22952cf35b8a246a98976.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__promoted_tweet_history_promoted_tweet_id.f447a1cd09', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__promoted_tweet_history_promoted_tweet_id'], 'alias': 'not_null_stg_twitter_ads__prom_b9fd075f90e22952cf35b8a246a98976', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'not_null_stg_twitter_ads__prom_b9fd075f90e22952cf35b8a246a98976', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'not_null_stg_twitter_ads__prom_b9fd075f90e22952cf35b8a246a98976'}, 'created_at': 1694433487.7246614, 'config_call_dict': {'alias': 'not_null_stg_twitter_ads__prom_b9fd075f90e22952cf35b8a246a98976'}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias="not_null_stg_twitter_ads__prom_b9fd075f90e22952cf35b8a246a98976") }}', 'language': 'sql', 'refs': [['stg_twitter_ads__promoted_tweet_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history']}, 'compiled_path': None, 'column_name': 'promoted_tweet_id', 'file_key_name': 'models.stg_twitter_ads__promoted_tweet_history'}, 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__promoted_tweet_history_promoted_tweet_id__updated_timestamp.dddc4a21ef': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['promoted_tweet_id', 'updated_timestamp'], 'model': "{{ get_where_subquery(ref('stg_twitter_ads__promoted_tweet_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__promoted_tweet_history_promoted_tweet_id__updated_timestamp', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'dbt_utils_unique_combination_o_d9257bc7a9cdb33491e1f7fe6f42bbca.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__promoted_tweet_history_promoted_tweet_id__updated_timestamp.dddc4a21ef', 'fqn': ['twitter_ads_source', 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__promoted_tweet_history_promoted_tweet_id__updated_timestamp'], 'alias': 'dbt_utils_unique_combination_o_d9257bc7a9cdb33491e1f7fe6f42bbca', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_d9257bc7a9cdb33491e1f7fe6f42bbca', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_d9257bc7a9cdb33491e1f7fe6f42bbca'}, 'created_at': 1694433487.725661, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_d9257bc7a9cdb33491e1f7fe6f42bbca'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_d9257bc7a9cdb33491e1f7fe6f42bbca") }}', 'language': 'sql', 'refs': [['stg_twitter_ads__promoted_tweet_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_twitter_ads__promoted_tweet_history'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__promoted_tweet_report_date_day.c4c46a5894': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__promoted_tweet_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__promoted_tweet_report_date_day', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__promoted_tweet_report_date_day.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__promoted_tweet_report_date_day.c4c46a5894', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__promoted_tweet_report_date_day'], 'alias': 'not_null_stg_twitter_ads__promoted_tweet_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.7312274, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_twitter_ads__promoted_tweet_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_twitter_ads__promoted_tweet_report'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__promoted_tweet_report_promoted_tweet_id.6028694598': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'promoted_tweet_id', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__promoted_tweet_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__promoted_tweet_report_promoted_tweet_id', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__prom_46616b936836e80f58bf2b489d5247aa.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__promoted_tweet_report_promoted_tweet_id.6028694598', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__promoted_tweet_report_promoted_tweet_id'], 'alias': 'not_null_stg_twitter_ads__prom_46616b936836e80f58bf2b489d5247aa', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'not_null_stg_twitter_ads__prom_46616b936836e80f58bf2b489d5247aa', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'not_null_stg_twitter_ads__prom_46616b936836e80f58bf2b489d5247aa'}, 'created_at': 1694433487.7322273, 'config_call_dict': {'alias': 'not_null_stg_twitter_ads__prom_46616b936836e80f58bf2b489d5247aa'}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias="not_null_stg_twitter_ads__prom_46616b936836e80f58bf2b489d5247aa") }}', 'language': 'sql', 'refs': [['stg_twitter_ads__promoted_tweet_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report']}, 'compiled_path': None, 'column_name': 'promoted_tweet_id', 'file_key_name': 'models.stg_twitter_ads__promoted_tweet_report'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__promoted_tweet_report_placement.c1b1f648b3': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'placement', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__promoted_tweet_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__promoted_tweet_report_placement', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__promoted_tweet_report_placement.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__promoted_tweet_report_placement.c1b1f648b3', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__promoted_tweet_report_placement'], 'alias': 'not_null_stg_twitter_ads__promoted_tweet_report_placement', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.7342272, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_twitter_ads__promoted_tweet_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report']}, 'compiled_path': None, 'column_name': 'placement', 'file_key_name': 'models.stg_twitter_ads__promoted_tweet_report'}, 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__promoted_tweet_report_date_day__promoted_tweet_id__placement.7028206273': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'promoted_tweet_id', 'placement'], 'model': "{{ get_where_subquery(ref('stg_twitter_ads__promoted_tweet_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__promoted_tweet_report_date_day__promoted_tweet_id__placement', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'dbt_utils_unique_combination_o_3d583fe3c6abbb0e930d21030936ced9.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__promoted_tweet_report_date_day__promoted_tweet_id__placement.7028206273', 'fqn': ['twitter_ads_source', 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__promoted_tweet_report_date_day__promoted_tweet_id__placement'], 'alias': 'dbt_utils_unique_combination_o_3d583fe3c6abbb0e930d21030936ced9', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_3d583fe3c6abbb0e930d21030936ced9', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_3d583fe3c6abbb0e930d21030936ced9'}, 'created_at': 1694433487.7352273, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_3d583fe3c6abbb0e930d21030936ced9'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_3d583fe3c6abbb0e930d21030936ced9") }}', 'language': 'sql', 'refs': [['stg_twitter_ads__promoted_tweet_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_twitter_ads__promoted_tweet_report'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__tweet_url_index.e998fb67be': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'index', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__tweet_url')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__tweet_url_index', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__tweet_url_index.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__tweet_url_index.e998fb67be', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__tweet_url_index'], 'alias': 'not_null_stg_twitter_ads__tweet_url_index', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.73974, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_twitter_ads__tweet_url']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__tweet_url']}, 'compiled_path': None, 'column_name': 'index', 'file_key_name': 'models.stg_twitter_ads__tweet_url'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__tweet_url_tweet_id.f7e1670218': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'tweet_id', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__tweet_url')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__tweet_url_tweet_id', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__tweet_url_tweet_id.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__tweet_url_tweet_id.f7e1670218', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__tweet_url_tweet_id'], 'alias': 'not_null_stg_twitter_ads__tweet_url_tweet_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.7417395, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_twitter_ads__tweet_url']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__tweet_url']}, 'compiled_path': None, 'column_name': 'tweet_id', 'file_key_name': 'models.stg_twitter_ads__tweet_url'}, 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__tweet_url_index__tweet_id.eab5b85d74': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['index', 'tweet_id'], 'model': "{{ get_where_subquery(ref('stg_twitter_ads__tweet_url')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__tweet_url_index__tweet_id', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'dbt_utils_unique_combination_o_67f262d96b6883ebf74236649dcc0540.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__tweet_url_index__tweet_id.eab5b85d74', 'fqn': ['twitter_ads_source', 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__tweet_url_index__tweet_id'], 'alias': 'dbt_utils_unique_combination_o_67f262d96b6883ebf74236649dcc0540', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_67f262d96b6883ebf74236649dcc0540', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_67f262d96b6883ebf74236649dcc0540'}, 'created_at': 1694433487.7437382, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_67f262d96b6883ebf74236649dcc0540'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_67f262d96b6883ebf74236649dcc0540") }}', 'language': 'sql', 'refs': [['stg_twitter_ads__tweet_url']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__tweet_url']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_twitter_ads__tweet_url'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__campaign_report_date_day.053c09786c': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__campaign_report_date_day', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__campaign_report_date_day.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__campaign_report_date_day.053c09786c', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__campaign_report_date_day'], 'alias': 'not_null_stg_twitter_ads__campaign_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.7482858, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_twitter_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__campaign_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_twitter_ads__campaign_report'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__campaign_report_campaign_id.a63b62981f': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__campaign_report_campaign_id', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__campaign_report_campaign_id.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__campaign_report_campaign_id.a63b62981f', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__campaign_report_campaign_id'], 'alias': 'not_null_stg_twitter_ads__campaign_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.7502875, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_twitter_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__campaign_report']}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_twitter_ads__campaign_report'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__campaign_report_placement.5067d8c4f4': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'placement', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__campaign_report_placement', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__campaign_report_placement.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__campaign_report_placement.5067d8c4f4', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__campaign_report_placement'], 'alias': 'not_null_stg_twitter_ads__campaign_report_placement', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.7512877, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_twitter_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__campaign_report']}, 'compiled_path': None, 'column_name': 'placement', 'file_key_name': 'models.stg_twitter_ads__campaign_report'}, 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__campaign_report_date_day__campaign_id__placement.71102d8fdb': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'campaign_id', 'placement'], 'model': "{{ get_where_subquery(ref('stg_twitter_ads__campaign_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__campaign_report_date_day__campaign_id__placement', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'dbt_utils_unique_combination_o_8ea2fb330c061f42c1639904f6bdc5f0.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__campaign_report_date_day__campaign_id__placement.71102d8fdb', 'fqn': ['twitter_ads_source', 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__campaign_report_date_day__campaign_id__placement'], 'alias': 'dbt_utils_unique_combination_o_8ea2fb330c061f42c1639904f6bdc5f0', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_8ea2fb330c061f42c1639904f6bdc5f0', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_8ea2fb330c061f42c1639904f6bdc5f0'}, 'created_at': 1694433487.753288, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_8ea2fb330c061f42c1639904f6bdc5f0'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_8ea2fb330c061f42c1639904f6bdc5f0") }}', 'language': 'sql', 'refs': [['stg_twitter_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__campaign_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_twitter_ads__campaign_report'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__line_item_report_date_day.0f4d8cc8fe': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__line_item_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__line_item_report_date_day', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__line_item_report_date_day.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__line_item_report_date_day.0f4d8cc8fe', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__line_item_report_date_day'], 'alias': 'not_null_stg_twitter_ads__line_item_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.757794, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_twitter_ads__line_item_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__line_item_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_twitter_ads__line_item_report'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__line_item_report_line_item_id.9f5a4860b7': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'line_item_id', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__line_item_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__line_item_report_line_item_id', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__line_item_report_line_item_id.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__line_item_report_line_item_id.9f5a4860b7', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__line_item_report_line_item_id'], 'alias': 'not_null_stg_twitter_ads__line_item_report_line_item_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.7598004, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_twitter_ads__line_item_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__line_item_report']}, 'compiled_path': None, 'column_name': 'line_item_id', 'file_key_name': 'models.stg_twitter_ads__line_item_report'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__line_item_report_placement.cd7e77e0eb': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'placement', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__line_item_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__line_item_report_placement', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__line_item_report_placement.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__line_item_report_placement.cd7e77e0eb', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__line_item_report_placement'], 'alias': 'not_null_stg_twitter_ads__line_item_report_placement', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.7608, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_twitter_ads__line_item_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__line_item_report']}, 'compiled_path': None, 'column_name': 'placement', 'file_key_name': 'models.stg_twitter_ads__line_item_report'}, 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__line_item_report_date_day__line_item_id__placement.251e077e6b': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'line_item_id', 'placement'], 'model': "{{ get_where_subquery(ref('stg_twitter_ads__line_item_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__line_item_report_date_day__line_item_id__placement', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'dbt_utils_unique_combination_o_aaeab9295a1b92ec034614169e5444cb.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__line_item_report_date_day__line_item_id__placement.251e077e6b', 'fqn': ['twitter_ads_source', 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__line_item_report_date_day__line_item_id__placement'], 'alias': 'dbt_utils_unique_combination_o_aaeab9295a1b92ec034614169e5444cb', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_aaeab9295a1b92ec034614169e5444cb', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_aaeab9295a1b92ec034614169e5444cb'}, 'created_at': 1694433487.7628, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_aaeab9295a1b92ec034614169e5444cb'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_aaeab9295a1b92ec034614169e5444cb") }}', 'language': 'sql', 'refs': [['stg_twitter_ads__line_item_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__line_item_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_twitter_ads__line_item_report'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__line_item_keywords_report_keyword_id.e5f015e9ec': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'keyword_id', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__line_item_keywords_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__line_item_keywords_report_keyword_id', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__line_item_keywords_report_keyword_id.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__line_item_keywords_report_keyword_id.e5f015e9ec', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__line_item_keywords_report_keyword_id'], 'alias': 'not_null_stg_twitter_ads__line_item_keywords_report_keyword_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.7673805, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_twitter_ads__line_item_keywords_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report']}, 'compiled_path': None, 'column_name': 'keyword_id', 'file_key_name': 'models.stg_twitter_ads__line_item_keywords_report'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__line_item_keywords_report_date_day.c7e7155b13': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__line_item_keywords_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__line_item_keywords_report_date_day', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__line_item_keywords_report_date_day.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__line_item_keywords_report_date_day.c7e7155b13', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__line_item_keywords_report_date_day'], 'alias': 'not_null_stg_twitter_ads__line_item_keywords_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.769385, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_twitter_ads__line_item_keywords_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_twitter_ads__line_item_keywords_report'}, 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__line_item_keywords_report_date_day__keyword_id.fbb70cacf6': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'keyword_id'], 'model': "{{ get_where_subquery(ref('stg_twitter_ads__line_item_keywords_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__line_item_keywords_report_date_day__keyword_id', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'dbt_utils_unique_combination_o_e6d80438f6069924aabc58f58480a4b9.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__line_item_keywords_report_date_day__keyword_id.fbb70cacf6', 'fqn': ['twitter_ads_source', 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__line_item_keywords_report_date_day__keyword_id'], 'alias': 'dbt_utils_unique_combination_o_e6d80438f6069924aabc58f58480a4b9', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_e6d80438f6069924aabc58f58480a4b9', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_e6d80438f6069924aabc58f58480a4b9'}, 'created_at': 1694433487.7703848, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_e6d80438f6069924aabc58f58480a4b9'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_e6d80438f6069924aabc58f58480a4b9") }}', 'language': 'sql', 'refs': [['stg_twitter_ads__line_item_keywords_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_twitter_ads__line_item_keywords_report'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__tweet_tweet_id.a0427f37cd': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'tweet_id', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__tweet')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__tweet_tweet_id', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__tweet_tweet_id.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__tweet_tweet_id.a0427f37cd', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__tweet_tweet_id'], 'alias': 'not_null_stg_twitter_ads__tweet_tweet_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.7745817, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_twitter_ads__tweet']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__tweet']}, 'compiled_path': None, 'column_name': 'tweet_id', 'file_key_name': 'models.stg_twitter_ads__tweet'}, 'test.twitter_ads_source.unique_stg_twitter_ads__tweet_tweet_id.7e44536c95': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'tweet_id', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__tweet')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'unique_stg_twitter_ads__tweet_tweet_id', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'unique_stg_twitter_ads__tweet_tweet_id.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.unique_stg_twitter_ads__tweet_tweet_id.7e44536c95', 'fqn': ['twitter_ads_source', 'unique_stg_twitter_ads__tweet_tweet_id'], 'alias': 'unique_stg_twitter_ads__tweet_tweet_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.7755878, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_twitter_ads__tweet']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__tweet']}, 'compiled_path': None, 'column_name': 'tweet_id', 'file_key_name': 'models.stg_twitter_ads__tweet'}}
[0m19:27:44.722209 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': 'b8ac2fa5-b017-4e9c-b496-99dc0fd126f2', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8f2c70e160>]}
[0m19:28:15.365913 [error] [MainThread]: Encountered an error:
Parsing Error
  Invalid metrics config given in FilePath(searched_path='models', relative_path='ad_reporting_metrics.yml', modification_time=1679607043.0, project_root='/Users/mahdi/Downloads/dbt_drops/dbt_packages/ad_reporting') @ metrics: {'name': 'spend', 'label': 'Ad spend (Fivetran)', 'model': "ref('ad_reporting__ad_report')", 'calculation_method': 'sum', 'expression': 'spend', 'description': 'Total spend (in currency of individual platforms)', 'timestamp': 'date_day', 'time_grains': ['day', 'week', 'month'], 'dimensions': ['platform', 'campaign_id', 'campaign_name', 'ad_group_id', 'ad_group_name', 'ad_id', 'ad_name', 'account_id', 'account_name']} - at path []: 'type' is a required property
[0m19:28:15.396297 [debug] [MainThread]: Command `dbt run` failed at 19:28:15.383087 after 32.61 seconds
[0m19:28:15.399944 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8f28eb3d60>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8f29d6c4c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8f29d6c490>]}
[0m19:28:15.406091 [debug] [MainThread]: Flushing usage events
[0m19:28:44.093311 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fd9ea7070>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdcd92dc0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdcdc8880>]}


============================== 19:28:44.103676 | 40a49568-22e3-4b2f-afd8-5742f5579fcb ==============================
[0m19:28:44.103676 [info ] [MainThread]: Running with dbt=1.6.2
[0m19:28:44.104995 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'fail_fast': 'False', 'debug': 'False', 'log_path': '/Users/mahdi/Downloads/dbt_drops/logs', 'version_check': 'True', 'profiles_dir': '/Users/mahdi/.dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'log_format': 'default', 'static_parser': 'True', 'introspect': 'True', 'invocation_command': 'dbt deps', 'target_path': 'None', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'send_anonymous_usage_stats': 'True'}
[0m19:28:44.215687 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '40a49568-22e3-4b2f-afd8-5742f5579fcb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdcdc8d00>]}
[0m19:28:44.218072 [debug] [MainThread]: Set downloads directory='/var/folders/28/7564375907ngw3pfgfdbdqcc0000gp/T/dbt-downloads-kzltdvq3'
[0m19:28:44.219108 [debug] [MainThread]: Making package index registry request: GET https://hub.getdbt.com/api/v1/index.json
[0m19:28:45.570156 [debug] [MainThread]: Response from registry index: GET https://hub.getdbt.com/api/v1/index.json 200
[0m19:28:45.573615 [debug] [MainThread]: Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/ad_reporting.json
[0m19:28:46.198592 [debug] [MainThread]: Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/ad_reporting.json 200
[0m19:28:46.210524 [debug] [MainThread]: Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/apple_search_ads.json
[0m19:28:47.017171 [debug] [MainThread]: Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/apple_search_ads.json 200
[0m19:28:47.024949 [debug] [MainThread]: Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/snapchat_ads.json
[0m19:28:53.132596 [debug] [MainThread]: Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/snapchat_ads.json 200
[0m19:28:53.139202 [debug] [MainThread]: Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/facebook_ads.json
[0m19:28:53.981762 [debug] [MainThread]: Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/facebook_ads.json 200
[0m19:28:53.987783 [debug] [MainThread]: Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/google_ads.json
[0m19:28:54.799195 [debug] [MainThread]: Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/google_ads.json 200
[0m19:28:54.807365 [debug] [MainThread]: Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/pinterest.json
[0m19:28:55.416069 [debug] [MainThread]: Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/pinterest.json 200
[0m19:28:55.423956 [debug] [MainThread]: Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/linkedin.json
[0m19:28:56.233060 [debug] [MainThread]: Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/linkedin.json 200
[0m19:28:56.241198 [debug] [MainThread]: Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/microsoft_ads.json
[0m19:28:57.052539 [debug] [MainThread]: Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/microsoft_ads.json 200
[0m19:28:57.061086 [debug] [MainThread]: Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/tiktok_ads.json
[0m19:28:57.736759 [debug] [MainThread]: Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/tiktok_ads.json 200
[0m19:28:57.744336 [debug] [MainThread]: Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/twitter_ads.json
[0m19:28:58.335157 [debug] [MainThread]: Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/twitter_ads.json 200
[0m19:28:58.341945 [debug] [MainThread]: Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/amazon_ads.json
[0m19:28:59.087264 [debug] [MainThread]: Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/amazon_ads.json 200
[0m19:28:59.091938 [debug] [MainThread]: Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/reddit_ads.json
[0m19:28:59.919084 [debug] [MainThread]: Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/reddit_ads.json 200
[0m19:28:59.924328 [debug] [MainThread]: Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/apple_search_ads_source.json
[0m19:29:00.523156 [debug] [MainThread]: Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/apple_search_ads_source.json 200
[0m19:29:00.530095 [debug] [MainThread]: Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/snapchat_ads_source.json
[0m19:29:01.354534 [debug] [MainThread]: Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/snapchat_ads_source.json 200
[0m19:29:01.360992 [debug] [MainThread]: Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/facebook_ads_source.json
[0m19:29:01.967199 [debug] [MainThread]: Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/facebook_ads_source.json 200
[0m19:29:01.972837 [debug] [MainThread]: Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/google_ads_source.json
[0m19:29:02.786570 [debug] [MainThread]: Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/google_ads_source.json 200
[0m19:29:02.798054 [debug] [MainThread]: Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/pinterest_source.json
[0m19:29:03.441103 [debug] [MainThread]: Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/pinterest_source.json 200
[0m19:29:03.450701 [debug] [MainThread]: Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/linkedin_source.json
[0m19:29:04.424581 [debug] [MainThread]: Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/linkedin_source.json 200
[0m19:29:04.431267 [debug] [MainThread]: Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/microsoft_ads_source.json
[0m19:29:05.243915 [debug] [MainThread]: Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/microsoft_ads_source.json 200
[0m19:29:05.250899 [debug] [MainThread]: Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/tiktok_ads_source.json
[0m19:29:06.035833 [debug] [MainThread]: Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/tiktok_ads_source.json 200
[0m19:29:06.048557 [debug] [MainThread]: Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/twitter_ads_source.json
[0m19:29:06.642648 [debug] [MainThread]: Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/twitter_ads_source.json 200
[0m19:29:06.653426 [debug] [MainThread]: Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/amazon_ads_source.json
[0m19:29:07.214606 [debug] [MainThread]: Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/amazon_ads_source.json 200
[0m19:29:07.222343 [debug] [MainThread]: Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/reddit_ads_source.json
[0m19:29:07.762132 [debug] [MainThread]: Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/reddit_ads_source.json 200
[0m19:29:07.767682 [debug] [MainThread]: Making package registry request: GET https://hub.getdbt.com/api/v1/fivetran/fivetran_utils.json
[0m19:29:08.328691 [debug] [MainThread]: Response from registry: GET https://hub.getdbt.com/api/v1/fivetran/fivetran_utils.json 200
[0m19:29:08.340596 [debug] [MainThread]: Making package registry request: GET https://hub.getdbt.com/api/v1/dbt-labs/spark_utils.json
[0m19:29:08.931831 [debug] [MainThread]: Response from registry: GET https://hub.getdbt.com/api/v1/dbt-labs/spark_utils.json 200
[0m19:29:08.937950 [debug] [MainThread]: Making package registry request: GET https://hub.getdbt.com/api/v1/calogica/dbt_expectations.json
[0m19:29:09.543012 [debug] [MainThread]: Response from registry: GET https://hub.getdbt.com/api/v1/calogica/dbt_expectations.json 200
[0m19:29:09.552997 [debug] [MainThread]: Making package registry request: GET https://hub.getdbt.com/api/v1/dbt-labs/dbt_utils.json
[0m19:29:10.147656 [debug] [MainThread]: Response from registry: GET https://hub.getdbt.com/api/v1/dbt-labs/dbt_utils.json 200
[0m19:29:10.166452 [debug] [MainThread]: Making package registry request: GET https://hub.getdbt.com/api/v1/calogica/dbt_date.json
[0m19:29:10.900661 [debug] [MainThread]: Response from registry: GET https://hub.getdbt.com/api/v1/calogica/dbt_date.json 200
[0m19:29:10.978559 [info ] [MainThread]: Installing fivetran/ad_reporting
[0m19:29:15.095162 [info ] [MainThread]: Installed from version 1.6.0
[0m19:29:15.096604 [info ] [MainThread]: Up to date!
[0m19:29:15.097953 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '40a49568-22e3-4b2f-afd8-5742f5579fcb', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdcd92280>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdcd92cd0>]}
[0m19:29:15.099467 [info ] [MainThread]: Installing fivetran/apple_search_ads
[0m19:29:17.154223 [info ] [MainThread]: Installed from version 0.2.2
[0m19:29:17.155529 [info ] [MainThread]: Up to date!
[0m19:29:17.156919 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '40a49568-22e3-4b2f-afd8-5742f5579fcb', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdcd92400>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce39df0>]}
[0m19:29:17.158056 [info ] [MainThread]: Installing fivetran/snapchat_ads
[0m19:29:20.042708 [info ] [MainThread]: Installed from version 0.5.1
[0m19:29:20.044151 [info ] [MainThread]: Up to date!
[0m19:29:20.045466 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '40a49568-22e3-4b2f-afd8-5742f5579fcb', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce39a90>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce39070>]}
[0m19:29:20.046758 [info ] [MainThread]: Installing fivetran/facebook_ads
[0m19:29:23.014305 [info ] [MainThread]: Installed from version 0.6.0
[0m19:29:23.015771 [info ] [MainThread]: Up to date!
[0m19:29:23.017054 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '40a49568-22e3-4b2f-afd8-5742f5579fcb', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce39970>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce39610>]}
[0m19:29:23.018186 [info ] [MainThread]: Installing fivetran/google_ads
[0m19:29:25.049267 [info ] [MainThread]: Installed from version 0.9.3
[0m19:29:25.051237 [info ] [MainThread]: Up to date!
[0m19:29:25.052617 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '40a49568-22e3-4b2f-afd8-5742f5579fcb', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce39c40>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce39ca0>]}
[0m19:29:25.053762 [info ] [MainThread]: Installing fivetran/pinterest
[0m19:29:27.582758 [info ] [MainThread]: Installed from version 0.9.0
[0m19:29:27.584247 [info ] [MainThread]: Up to date!
[0m19:29:27.585535 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '40a49568-22e3-4b2f-afd8-5742f5579fcb', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce39190>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce39640>]}
[0m19:29:27.586604 [info ] [MainThread]: Installing fivetran/linkedin
[0m19:29:30.323672 [info ] [MainThread]: Installed from version 0.7.0
[0m19:29:30.325016 [info ] [MainThread]: Up to date!
[0m19:29:30.326227 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '40a49568-22e3-4b2f-afd8-5742f5579fcb', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce39cd0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce395e0>]}
[0m19:29:30.327357 [info ] [MainThread]: Installing fivetran/microsoft_ads
[0m19:29:32.917604 [info ] [MainThread]: Installed from version 0.6.0
[0m19:29:32.919772 [info ] [MainThread]: Up to date!
[0m19:29:32.921076 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '40a49568-22e3-4b2f-afd8-5742f5579fcb', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce39250>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce39fa0>]}
[0m19:29:32.922352 [info ] [MainThread]: Installing fivetran/tiktok_ads
[0m19:29:34.797851 [info ] [MainThread]: Installed from version 0.4.0
[0m19:29:34.799107 [info ] [MainThread]: Up to date!
[0m19:29:34.800685 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '40a49568-22e3-4b2f-afd8-5742f5579fcb', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce39490>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce39670>]}
[0m19:29:34.801842 [info ] [MainThread]: Installing fivetran/twitter_ads
[0m19:29:37.337339 [info ] [MainThread]: Installed from version 0.6.0
[0m19:29:37.338731 [info ] [MainThread]: Up to date!
[0m19:29:37.340300 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '40a49568-22e3-4b2f-afd8-5742f5579fcb', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce390d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce39160>]}
[0m19:29:37.341499 [info ] [MainThread]: Installing fivetran/amazon_ads
[0m19:29:39.616405 [info ] [MainThread]: Installed from version 0.2.0
[0m19:29:39.617834 [info ] [MainThread]: Up to date!
[0m19:29:39.619181 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '40a49568-22e3-4b2f-afd8-5742f5579fcb', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce39af0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce39280>]}
[0m19:29:39.620318 [info ] [MainThread]: Installing fivetran/reddit_ads
[0m19:29:42.613244 [info ] [MainThread]: Installed from version 0.1.0
[0m19:29:42.615483 [info ] [MainThread]: Up to date!
[0m19:29:42.616772 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '40a49568-22e3-4b2f-afd8-5742f5579fcb', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce39520>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce392b0>]}
[0m19:29:42.617862 [info ] [MainThread]: Installing fivetran/apple_search_ads_source
[0m19:29:45.849866 [info ] [MainThread]: Installed from version 0.2.2
[0m19:29:45.851245 [info ] [MainThread]: Up to date!
[0m19:29:45.852715 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '40a49568-22e3-4b2f-afd8-5742f5579fcb', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce39f10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce347f0>]}
[0m19:29:45.853818 [info ] [MainThread]: Installing fivetran/snapchat_ads_source
[0m19:29:48.050223 [info ] [MainThread]: Installed from version 0.5.0
[0m19:29:48.051652 [info ] [MainThread]: Up to date!
[0m19:29:48.053112 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '40a49568-22e3-4b2f-afd8-5742f5579fcb', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce349d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce34a90>]}
[0m19:29:48.054367 [info ] [MainThread]: Installing fivetran/facebook_ads_source
[0m19:29:51.297027 [info ] [MainThread]: Installed from version 0.6.0
[0m19:29:51.299101 [info ] [MainThread]: Up to date!
[0m19:29:51.300329 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '40a49568-22e3-4b2f-afd8-5742f5579fcb', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce34910>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce34820>]}
[0m19:29:51.301594 [info ] [MainThread]: Installing fivetran/google_ads_source
[0m19:29:53.795726 [info ] [MainThread]: Installed from version 0.9.3
[0m19:29:53.797185 [info ] [MainThread]: Up to date!
[0m19:29:53.798625 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '40a49568-22e3-4b2f-afd8-5742f5579fcb', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce34b20>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce34a60>]}
[0m19:29:53.799793 [info ] [MainThread]: Installing fivetran/pinterest_source
[0m19:29:56.032080 [info ] [MainThread]: Installed from version 0.9.0
[0m19:29:56.033383 [info ] [MainThread]: Up to date!
[0m19:29:56.034807 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '40a49568-22e3-4b2f-afd8-5742f5579fcb', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce34a30>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce34fd0>]}
[0m19:29:56.035983 [info ] [MainThread]: Installing fivetran/linkedin_source
[0m19:29:58.831889 [info ] [MainThread]: Installed from version 0.7.0
[0m19:29:58.833806 [info ] [MainThread]: Up to date!
[0m19:29:58.835107 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '40a49568-22e3-4b2f-afd8-5742f5579fcb', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce34970>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdcea73a0>]}
[0m19:29:58.836211 [info ] [MainThread]: Installing fivetran/microsoft_ads_source
[0m19:30:01.057943 [info ] [MainThread]: Installed from version 0.7.0
[0m19:30:01.059610 [info ] [MainThread]: Up to date!
[0m19:30:01.061053 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '40a49568-22e3-4b2f-afd8-5742f5579fcb', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdcea7910>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdcea7310>]}
[0m19:30:01.062230 [info ] [MainThread]: Installing fivetran/tiktok_ads_source
[0m19:30:03.199933 [info ] [MainThread]: Installed from version 0.4.0
[0m19:30:03.201364 [info ] [MainThread]: Up to date!
[0m19:30:03.203682 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '40a49568-22e3-4b2f-afd8-5742f5579fcb', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdcea7d90>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdcea7670>]}
[0m19:30:03.204829 [info ] [MainThread]: Installing fivetran/twitter_ads_source
[0m19:30:05.663959 [info ] [MainThread]: Installed from version 0.6.0
[0m19:30:05.665295 [info ] [MainThread]: Up to date!
[0m19:30:05.667012 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '40a49568-22e3-4b2f-afd8-5742f5579fcb', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce15880>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce15fa0>]}
[0m19:30:05.668940 [info ] [MainThread]: Installing fivetran/amazon_ads_source
[0m19:30:07.871736 [info ] [MainThread]: Installed from version 0.2.0
[0m19:30:07.874435 [info ] [MainThread]: Up to date!
[0m19:30:07.875776 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '40a49568-22e3-4b2f-afd8-5742f5579fcb', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce154f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce15d00>]}
[0m19:30:07.876896 [info ] [MainThread]: Installing fivetran/reddit_ads_source
[0m19:30:09.721639 [info ] [MainThread]: Installed from version 0.1.0
[0m19:30:09.723004 [info ] [MainThread]: Up to date!
[0m19:30:09.724266 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '40a49568-22e3-4b2f-afd8-5742f5579fcb', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce15b50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdcea7880>]}
[0m19:30:09.725477 [info ] [MainThread]: Installing fivetran/fivetran_utils
[0m19:30:10.691709 [info ] [MainThread]: Installed from version 0.4.7
[0m19:30:10.695011 [info ] [MainThread]: Up to date!
[0m19:30:10.696894 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '40a49568-22e3-4b2f-afd8-5742f5579fcb', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdcea71c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdcea79a0>]}
[0m19:30:10.698076 [info ] [MainThread]: Installing dbt-labs/spark_utils
[0m19:30:11.548818 [info ] [MainThread]: Installed from version 0.3.0
[0m19:30:11.550135 [info ] [MainThread]: Up to date!
[0m19:30:11.551661 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '40a49568-22e3-4b2f-afd8-5742f5579fcb', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdcea76d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdcea7e80>]}
[0m19:30:11.552930 [info ] [MainThread]: Installing calogica/dbt_expectations
[0m19:30:18.106232 [info ] [MainThread]: Installed from version 0.8.5
[0m19:30:18.107925 [info ] [MainThread]: Updated version available: 0.9.0
[0m19:30:18.109368 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '40a49568-22e3-4b2f-afd8-5742f5579fcb', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdcea7bb0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdcea7550>]}
[0m19:30:18.110457 [info ] [MainThread]: Installing dbt-labs/dbt_utils
[0m19:30:19.501309 [info ] [MainThread]: Installed from version 1.1.1
[0m19:30:19.503521 [info ] [MainThread]: Up to date!
[0m19:30:19.505212 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '40a49568-22e3-4b2f-afd8-5742f5579fcb', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce15b50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce154f0>]}
[0m19:30:19.509857 [info ] [MainThread]: Installing calogica/dbt_date
[0m19:30:20.477496 [info ] [MainThread]: Installed from version 0.7.2
[0m19:30:20.478827 [info ] [MainThread]: Updated version available: 0.9.1
[0m19:30:20.480046 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'package', 'label': '40a49568-22e3-4b2f-afd8-5742f5579fcb', 'property_': 'install', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce154c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fdce15c70>]}
[0m19:30:22.661977 [info ] [MainThread]: 
[0m19:30:22.663136 [info ] [MainThread]: Updates available for packages: ['calogica/dbt_expectations', 'calogica/dbt_date']                 
Update your versions in packages.yml, then run dbt deps
[0m19:30:23.080964 [debug] [MainThread]: Command `dbt deps` succeeded at 19:30:23.080561 after 99.03 seconds
[0m19:30:23.082124 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fd9ea7070>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fd864a520>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8fd864a2e0>]}
[0m19:30:23.083411 [debug] [MainThread]: Flushing usage events
[0m19:38:59.423084 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1316a7d60>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd134452e20>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1344888e0>]}


============================== 19:38:59.434787 | b24cbf2e-6f5f-4d63-b2e5-e252a973c765 ==============================
[0m19:38:59.434787 [info ] [MainThread]: Running with dbt=1.6.2
[0m19:38:59.436156 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'fail_fast': 'False', 'version_check': 'True', 'log_path': '/Users/mahdi/Downloads/dbt_drops/logs', 'profiles_dir': '/Users/mahdi/.dbt', 'debug': 'False', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'invocation_command': 'dbt run', 'log_format': 'default', 'target_path': 'None', 'introspect': 'True', 'send_anonymous_usage_stats': 'True'}
[0m19:39:00.275548 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1354e7eb0>]}
[0m19:39:00.295610 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13303a580>]}
[0m19:39:00.297484 [info ] [MainThread]: Registered adapter: bigquery=1.6.4
[0m19:39:00.699575 [debug] [MainThread]: checksum: 8d66c46a7c5c0e5717f369273dbde9db64740684d9ba42e6442c1808d698ae9f, vars: {}, profile: , target: , version: 1.6.2
[0m19:39:01.187462 [debug] [MainThread]: Failed to load parsed file from disk at /Users/mahdi/Downloads/dbt_drops/target/partial_parse.msgpack: Field "nodes" of type MutableMapping[str, Union[AnalysisNode, SingularTestNode, HookNode, ModelNode, RPCNode, SqlNode, GenericTestNode, SnapshotNode, SeedNode]] in Manifest has invalid value {'model.dbt_ads_test.my_first_dbt_model': {'database': 'drops-bi', 'schema': 'marketing_full', 'name': 'my_first_dbt_model', 'resource_type': 'model', 'package_name': 'dbt_ads_test', 'path': 'example\\my_first_dbt_model.sql', 'original_file_path': 'models\\example\\my_first_dbt_model.sql', 'unique_id': 'model.dbt_ads_test.my_first_dbt_model', 'fqn': ['dbt_ads_test', 'example', 'my_first_dbt_model'], 'alias': 'my_first_dbt_model', 'checksum': {'name': 'sha256', 'checksum': '842251f5ed1d97920d3748d9686b8c05a3a0071ec7990f948f36796491788aed'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'A starter dbt model', 'columns': {'id': {'name': 'id', 'description': 'The primary key for this table', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'dbt_ads_test://models\\example\\schema.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table'}, 'created_at': 1694433484.8726494, 'config_call_dict': {'materialized': 'table'}, 'relation_name': '`drops-bi`.`marketing_full`.`my_first_dbt_model`', 'raw_code': '/*\n    Welcome to your first dbt model!\n    Did you know that you can also configure models directly within SQL files?\n    This will override configurations stated in dbt_project.yml\n\n    Try changing "table" to "view" below\n*/\n\n{{ config(materialized=\'table\') }}\n\nwith source_data as (\n\n    select 1 as id\n    union all\n    select null as id\n\n)\n\nselect *\nfrom source_data\n\n/*\n    Uncomment the line below to remove records with null `id` values\n*/\n\n-- where id is not null', 'language': 'sql', 'refs': [], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': []}, 'compiled_path': None}, 'model.dbt_ads_test.my_second_dbt_model': {'database': 'drops-bi', 'schema': 'marketing_full', 'name': 'my_second_dbt_model', 'resource_type': 'model', 'package_name': 'dbt_ads_test', 'path': 'example\\my_second_dbt_model.sql', 'original_file_path': 'models\\example\\my_second_dbt_model.sql', 'unique_id': 'model.dbt_ads_test.my_second_dbt_model', 'fqn': ['dbt_ads_test', 'example', 'my_second_dbt_model'], 'alias': 'my_second_dbt_model', 'checksum': {'name': 'sha256', 'checksum': 'b3aa346f283f3c9c9a75936f3b80d2572ca9ab39aee4c02b30553d3fe2ba5692'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'A starter dbt model', 'columns': {'id': {'name': 'id', 'description': 'The primary key for this table', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'dbt_ads_test://models\\example\\schema.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view'}, 'created_at': 1694433484.8735697, 'config_call_dict': {}, 'relation_name': '`drops-bi`.`marketing_full`.`my_second_dbt_model`', 'raw_code': "-- Use the `ref` function to select from other models\n\nselect *\nfrom {{ ref('my_first_dbt_model') }}\nwhere id = 1", 'language': 'sql', 'refs': [['my_first_dbt_model']], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.dbt_ads_test.my_first_dbt_model']}, 'compiled_path': None}, 'model.ad_reporting.ad_reporting__account_report': {'database': 'drops-bi', 'schema': 'marketing_full_ad_reporting', 'name': 'ad_reporting__account_report', 'resource_type': 'model', 'package_name': 'ad_reporting', 'path': 'ad_reporting__account_report.sql', 'original_file_path': 'models\\ad_reporting__account_report.sql', 'unique_id': 'model.ad_reporting.ad_reporting__account_report', 'fqn': ['ad_reporting', 'ad_reporting__account_report'], 'alias': 'ad_reporting__account_report', 'checksum': {'name': 'sha256', 'checksum': '7a5c7e7a4d03a8a074b5e23154de600f7dfa06931055665906e407e2eaad8a8a'}, 'config': {'enabled': True, 'alias': None, 'schema': 'ad_reporting', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents daily metrics by account.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'platform': {'name': 'platform', 'description': 'The ad platform associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The ID representing the account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The name of the account, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The count of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The count of impressions.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The cost of the ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'ad_reporting://models\\ad_reporting_models.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'ad_reporting', 'enabled': True}, 'created_at': 1694433484.9370885, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_ad_reporting`.`ad_reporting__account_report`', 'raw_code': "{% set enabled_packages = get_enabled_packages() %}\n{{ config(enabled=is_enabled(enabled_packages)) }}\n\nwith base as (\n\n    select *\n    from {{ ref('int_ad_reporting__account_report') }}\n),\n\naggregated as (\n    \n    select \n        date_day,\n        platform,\n        account_id,\n        account_name,\n        sum(clicks) as clicks,\n        sum(impressions) as impressions,\n        sum(spend) as spend\n    from base\n    {{ dbt_utils.group_by(4) }}\n)\n\nselect *\nfrom aggregated", 'language': 'sql', 'refs': [['int_ad_reporting__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.ad_reporting.get_enabled_packages', 'macro.ad_reporting.is_enabled', 'macro.dbt_utils.group_by'], 'nodes': ['model.ad_reporting.int_ad_reporting__account_report']}, 'compiled_path': None}, 'model.ad_reporting.ad_reporting__ad_group_report': {'database': 'drops-bi', 'schema': 'marketing_full_ad_reporting', 'name': 'ad_reporting__ad_group_report', 'resource_type': 'model', 'package_name': 'ad_reporting', 'path': 'ad_reporting__ad_group_report.sql', 'original_file_path': 'models\\ad_reporting__ad_group_report.sql', 'unique_id': 'model.ad_reporting.ad_reporting__ad_group_report', 'fqn': ['ad_reporting', 'ad_reporting__ad_group_report'], 'alias': 'ad_reporting__ad_group_report', 'checksum': {'name': 'sha256', 'checksum': 'fe93b1aa6e8cc66827b9b6ed209113e7af61fa090c025adc18a657278c4fc15b'}, 'config': {'enabled': True, 'alias': None, 'schema': 'ad_reporting', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents daily metrics by ad group, campaign and account.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'platform': {'name': 'platform', 'description': 'The ad platform associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The ID representing the account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The name of the account, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID representing the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'The ID representing the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'The name of the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The count of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The count of impressions.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The cost of the ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'ad_reporting://models\\ad_reporting_models.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'ad_reporting', 'enabled': True}, 'created_at': 1694433484.9401598, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_ad_reporting`.`ad_reporting__ad_group_report`', 'raw_code': "{% set enabled_packages = get_enabled_packages() %}\n{{ config(enabled=is_enabled(enabled_packages)) }}\n\nwith base as (\n\n    select *\n    from {{ ref('int_ad_reporting__ad_group_report') }}\n),\n\naggregated as (\n    \n    select \n        date_day,\n        platform,\n        account_id,\n        account_name,\n        campaign_id,\n        campaign_name,\n        ad_group_id,\n        ad_group_name,\n        sum(clicks) as clicks,\n        sum(impressions) as impressions,\n        sum(spend) as spend\n    from base\n    {{ dbt_utils.group_by(8) }}\n)\n\nselect *\nfrom aggregated", 'language': 'sql', 'refs': [['int_ad_reporting__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.ad_reporting.get_enabled_packages', 'macro.ad_reporting.is_enabled', 'macro.dbt_utils.group_by'], 'nodes': ['model.ad_reporting.int_ad_reporting__ad_group_report']}, 'compiled_path': None}, 'model.ad_reporting.ad_reporting__ad_report': {'database': 'drops-bi', 'schema': 'marketing_full_ad_reporting', 'name': 'ad_reporting__ad_report', 'resource_type': 'model', 'package_name': 'ad_reporting', 'path': 'ad_reporting__ad_report.sql', 'original_file_path': 'models\\ad_reporting__ad_report.sql', 'unique_id': 'model.ad_reporting.ad_reporting__ad_report', 'fqn': ['ad_reporting', 'ad_reporting__ad_report'], 'alias': 'ad_reporting__ad_report', 'checksum': {'name': 'sha256', 'checksum': '87a1850a3d333ed329ac0fe5fe08fe66b351da3b7eac0ed33af0b0737af6b057'}, 'config': {'enabled': True, 'alias': None, 'schema': 'ad_reporting', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents daily metrics by ad, ad group, campaign and account.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'platform': {'name': 'platform', 'description': 'The ad platform associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The ID representing the account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The name of the account, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID representing the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'The ID representing the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'The name of the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_id': {'name': 'ad_id', 'description': 'The ID representing the ad, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_name': {'name': 'ad_name', 'description': 'The name of the ad, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The count of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The count of impressions.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The cost of the ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'ad_reporting://models\\ad_reporting_models.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'ad_reporting', 'enabled': True}, 'created_at': 1694433484.944159, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_ad_reporting`.`ad_reporting__ad_report`', 'raw_code': "{% set enabled_packages = get_enabled_packages() %}\n{{ config(enabled=is_enabled(enabled_packages)) }}\n\nwith base as (\n\n    select *\n    from {{ ref('int_ad_reporting__ad_report') }}\n),\n\naggregated as (\n    \n    select \n        date_day,\n        platform,\n        account_id,\n        account_name,\n        campaign_id,\n        campaign_name,\n        ad_group_id,\n        ad_group_name,\n        ad_id,\n        ad_name,\n        sum(clicks) as clicks,\n        sum(impressions) as impressions,\n        sum(spend) as spend\n    from base\n    {{ dbt_utils.group_by(10) }}\n)\n\nselect *\nfrom aggregated", 'language': 'sql', 'refs': [['int_ad_reporting__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.ad_reporting.get_enabled_packages', 'macro.ad_reporting.is_enabled', 'macro.dbt_utils.group_by'], 'nodes': ['model.ad_reporting.int_ad_reporting__ad_report']}, 'compiled_path': None}, 'model.ad_reporting.ad_reporting__campaign_report': {'database': 'drops-bi', 'schema': 'marketing_full_ad_reporting', 'name': 'ad_reporting__campaign_report', 'resource_type': 'model', 'package_name': 'ad_reporting', 'path': 'ad_reporting__campaign_report.sql', 'original_file_path': 'models\\ad_reporting__campaign_report.sql', 'unique_id': 'model.ad_reporting.ad_reporting__campaign_report', 'fqn': ['ad_reporting', 'ad_reporting__campaign_report'], 'alias': 'ad_reporting__campaign_report', 'checksum': {'name': 'sha256', 'checksum': '2483fb7d8542d9dea58ad86c4e2821501bf104c2f6802e7c4f74baea277ce39c'}, 'config': {'enabled': True, 'alias': None, 'schema': 'ad_reporting', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents daily metrics by campaign and account.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'platform': {'name': 'platform', 'description': 'The ad platform associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The ID representing the account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The name of the account, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID representing the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The count of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The count of impressions.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The cost of the ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'ad_reporting://models\\ad_reporting_models.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'ad_reporting', 'enabled': True}, 'created_at': 1694433484.9471753, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_ad_reporting`.`ad_reporting__campaign_report`', 'raw_code': "{% set enabled_packages = get_enabled_packages() %}\n{{ config(enabled=is_enabled(enabled_packages)) }}\n\nwith base as (\n\n    select *\n    from {{ ref('int_ad_reporting__campaign_report') }}\n),\n\naggregated as (\n    \n    select \n        date_day,\n        platform,\n        account_id,\n        account_name,\n        campaign_id,\n        campaign_name,\n        sum(clicks) as clicks,\n        sum(impressions) as impressions,\n        sum(spend) as spend\n    from base\n    {{ dbt_utils.group_by(6) }}\n)\n\nselect *\nfrom aggregated", 'language': 'sql', 'refs': [['int_ad_reporting__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.ad_reporting.get_enabled_packages', 'macro.ad_reporting.is_enabled', 'macro.dbt_utils.group_by'], 'nodes': ['model.ad_reporting.int_ad_reporting__campaign_report']}, 'compiled_path': None}, 'model.ad_reporting.ad_reporting__keyword_report': {'database': 'drops-bi', 'schema': 'marketing_full_ad_reporting', 'name': 'ad_reporting__keyword_report', 'resource_type': 'model', 'package_name': 'ad_reporting', 'path': 'ad_reporting__keyword_report.sql', 'original_file_path': 'models\\ad_reporting__keyword_report.sql', 'unique_id': 'model.ad_reporting.ad_reporting__keyword_report', 'fqn': ['ad_reporting', 'ad_reporting__keyword_report'], 'alias': 'ad_reporting__keyword_report', 'checksum': {'name': 'sha256', 'checksum': '19712b5731c1c125a6a6940b48c1b72255d30ad165ceb8be94d17e0af110c044'}, 'config': {'enabled': True, 'alias': None, 'schema': 'ad_reporting', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents daily metrics by keyword, ad group, campaign and account.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'platform': {'name': 'platform', 'description': 'The ad platform associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The ID representing the account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The name of the account, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID representing the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'The ID representing the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'The name of the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_id': {'name': 'keyword_id', 'description': 'The ID representing the keyword, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_text': {'name': 'keyword_text', 'description': 'The keyword text.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_match_type': {'name': 'keyword_match_type', 'description': 'The keyword match type associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The count of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The count of impressions.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The cost of the ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'ad_reporting://models\\ad_reporting_models.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'ad_reporting', 'enabled': True}, 'created_at': 1694433484.950807, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_ad_reporting`.`ad_reporting__keyword_report`', 'raw_code': "{% if var('twitter_ads__using_keywords', True) %}\n    {% set include_list = ['amazon_ads', 'apple_search_ads', 'google_ads', 'microsoft_ads', 'pinterest_ads', 'twitter_ads'] %}\n{% else %}\n    {% set include_list = ['amazon_ads', 'apple_search_ads', 'google_ads', 'microsoft_ads', 'pinterest_ads'] %}\n{% endif %}\n\n{% set enabled_packages = get_enabled_packages(include=include_list)%}\n{{ config(enabled=is_enabled(enabled_packages)) }}\n\nwith base as (\n\n    select *\n    from {{ ref('int_ad_reporting__keyword_report') }}\n),\n\naggregated as (\n    \n    select \n        date_day,\n        platform,\n        account_id,\n        account_name,\n        campaign_id,\n        campaign_name,\n        ad_group_id,\n        ad_group_name,\n        keyword_id,\n        keyword_text,\n        keyword_match_type,\n        sum(clicks) as clicks,\n        sum(impressions) as impressions,\n        sum(spend) as spend\n    from base\n    {{ dbt_utils.group_by(11) }}\n)\n\nselect *\nfrom aggregated", 'language': 'sql', 'refs': [['int_ad_reporting__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.ad_reporting.get_enabled_packages', 'macro.ad_reporting.is_enabled', 'macro.dbt_utils.group_by'], 'nodes': ['model.ad_reporting.int_ad_reporting__keyword_report']}, 'compiled_path': None}, 'model.ad_reporting.ad_reporting__search_report': {'database': 'drops-bi', 'schema': 'marketing_full_ad_reporting', 'name': 'ad_reporting__search_report', 'resource_type': 'model', 'package_name': 'ad_reporting', 'path': 'ad_reporting__search_report.sql', 'original_file_path': 'models\\ad_reporting__search_report.sql', 'unique_id': 'model.ad_reporting.ad_reporting__search_report', 'fqn': ['ad_reporting', 'ad_reporting__search_report'], 'alias': 'ad_reporting__search_report', 'checksum': {'name': 'sha256', 'checksum': '6bc6ff01c66a8e32bcedc6a6f3f8429bc445c65f6bd18ed2ee4813ddb065fb2b'}, 'config': {'enabled': True, 'alias': None, 'schema': 'ad_reporting', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents daily metrics by search query, ad group, campaign and account.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'platform': {'name': 'platform', 'description': 'The ad platform associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The ID representing the account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The name of the account, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID representing the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'The ID representing the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'The name of the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_id': {'name': 'keyword_id', 'description': 'The ID representing the keyword, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_text': {'name': 'keyword_text', 'description': 'The keyword text.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'search_query': {'name': 'search_query', 'description': 'The search query text.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'search_match_type': {'name': 'search_match_type', 'description': 'The search match type associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The count of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The count of impressions.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The cost of the ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'ad_reporting://models\\ad_reporting_models.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'ad_reporting', 'enabled': True}, 'created_at': 1694433484.954815, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_ad_reporting`.`ad_reporting__search_report`', 'raw_code': "{% if var('apple_search_ads__using_search_terms', True) %}\n    {% set include_list = ['amazon_ads', 'apple_search_ads', 'microsoft_ads'] %}\n{% else %}\n    {% set include_list = ['amazon_ads', 'microsoft_ads'] %}\n{% endif %}\n\n{% set enabled_packages = get_enabled_packages(include=include_list)%}\n{{ config(enabled=is_enabled(enabled_packages)) }}\n\nwith base as (\n\n    select *\n    from {{ ref('int_ad_reporting__search_report') }}\n),\n\naggregated as (\n    \n    select \n        date_day,\n        platform,\n        account_id,\n        account_name,\n        campaign_id,\n        campaign_name,\n        ad_group_id,\n        ad_group_name,\n        keyword_id,\n        keyword_text,\n        search_query,\n        search_match_type,\n        sum(clicks) as clicks,\n        sum(impressions) as impressions,\n        sum(spend) as spend\n    from base\n    {{ dbt_utils.group_by(12) }}\n)\n\nselect *\nfrom aggregated", 'language': 'sql', 'refs': [['int_ad_reporting__search_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.ad_reporting.get_enabled_packages', 'macro.ad_reporting.is_enabled', 'macro.dbt_utils.group_by'], 'nodes': ['model.ad_reporting.int_ad_reporting__search_report']}, 'compiled_path': None}, 'model.ad_reporting.ad_reporting__url_report': {'database': 'drops-bi', 'schema': 'marketing_full_ad_reporting', 'name': 'ad_reporting__url_report', 'resource_type': 'model', 'package_name': 'ad_reporting', 'path': 'ad_reporting__url_report.sql', 'original_file_path': 'models\\ad_reporting__url_report.sql', 'unique_id': 'model.ad_reporting.ad_reporting__url_report', 'fqn': ['ad_reporting', 'ad_reporting__url_report'], 'alias': 'ad_reporting__url_report', 'checksum': {'name': 'sha256', 'checksum': '0df96babf636b0d123d5368bd60ec0f6447614786299fdc3705d5fabb6fb8686'}, 'config': {'enabled': True, 'alias': None, 'schema': 'ad_reporting', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents daily metrics by URL (and if applicable, URL UTM parameters), ad group, campaign and account.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'platform': {'name': 'platform', 'description': 'The ad platform associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The ID representing the account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The name of the account, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID representing the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'The ID representing the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'The name of the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'base_url': {'name': 'base_url', 'description': 'The base url of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_host': {'name': 'url_host', 'description': 'The URL host of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_path': {'name': 'url_path', 'description': 'The URL path of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_source': {'name': 'utm_source', 'description': 'The utm_source parameter of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_medium': {'name': 'utm_medium', 'description': 'The utm_medium parameter of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_campaign': {'name': 'utm_campaign', 'description': 'The utm_campaign parameter of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_content': {'name': 'utm_content', 'description': 'The utm_content parameter of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_term': {'name': 'utm_term', 'description': 'The utm_term parameter of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The count of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The count of impressions.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The cost of the ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'ad_reporting://models\\ad_reporting_models.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'ad_reporting', 'enabled': True}, 'created_at': 1694433484.9600356, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_ad_reporting`.`ad_reporting__url_report`', 'raw_code': "{% set enabled_packages = get_enabled_packages(exclude=['amazon_ads', 'apple_search_ads']) %}\n{{ config(enabled=is_enabled(enabled_packages)) }}\n\nwith base as (\n\n    select *\n    from {{ ref('int_ad_reporting__url_report') }}\n),\n\naggregated as (\n    \n    select \n        date_day, \n        platform,\n        account_id, \n        account_name, \n        campaign_id,\n        campaign_name,\n        ad_group_id,\n        ad_group_name,\n        base_url,\n        url_host,\n        url_path,\n        utm_source,\n        utm_medium,\n        utm_campaign,\n        utm_content,\n        utm_term,\n        sum(clicks) as clicks,\n        sum(impressions) as impressions,\n        sum(spend) as spend\n    from base\n    {{ dbt_utils.group_by(16) }}\n)\n\nselect *\nfrom aggregated", 'language': 'sql', 'refs': [['int_ad_reporting__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.ad_reporting.get_enabled_packages', 'macro.ad_reporting.is_enabled', 'macro.dbt_utils.group_by'], 'nodes': ['model.ad_reporting.int_ad_reporting__url_report']}, 'compiled_path': None}, 'model.ad_reporting.int_ad_reporting__account_report': {'database': 'drops-bi', 'schema': 'marketing_full_int_ad_reporting', 'name': 'int_ad_reporting__account_report', 'resource_type': 'model', 'package_name': 'ad_reporting', 'path': 'intermediate\\int_ad_reporting__account_report.sql', 'original_file_path': 'models\\intermediate\\int_ad_reporting__account_report.sql', 'unique_id': 'model.ad_reporting.int_ad_reporting__account_report', 'fqn': ['ad_reporting', 'intermediate', 'int_ad_reporting__account_report'], 'alias': 'int_ad_reporting__account_report', 'checksum': {'name': 'sha256', 'checksum': '7c78606eeac98c9cb1f523e081c71330ef2d067c6c3d4ec8a9619bf6f1bb696c'}, 'config': {'enabled': True, 'alias': None, 'schema': 'int_ad_reporting', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'ephemeral', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'ephemeral', 'schema': 'int_ad_reporting', 'enabled': True}, 'created_at': 1694433480.8987675, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': "{% set enabled_packages = get_enabled_packages() %}\n{{ config(enabled=is_enabled(enabled_packages)) }}\n\nwith\n{% for package in ['twitter_ads', 'facebook_ads', 'google_ads', 'microsoft_ads'] %}\n{% if package in enabled_packages %}\n{{ package }} as (\n    {{ get_query(\n        platform=package,\n        report_type='account',\n        relation=ref(package ~ '__account_report')\n    ) }}\n),\n{% endif %}\n{% endfor %}\n\n{% if 'apple_search_ads' in enabled_packages %}\napple_search_ads as (\n\n    {{ get_query(\n        platform='apple_search_ads', \n        report_type='account', \n        field_mapping={\n                'account_id': 'organization_id',\n                'account_name': 'organization_name',\n                'clicks': 'taps'\n            },\n        relation=ref('apple_search_ads__organization_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'linkedin_ads' in enabled_packages %}\nlinkedin_ads as (\n\n    {{ get_query(\n        platform='linkedin_ads', \n        report_type='account', \n        field_mapping={\n                'spend': 'cost'\n            },\n        relation=ref('linkedin_ads__account_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'pinterest_ads' in enabled_packages %}\npinterest_ads as (\n\n    {{ get_query(\n        platform='pinterest_ads', \n        report_type='account', \n        field_mapping={\n                'account_id': 'advertiser_id',\n                'account_name': 'advertiser_name'\n            },\n        relation=ref('pinterest_ads__advertiser_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'snapchat_ads' in enabled_packages %}\nsnapchat_ads as (\n\n    {{ get_query(\n        platform='snapchat_ads', \n        report_type='account', \n        field_mapping={\n                'account_id': 'ad_account_id',\n                'account_name': 'ad_account_name',\n                'clicks':'swipes'\n            },\n        relation=ref('snapchat_ads__account_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'tiktok_ads' in enabled_packages %}\ntiktok_ads as (\n\n    {{ get_query(\n        platform='tiktok_ads', \n        report_type='account', \n        field_mapping={\n                'account_id': 'advertiser_id',\n                'account_name': 'advertiser_name'\n            },\n        relation=ref('tiktok_ads__advertiser_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'amazon_ads' in enabled_packages %}\namazon_ads as (\n\n    {{ get_query(\n        platform='amazon_ads', \n        report_type='account', \n        field_mapping={\n                'spend': 'cost'\n            },\n        relation=ref('amazon_ads__account_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'reddit_ads' in enabled_packages %}\nreddit_ads as (\n\n    {{ get_query(\n        platform='reddit_ads', \n        report_type='account', \n        field_mapping={\n                'account_name': 'null'\n            },\n        relation=ref('reddit_ads__account_report')\n    ) }}\n),\n{% endif %}\n\nunioned as (\n\n    {{ union_ctes(ctes=enabled_packages)}}\n)\n\nselect *\nfrom unioned", 'language': 'sql', 'refs': [['twitter_ads__account_report'], ['google_ads__account_report'], ['apple_search_ads__organization_report'], ['snapchat_ads__account_report'], ['tiktok_ads__advertiser_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.ad_reporting.get_enabled_packages', 'macro.ad_reporting.is_enabled', 'macro.ad_reporting.get_query', 'macro.ad_reporting.union_ctes'], 'nodes': ['model.twitter_ads.twitter_ads__account_report', 'model.google_ads.google_ads__account_report', 'model.apple_search_ads.apple_search_ads__organization_report', 'model.snapchat_ads.snapchat_ads__account_report', 'model.tiktok_ads.tiktok_ads__advertiser_report']}, 'compiled_path': None}, 'model.ad_reporting.int_ad_reporting__ad_group_report': {'database': 'drops-bi', 'schema': 'marketing_full_int_ad_reporting', 'name': 'int_ad_reporting__ad_group_report', 'resource_type': 'model', 'package_name': 'ad_reporting', 'path': 'intermediate\\int_ad_reporting__ad_group_report.sql', 'original_file_path': 'models\\intermediate\\int_ad_reporting__ad_group_report.sql', 'unique_id': 'model.ad_reporting.int_ad_reporting__ad_group_report', 'fqn': ['ad_reporting', 'intermediate', 'int_ad_reporting__ad_group_report'], 'alias': 'int_ad_reporting__ad_group_report', 'checksum': {'name': 'sha256', 'checksum': '8020b2e69bd0f228a2f3c63c5e9aaa01116863ac9c1c1c89ef33f0a4df48606c'}, 'config': {'enabled': True, 'alias': None, 'schema': 'int_ad_reporting', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'ephemeral', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'ephemeral', 'schema': 'int_ad_reporting', 'enabled': True}, 'created_at': 1694433480.9430914, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': "{% set enabled_packages = get_enabled_packages() %}\n{{ config(enabled=is_enabled(enabled_packages)) }}\n\nwith\n{% for package in ['google_ads', 'microsoft_ads'] %}\n{% if package in enabled_packages %}\n{{ package }} as (\n    {{ get_query(\n        platform=package,\n        report_type='ad_group',\n        relation=ref(package ~ '__ad_group_report')\n    ) }}\n),\n{% endif %}\n{% endfor %}\n\n{% if 'apple_search_ads' in enabled_packages %}\napple_search_ads as (\n\n    {{ get_query(\n        platform='apple_search_ads', \n        report_type='ad_group', \n        field_mapping={\n                'account_id': 'organization_id',\n                'account_name': 'organization_name',\n                'clicks': 'taps'\n            },\n        relation=ref('apple_search_ads__ad_group_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'linkedin_ads' in enabled_packages %}\nlinkedin_ads as (\n\n    {{ get_query(\n        platform='linkedin_ads', \n        report_type='ad_group', \n        field_mapping={\n                'campaign_id': 'campaign_group_id',\n                'campaign_name': 'campaign_group_name',\n                'ad_group_id': 'campaign_id',\n                'ad_group_name': 'campaign_name',\n                'spend': 'cost'\n            },\n        relation=ref('linkedin_ads__campaign_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'facebook_ads' in enabled_packages %}\nfacebook_ads as (\n\n    {{ get_query(\n        platform='facebook_ads', \n        report_type='ad_group', \n        field_mapping={\n                'ad_group_id': 'ad_set_id',\n                'ad_group_name': 'ad_set_name'\n            },\n        relation=ref('facebook_ads__ad_set_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'pinterest_ads' in enabled_packages %}\npinterest_ads as (\n\n    {{ get_query(\n        platform='pinterest_ads', \n        report_type='ad_group', \n        field_mapping={\n                'account_id': 'advertiser_id',\n                'account_name': 'advertiser_name'\n            },\n        relation=ref('pinterest_ads__ad_group_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'snapchat_ads' in enabled_packages %}\nsnapchat_ads as (\n\n    {{ get_query(\n        platform='snapchat_ads', \n        report_type='ad_group', \n        field_mapping={\n                'account_id': 'ad_account_id',\n                'account_name': 'ad_account_name',\n                'ad_group_id': 'ad_squad_id',\n                'ad_group_name': 'ad_squad_name',\n                'clicks':'swipes'\n            },\n        relation=ref('snapchat_ads__ad_squad_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'tiktok_ads' in enabled_packages %}\ntiktok_ads as (\n\n    {{ get_query(\n        platform='tiktok_ads', \n        report_type='ad_group', \n        field_mapping={\n                'account_id': 'advertiser_id',\n                'account_name': 'advertiser_name'\n            },\n        relation=ref('tiktok_ads__ad_group_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'twitter_ads' in enabled_packages %}\ntwitter_ads as (\n\n    {{ get_query(\n        platform='twitter_ads', \n        report_type='ad_group', \n        field_mapping={\n                'ad_group_id': 'line_item_id',\n                'ad_group_name': 'line_item_name'\n            },\n        relation=ref('twitter_ads__line_item_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'amazon_ads' in enabled_packages %}\namazon_ads as (\n\n    {{ get_query(\n        platform='amazon_ads', \n        report_type='ad_group', \n        field_mapping={\n                'spend': 'cost'\n            },\n        relation=ref('amazon_ads__ad_group_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'reddit_ads' in enabled_packages %}\nreddit_ads as (\n\n    {{ get_query(\n        platform='reddit_ads', \n        report_type='ad_group', \n        field_mapping={\n                'account_name': 'null'\n            },\n        relation=ref('reddit_ads__ad_group_report')\n    ) }}\n),\n{% endif %}\n\nunioned as (\n\n    {{ union_ctes(ctes=enabled_packages)}}\n)\n\nselect *\nfrom unioned", 'language': 'sql', 'refs': [['google_ads__ad_group_report'], ['apple_search_ads__ad_group_report'], ['snapchat_ads__ad_squad_report'], ['tiktok_ads__ad_group_report'], ['twitter_ads__line_item_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.ad_reporting.get_enabled_packages', 'macro.ad_reporting.is_enabled', 'macro.ad_reporting.get_query', 'macro.ad_reporting.union_ctes'], 'nodes': ['model.google_ads.google_ads__ad_group_report', 'model.apple_search_ads.apple_search_ads__ad_group_report', 'model.snapchat_ads.snapchat_ads__ad_squad_report', 'model.tiktok_ads.tiktok_ads__ad_group_report', 'model.twitter_ads.twitter_ads__line_item_report']}, 'compiled_path': None}, 'model.ad_reporting.int_ad_reporting__ad_report': {'database': 'drops-bi', 'schema': 'marketing_full_int_ad_reporting', 'name': 'int_ad_reporting__ad_report', 'resource_type': 'model', 'package_name': 'ad_reporting', 'path': 'intermediate\\int_ad_reporting__ad_report.sql', 'original_file_path': 'models\\intermediate\\int_ad_reporting__ad_report.sql', 'unique_id': 'model.ad_reporting.int_ad_reporting__ad_report', 'fqn': ['ad_reporting', 'intermediate', 'int_ad_reporting__ad_report'], 'alias': 'int_ad_reporting__ad_report', 'checksum': {'name': 'sha256', 'checksum': '540cec6af930e2a24dbf60c4d4114bf17e543797bc7fd909329e4be917d869a4'}, 'config': {'enabled': True, 'alias': None, 'schema': 'int_ad_reporting', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'ephemeral', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'ephemeral', 'schema': 'int_ad_reporting', 'enabled': True}, 'created_at': 1694433480.9706976, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': "{% set enabled_packages = get_enabled_packages() %}\n{{ config(enabled=is_enabled(enabled_packages)) }}\n\nwith\n{% for package in ['google_ads', 'microsoft_ads'] %}\n{% if package in enabled_packages %}\n{{ package }} as (\n    {{ get_query(\n        platform=package,\n        report_type='ad',\n        relation=ref(package ~ '__ad_report')\n    ) }}\n),\n{% endif %}\n{% endfor %}\n\n{% if 'apple_search_ads' in enabled_packages %}\napple_search_ads as (\n\n    {{ get_query(\n        platform='apple_search_ads', \n        report_type='ad', \n        field_mapping={\n                'account_id': 'organization_id',\n                'account_name': 'organization_name',\n                'clicks': 'taps'\n            },\n        relation=ref('apple_search_ads__ad_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'facebook_ads' in enabled_packages %}\nfacebook_ads as (\n\n    {{ get_query(\n        platform='facebook_ads', \n        report_type='ad', \n        field_mapping={\n                'ad_group_id': 'ad_set_id',\n                'ad_group_name': 'ad_set_name'\n            },\n        relation=ref('facebook_ads__ad_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'linkedin_ads' in enabled_packages %}\nlinkedin_ads as (\n\n    {{ get_query(\n        platform='linkedin_ads', \n        report_type='ad', \n        field_mapping={\n                'campaign_id': 'campaign_group_id',\n                'campaign_name': 'campaign_group_name',\n                'ad_group_id': 'campaign_id',\n                'ad_group_name': 'campaign_name',\n                'ad_id': 'creative_id',\n                'ad_name': 'null',\n                'spend': 'cost'\n            },\n        relation=ref('linkedin_ads__creative_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'pinterest_ads' in enabled_packages %}\npinterest_ads as (\n\n    {{ get_query(\n        platform='pinterest_ads', \n        report_type='ad', \n        field_mapping={\n                'account_id': 'advertiser_id',\n                'account_name': 'advertiser_name',\n                'ad_id': 'pin_promotion_id',\n                'ad_name': 'pin_name'\n            },\n        relation=ref('pinterest_ads__pin_promotion_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'snapchat_ads' in enabled_packages %}\nsnapchat_ads as (\n\n    {{ get_query(\n        platform='snapchat_ads', \n        report_type='ad', \n        field_mapping={\n                'account_id': 'ad_account_id',\n                'account_name': 'ad_account_name',\n                'campaign_id': 'null',\n                'campaign_name': 'null',\n                'ad_group_id': 'null',\n                'ad_group_name': 'null',\n                'clicks':'swipes'\n            },\n        relation=ref('snapchat_ads__ad_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'tiktok_ads' in enabled_packages %}\ntiktok_ads as (\n\n    {{ get_query(\n        platform='tiktok_ads', \n        report_type='ad', \n        field_mapping={\n                'account_id': 'advertiser_id',\n                'account_name': 'advertiser_name'\n            },\n        relation=ref('tiktok_ads__ad_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'twitter_ads' in enabled_packages %}\ntwitter_ads as (\n\n    {{ get_query(\n        platform='twitter_ads', \n        report_type='ad', \n        field_mapping={\n                'ad_group_id': 'line_item_id',\n                'ad_group_name': 'line_item_name',\n                'ad_id': 'promoted_tweet_id',\n                'ad_name': 'tweet_name'\n            },\n        relation=ref('twitter_ads__promoted_tweet_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'amazon_ads' in enabled_packages %}\namazon_ads as (\n\n    {{ get_query(\n        platform='amazon_ads', \n        report_type='ad', \n        field_mapping={\n                'spend': 'cost',\n                'ad_name': 'advertised_asin'\n            },\n        relation=ref('amazon_ads__ad_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'reddit_ads' in enabled_packages %}\nreddit_ads as (\n\n    {{ get_query(\n        platform='reddit_ads', \n        report_type='ad', \n        field_mapping={\n                'account_name': 'null'\n            },\n        relation=ref('reddit_ads__ad_report')\n    ) }}\n),\n{% endif %}\n\nunioned as (\n\n    {{ union_ctes(ctes=enabled_packages)}}\n)\n\nselect *\nfrom unioned", 'language': 'sql', 'refs': [['google_ads__ad_report'], ['apple_search_ads__ad_report'], ['snapchat_ads__ad_report'], ['tiktok_ads__ad_report'], ['twitter_ads__promoted_tweet_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.ad_reporting.get_enabled_packages', 'macro.ad_reporting.is_enabled', 'macro.ad_reporting.get_query', 'macro.ad_reporting.union_ctes'], 'nodes': ['model.google_ads.google_ads__ad_report', 'model.apple_search_ads.apple_search_ads__ad_report', 'model.snapchat_ads.snapchat_ads__ad_report', 'model.tiktok_ads.tiktok_ads__ad_report', 'model.twitter_ads.twitter_ads__promoted_tweet_report']}, 'compiled_path': None}, 'model.ad_reporting.int_ad_reporting__campaign_report': {'database': 'drops-bi', 'schema': 'marketing_full_int_ad_reporting', 'name': 'int_ad_reporting__campaign_report', 'resource_type': 'model', 'package_name': 'ad_reporting', 'path': 'intermediate\\int_ad_reporting__campaign_report.sql', 'original_file_path': 'models\\intermediate\\int_ad_reporting__campaign_report.sql', 'unique_id': 'model.ad_reporting.int_ad_reporting__campaign_report', 'fqn': ['ad_reporting', 'intermediate', 'int_ad_reporting__campaign_report'], 'alias': 'int_ad_reporting__campaign_report', 'checksum': {'name': 'sha256', 'checksum': 'fa96bcb55ec7c848acb1ee90f5026164682349b38262b9fa4b3b0f56803c0851'}, 'config': {'enabled': True, 'alias': None, 'schema': 'int_ad_reporting', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'ephemeral', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'ephemeral', 'schema': 'int_ad_reporting', 'enabled': True}, 'created_at': 1694433481.0014348, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': "{% set enabled_packages = get_enabled_packages() %}\n{{ config(enabled=is_enabled(enabled_packages)) }}\n\nwith\n{% for package in ['twitter_ads', 'facebook_ads', 'google_ads', 'microsoft_ads'] %}\n{% if package in enabled_packages %}\n{{ package }} as (\n    {{ get_query(\n        platform=package,\n        report_type='campaign',\n        relation=ref(package ~ '__campaign_report')\n    ) }}\n),\n{% endif %}\n{% endfor %}\n\n{% if 'apple_search_ads' in enabled_packages %}\napple_search_ads as (\n\n    {{ get_query(\n        platform='apple_search_ads', \n        report_type='campaign', \n        field_mapping={\n                'account_id': 'organization_id',\n                'account_name': 'organization_name',\n                'clicks': 'taps'\n            },\n        relation=ref('apple_search_ads__campaign_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'linkedin_ads' in enabled_packages %}\nlinkedin_ads as (\n\n    {{ get_query(\n        platform='linkedin_ads', \n        report_type='campaign', \n        field_mapping={\n                'campaign_id': 'campaign_group_id',\n                'campaign_name': 'campaign_group_name',\n                'spend': 'cost'\n            },\n        relation=ref('linkedin_ads__campaign_group_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'pinterest_ads' in enabled_packages %}\npinterest_ads as (\n\n    {{ get_query(\n        platform='pinterest_ads', \n        report_type='campaign', \n        field_mapping={\n                'account_id': 'advertiser_id',\n                'account_name': 'advertiser_name'\n            },\n        relation=ref('pinterest_ads__campaign_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'snapchat_ads' in enabled_packages %}\nsnapchat_ads as (\n\n    {{ get_query(\n        platform='snapchat_ads', \n        report_type='campaign', \n        field_mapping={\n                'account_id': 'ad_account_id',\n                'account_name': 'ad_account_name',\n                'clicks':'swipes'\n            },\n        relation=ref('snapchat_ads__campaign_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'tiktok_ads' in enabled_packages %}\ntiktok_ads as (\n\n    {{ get_query(\n        platform='tiktok_ads', \n        report_type='campaign', \n        field_mapping={\n                'account_id': 'advertiser_id',\n                'account_name': 'advertiser_name'\n            },\n        relation=ref('tiktok_ads__campaign_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'amazon_ads' in enabled_packages %}\namazon_ads as (\n\n    {{ get_query(\n        platform='amazon_ads', \n        report_type='campaign', \n        field_mapping={\n                'spend': 'cost'\n            },\n        relation=ref('amazon_ads__campaign_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'reddit_ads' in enabled_packages %}\nreddit_ads as (\n\n    {{ get_query(\n        platform='reddit_ads', \n        report_type='campaign', \n        field_mapping={\n                'account_name': 'null'\n            },\n        relation=ref('reddit_ads__campaign_report')\n    ) }}\n),\n{% endif %}\n\nunioned as (\n\n    {{ union_ctes(ctes=enabled_packages)}}\n)\n\nselect *\nfrom unioned", 'language': 'sql', 'refs': [['twitter_ads__campaign_report'], ['google_ads__campaign_report'], ['apple_search_ads__campaign_report'], ['snapchat_ads__campaign_report'], ['tiktok_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.ad_reporting.get_enabled_packages', 'macro.ad_reporting.is_enabled', 'macro.ad_reporting.get_query', 'macro.ad_reporting.union_ctes'], 'nodes': ['model.twitter_ads.twitter_ads__campaign_report', 'model.google_ads.google_ads__campaign_report', 'model.apple_search_ads.apple_search_ads__campaign_report', 'model.snapchat_ads.snapchat_ads__campaign_report', 'model.tiktok_ads.tiktok_ads__campaign_report']}, 'compiled_path': None}, 'model.ad_reporting.int_ad_reporting__keyword_report': {'database': 'drops-bi', 'schema': 'marketing_full_int_ad_reporting', 'name': 'int_ad_reporting__keyword_report', 'resource_type': 'model', 'package_name': 'ad_reporting', 'path': 'intermediate\\int_ad_reporting__keyword_report.sql', 'original_file_path': 'models\\intermediate\\int_ad_reporting__keyword_report.sql', 'unique_id': 'model.ad_reporting.int_ad_reporting__keyword_report', 'fqn': ['ad_reporting', 'intermediate', 'int_ad_reporting__keyword_report'], 'alias': 'int_ad_reporting__keyword_report', 'checksum': {'name': 'sha256', 'checksum': '29b788469d109e4a6a03f5c5ed31ad693712c1f0e4bae524c9ed3271924f133d'}, 'config': {'enabled': True, 'alias': None, 'schema': 'int_ad_reporting', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'ephemeral', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'ephemeral', 'schema': 'int_ad_reporting', 'enabled': True}, 'created_at': 1694433481.0244772, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': "{% if var('twitter_ads__using_keywords', True) %}\n    {% set include_list = ['amazon_ads', 'apple_search_ads', 'google_ads', 'microsoft_ads', 'pinterest_ads', 'twitter_ads'] %}\n{% else %}\n    {% set include_list = ['amazon_ads', 'apple_search_ads', 'google_ads', 'microsoft_ads', 'pinterest_ads'] %}\n{% endif %}\n\n{% set enabled_packages = get_enabled_packages(include=include_list)%}\n{{ config(enabled=is_enabled(enabled_packages)) }}\n\nwith\n{% if 'apple_search_ads' in enabled_packages %}\napple_search_ads as (\n\n    {{ get_query(\n        platform='apple_search_ads', \n        report_type='keyword', \n        field_mapping={\n                'account_id': 'organization_id',\n                'account_name': 'organization_name',\n                'keyword_match_type': 'match_type',\n                'clicks': 'taps'\n            },\n        relation=ref('apple_search_ads__keyword_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'google_ads' in enabled_packages %}\ngoogle_ads as (\n\n    {{ get_query(\n        platform='google_ads', \n        report_type='keyword', \n        field_mapping={\n                'keyword_id': 'criterion_id',\n            },\n        relation=ref('google_ads__keyword_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'microsoft_ads' in enabled_packages %}\nmicrosoft_ads as (\n\n    {{ get_query(\n        platform='microsoft_ads', \n        report_type='keyword', \n        field_mapping={\n                'keyword_text': 'keyword_name',\n                'keyword_match_type': 'match_type'\n            },\n        relation=ref('microsoft_ads__keyword_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'pinterest_ads' in enabled_packages %}\npinterest_ads as (\n\n    {{ get_query(\n        platform='pinterest_ads', \n        report_type='keyword', \n        field_mapping={\n                'account_id': 'advertiser_id',\n                'account_name': 'advertiser_name',\n                'keyword_text': 'keyword_value',\n                'keyword_match_type': 'match_type'\n            },\n        relation=ref('pinterest_ads__keyword_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'twitter_ads' in enabled_packages and var('twitter_ads__using_keywords', True) %}\ntwitter_ads as (\n\n    {{ get_query(\n        platform='twitter_ads', \n        report_type='keyword', \n        field_mapping={\n                'ad_group_id': 'line_item_id',\n                'ad_group_name': 'line_item_name',\n                'keyword_id': 'keyword_id',\n                'keyword_text': 'keyword',\n                'keyword_match_type': 'null'\n            },\n        relation=ref('twitter_ads__keyword_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'amazon_ads' in enabled_packages %}\namazon_ads as (\n\n    {{ get_query(\n        platform='amazon_ads', \n        report_type='keyword', \n        field_mapping={\n                'spend': 'cost',\n                'keyword_match_type': 'match_type'\n            },\n        relation=ref('amazon_ads__keyword_report')\n    ) }}\n), \n{% endif %}\n\nunioned as (\n\n    {{ union_ctes(ctes=enabled_packages)}}\n)\n\nselect *\nfrom unioned", 'language': 'sql', 'refs': [['apple_search_ads__keyword_report'], ['google_ads__keyword_report'], ['twitter_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.ad_reporting.get_enabled_packages', 'macro.ad_reporting.is_enabled', 'macro.ad_reporting.get_query', 'macro.ad_reporting.union_ctes'], 'nodes': ['model.apple_search_ads.apple_search_ads__keyword_report', 'model.google_ads.google_ads__keyword_report', 'model.twitter_ads.twitter_ads__keyword_report']}, 'compiled_path': None}, 'model.ad_reporting.int_ad_reporting__search_report': {'database': 'drops-bi', 'schema': 'marketing_full_int_ad_reporting', 'name': 'int_ad_reporting__search_report', 'resource_type': 'model', 'package_name': 'ad_reporting', 'path': 'intermediate\\int_ad_reporting__search_report.sql', 'original_file_path': 'models\\intermediate\\int_ad_reporting__search_report.sql', 'unique_id': 'model.ad_reporting.int_ad_reporting__search_report', 'fqn': ['ad_reporting', 'intermediate', 'int_ad_reporting__search_report'], 'alias': 'int_ad_reporting__search_report', 'checksum': {'name': 'sha256', 'checksum': 'c54a943cafae9d0d7576cb97fdd93653f099b36133aa3a2ff454c1f0039d279c'}, 'config': {'enabled': True, 'alias': None, 'schema': 'int_ad_reporting', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'ephemeral', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'ephemeral', 'schema': 'int_ad_reporting', 'enabled': True}, 'created_at': 1694433481.0456157, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': "{% if var('apple_search_ads__using_search_terms', True) %}\n    {% set include_list = ['amazon_ads', 'apple_search_ads', 'microsoft_ads'] %}\n{% else %}\n    {% set include_list = ['amazon_ads', 'microsoft_ads'] %}\n{% endif %}\n\n{% set enabled_packages = get_enabled_packages(include=include_list)%}\n{{ config(enabled=is_enabled(enabled_packages)) }}\n\nwith \n{% if 'microsoft_ads' in enabled_packages %}\nmicrosoft_ads as (\n\n    {{ get_query(\n        platform='microsoft_ads', \n        report_type='search', \n        field_mapping={\n                'keyword_text': 'keyword_name',\n                'search_match_type': 'match_type'\n            },\n        relation=ref('microsoft_ads__search_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'apple_search_ads' in enabled_packages and var('apple_search_ads__using_search_terms', True) %}\napple_search_ads as (\n\n    {{ get_query(\n        platform='apple_search_ads', \n        report_type='search', \n        field_mapping={\n                'account_id': 'organization_id',\n                'account_name': 'organization_name',\n                'search_match_type': 'match_type',\n                'search_query': 'search_term_text',\n                'clicks': 'taps'\n            },\n        relation=ref('apple_search_ads__search_term_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'amazon_ads' in enabled_packages %}\namazon_ads as (\n\n    {{ get_query(\n        platform='amazon_ads', \n        report_type='search', \n        field_mapping={\n                'spend': 'cost',\n                'search_match_type': 'match_type',\n                'search_query': 'search_term'\n            },\n        relation=ref('amazon_ads__search_report')\n    ) }}\n), \n{% endif %}\n\nunioned as (\n\n    {{ union_ctes(ctes=enabled_packages)}}\n)\n\nselect *\nfrom unioned", 'language': 'sql', 'refs': [['apple_search_ads__search_term_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.ad_reporting.get_enabled_packages', 'macro.ad_reporting.is_enabled', 'macro.ad_reporting.get_query', 'macro.ad_reporting.union_ctes'], 'nodes': ['model.apple_search_ads.apple_search_ads__search_term_report']}, 'compiled_path': None}, 'model.ad_reporting.int_ad_reporting__url_report': {'database': 'drops-bi', 'schema': 'marketing_full_int_ad_reporting', 'name': 'int_ad_reporting__url_report', 'resource_type': 'model', 'package_name': 'ad_reporting', 'path': 'intermediate\\int_ad_reporting__url_report.sql', 'original_file_path': 'models\\intermediate\\int_ad_reporting__url_report.sql', 'unique_id': 'model.ad_reporting.int_ad_reporting__url_report', 'fqn': ['ad_reporting', 'intermediate', 'int_ad_reporting__url_report'], 'alias': 'int_ad_reporting__url_report', 'checksum': {'name': 'sha256', 'checksum': 'e174558a546f62bc92e0c9395b4c1d6c99185a3192f4978110e47338674af6c0'}, 'config': {'enabled': True, 'alias': None, 'schema': 'int_ad_reporting', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'ephemeral', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'ephemeral', 'schema': 'int_ad_reporting', 'enabled': True}, 'created_at': 1694433481.0607212, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': "{% set enabled_packages = get_enabled_packages(exclude=['amazon_ads', 'apple_search_ads']) %}\n{{ config(enabled=is_enabled(enabled_packages)) }}\n\nwith\n{% for package in ['google_ads', 'microsoft_ads'] %}\n{% if package in enabled_packages %}\n{{ package }} as (\n    {{ get_query(\n        platform=package,\n        report_type='url',\n        relation=ref(package ~ '__url_report')\n    ) }}\n),\n{% endif %}\n{% endfor %}\n\n{% if 'facebook_ads' in enabled_packages %}\nfacebook_ads as (\n\n    {{ get_query(\n        platform='facebook_ads', \n        report_type='url', \n        field_mapping={\n                'ad_group_id': 'ad_set_id',\n                'ad_group_name': 'ad_set_name'\n            },\n        relation=ref('facebook_ads__url_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'linkedin_ads' in enabled_packages %}\nlinkedin_ads as (\n\n    {{ get_query(\n        platform='linkedin_ads', \n        report_type='url', \n        field_mapping={\n                'campaign_id': 'campaign_group_id',\n                'campaign_name': 'campaign_group_name',\n                'ad_group_id': 'campaign_id',\n                'ad_group_name': 'campaign_name',\n                'spend': 'cost'\n            },\n        relation=ref('linkedin_ads__url_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'pinterest_ads' in enabled_packages %}\npinterest_ads as (\n\n    {{ get_query(\n        platform='pinterest_ads', \n        report_type='url', \n        field_mapping={\n                'account_id': 'advertiser_id',\n                'account_name': 'advertiser_name'\n            },\n        relation=ref('pinterest_ads__url_report')\n    ) }}\n),\n{% endif %}\n\n{% if 'snapchat_ads' in enabled_packages %}\nsnapchat_ads as (\n\n    {{ get_query(\n        platform='snapchat_ads', \n        report_type='url', \n        field_mapping={\n                'account_id': 'ad_account_id',\n                'account_name': 'ad_account_name',\n                'ad_group_id': 'ad_squad_id',\n                'ad_group_name': 'ad_squad_name',\n                'clicks':'swipes'\n            },\n        relation=ref('snapchat_ads__url_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'tiktok_ads' in enabled_packages %}\ntiktok_ads as (\n\n    {{ get_query(\n        platform='tiktok_ads', \n        report_type='url', \n        field_mapping={\n                'account_id': 'advertiser_id',\n                'account_name': 'advertiser_name'\n            },\n        relation=ref('tiktok_ads__url_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'twitter_ads' in enabled_packages %}\ntwitter_ads as (\n\n    {{ get_query(\n        platform='twitter_ads', \n        report_type='url', \n        field_mapping={\n                'ad_group_id': 'line_item_id',\n                'ad_group_name': 'line_item_name'\n            },\n        relation=ref('twitter_ads__url_report')\n    ) }}\n), \n{% endif %}\n\n{% if 'reddit_ads' in enabled_packages %}\nreddit_ads as (\n\n    {{ get_query(\n        platform='reddit_ads', \n        report_type='url', \n        field_mapping={\n                'account_name': 'null'\n            },\n        relation=ref('reddit_ads__url_report')\n    ) }}\n),\n{% endif %}\n\nunioned as (\n\n    {{ union_ctes(ctes=enabled_packages)}}\n)\n\nselect *\nfrom unioned", 'language': 'sql', 'refs': [['google_ads__url_report'], ['snapchat_ads__url_report'], ['tiktok_ads__url_report'], ['twitter_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.ad_reporting.get_enabled_packages', 'macro.ad_reporting.is_enabled', 'macro.ad_reporting.get_query', 'macro.ad_reporting.union_ctes'], 'nodes': ['model.google_ads.google_ads__url_report', 'model.snapchat_ads.snapchat_ads__url_report', 'model.tiktok_ads.tiktok_ads__url_report', 'model.twitter_ads.twitter_ads__url_report']}, 'compiled_path': None}, 'model.apple_search_ads.apple_search_ads__ad_group_report': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads', 'name': 'apple_search_ads__ad_group_report', 'resource_type': 'model', 'package_name': 'apple_search_ads', 'path': 'apple_search_ads__ad_group_report.sql', 'original_file_path': 'models\\apple_search_ads__ad_group_report.sql', 'unique_id': 'model.apple_search_ads.apple_search_ads__ad_group_report', 'fqn': ['apple_search_ads', 'apple_search_ads__ad_group_report'], 'alias': 'apple_search_ads__ad_group_report', 'checksum': {'name': 'sha256', 'checksum': 'a1edd5d4e81de3dadca268c67fc1bee311cab1edc7efe48a494c7017c7acdc80'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily ad performance of each ad group.', 'columns': {'organization_id': {'name': 'organization_id', 'description': 'Organization ID associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'organization_name': {'name': 'organization_name', 'description': 'Organization name associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'Campaign name associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'Ad group ID associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'Ad group name associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_status': {'name': 'ad_group_status', 'description': 'The status of the ad group associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'start_at': {'name': 'start_at', 'description': 'The start timestamp for this ad group.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'end_at': {'name': 'end_at', 'description': 'The end timestamp for this ad group.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'Date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': "This currency value should match the respective organization's currency value.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'taps': {'name': 'taps', 'description': 'Number of taps on ad group on given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'new_downloads': {'name': 'new_downloads', 'description': 'App downloads from new users who have never before installed app of ad group in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'redownloads': {'name': 'redownloads', 'description': 'Number of user downloads where user deletes app and downloads the same app again following a tap on an ad on the App Store, or downloads the same app to an additional device of ad group in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'total_downloads': {'name': 'total_downloads', 'description': 'The sum of new_downloads and redownloads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions of ad group in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend on ad group in the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'apple_search_ads://models\\apple_search_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.351005, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads`.`apple_search_ads__ad_group_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nwith report as (\n\n    select *\n    from {{ var('ad_group_report') }}\n), \n\nad_group as (\n\n    select * \n    from {{ var('ad_group_history') }}\n    where is_most_recent_record = True\n), \n\ncampaign as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record = True\n), \n\norganization as (\n\n    select * \n    from {{ var('organization') }}\n), \n\njoined as (\n\n    select \n        report.date_day,\n        organization.organization_id,\n        organization.organization_name,\n        campaign.campaign_id, \n        campaign.campaign_name, \n        ad_group.ad_group_id,\n        ad_group.ad_group_name,\n        report.currency,\n        ad_group.ad_group_status,\n        ad_group.start_at, \n        ad_group.end_at,\n        sum(report.taps) as taps,\n        sum(report.new_downloads) as new_downloads,\n        sum(report.redownloads) as redownloads,\n        sum(report.new_downloads + report.redownloads) as total_downloads,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='apple_search_ads__ad_group_passthrough_metrics', transform = 'sum') }}\n    from report\n    join ad_group \n        on report.ad_group_id = ad_group.ad_group_id\n    join campaign \n        on ad_group.campaign_id = campaign.campaign_id\n    join organization \n        on ad_group.organization_id = organization.organization_id\n    {{ dbt_utils.group_by(11) }}\n)\n\nselect * \nfrom joined", 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_group_report'], ['stg_apple_search_ads__ad_group_history'], ['stg_apple_search_ads__campaign_history'], ['stg_apple_search_ads__organization']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_group_report', 'model.apple_search_ads_source.stg_apple_search_ads__ad_group_history', 'model.apple_search_ads_source.stg_apple_search_ads__campaign_history', 'model.apple_search_ads_source.stg_apple_search_ads__organization']}, 'compiled_path': None}, 'model.apple_search_ads.apple_search_ads__ad_report': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads', 'name': 'apple_search_ads__ad_report', 'resource_type': 'model', 'package_name': 'apple_search_ads', 'path': 'apple_search_ads__ad_report.sql', 'original_file_path': 'models\\apple_search_ads__ad_report.sql', 'unique_id': 'model.apple_search_ads.apple_search_ads__ad_report', 'fqn': ['apple_search_ads', 'apple_search_ads__ad_report'], 'alias': 'apple_search_ads__ad_report', 'checksum': {'name': 'sha256', 'checksum': '9be99b8581d2c85b4b11327ae3eef34d26121ed866e5762ff7f627b2c24b63a9'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily ad performance of each ad.', 'columns': {'organization_id': {'name': 'organization_id', 'description': 'Organization ID associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'organization_name': {'name': 'organization_name', 'description': 'Organization name associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'Campaign name associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'Ad group ID associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'Ad group name associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_id': {'name': 'ad_id', 'description': 'Ad ID associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_name': {'name': 'ad_name', 'description': 'Ad name associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_status': {'name': 'ad_status', 'description': 'The status of the ad associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'Date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': "This currency value should match the respective organization's currency value.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'taps': {'name': 'taps', 'description': 'Number of taps on ad group on given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'new_downloads': {'name': 'new_downloads', 'description': 'App downloads from new users who have never before installed app of ad group in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'redownloads': {'name': 'redownloads', 'description': 'Number of user downloads where user deletes app and downloads the same app again following a tap on an ad on the App Store, or downloads the same app to an additional device of ad group in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'total_downloads': {'name': 'total_downloads', 'description': 'The sum of new_downloads and redownloads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions of ad group in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend on ad group in the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'apple_search_ads://models\\apple_search_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.3560052, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads`.`apple_search_ads__ad_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nwith report as (\n\n    select *\n    from {{ var('ad_report') }}\n), \n\nad as (\n\n    select * \n    from {{ var('ad_history') }}\n    where is_most_recent_record = True\n), \n\nad_group as (\n\n    select * \n    from {{ var('ad_group_history') }}\n    where is_most_recent_record = True\n), \n\ncampaign as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record = True\n), \n\norganization as (\n\n    select * \n    from {{ var('organization') }}\n), \n\njoined as (\n\n    select \n        report.date_day,\n        organization.organization_id,\n        organization.organization_name,\n        campaign.campaign_id, \n        campaign.campaign_name, \n        ad_group.ad_group_id,\n        ad_group.ad_group_name,\n        ad.ad_id,\n        ad.ad_name,\n        report.currency,\n        ad.ad_status,\n        sum(report.taps) as taps,\n        sum(report.new_downloads) as new_downloads,\n        sum(report.redownloads) as redownloads,\n        sum(report.new_downloads + report.redownloads) as total_downloads,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='apple_search_ads__ad_passthrough_metrics', transform = 'sum') }}\n    from report\n    join ad \n        on report.ad_id = ad.ad_id\n    join ad_group \n        on report.ad_group_id = ad_group.ad_group_id\n    join campaign \n        on report.campaign_id = campaign.campaign_id\n    join organization \n        on ad.organization_id = organization.organization_id\n    {{ dbt_utils.group_by(11) }}\n)\n\nselect * \nfrom joined", 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_report'], ['stg_apple_search_ads__ad_history'], ['stg_apple_search_ads__ad_group_history'], ['stg_apple_search_ads__campaign_history'], ['stg_apple_search_ads__organization']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_report', 'model.apple_search_ads_source.stg_apple_search_ads__ad_history', 'model.apple_search_ads_source.stg_apple_search_ads__ad_group_history', 'model.apple_search_ads_source.stg_apple_search_ads__campaign_history', 'model.apple_search_ads_source.stg_apple_search_ads__organization']}, 'compiled_path': None}, 'model.apple_search_ads.apple_search_ads__campaign_report': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads', 'name': 'apple_search_ads__campaign_report', 'resource_type': 'model', 'package_name': 'apple_search_ads', 'path': 'apple_search_ads__campaign_report.sql', 'original_file_path': 'models\\apple_search_ads__campaign_report.sql', 'unique_id': 'model.apple_search_ads.apple_search_ads__campaign_report', 'fqn': ['apple_search_ads', 'apple_search_ads__campaign_report'], 'alias': 'apple_search_ads__campaign_report', 'checksum': {'name': 'sha256', 'checksum': 'd555ffbfe1f914afd50ba592ab961f1ebdb40a4d4315c0696f1c80738930080f'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily ad performance of each campaign.', 'columns': {'organization_id': {'name': 'organization_id', 'description': 'Organization ID associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'organization_name': {'name': 'organization_name', 'description': 'Organization name associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'Campaign name associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_status': {'name': 'campaign_status', 'description': 'The status of the campaign associted with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'start_at': {'name': 'start_at', 'description': 'The start timestamp of this campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'end_at': {'name': 'end_at', 'description': 'The end timestamp of this campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'Date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': "This currency value should match the respective organization's currency value.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'taps': {'name': 'taps', 'description': 'Number of taps on campaign on given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'new_downloads': {'name': 'new_downloads', 'description': 'App downloads from new users who have never before installed app of campaign in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'redownloads': {'name': 'redownloads', 'description': 'Number of user downloads where user deletes app and downloads the same app again following a tap on an ad on the App Store, or downloads the same app to an additional device of campaign in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'total_downloads': {'name': 'total_downloads', 'description': 'The sum of new_downloads and redownloads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions of campaign in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend on campaign in the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'apple_search_ads://models\\apple_search_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.3605165, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads`.`apple_search_ads__campaign_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nwith report as (\n    \n    select *\n    from {{ var('campaign_report') }}\n\n), \n\ncampaign as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record = True\n), \n\norganization as (\n\n    select * \n    from {{ var('organization') }}\n\n), \n\njoined as (\n\n    select \n        report.date_day,\n        campaign.organization_id,\n        organization.organization_name,\n        campaign.campaign_id, \n        campaign.campaign_name, \n        report.currency,\n        campaign.campaign_status,\n        campaign.start_at,\n        campaign.end_at,\n        sum(report.taps) as taps,\n        sum(report.new_downloads) as new_downloads,\n        sum(report.redownloads) as redownloads,\n        sum(report.new_downloads + report.redownloads) as total_downloads,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='apple_search_ads__campaign_passthrough_metrics', transform = 'sum') }}\n    from report\n    join campaign \n        on report.campaign_id = campaign.campaign_id\n    join organization \n        on campaign.organization_id = organization.organization_id\n    {{ dbt_utils.group_by(9) }}\n)\n\nselect * \nfrom joined", 'language': 'sql', 'refs': [['stg_apple_search_ads__campaign_report'], ['stg_apple_search_ads__campaign_history'], ['stg_apple_search_ads__organization']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__campaign_report', 'model.apple_search_ads_source.stg_apple_search_ads__campaign_history', 'model.apple_search_ads_source.stg_apple_search_ads__organization']}, 'compiled_path': None}, 'model.apple_search_ads.apple_search_ads__keyword_report': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads', 'name': 'apple_search_ads__keyword_report', 'resource_type': 'model', 'package_name': 'apple_search_ads', 'path': 'apple_search_ads__keyword_report.sql', 'original_file_path': 'models\\apple_search_ads__keyword_report.sql', 'unique_id': 'model.apple_search_ads.apple_search_ads__keyword_report', 'fqn': ['apple_search_ads', 'apple_search_ads__keyword_report'], 'alias': 'apple_search_ads__keyword_report', 'checksum': {'name': 'sha256', 'checksum': '91250ca8167dc8fee98582ff093d56a498b854e5c66a51325076191016bfb0e7'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily ad performance of each creative set.', 'columns': {'organization_id': {'name': 'organization_id', 'description': 'Organization ID associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'organization_name': {'name': 'organization_name', 'description': 'Organization name associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'Campaign name associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'Ad group ID associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'Ad group name associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_id': {'name': 'keyword_id', 'description': 'Creative set name associatd with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_text': {'name': 'keyword_text', 'description': 'Creative set ID associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'match_type': {'name': 'match_type', 'description': 'Controls how ads are matched to user searches; EXACT or BROAD.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'Date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': "This currency value should match the respective organization's currency value.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_status': {'name': 'keyword_status', 'description': 'The status of the keyword associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'taps': {'name': 'taps', 'description': 'Number of taps on keyword on given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'new_downloads': {'name': 'new_downloads', 'description': 'App downloads from new users who have never before installed app of keyword in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'redownloads': {'name': 'redownloads', 'description': 'Number of user downloads where user deletes app and downloads the same app again following a tap on an ad on the App Store, or downloads the same app to an additional device of keyword in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'total_downloads': {'name': 'total_downloads', 'description': 'The sum of new_downloads and redownloads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions of keyword in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend on keyword in the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'apple_search_ads://models\\apple_search_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.365588, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads`.`apple_search_ads__keyword_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nwith report as (\n\n    select *\n    from {{ var('keyword_report') }}\n), \n\nkeyword as (\n\n    select *\n    from {{ var('keyword_history') }}\n    where is_most_recent_record = True\n), \n\nad_group as (\n\n    select *\n    from {{ var('ad_group_history') }}\n    where is_most_recent_record = True\n), \n\ncampaign as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record = True\n), \n\norganization as (\n\n    select * \n    from {{ var('organization') }}\n), \n\njoined as (\n\n    select \n        report.date_day,\n        organization.organization_id,\n        organization.organization_name,\n        campaign.campaign_id, \n        campaign.campaign_name, \n        ad_group.ad_group_id,\n        ad_group.ad_group_name,\n        keyword.keyword_id,\n        keyword.keyword_text,\n        keyword.match_type,\n        report.currency,\n        keyword.keyword_status,\n        sum(report.taps) as taps,\n        sum(report.new_downloads) as new_downloads,\n        sum(report.redownloads) as redownloads,\n        sum(report.new_downloads + report.redownloads) as total_downloads,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='apple_search_ads__keyword_passthrough_metrics', transform = 'sum') }}\n    from report\n    join keyword \n        on report.keyword_id = keyword.keyword_id\n    join ad_group \n        on keyword.ad_group_id = ad_group.ad_group_id\n    join campaign \n        on ad_group.campaign_id = campaign.campaign_id\n    join organization \n        on ad_group.organization_id = organization.organization_id\n    {{ dbt_utils.group_by(12) }}\n)\n\nselect * \nfrom joined", 'language': 'sql', 'refs': [['stg_apple_search_ads__keyword_report'], ['stg_apple_search_ads__keyword_history'], ['stg_apple_search_ads__ad_group_history'], ['stg_apple_search_ads__campaign_history'], ['stg_apple_search_ads__organization']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__keyword_report', 'model.apple_search_ads_source.stg_apple_search_ads__keyword_history', 'model.apple_search_ads_source.stg_apple_search_ads__ad_group_history', 'model.apple_search_ads_source.stg_apple_search_ads__campaign_history', 'model.apple_search_ads_source.stg_apple_search_ads__organization']}, 'compiled_path': None}, 'model.apple_search_ads.apple_search_ads__organization_report': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads', 'name': 'apple_search_ads__organization_report', 'resource_type': 'model', 'package_name': 'apple_search_ads', 'path': 'apple_search_ads__organization_report.sql', 'original_file_path': 'models\\apple_search_ads__organization_report.sql', 'unique_id': 'model.apple_search_ads.apple_search_ads__organization_report', 'fqn': ['apple_search_ads', 'apple_search_ads__organization_report'], 'alias': 'apple_search_ads__organization_report', 'checksum': {'name': 'sha256', 'checksum': '47084fe8809edaeeda722e20590b19c6488687d05ad654b8fef4a0021088e0a2'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily ad performance of each organization.', 'columns': {'organization_id': {'name': 'organization_id', 'description': 'Organization ID associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'organization_name': {'name': 'organization_name', 'description': 'Organization name associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'Date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': "This currency value should match the respective organization's currency value.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'taps': {'name': 'taps', 'description': 'Number of taps on organization on given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'new_downloads': {'name': 'new_downloads', 'description': 'App downloads from new users who have never before installed app of organization in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'redownloads': {'name': 'redownloads', 'description': 'Number of user downloads where user deletes app and downloads the same app again following a tap on an ad on the App Store, or downloads the same app to an additional device of organization in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'total_downloads': {'name': 'total_downloads', 'description': 'The sum of new_downloads and redownloads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions of organization in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend on organization in the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'apple_search_ads://models\\apple_search_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.3682916, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads`.`apple_search_ads__organization_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nwith report as (\n    \n    select *\n    from {{ var('campaign_report') }}\n), \n\ncampaign as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record = True\n), \n\norganization as (\n\n    select * \n    from {{ var('organization') }}\n), \n\njoined as (\n\n    select \n        report.date_day,\n        organization.organization_id,\n        organization.organization_name,\n        organization.currency,\n        sum(report.taps) as taps,\n        sum(report.new_downloads) as new_downloads,\n        sum(report.redownloads) as redownloads,\n        sum(report.new_downloads + report.redownloads) as total_downloads,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='apple_search_ads__campaign_passthrough_metrics', transform = 'sum') }}\n    from report\n    join campaign \n        on report.campaign_id = campaign.campaign_id\n    join organization \n        on campaign.organization_id = organization.organization_id\n    {{ dbt_utils.group_by(4) }}\n)\n\nselect * \nfrom joined", 'language': 'sql', 'refs': [['stg_apple_search_ads__campaign_report'], ['stg_apple_search_ads__campaign_history'], ['stg_apple_search_ads__organization']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__campaign_report', 'model.apple_search_ads_source.stg_apple_search_ads__campaign_history', 'model.apple_search_ads_source.stg_apple_search_ads__organization']}, 'compiled_path': None}, 'model.apple_search_ads.apple_search_ads__search_term_report': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads', 'name': 'apple_search_ads__search_term_report', 'resource_type': 'model', 'package_name': 'apple_search_ads', 'path': 'apple_search_ads__search_term_report.sql', 'original_file_path': 'models\\apple_search_ads__search_term_report.sql', 'unique_id': 'model.apple_search_ads.apple_search_ads__search_term_report', 'fqn': ['apple_search_ads', 'apple_search_ads__search_term_report'], 'alias': 'apple_search_ads__search_term_report', 'checksum': {'name': 'sha256', 'checksum': '4827d710dac6b2e632dcf3ba421a8166d719d1ae59e98128736b8689cf4039a1'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily ad performance of each search term, only includes records with search term values.', 'columns': {'organization_id': {'name': 'organization_id', 'description': 'Organization ID associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'organization_name': {'name': 'organization_name', 'description': 'Organization name associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'Campaign name associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'Ad group ID associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'Ad group name associated with this record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'match_type': {'name': 'match_type', 'description': 'Controls how ads are matched to user searches; EXACT or BROAD.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'Date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'search_term_text': {'name': 'search_term_text', 'description': 'Search term text.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': "This currency value should match the respective organization's currency value.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'taps': {'name': 'taps', 'description': 'Number of taps on organization on given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'new_downloads': {'name': 'new_downloads', 'description': 'App downloads from new users who have never before installed app of organization in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'redownloads': {'name': 'redownloads', 'description': 'Number of user downloads where user deletes app and downloads the same app again following a tap on an ad on the App Store, or downloads the same app to an additional device of organization in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'total_downloads': {'name': 'total_downloads', 'description': 'The sum of new_downloads and redownloads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions of organization in a given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend on organization in the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'apple_search_ads://models\\apple_search_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.3723652, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads`.`apple_search_ads__search_term_report`', 'raw_code': "{{ config(enabled=fivetran_utils.enabled_vars(['ad_reporting__apple_search_ads_enabled','apple_search_ads__using_search_terms'])) }}\n\nwith report as (\n\n    select *\n    from {{ var('search_term_report') }}\n), \n\ncampaign as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record = True\n), \n\norganization as (\n\n    select * \n    from {{ var('organization') }}\n), \n\njoined as (\n\n    select \n        report.date_day,\n        organization.organization_id,\n        organization.organization_name,\n        campaign.campaign_id, \n        campaign.campaign_name, \n        report.ad_group_id,\n        report.ad_group_name,\n        report.keyword_id,\n        report.keyword_text,\n        report.search_term_text,\n        report.match_type,\n        report.currency,\n        sum(report.taps) as taps,\n        sum(report.new_downloads) as new_downloads,\n        sum(report.redownloads) as redownloads,\n        sum(report.new_downloads + report.redownloads) as total_downloads,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='apple_search_ads__search_term_passthrough_metrics', transform = 'sum') }}\n    from report\n    join campaign \n        on report.campaign_id = campaign.campaign_id\n    join organization \n        on campaign.organization_id = organization.organization_id\n    where report.search_term_text is not null\n    {{ dbt_utils.group_by(12) }}\n)\n\nselect * \nfrom joined", 'language': 'sql', 'refs': [['stg_apple_search_ads__search_term_report'], ['stg_apple_search_ads__campaign_history'], ['stg_apple_search_ads__organization']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.enabled_vars', 'macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__search_term_report', 'model.apple_search_ads_source.stg_apple_search_ads__campaign_history', 'model.apple_search_ads_source.stg_apple_search_ads__organization']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__ad_group_history': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__ad_group_history', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'stg_apple_search_ads__ad_group_history.sql', 'original_file_path': 'models\\stg_apple_search_ads__ad_group_history.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__ad_group_history', 'fqn': ['apple_search_ads_source', 'stg_apple_search_ads__ad_group_history'], 'alias': 'stg_apple_search_ads__ad_group_history', 'checksum': {'name': 'sha256', 'checksum': 'b2081179706957545ca7818fd65e298a3948051372426039e2ecffd091fef371'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents a version of an ad group in Apple Search Ads.', 'columns': {'modified_at': {'name': 'modified_at', 'description': 'Timestamp of when the ad group object was last modified.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_most_recent_record': {'name': 'is_most_recent_record', 'description': 'Boolean indicating whether record was the most recent instance.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'Ad group ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'start_at': {'name': 'start_at', 'description': 'The designated ad group start time.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'end_at': {'name': 'end_at', 'description': 'The designated ad group end time.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'Ad group name.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'organization_id': {'name': 'organization_id', 'description': 'Organization ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'status': {'name': 'status', 'description': 'The current status of the ad group, values include ENABLED and PAUSED.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'apple_search_ads_source://models\\stg_apple_search_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.467183, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__ad_group_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_apple_search_ads__ad_group_history_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_apple_search_ads__ad_group_history_tmp')),\n                staging_columns=get_ad_group_history_columns()\n            )\n        }}\n        \n    from base\n),\n\nfinal as (\n    select \n        modification_time as modified_at,\n        organization_id,\n        campaign_id,\n        name as ad_group_name,\n        id as ad_group_id,\n        status as ad_group_status,\n        start_time as start_at,\n        end_time as end_at,\n        row_number() over (partition by id order by modification_time desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_group_history_tmp'], ['stg_apple_search_ads__ad_group_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.apple_search_ads_source.get_ad_group_history_columns', 'macro.fivetran_utils.fill_staging_columns'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_group_history_tmp', 'model.apple_search_ads_source.stg_apple_search_ads__ad_group_history_tmp']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__ad_group_report': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__ad_group_report', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'stg_apple_search_ads__ad_group_report.sql', 'original_file_path': 'models\\stg_apple_search_ads__ad_group_report.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__ad_group_report', 'fqn': ['apple_search_ads_source', 'stg_apple_search_ads__ad_group_report'], 'alias': 'stg_apple_search_ads__ad_group_report', 'checksum': {'name': 'sha256', 'checksum': 'a6f8f1e79e88e2512acd90e2768436ef73939e82acd46b79c0775ba19865147d'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily performance of an ad group in Apple Search Ads.', 'columns': {'ad_group_id': {'name': 'ad_group_id', 'description': 'Ad group ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'Date for daily report aggregation.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'Number of times your ad appeared in App Store search results.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The sum of costs associated with the number of impressions served. Spend is measured in the currency used in the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': "This currency value should match the respective organization's currency value.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'new_downloads': {'name': 'new_downloads', 'description': 'App downloads from new users who have never before installed the respective app.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'redownloads': {'name': 'redownloads', 'description': 'Occurs when a user downloads respective app, deletes it, and downloads the same app again following a tap on an ad on the App Store, or downloads the same app to an additional device.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'taps': {'name': 'taps', 'description': 'The number of times ad was tapped by users within the reporting time period.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'apple_search_ads_source://models\\stg_apple_search_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.4692206, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__ad_group_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_apple_search_ads__ad_group_report_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_apple_search_ads__ad_group_report_tmp')),\n                staging_columns=get_ad_group_report_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select\n        date as date_day, \n        ad_group_id,\n        impressions,\n        local_spend_amount as spend,\n        local_spend_currency as currency,\n        new_downloads,\n        redownloads,\n        taps\n\n        {{ fivetran_utils.fill_pass_through_columns('apple_search_ads__ad_group_passthrough_metrics') }}\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_group_report_tmp'], ['stg_apple_search_ads__ad_group_report_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.apple_search_ads_source.get_ad_group_report_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_group_report_tmp', 'model.apple_search_ads_source.stg_apple_search_ads__ad_group_report_tmp']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__ad_history': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__ad_history', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'stg_apple_search_ads__ad_history.sql', 'original_file_path': 'models\\stg_apple_search_ads__ad_history.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__ad_history', 'fqn': ['apple_search_ads_source', 'stg_apple_search_ads__ad_history'], 'alias': 'stg_apple_search_ads__ad_history', 'checksum': {'name': 'sha256', 'checksum': '4abb76f80d87af32ba976747bb0accf3b1641854a41a3e9d8ebec94533405d23'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents a version of an ad in Apple Search Ads.', 'columns': {'created_at': {'name': 'created_at', 'description': 'Timestamp of when ad was created.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'modified_at': {'name': 'modified_at', 'description': 'Timestamp of when the ad object was last modified.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'organization_id': {'name': 'organization_id', 'description': 'Organization ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'Ad group ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_name': {'name': 'ad_name', 'description': 'Ad name associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_id': {'name': 'ad_id', 'description': 'Ad ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_status': {'name': 'ad_status', 'description': 'The current status of the ad, values include ENABLED and PAUSED.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'apple_search_ads_source://models\\stg_apple_search_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.4722207, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__ad_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_apple_search_ads__ad_history_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_apple_search_ads__ad_history_tmp')),\n                staging_columns=get_ad_history_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select \n        creation_time as created_at,\n        modification_time as modified_at,\n        org_id as organization_id,\n        campaign_id,\n        ad_group_id,\n        name as ad_name,\n        id as ad_id,\n        status as ad_status, \n        row_number() over (partition by id order by modification_time desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_history_tmp'], ['stg_apple_search_ads__ad_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.apple_search_ads_source.get_ad_history_columns', 'macro.fivetran_utils.fill_staging_columns'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_history_tmp', 'model.apple_search_ads_source.stg_apple_search_ads__ad_history_tmp']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__ad_report': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__ad_report', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'stg_apple_search_ads__ad_report.sql', 'original_file_path': 'models\\stg_apple_search_ads__ad_report.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__ad_report', 'fqn': ['apple_search_ads_source', 'stg_apple_search_ads__ad_report'], 'alias': 'stg_apple_search_ads__ad_report', 'checksum': {'name': 'sha256', 'checksum': '45019dc2d949eecadbbd9d4a052049a60dca00c32f726da678972fa8bdadd1f6'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily performance of an ad in Apple Search Ads.', 'columns': {'date_day': {'name': 'date_day', 'description': 'Date for daily report aggregation.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'Ad group ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_id': {'name': 'ad_id', 'description': 'Ad ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'Number of times your ad appeared in App Store search results.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The sum of costs associated with the number of impressions served; Spend is measured in the currency used in the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': "This currency value should match the respective organization's currency value.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'new_downloads': {'name': 'new_downloads', 'description': 'App downloads from new users who have never before installed the respective app.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'redownloads': {'name': 'redownloads', 'description': 'Occurs when a user downloads respective app, deletes it, and downloads the same app again following a tap on an ad on the App Store, or downloads the same app to an additional device.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'taps': {'name': 'taps', 'description': 'The number of times ad was tapped by users within the reporting time period.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'apple_search_ads_source://models\\stg_apple_search_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.4752207, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__ad_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_apple_search_ads__ad_report_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_apple_search_ads__ad_report_tmp')),\n                staging_columns=get_ad_level_report_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select \n        date as date_day,\n        campaign_id,\n        ad_group_id,\n        ad_id,\n        impressions,\n        local_spend_amount as spend,\n        local_spend_currency as currency,\n        new_downloads,\n        redownloads,\n        taps\n\n        {{ fivetran_utils.fill_pass_through_columns('apple_search_ads__ad_passthrough_metrics') }}\n    from fields\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_report_tmp'], ['stg_apple_search_ads__ad_report_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.apple_search_ads_source.get_ad_level_report_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_report_tmp', 'model.apple_search_ads_source.stg_apple_search_ads__ad_report_tmp']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__campaign_history': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__campaign_history', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'stg_apple_search_ads__campaign_history.sql', 'original_file_path': 'models\\stg_apple_search_ads__campaign_history.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__campaign_history', 'fqn': ['apple_search_ads_source', 'stg_apple_search_ads__campaign_history'], 'alias': 'stg_apple_search_ads__campaign_history', 'checksum': {'name': 'sha256', 'checksum': '294e54bc10f47e44786be1c445e764b49464643d75c0bf7a4fc3a38f3868e0de'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents a version of a campaign in Apple Search Ads.', 'columns': {'modified_at': {'name': 'modified_at', 'description': 'Timestamp of when the campaign object was last modified.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_most_recent_record': {'name': 'is_most_recent_record', 'description': 'Boolean representing whether a record is the most recent version of that record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'start_at': {'name': 'start_at', 'description': 'The designated ad group start time (ad group with the earliest start time associated with this campaign).', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'end_at': {'name': 'end_at', 'description': 'The designated campaign end time (ad group with the latest start time associated with this campaign).', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'Campaign name for the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'organization_id': {'name': 'organization_id', 'description': 'Organization ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'status': {'name': 'status', 'description': 'The current status of the campaign, values include ENABLED and PAUSED.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'apple_search_ads_source://models\\stg_apple_search_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.4787376, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__campaign_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_apple_search_ads__campaign_history_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_apple_search_ads__campaign_history_tmp')),\n                staging_columns=get_campaign_history_columns()\n            )\n        }}\n        \n    from base\n),\n\nfinal as (\n    \n    select\n        modification_time as modified_at,\n        organization_id,\n        name as campaign_name,\n        id as campaign_id,\n        status as campaign_status,\n        start_time as start_at,\n        end_time as end_at,\n        row_number() over (partition by id order by modification_time desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_apple_search_ads__campaign_history_tmp'], ['stg_apple_search_ads__campaign_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.apple_search_ads_source.get_campaign_history_columns', 'macro.fivetran_utils.fill_staging_columns'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__campaign_history_tmp', 'model.apple_search_ads_source.stg_apple_search_ads__campaign_history_tmp']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__campaign_report': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__campaign_report', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'stg_apple_search_ads__campaign_report.sql', 'original_file_path': 'models\\stg_apple_search_ads__campaign_report.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__campaign_report', 'fqn': ['apple_search_ads_source', 'stg_apple_search_ads__campaign_report'], 'alias': 'stg_apple_search_ads__campaign_report', 'checksum': {'name': 'sha256', 'checksum': 'c4681d203c58d68501b9d2d3a84fc28598e9705eb4cc7f4496be52e3209768d3'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily performance of a campaign in Apple Search Ads.', 'columns': {'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'Date for daily report aggregation.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'Number of times your ad appeared in App Store search results.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The sum of costs associated with the number of impressions served; Spend is measured in the currency used in the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': "This currency value should match the respective organization's currency value.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'new_downloads': {'name': 'new_downloads', 'description': 'App downloads from new users who have never before installed the respective app.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'redownloads': {'name': 'redownloads', 'description': 'Occurs when a user downloads respective app, deletes it, and downloads the same app again following a tap on an ad on the App Store, or downloads the same app to an additional device.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'taps': {'name': 'taps', 'description': 'The number of times ad was tapped by users within the reporting time period.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'apple_search_ads_source://models\\stg_apple_search_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.481237, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__campaign_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_apple_search_ads__campaign_report_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_apple_search_ads__campaign_report_tmp')),\n                staging_columns=get_campaign_report_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select \n        date as date_day,\n        id as campaign_id,\n        impressions,\n        local_spend_amount as spend,\n        local_spend_currency as currency,\n        new_downloads,\n        redownloads,\n        taps\n\n        {{ fivetran_utils.fill_pass_through_columns('apple_search_ads__campaign_passthrough_metrics') }}\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_apple_search_ads__campaign_report_tmp'], ['stg_apple_search_ads__campaign_report_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.apple_search_ads_source.get_campaign_report_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__campaign_report_tmp', 'model.apple_search_ads_source.stg_apple_search_ads__campaign_report_tmp']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__keyword_history': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__keyword_history', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'stg_apple_search_ads__keyword_history.sql', 'original_file_path': 'models\\stg_apple_search_ads__keyword_history.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__keyword_history', 'fqn': ['apple_search_ads_source', 'stg_apple_search_ads__keyword_history'], 'alias': 'stg_apple_search_ads__keyword_history', 'checksum': {'name': 'sha256', 'checksum': '5ee576e97a5fffaf97916376ca747fcb9389b6733d268f9b42308a8f244ade8e'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents a version of a keyword in Apple Search Ads.', 'columns': {'modified_at': {'name': 'modified_at', 'description': 'Timestamp of when the keyword object was last modified.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_most_recent_record': {'name': 'is_most_recent_record', 'description': 'Boolean representing whether a record is the most recent version of that record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_id': {'name': 'keyword_id', 'description': 'Keyword ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'Ad group ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'bid_amount': {'name': 'bid_amount', 'description': 'The bid amount to display your ad for the matching text value.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'bid_currency': {'name': 'bid_currency', 'description': "This currency value should match the respective organization's currency value.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'match_type': {'name': 'match_type', 'description': 'Controls how ads are matched to user searches; EXACT or BROAD.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'status': {'name': 'status', 'description': 'The current status of the keyword, values include ENABLED and PAUSED.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_text': {'name': 'keyword_text', 'description': 'The word or phrase to match in user searches, to show respective ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'apple_search_ads_source://models\\stg_apple_search_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.483237, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__keyword_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_apple_search_ads__keyword_history_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_apple_search_ads__keyword_history_tmp')),\n                staging_columns=get_keyword_history_columns()\n            )\n        }}\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        modification_time as modified_at,\n        campaign_id,\n        ad_group_id,\n        id as keyword_id,\n        bid_amount, \n        bid_currency,\n        match_type,\n        status as keyword_status,\n        text as keyword_text,\n        row_number() over (partition by id order by modification_time desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_apple_search_ads__keyword_history_tmp'], ['stg_apple_search_ads__keyword_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.apple_search_ads_source.get_keyword_history_columns', 'macro.fivetran_utils.fill_staging_columns'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__keyword_history_tmp', 'model.apple_search_ads_source.stg_apple_search_ads__keyword_history_tmp']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__keyword_report': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__keyword_report', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'stg_apple_search_ads__keyword_report.sql', 'original_file_path': 'models\\stg_apple_search_ads__keyword_report.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__keyword_report', 'fqn': ['apple_search_ads_source', 'stg_apple_search_ads__keyword_report'], 'alias': 'stg_apple_search_ads__keyword_report', 'checksum': {'name': 'sha256', 'checksum': '087cf73b201edc946f1b30c28096f4d513aca817fc3e510cac05f28dc781c665'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily performance of a keyword in Apple Search Ads.', 'columns': {'keyword_id': {'name': 'keyword_id', 'description': 'Keyword ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'Date for daily report aggregation.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'Number of times your ad appeared in App Store search results.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The sum of costs associated with the number of impressions served; Spend is measured in the currency used in the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': "This currency value should match the respective organization's currency value.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'new_downloads': {'name': 'new_downloads', 'description': 'App downloads from new users who have never before installed the respective app.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'redownloads': {'name': 'redownloads', 'description': 'Occurs when a user downloads respective app, deletes it, and downloads the same app again following a tap on an ad on the App Store, or downloads the same app to an additional device.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'taps': {'name': 'taps', 'description': 'The number of times ad was tapped by users within the reporting time period.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'apple_search_ads_source://models\\stg_apple_search_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.4862373, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__keyword_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_apple_search_ads__keyword_report_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_apple_search_ads__keyword_report_tmp')),\n                staging_columns=get_keyword_report_columns()\n            )\n        }}     \n    from base\n),\n\nfinal as (\n    \n    select \n        date as date_day,\n        id as keyword_id,\n        impressions,\n        local_spend_amount as spend,\n        local_spend_currency as currency,\n        new_downloads,\n        redownloads,\n        taps\n\n        {{ fivetran_utils.fill_pass_through_columns('apple_search_ads__keyword_passthrough_metrics') }}\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_apple_search_ads__keyword_report_tmp'], ['stg_apple_search_ads__keyword_report_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.apple_search_ads_source.get_keyword_report_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__keyword_report_tmp', 'model.apple_search_ads_source.stg_apple_search_ads__keyword_report_tmp']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__organization': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__organization', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'stg_apple_search_ads__organization.sql', 'original_file_path': 'models\\stg_apple_search_ads__organization.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__organization', 'fqn': ['apple_search_ads_source', 'stg_apple_search_ads__organization'], 'alias': 'stg_apple_search_ads__organization', 'checksum': {'name': 'sha256', 'checksum': '24d3ee4e2d050e8ade0b3222ea535ed1837d2ea4265f00cf3f3b7b67a7a30dab'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents an organization in Apple Search Ads.', 'columns': {'organization_id': {'name': 'organization_id', 'description': 'Organization ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': 'Specified currency for respective organization.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'payment_model': {'name': 'payment_model', 'description': "Values include 'LOC', 'PAYG' or <empty string> (payment method hasn't been set).", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'organization_name': {'name': 'organization_name', 'description': 'Name of organization.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'time_zone': {'name': 'time_zone', 'description': 'Organization default timezone; values can be ORTZ or UTC.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'apple_search_ads_source://models\\stg_apple_search_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.4877424, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__organization`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_apple_search_ads__organization_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_apple_search_ads__organization_tmp')),\n                staging_columns=get_organization_columns()\n            )\n        }}\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as organization_id,\n        currency,\n        payment_model,\n        name as organization_name,\n        time_zone\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_apple_search_ads__organization_tmp'], ['stg_apple_search_ads__organization_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.apple_search_ads_source.get_organization_columns', 'macro.fivetran_utils.fill_staging_columns'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__organization_tmp', 'model.apple_search_ads_source.stg_apple_search_ads__organization_tmp']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__search_term_report': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__search_term_report', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'stg_apple_search_ads__search_term_report.sql', 'original_file_path': 'models\\stg_apple_search_ads__search_term_report.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__search_term_report', 'fqn': ['apple_search_ads_source', 'stg_apple_search_ads__search_term_report'], 'alias': 'stg_apple_search_ads__search_term_report', 'checksum': {'name': 'sha256', 'checksum': '6345a092b669f3283eb8b09b8590cdcf4e89da7ac486c18bb626315fac6db0e0'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily performance of a search term in Apple Search Ads.', 'columns': {'_fivetran_id': {'name': '_fivetran_id', 'description': 'A Fivetran internal unique id that helps us avoid duplicate rows in primary keyless tables.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'Ad group ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_format': {'name': 'ad_format', 'description': 'Format of creative set.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'Date for daily report aggregation.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'Ad group name.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'bid_amount': {'name': 'bid_amount', 'description': 'The bid amount to display your ad for the matching text value.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'bid_currency': {'name': 'bid_currency', 'description': "This currency value should match the respective organization's currency value.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_text': {'name': 'keyword_text', 'description': 'The word or phrase to match in user searches, to show respective ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_display_status': {'name': 'keyword_display_status', 'description': 'The keyword display status can either be ACTIVE or PAUSED.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_id': {'name': 'keyword_id', 'description': 'Keyword ID associated with the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The sum of costs associated with the number of impressions served; Spend is measured in the currency used in the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': "This currency value should match the respective organization's currency value.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'match_type': {'name': 'match_type', 'description': 'Controls how ads are matched to user searches; values include EXACT, BROAD or AUTO.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'search_term_source': {'name': 'search_term_source', 'description': 'The search term source can either be TARGETED or AUTO; if this value is AUTO so will match_type.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'search_term_text': {'name': 'search_term_text', 'description': 'The word or phrase to match of user searches.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'Number of times your ad appeared in App Store search results.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'taps': {'name': 'taps', 'description': 'The number of times ad was tapped by users within the reporting time period.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'new_downloads': {'name': 'new_downloads', 'description': 'App downloads from new users who have never before installed the respective app.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'redownloads': {'name': 'redownloads', 'description': 'Occurs when a user downloads respective app, deletes it, and downloads the same app again following a tap on an ad on the App Store, or downloads the same app to an additional device.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'apple_search_ads_source://models\\stg_apple_search_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.4937468, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__search_term_report`', 'raw_code': "{{ config(enabled=fivetran_utils.enabled_vars(['ad_reporting__apple_search_ads_enabled','apple_search_ads__using_search_terms'])) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_apple_search_ads__search_term_report_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_apple_search_ads__search_term_report_tmp')),\n                staging_columns=get_search_term_report_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select \n        date as date_day,\n        _fivetran_id,\n        campaign_id,\n        ad_group_id,\n        ad_group_name,\n        bid_amount_amount as bid_amount,\n        bid_amount_currency as bid_currency,\n        keyword as keyword_text,\n        keyword_display_status,\n        keyword_id,\n        local_spend_amount as spend,\n        local_spend_currency as currency,\n        match_type,\n        search_term_source,\n        search_term_text,\n        impressions,\n        taps,\n        new_downloads,\n        redownloads\n\n        {{ fivetran_utils.fill_pass_through_columns('apple_search_ads__search_term_passthrough_metrics') }}\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_apple_search_ads__search_term_report_tmp'], ['stg_apple_search_ads__search_term_report_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.enabled_vars', 'macro.apple_search_ads_source.get_search_term_report_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__search_term_report_tmp', 'model.apple_search_ads_source.stg_apple_search_ads__search_term_report_tmp']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__ad_group_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__ad_group_history_tmp', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'tmp\\stg_apple_search_ads__ad_group_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_apple_search_ads__ad_group_history_tmp.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__ad_group_history_tmp', 'fqn': ['apple_search_ads_source', 'tmp', 'stg_apple_search_ads__ad_group_history_tmp'], 'alias': 'stg_apple_search_ads__ad_group_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '69317b26b7a3c109c0e5e61d7fdad053cb0549479a0dfdacd0d67ff0757cc97e'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433481.8123055, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__ad_group_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('ad_group_history') }}", 'language': 'sql', 'refs': [], 'sources': [['apple_search_ads', 'ad_group_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.apple_search_ads_source.apple_search_ads.ad_group_history']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__ad_group_report_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__ad_group_report_tmp', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'tmp\\stg_apple_search_ads__ad_group_report_tmp.sql', 'original_file_path': 'models\\tmp\\stg_apple_search_ads__ad_group_report_tmp.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__ad_group_report_tmp', 'fqn': ['apple_search_ads_source', 'tmp', 'stg_apple_search_ads__ad_group_report_tmp'], 'alias': 'stg_apple_search_ads__ad_group_report_tmp', 'checksum': {'name': 'sha256', 'checksum': '91089253c95dee7d0aea3f9b8cc49cf343c2d06acf0de36641ebaef03e1d2b1b'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433481.820132, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__ad_group_report_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('ad_group_report') }}", 'language': 'sql', 'refs': [], 'sources': [['apple_search_ads', 'ad_group_report']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.apple_search_ads_source.apple_search_ads.ad_group_report']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__ad_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__ad_history_tmp', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'tmp\\stg_apple_search_ads__ad_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_apple_search_ads__ad_history_tmp.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__ad_history_tmp', 'fqn': ['apple_search_ads_source', 'tmp', 'stg_apple_search_ads__ad_history_tmp'], 'alias': 'stg_apple_search_ads__ad_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '7b184af2299b7d42defa4606467cf9bf379e10cec768bf1e5825c040dbdfacb8'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433481.8286445, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__ad_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('ad_history') }}", 'language': 'sql', 'refs': [], 'sources': [['apple_search_ads', 'ad_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.apple_search_ads_source.apple_search_ads.ad_history']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__ad_report_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__ad_report_tmp', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'tmp\\stg_apple_search_ads__ad_report_tmp.sql', 'original_file_path': 'models\\tmp\\stg_apple_search_ads__ad_report_tmp.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__ad_report_tmp', 'fqn': ['apple_search_ads_source', 'tmp', 'stg_apple_search_ads__ad_report_tmp'], 'alias': 'stg_apple_search_ads__ad_report_tmp', 'checksum': {'name': 'sha256', 'checksum': '1744a47e20045a53726079456f5aba358e0292dd8a14d670e6ab7b2c30ece7ee'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433481.8356462, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__ad_report_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('ad_report') }}", 'language': 'sql', 'refs': [], 'sources': [['apple_search_ads', 'ad_level_report']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.apple_search_ads_source.apple_search_ads.ad_level_report']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__campaign_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__campaign_history_tmp', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'tmp\\stg_apple_search_ads__campaign_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_apple_search_ads__campaign_history_tmp.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__campaign_history_tmp', 'fqn': ['apple_search_ads_source', 'tmp', 'stg_apple_search_ads__campaign_history_tmp'], 'alias': 'stg_apple_search_ads__campaign_history_tmp', 'checksum': {'name': 'sha256', 'checksum': 'e23c062d3d75b890a717ab4047e5a0dccf7c098b3927935df02f76c17acb3ea7'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433481.8434725, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__campaign_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('campaign_history') }}", 'language': 'sql', 'refs': [], 'sources': [['apple_search_ads', 'campaign_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.apple_search_ads_source.apple_search_ads.campaign_history']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__campaign_report_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__campaign_report_tmp', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'tmp\\stg_apple_search_ads__campaign_report_tmp.sql', 'original_file_path': 'models\\tmp\\stg_apple_search_ads__campaign_report_tmp.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__campaign_report_tmp', 'fqn': ['apple_search_ads_source', 'tmp', 'stg_apple_search_ads__campaign_report_tmp'], 'alias': 'stg_apple_search_ads__campaign_report_tmp', 'checksum': {'name': 'sha256', 'checksum': 'ae8d95be0097305356d0ba251d324d35bbe367edcf342c958f69fea9f89625f2'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433481.8513486, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__campaign_report_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('campaign_report') }}", 'language': 'sql', 'refs': [], 'sources': [['apple_search_ads', 'campaign_report']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.apple_search_ads_source.apple_search_ads.campaign_report']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__keyword_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__keyword_history_tmp', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'tmp\\stg_apple_search_ads__keyword_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_apple_search_ads__keyword_history_tmp.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__keyword_history_tmp', 'fqn': ['apple_search_ads_source', 'tmp', 'stg_apple_search_ads__keyword_history_tmp'], 'alias': 'stg_apple_search_ads__keyword_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '852fa9ece91c72dd36f654ce0d71f2af4a1707385c0fa00e3d68e206e4ac456b'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433481.8589394, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__keyword_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('keyword_history') }}", 'language': 'sql', 'refs': [], 'sources': [['apple_search_ads', 'keyword_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.apple_search_ads_source.apple_search_ads.keyword_history']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__keyword_report_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__keyword_report_tmp', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'tmp\\stg_apple_search_ads__keyword_report_tmp.sql', 'original_file_path': 'models\\tmp\\stg_apple_search_ads__keyword_report_tmp.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__keyword_report_tmp', 'fqn': ['apple_search_ads_source', 'tmp', 'stg_apple_search_ads__keyword_report_tmp'], 'alias': 'stg_apple_search_ads__keyword_report_tmp', 'checksum': {'name': 'sha256', 'checksum': '5009b770850f4f2648d5498a78b1491e6a44250d9ac2d7c08c249e8624f517f2'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433481.8660126, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__keyword_report_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('keyword_report') }}", 'language': 'sql', 'refs': [], 'sources': [['apple_search_ads', 'keyword_report']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.apple_search_ads_source.apple_search_ads.keyword_report']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__organization_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__organization_tmp', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'tmp\\stg_apple_search_ads__organization_tmp.sql', 'original_file_path': 'models\\tmp\\stg_apple_search_ads__organization_tmp.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__organization_tmp', 'fqn': ['apple_search_ads_source', 'tmp', 'stg_apple_search_ads__organization_tmp'], 'alias': 'stg_apple_search_ads__organization_tmp', 'checksum': {'name': 'sha256', 'checksum': '4a62af784e819ec6034aa89fe16019f027c9994b192426e70bcf18bda3d117a9'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433481.872597, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__organization_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__apple_search_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('organization') }}", 'language': 'sql', 'refs': [], 'sources': [['apple_search_ads', 'organization']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.apple_search_ads_source.apple_search_ads.organization']}, 'compiled_path': None}, 'model.apple_search_ads_source.stg_apple_search_ads__search_term_report_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_apple_search_ads_source', 'name': 'stg_apple_search_ads__search_term_report_tmp', 'resource_type': 'model', 'package_name': 'apple_search_ads_source', 'path': 'tmp\\stg_apple_search_ads__search_term_report_tmp.sql', 'original_file_path': 'models\\tmp\\stg_apple_search_ads__search_term_report_tmp.sql', 'unique_id': 'model.apple_search_ads_source.stg_apple_search_ads__search_term_report_tmp', 'fqn': ['apple_search_ads_source', 'tmp', 'stg_apple_search_ads__search_term_report_tmp'], 'alias': 'stg_apple_search_ads__search_term_report_tmp', 'checksum': {'name': 'sha256', 'checksum': '86f6e99ff5c0373cf5ec106d4011966278601cb5350d588466564e2dca2fa951'}, 'config': {'enabled': True, 'alias': None, 'schema': 'apple_search_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'apple_search_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433481.8803, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_apple_search_ads_source`.`stg_apple_search_ads__search_term_report_tmp`', 'raw_code': "{{ config(enabled=fivetran_utils.enabled_vars(['ad_reporting__apple_search_ads_enabled','apple_search_ads__using_search_terms'])) }}\n\nselect * \nfrom {{ var('search_term_report') }}", 'language': 'sql', 'refs': [], 'sources': [['apple_search_ads', 'search_term_report']], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.enabled_vars'], 'nodes': ['source.apple_search_ads_source.apple_search_ads.search_term_report']}, 'compiled_path': None}, 'model.google_ads.google_ads__account_report': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads', 'name': 'google_ads__account_report', 'resource_type': 'model', 'package_name': 'google_ads', 'path': 'google_ads__account_report.sql', 'original_file_path': 'models\\google_ads__account_report.sql', 'unique_id': 'model.google_ads.google_ads__account_report', 'fqn': ['google_ads', 'google_ads__account_report'], 'alias': 'google_ads__account_report', 'checksum': {'name': 'sha256', 'checksum': 'e16fa20ded7cc2a36a0a1eabe5ad1b0bdb16503068002078b640704ec7cc8bef'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents the daily performance at the account level.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date being reported on.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The descriptive name of the Customer account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The Customer ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'time_zone': {'name': 'time_zone', 'description': 'The time zone which the account is located.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency_code': {'name': 'currency_code', 'description': 'The currency which the account uses.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'auto_tagging_enabled': {'name': 'auto_tagging_enabled', 'description': 'Boolean indicating if the account uses auto tagging within ad urls.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'Total cost of ad clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The count of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The count of impressions.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'google_ads://models\\google_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.7526624, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads`.`google_ads__account_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nwith stats as (\n\n    select *\n    from {{ var('account_stats') }}\n), \n\naccounts as (\n\n    select *\n    from {{ var('account_history') }}\n    where is_most_recent_record = True\n), \n\nfields as (\n\n    select\n        stats.date_day,\n        accounts.account_name,\n        accounts.account_id,\n        accounts.currency_code,\n        accounts.auto_tagging_enabled,\n        accounts.time_zone,\n        sum(stats.spend) as spend,\n        sum(stats.clicks) as clicks,\n        sum(stats.impressions) as impressions\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='google_ads__account_stats_passthrough_metrics', transform = 'sum') }}\n\n    from stats\n    left join accounts\n        on stats.account_id = accounts.account_id\n    {{ dbt_utils.group_by(6) }}\n)\n\nselect *\nfrom fields", 'language': 'sql', 'refs': [['stg_google_ads__account_stats'], ['stg_google_ads__account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.google_ads_source.stg_google_ads__account_stats', 'model.google_ads_source.stg_google_ads__account_history']}, 'compiled_path': None}, 'model.google_ads.google_ads__ad_group_report': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads', 'name': 'google_ads__ad_group_report', 'resource_type': 'model', 'package_name': 'google_ads', 'path': 'google_ads__ad_group_report.sql', 'original_file_path': 'models\\google_ads__ad_group_report.sql', 'unique_id': 'model.google_ads.google_ads__ad_group_report', 'fqn': ['google_ads', 'google_ads__ad_group_report'], 'alias': 'google_ads__ad_group_report', 'checksum': {'name': 'sha256', 'checksum': '7f608fbc1b314740591eb4acc64fb45bc8303cefd50c850a31caecc33a8fad23'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents the daily performance at the ad group level.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date being reported on.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The descriptive name of the Customer account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The Customer ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID representing the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'The name of the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'The ID representing the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_status': {'name': 'ad_group_status', 'description': 'The status of the ad group.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_type': {'name': 'ad_group_type', 'description': 'The type of ad group which is serving ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'Total cost of ad clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The count of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The count of impressions.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'google_ads://models\\google_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.757013, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads`.`google_ads__ad_group_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nwith stats as (\n\n    select *\n    from {{ var('ad_group_stats') }}\n), \n\naccounts as (\n\n    select *\n    from {{ var('account_history') }}\n    where is_most_recent_record = True\n), \n\ncampaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record = True\n),\n\nad_groups as (\n\n    select *\n    from {{ var('ad_group_history') }}\n    where is_most_recent_record = True\n), \n\nfields as (\n\n    select\n        stats.date_day,\n        accounts.account_name,\n        accounts.account_id,\n        campaigns.campaign_name,\n        campaigns.campaign_id,\n        ad_groups.ad_group_name,\n        ad_groups.ad_group_id,\n        ad_groups.ad_group_status,\n        ad_groups.ad_group_type,\n        sum(stats.spend) as spend,\n        sum(stats.clicks) as clicks,\n        sum(stats.impressions) as impressions\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='google_ads__ad_group_stats_passthrough_metrics', transform = 'sum') }}\n\n    from stats\n    left join ad_groups\n        on stats.ad_group_id = ad_groups.ad_group_id\n    left join campaigns\n        on ad_groups.campaign_id = campaigns.campaign_id\n    left join accounts\n        on campaigns.account_id = accounts.account_id\n    {{ dbt_utils.group_by(9) }}\n)\n\nselect *\nfrom fields", 'language': 'sql', 'refs': [['stg_google_ads__ad_group_stats'], ['stg_google_ads__account_history'], ['stg_google_ads__campaign_history'], ['stg_google_ads__ad_group_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_group_stats', 'model.google_ads_source.stg_google_ads__account_history', 'model.google_ads_source.stg_google_ads__campaign_history', 'model.google_ads_source.stg_google_ads__ad_group_history']}, 'compiled_path': None}, 'model.google_ads.google_ads__ad_report': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads', 'name': 'google_ads__ad_report', 'resource_type': 'model', 'package_name': 'google_ads', 'path': 'google_ads__ad_report.sql', 'original_file_path': 'models\\google_ads__ad_report.sql', 'unique_id': 'model.google_ads.google_ads__ad_report', 'fqn': ['google_ads', 'google_ads__ad_report'], 'alias': 'google_ads__ad_report', 'checksum': {'name': 'sha256', 'checksum': 'd37cc295aa04e6ad61dfac2a9a77267009ac200771988ed13937fe62f847301b'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents the daily performance at the ad level.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date being reported on.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The descriptive name of the Customer account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The Customer ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID representing the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'The name of the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'The ID representing the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_id': {'name': 'ad_id', 'description': 'The unique identifier of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'display_url': {'name': 'display_url', 'description': 'The url which is displayed with the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'source_final_urls': {'name': 'source_final_urls', 'description': 'The final urls that are used within the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_status': {'name': 'ad_status', 'description': 'The status of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_type': {'name': 'ad_type', 'description': 'The type of the ad that is being served.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'Total cost of ad clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The count of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The count of impressions.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'google_ads://models\\google_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.762569, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads`.`google_ads__ad_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nwith stats as (\n\n    select *\n    from {{ var('ad_stats') }}\n), \n\naccounts as (\n\n    select *\n    from {{ var('account_history') }}\n    where is_most_recent_record = True\n), \n\ncampaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record = True\n), \n\nad_groups as (\n\n    select *\n    from {{ var('ad_group_history') }}\n    where is_most_recent_record = True\n),\n\nads as (\n\n    select *\n    from {{ var('ad_history') }}\n    where is_most_recent_record = True\n), \n\nfields as (\n\n    select\n        stats.date_day,\n        accounts.account_name,\n        accounts.account_id,\n        campaigns.campaign_name,\n        campaigns.campaign_id,\n        ad_groups.ad_group_name,\n        ad_groups.ad_group_id,\n        stats.ad_id,\n        ads.ad_name,\n        ads.ad_status,\n        ads.ad_type,\n        ads.display_url,\n        ads.source_final_urls,\n        sum(stats.spend) as spend,\n        sum(stats.clicks) as clicks,\n        sum(stats.impressions) as impressions\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='google_ads__ad_stats_passthrough_metrics', transform = 'sum') }}\n\n    from stats\n    left join ads\n        on stats.ad_id = ads.ad_id\n        and stats.ad_group_id = ads.ad_group_id\n    left join ad_groups\n        on ads.ad_group_id = ad_groups.ad_group_id\n    left join campaigns\n        on ad_groups.campaign_id = campaigns.campaign_id\n    left join accounts\n        on campaigns.account_id = accounts.account_id\n    {{ dbt_utils.group_by(13) }}\n)\n\nselect *\nfrom fields", 'language': 'sql', 'refs': [['stg_google_ads__ad_stats'], ['stg_google_ads__account_history'], ['stg_google_ads__campaign_history'], ['stg_google_ads__ad_group_history'], ['stg_google_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_stats', 'model.google_ads_source.stg_google_ads__account_history', 'model.google_ads_source.stg_google_ads__campaign_history', 'model.google_ads_source.stg_google_ads__ad_group_history', 'model.google_ads_source.stg_google_ads__ad_history']}, 'compiled_path': None}, 'model.google_ads.google_ads__campaign_report': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads', 'name': 'google_ads__campaign_report', 'resource_type': 'model', 'package_name': 'google_ads', 'path': 'google_ads__campaign_report.sql', 'original_file_path': 'models\\google_ads__campaign_report.sql', 'unique_id': 'model.google_ads.google_ads__campaign_report', 'fqn': ['google_ads', 'google_ads__campaign_report'], 'alias': 'google_ads__campaign_report', 'checksum': {'name': 'sha256', 'checksum': 'b0bd1cd3691181888cba6ff2c8247dade9fad09a62b433ccb75f3b8854a7275c'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents the daily performance of a campaign at the campaign/advertising_channel/advertising_channel_subtype level.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date being reported on.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The descriptive name of the Customer account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The Customer ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID representing the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertising_channel_type': {'name': 'advertising_channel_type', 'description': 'The channel type of the ads being served within the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertising_channel_subtype': {'name': 'advertising_channel_subtype', 'description': 'The channel subtype of the ads being served within the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'status': {'name': 'status', 'description': 'The status of the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'Total cost of ad clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The count of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The count of impressions.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'google_ads://models\\google_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.825557, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads`.`google_ads__campaign_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nwith stats as (\n\n    select *\n    from {{ var('campaign_stats') }}\n), \n\naccounts as (\n\n    select *\n    from {{ var('account_history') }}\n    where is_most_recent_record = True\n), \n\ncampaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record = True\n), \n\nfields as (\n\n    select\n        stats.date_day,\n        accounts.account_name,\n        accounts.account_id,\n        campaigns.campaign_name,\n        campaigns.campaign_id,\n        campaigns.advertising_channel_type,\n        campaigns.advertising_channel_subtype,\n        campaigns.status,\n        sum(stats.spend) as spend,\n        sum(stats.clicks) as clicks,\n        sum(stats.impressions) as impressions\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='google_ads__campaign_stats_passthrough_metrics', transform = 'sum') }}\n\n    from stats\n    left join campaigns\n        on stats.campaign_id = campaigns.campaign_id\n    left join accounts\n        on campaigns.account_id = accounts.account_id\n    {{ dbt_utils.group_by(8) }}\n)\n\nselect *\nfrom fields", 'language': 'sql', 'refs': [['stg_google_ads__campaign_stats'], ['stg_google_ads__account_history'], ['stg_google_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.google_ads_source.stg_google_ads__campaign_stats', 'model.google_ads_source.stg_google_ads__account_history', 'model.google_ads_source.stg_google_ads__campaign_history']}, 'compiled_path': None}, 'model.google_ads.google_ads__keyword_report': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads', 'name': 'google_ads__keyword_report', 'resource_type': 'model', 'package_name': 'google_ads', 'path': 'google_ads__keyword_report.sql', 'original_file_path': 'models\\google_ads__keyword_report.sql', 'unique_id': 'model.google_ads.google_ads__keyword_report', 'fqn': ['google_ads', 'google_ads__keyword_report'], 'alias': 'google_ads__keyword_report', 'checksum': {'name': 'sha256', 'checksum': '8afc77ec6f8a7e4348762f06892b32e48f7066973ff0344fa4e23ceae20cd77f'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents the daily performance at the ad group level for keywords.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date being reported on.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The descriptive name of the Customer account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The Customer ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID representing the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'The name of the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'The ID representing the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'criterion_id': {'name': 'criterion_id', 'description': 'The unique identifier of the criterion being served.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'type': {'name': 'type', 'description': 'The type of keyword ad being served.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'status': {'name': 'status', 'description': 'The status of the keyword ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_match_type': {'name': 'keyword_match_type', 'description': 'The match type criteria used for the keyword ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_text': {'name': 'keyword_text', 'description': 'The specific keyword text that is used.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'Total cost of ad clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The count of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The count of impressions.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'google_ads://models\\google_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.83114, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads`.`google_ads__keyword_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nwith stats as (\n\n    select *\n    from {{ var('keyword_stats') }}\n), \n\naccounts as (\n\n    select *\n    from {{ var('account_history') }}\n    where is_most_recent_record = True\n),\n\ncampaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record = True\n), \n\nad_groups as (\n\n    select *\n    from {{ var('ad_group_history') }}\n    where is_most_recent_record = True\n), \n\ncriterions as (\n\n    select *\n    from {{ var('ad_group_criterion_history') }}\n    where is_most_recent_record = True\n), \n\nfields as (\n\n    select\n        stats.date_day,\n        accounts.account_name,\n        stats.account_id,\n        campaigns.campaign_name,\n        stats.campaign_id,\n        ad_groups.ad_group_name,\n        stats.ad_group_id,\n        criterions.criterion_id,\n        criterions.type,\n        criterions.status,\n        criterions.keyword_match_type,\n        criterions.keyword_text,\n        sum(stats.spend) as spend,\n        sum(stats.clicks) as clicks,\n        sum(stats.impressions) as impressions\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='google_ads__keyword_stats_passthrough_metrics', transform = 'sum') }}\n\n    from stats\n    left join criterions\n        on stats.criterion_id = criterions.criterion_id\n    left join ad_groups\n        on stats.ad_group_id = ad_groups.ad_group_id\n    left join campaigns\n        on stats.campaign_id = campaigns.campaign_id\n    left join accounts\n        on stats.account_id = accounts.account_id\n    {{ dbt_utils.group_by(12) }}\n)\n\nselect *\nfrom fields", 'language': 'sql', 'refs': [['stg_google_ads__keyword_stats'], ['stg_google_ads__account_history'], ['stg_google_ads__campaign_history'], ['stg_google_ads__ad_group_history'], ['stg_google_ads__ad_group_criterion_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.google_ads_source.stg_google_ads__keyword_stats', 'model.google_ads_source.stg_google_ads__account_history', 'model.google_ads_source.stg_google_ads__campaign_history', 'model.google_ads_source.stg_google_ads__ad_group_history', 'model.google_ads_source.stg_google_ads__ad_group_criterion_history']}, 'compiled_path': None}, 'model.google_ads.google_ads__url_report': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads', 'name': 'google_ads__url_report', 'resource_type': 'model', 'package_name': 'google_ads', 'path': 'google_ads__url_report.sql', 'original_file_path': 'models\\google_ads__url_report.sql', 'unique_id': 'model.google_ads.google_ads__url_report', 'fqn': ['google_ads', 'google_ads__url_report'], 'alias': 'google_ads__url_report', 'checksum': {'name': 'sha256', 'checksum': 'c0cd7ac20f5d6e744a3ab249e75f5a0facce6a833c9fe6bbb9efce90e78bd328'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents the daily performance of URLs at the ad level.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date being reported on.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The descriptive name of the Customer account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The Customer ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID representing the campaign, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'The name of the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'The ID representing the ad group, if present in the source data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_id': {'name': 'ad_id', 'description': 'The unique identifier of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'base_url': {'name': 'base_url', 'description': 'The base url of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_host': {'name': 'url_host', 'description': 'The URL host of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_path': {'name': 'url_path', 'description': 'The URL path of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_source': {'name': 'utm_source', 'description': 'The utm_source parameter of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_medium': {'name': 'utm_medium', 'description': 'The utm_medium parameter of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_campaign': {'name': 'utm_campaign', 'description': 'The utm_campaign parameter of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_content': {'name': 'utm_content', 'description': 'The utm_content parameter of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_term': {'name': 'utm_term', 'description': 'The utm_term parameter of the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'Total cost of ad clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The count of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The count of impressions.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'google_ads://models\\google_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.7505212, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads`.`google_ads__url_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nwith stats as (\n\n    select *\n    from {{ var('ad_stats') }}\n), \n\naccounts as (\n\n    select *\n    from {{ var('account_history') }}\n    where is_most_recent_record = True\n), \n\ncampaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record = True\n), \n\nad_groups as (\n\n    select *\n    from {{ var('ad_group_history') }}\n    where is_most_recent_record = True\n),\n\nads as (\n\n    select *\n    from {{ var('ad_history') }}\n    where is_most_recent_record = True\n), \n\nfields as (\n\n    select\n        stats.date_day,\n        accounts.account_name,\n        accounts.account_id,\n        campaigns.campaign_name,\n        campaigns.campaign_id,\n        ad_groups.ad_group_name,\n        ad_groups.ad_group_id,\n        ads.ad_id,\n        ads.base_url,\n        ads.url_host,\n        ads.url_path,\n\n        {% if var('google_auto_tagging_enabled', false) %}\n\n        coalesce( {{ dbt_utils.get_url_parameter('ads.final_url', 'utm_source') }} , 'google')  as utm_source,\n        coalesce( {{ dbt_utils.get_url_parameter('ads.final_url', 'utm_medium') }} , 'cpc') as utm_medium,\n        coalesce( {{ dbt_utils.get_url_parameter('ads.final_url', 'utm_campaign') }} , campaigns.campaign_name) as utm_campaign,\n        coalesce( {{ dbt_utils.get_url_parameter('ads.final_url', 'utm_content') }} , ad_groups.ad_group_name) as utm_content,\n\n        {% else %}\n\n        ads.utm_source,\n        ads.utm_medium,\n        ads.utm_campaign,\n        ads.utm_content,\n        \n        {% endif %}\n\n        ads.utm_term,\n        sum(stats.spend) as spend,\n        sum(stats.clicks) as clicks,\n        sum(stats.impressions) as impressions\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='google_ads__ad_stats_passthrough_metrics', transform = 'sum') }}\n\n    from stats\n    left join ads\n        on stats.ad_id = ads.ad_id\n        and stats.ad_group_id = ads.ad_group_id\n    left join ad_groups\n        on ads.ad_group_id = ad_groups.ad_group_id\n    left join campaigns\n        on ad_groups.campaign_id = campaigns.campaign_id\n    left join accounts\n        on campaigns.account_id = accounts.account_id\n\n    {% if var('ad_reporting__url_report__using_null_filter', True) %}\n        where ads.source_final_urls is not null\n    {% endif %}\n\n    {{ dbt_utils.group_by(16) }}\n)\n\nselect *\nfrom fields", 'language': 'sql', 'refs': [['stg_google_ads__ad_stats'], ['stg_google_ads__account_history'], ['stg_google_ads__campaign_history'], ['stg_google_ads__ad_group_history'], ['stg_google_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_stats', 'model.google_ads_source.stg_google_ads__account_history', 'model.google_ads_source.stg_google_ads__campaign_history', 'model.google_ads_source.stg_google_ads__ad_group_history', 'model.google_ads_source.stg_google_ads__ad_history']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__account_history': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__account_history', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'stg_google_ads__account_history.sql', 'original_file_path': 'models\\stg_google_ads__account_history.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__account_history', 'fqn': ['google_ads_source', 'stg_google_ads__account_history'], 'alias': 'stg_google_ads__account_history', 'checksum': {'name': 'sha256', 'checksum': '343005eab065e14bf0ee42e8efc615b9397add7d783d1e2e77158d2781f253bb'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents a version of an account in Google Ads.', 'columns': {'account_id': {'name': 'account_id', 'description': 'The ID of the Account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency_code': {'name': 'currency_code', 'description': 'The currency of the spend reported.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'auto_tagging_enabled': {'name': 'auto_tagging_enabled', 'description': 'Boolean indicating if auto tagging is enabled on the account ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'time_zone': {'name': 'time_zone', 'description': 'The time zone of the account ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The descriptive name of the Customer account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_at': {'name': 'updated_at', 'description': 'Timestamp of when a record was last synced.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_most_recent_record': {'name': 'is_most_recent_record', 'description': 'Boolean representing whether the record is the most recent version of the object.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'google_ads_source://models\\stg_google_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.9092178, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__account_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_google_ads__account_history_tmp') }}\n\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_google_ads__account_history_tmp')),\n                staging_columns=get_account_history_columns()\n            )\n        }}\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as account_id,\n        updated_at,\n        currency_code,\n        auto_tagging_enabled,\n        time_zone,\n        descriptive_name as account_name,\n        row_number() over (partition by id order by updated_at desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_google_ads__account_history_tmp'], ['stg_google_ads__account_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.google_ads_source.get_account_history_columns', 'macro.fivetran_utils.fill_staging_columns'], 'nodes': ['model.google_ads_source.stg_google_ads__account_history_tmp', 'model.google_ads_source.stg_google_ads__account_history_tmp']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__account_stats': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__account_stats', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'stg_google_ads__account_stats.sql', 'original_file_path': 'models\\stg_google_ads__account_stats.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__account_stats', 'fqn': ['google_ads_source', 'stg_google_ads__account_stats'], 'alias': 'stg_google_ads__account_stats', 'checksum': {'name': 'sha256', 'checksum': 'ab5bb273d256a42be530160f2c20aa597ff974ad43e5fdbd20046f6f0699ef7f'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily performance of an account in Google Ads broken down to the ad network and device type.', 'columns': {'account_id': {'name': 'account_id', 'description': 'The Customer ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'The date being reported on.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_network_type': {'name': 'ad_network_type', 'description': 'The Google Ad network type used across the account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'device': {'name': 'device', 'description': 'Account ad performance per unique device where the ads were served.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The number of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The sum of your cost-per-click (CPC) and cost-per-thousand impressions (CPM) costs during this period.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'Count of how often your ad has appeared on a search results page or website on the Google Network.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'google_ads_source://models\\stg_google_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.9379342, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__account_stats`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_google_ads__account_stats_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_google_ads__account_stats_tmp')),\n                staging_columns=get_account_stats_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select \n        customer_id as account_id, \n        date as date_day,\n        ad_network_type,\n        device,\n        clicks, \n        cost_micros / 1000000.0 as spend, \n        impressions\n        \n        {{ fivetran_utils.fill_pass_through_columns('google_ads__account_stats_passthrough_metrics') }}\n\n    from fields\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_google_ads__account_stats_tmp'], ['stg_google_ads__account_stats_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.google_ads_source.get_account_stats_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.google_ads_source.stg_google_ads__account_stats_tmp', 'model.google_ads_source.stg_google_ads__account_stats_tmp']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__ad_group_criterion_history': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__ad_group_criterion_history', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'stg_google_ads__ad_group_criterion_history.sql', 'original_file_path': 'models\\stg_google_ads__ad_group_criterion_history.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__ad_group_criterion_history', 'fqn': ['google_ads_source', 'stg_google_ads__ad_group_criterion_history'], 'alias': 'stg_google_ads__ad_group_criterion_history', 'checksum': {'name': 'sha256', 'checksum': '0f6a6882c94309772926b30b0b1d0ddf5f38fa9cdc8133ad6d771ead57c0a6a3'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents a historical version of an ad group criterion in Google Ads.', 'columns': {'criterion_id': {'name': 'criterion_id', 'description': 'Unique identifier of the ad group criterion.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'The ID of the AdGroup.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'base_campaign_id': {'name': 'base_campaign_id', 'description': 'The ID of the Campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_at': {'name': 'updated_at', 'description': 'Timestamp of when the record was last updated in Google Ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'type': {'name': 'type', 'description': 'The type of ad group criterion.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'status': {'name': 'status', 'description': 'The current status of the ad group criterion.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_match_type': {'name': 'keyword_match_type', 'description': 'The match type which dictate how closely the keyword needs to match with the user’s search query so that the ad can be considered for the auction.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_text': {'name': 'keyword_text', 'description': 'The text used within the keyword criterion that is being matched against.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_most_recent_record': {'name': 'is_most_recent_record', 'description': 'Boolean representing whether the record is the most recent version of the object.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'google_ads_source://models\\stg_google_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.9273438, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__ad_group_criterion_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_google_ads__ad_group_criterion_history_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_google_ads__ad_group_criterion_history_tmp')),\n                staging_columns=get_ad_group_criterion_history_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select \n        id as criterion_id,\n        cast(ad_group_id as {{ dbt.type_string() }}) as ad_group_id,\n        base_campaign_id,\n        updated_at,\n        type,\n        status,\n        keyword_match_type,\n        keyword_text,\n        row_number() over (partition by id order by updated_at desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_google_ads__ad_group_criterion_history_tmp'], ['stg_google_ads__ad_group_criterion_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.google_ads_source.get_ad_group_criterion_history_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_string'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_group_criterion_history_tmp', 'model.google_ads_source.stg_google_ads__ad_group_criterion_history_tmp']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__ad_group_history': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__ad_group_history', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'stg_google_ads__ad_group_history.sql', 'original_file_path': 'models\\stg_google_ads__ad_group_history.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__ad_group_history', 'fqn': ['google_ads_source', 'stg_google_ads__ad_group_history'], 'alias': 'stg_google_ads__ad_group_history', 'checksum': {'name': 'sha256', 'checksum': 'a74962ca2bca2e4507e3c647d9dd4ff276be310258c25d99c1228024b6e7e03c'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents a version of an ad group in Google Ads.', 'columns': {'ad_group_id': {'name': 'ad_group_id', 'description': 'The ID of the AdGroup.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_at': {'name': 'updated_at', 'description': 'Timestamp of when the record was last updated in Google Ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_type': {'name': 'ad_group_type', 'description': 'The type of the ad group in Google Ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID of the Campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the Campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'The name of the AdGroup.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_status': {'name': 'ad_group_status', 'description': 'Status of the ad group.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_most_recent_record': {'name': 'is_most_recent_record', 'description': 'Boolean representing whether the record is the most recent version of the object.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'google_ads_source://models\\stg_google_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.9122176, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__ad_group_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_google_ads__ad_group_history_tmp') }}\n\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_google_ads__ad_group_history_tmp')),\n                staging_columns=get_ad_group_history_columns()\n            )\n        }}\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        cast(id as {{ dbt.type_string() }}) as ad_group_id,\n        updated_at,\n        type as ad_group_type, \n        campaign_id, \n        campaign_name, \n        name as ad_group_name, \n        status as ad_group_status,\n        row_number() over (partition by id order by updated_at desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_google_ads__ad_group_history_tmp'], ['stg_google_ads__ad_group_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.google_ads_source.get_ad_group_history_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_string'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_group_history_tmp', 'model.google_ads_source.stg_google_ads__ad_group_history_tmp']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__ad_group_stats': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__ad_group_stats', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'stg_google_ads__ad_group_stats.sql', 'original_file_path': 'models\\stg_google_ads__ad_group_stats.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__ad_group_stats', 'fqn': ['google_ads_source', 'stg_google_ads__ad_group_stats'], 'alias': 'stg_google_ads__ad_group_stats', 'checksum': {'name': 'sha256', 'checksum': '50112c5d48ed15989072dc56b8e1fc598778564b5fef97bcc538ca6927117713'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily performance of an ad group in Google Ads broken down to the ad network and device type.', 'columns': {'account_id': {'name': 'account_id', 'description': 'The Customer ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'The date being reported on.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'The ID of the AdGroup.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID of the Campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_network_type': {'name': 'ad_network_type', 'description': 'The Google Ad network type used across the account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'device': {'name': 'device', 'description': 'Account ad performance per unique device where the ads were served.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The number of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The sum of your cost-per-click (CPC) and cost-per-thousand impressions (CPM) costs during this period.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'Count of how often your ad has appeared on a search results page or website on the Google Network.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'google_ads_source://models\\stg_google_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.9303856, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__ad_group_stats`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_google_ads__ad_group_stats_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_google_ads__ad_group_stats_tmp')),\n                staging_columns=get_ad_group_stats_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select\n        customer_id as account_id, \n        date as date_day, \n        cast(id as {{ dbt.type_string() }}) as ad_group_id, \n        campaign_id, \n        device,\n        ad_network_type,\n        clicks, \n        cost_micros / 1000000.0 as spend, \n        impressions\n        \n        {{ fivetran_utils.fill_pass_through_columns('google_ads__ad_group_stats_passthrough_metrics') }}\n\n    from fields\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_google_ads__ad_group_stats_tmp'], ['stg_google_ads__ad_group_stats_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.google_ads_source.get_ad_group_stats_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_string', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_group_stats_tmp', 'model.google_ads_source.stg_google_ads__ad_group_stats_tmp']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__ad_history': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__ad_history', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'stg_google_ads__ad_history.sql', 'original_file_path': 'models\\stg_google_ads__ad_history.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__ad_history', 'fqn': ['google_ads_source', 'stg_google_ads__ad_history'], 'alias': 'stg_google_ads__ad_history', 'checksum': {'name': 'sha256', 'checksum': 'e0ff6b7aea218822442000bf423b307647e99e54c9bf48ed4bf411bcc6f00edb'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents a version of an ad in Google Ads.', 'columns': {'ad_group_id': {'name': 'ad_group_id', 'description': 'The ID of the AdGroup.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_id': {'name': 'ad_id', 'description': 'The ID of the Ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_at': {'name': 'updated_at', 'description': 'Timestamp of when the record was last updated in Google Ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'display_url': {'name': 'display_url', 'description': 'The display url of the ad that is being served.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_type': {'name': 'ad_type', 'description': 'The type of the ad in Google Ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_status': {'name': 'ad_status', 'description': 'Status of the Ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_most_recent_record': {'name': 'is_most_recent_record', 'description': 'Boolean representing whether the record is the most recent version of the object.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'source_final_urls': {'name': 'source_final_urls', 'description': 'The original list of final urls expressed as an array. Please be aware the test used on this field is intended to warn you if you have fields with multiple urls. If you do, the `final_url` field will filter down the urls within the array to just the first. Therefore, this package will only leverage one of possibly many urls within this field array.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'final_url': {'name': 'final_url', 'description': 'The first url in the list of the urls within the `final_urls` source field.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'base_url': {'name': 'base_url', 'description': 'The base URL of the ad, extracted from the `final_urls`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_host': {'name': 'url_host', 'description': 'The URL host of the ad, extracted from the `final_urls`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_path': {'name': 'url_path', 'description': 'The URL path of the ad, extracted from the `final_urls`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_source': {'name': 'utm_source', 'description': 'The utm_source parameter of the ad, extracted from the `final_urls`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_medium': {'name': 'utm_medium', 'description': 'The utm_medium parameter of the ad, extracted from the `final_urls`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_campaign': {'name': 'utm_campaign', 'description': 'The utm_campaign parameter of the ad, extracted from the `final_urls`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_content': {'name': 'utm_content', 'description': 'The utm_content parameter of the ad, extracted from the `final_urls`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_term': {'name': 'utm_term', 'description': 'The utm_term parameter of the ad, extracted from the `final_urls`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'google_ads_source://models\\stg_google_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.9177237, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__ad_history`', 'raw_code': '{{ config(enabled=var(\'ad_reporting__google_ads_enabled\', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref(\'stg_google_ads__ad_history_tmp\') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref(\'stg_google_ads__ad_history_tmp\')),\n                staging_columns=get_ad_history_columns()\n            )\n        }}\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        cast(ad_group_id as {{ dbt.type_string() }}) as ad_group_id, \n        id as ad_id,\n        name as ad_name,\n        updated_at,\n        type as ad_type,\n        status as ad_status,\n        display_url,\n        final_urls as source_final_urls,\n        replace(replace(final_urls, \'[\', \'\'),\']\',\'\') as final_urls,\n        row_number() over (partition by id, ad_group_id order by updated_at desc) = 1 as is_most_recent_record\n    from fields\n),\n\nfinal_urls as (\n\n    select \n        *,\n        --Extract the first url within the list of urls provided within the final_urls field\n        {{ dbt.split_part(string_text=\'final_urls\', delimiter_text="\',\'", part_number=1) }} as final_url\n\n    from final\n\n),\n\nurl_fields as (\n    select \n        *,\n        {{ dbt.split_part(\'final_url\', "\'?\'", 1) }} as base_url,\n        {{ dbt_utils.get_url_host(\'final_url\') }} as url_host,\n        \'/\' || {{ dbt_utils.get_url_path(\'final_url\') }} as url_path,\n        {{ dbt_utils.get_url_parameter(\'final_url\', \'utm_source\') }} as utm_source,\n        {{ dbt_utils.get_url_parameter(\'final_url\', \'utm_medium\') }} as utm_medium,\n        {{ dbt_utils.get_url_parameter(\'final_url\', \'utm_campaign\') }} as utm_campaign,\n        {{ dbt_utils.get_url_parameter(\'final_url\', \'utm_content\') }} as utm_content,\n        {{ dbt_utils.get_url_parameter(\'final_url\', \'utm_term\') }} as utm_term\n    from final_urls\n)\n\nselect * \nfrom url_fields', 'language': 'sql', 'refs': [['stg_google_ads__ad_history_tmp'], ['stg_google_ads__ad_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.google_ads_source.get_ad_history_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_string', 'macro.dbt.split_part', 'macro.dbt_utils.get_url_host', 'macro.dbt_utils.get_url_path', 'macro.dbt_utils.get_url_parameter'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_history_tmp', 'model.google_ads_source.stg_google_ads__ad_history_tmp']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__ad_stats': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__ad_stats', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'stg_google_ads__ad_stats.sql', 'original_file_path': 'models\\stg_google_ads__ad_stats.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__ad_stats', 'fqn': ['google_ads_source', 'stg_google_ads__ad_stats'], 'alias': 'stg_google_ads__ad_stats', 'checksum': {'name': 'sha256', 'checksum': 'be21b75b017ffad3f142c3d90ab9be8f9d99e9f16ea682acdf00217e6817fea2'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily performance of an ad in Google Ads broken down to the ad network, device type, and ad_group_id.', 'columns': {'account_id': {'name': 'account_id', 'description': 'The Customer ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'The date being reported on.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'The ID of the AdGroup.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_id': {'name': 'ad_id', 'description': 'The ID of the Ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID of the Campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_network_type': {'name': 'ad_network_type', 'description': 'The Google Ad network type used across the account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_ad_group_criterion': {'name': 'keyword_ad_group_criterion', 'description': 'The ad group which the keyword criterion resides.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'device': {'name': 'device', 'description': 'Account ad performance per unique device where the ads were served.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The number of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The sum of your cost-per-click (CPC) and cost-per-thousand impressions (CPM) costs during this period.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'Count of how often your ad has appeared on a search results page or website on the Google Network.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'google_ads_source://models\\stg_google_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.9207277, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__ad_stats`', 'raw_code': '{{ config(enabled=var(\'ad_reporting__google_ads_enabled\', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref(\'stg_google_ads__ad_stats_tmp\') }}\n\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref(\'stg_google_ads__ad_stats_tmp\')),\n                staging_columns=get_ad_stats_columns()\n            )\n        }}\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        customer_id as account_id, \n        date as date_day, \n        {% if target.type in (\'spark\',\'databricks\') %}\n        coalesce(cast(ad_group_id as {{ dbt.type_string() }}), split(ad_group,\'adGroups/\')[1]) as ad_group_id,\n        {% else %}\n        coalesce(cast(ad_group_id as {{ dbt.type_string() }}), {{ dbt.split_part(string_text=\'ad_group\', delimiter_text="\'adGroups/\'", part_number=2) }}) as ad_group_id,\n        {% endif %}\n        keyword_ad_group_criterion,\n        ad_network_type,\n        device,\n        ad_id, \n        campaign_id, \n        clicks, \n        cost_micros / 1000000.0 as spend, \n        impressions\n        \n        {{ fivetran_utils.fill_pass_through_columns(\'google_ads__ad_stats_passthrough_metrics\') }}\n\n    from fields\n)\n\nselect * from final', 'language': 'sql', 'refs': [['stg_google_ads__ad_stats_tmp'], ['stg_google_ads__ad_stats_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.google_ads_source.get_ad_stats_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_string', 'macro.dbt.split_part', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_stats_tmp', 'model.google_ads_source.stg_google_ads__ad_stats_tmp']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__campaign_history': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__campaign_history', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'stg_google_ads__campaign_history.sql', 'original_file_path': 'models\\stg_google_ads__campaign_history.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__campaign_history', 'fqn': ['google_ads_source', 'stg_google_ads__campaign_history'], 'alias': 'stg_google_ads__campaign_history', 'checksum': {'name': 'sha256', 'checksum': '48aacc738e5cbe391f544a5e16f40107b193fb5e84e3b7f1a3673cfe51e42bed'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents a version of a campaign in Google Ads.', 'columns': {'campaign_id': {'name': 'campaign_id', 'description': 'The ID of the Campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_at': {'name': 'updated_at', 'description': 'Timestamp of when the record was last updated in Google Ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertising_channel_type': {'name': 'advertising_channel_type', 'description': 'The type of advertising channel being used by the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertising_channel_subtype': {'name': 'advertising_channel_subtype', 'description': 'The advertising channel subtype that is being used by the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'start_date': {'name': 'start_date', 'description': 'The start date of the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'end_date': {'name': 'end_date', 'description': 'The end date of the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'serving_status': {'name': 'serving_status', 'description': 'Status of the ads and how they are currently being served.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'status': {'name': 'status', 'description': 'General status of the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'tracking_url_template': {'name': 'tracking_url_template', 'description': 'The tracking url template being used throughout the campaign ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the Campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The Customer ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_most_recent_record': {'name': 'is_most_recent_record', 'description': 'Boolean representing whether the record is the most recent version of the object.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'google_ads_source://models\\stg_google_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.92473, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__campaign_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_google_ads__campaign_history_tmp') }}\n\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_google_ads__campaign_history_tmp')),\n                staging_columns=get_campaign_history_columns()\n            )\n        }}\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as campaign_id, \n        updated_at,\n        name as campaign_name,\n        customer_id as account_id,\n        advertising_channel_type,\n        advertising_channel_subtype,\n        start_date,\n        end_date,\n        serving_status,\n        status,\n        tracking_url_template,\n        row_number() over (partition by id order by updated_at desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_google_ads__campaign_history_tmp'], ['stg_google_ads__campaign_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.google_ads_source.get_campaign_history_columns', 'macro.fivetran_utils.fill_staging_columns'], 'nodes': ['model.google_ads_source.stg_google_ads__campaign_history_tmp', 'model.google_ads_source.stg_google_ads__campaign_history_tmp']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__campaign_stats': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__campaign_stats', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'stg_google_ads__campaign_stats.sql', 'original_file_path': 'models\\stg_google_ads__campaign_stats.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__campaign_stats', 'fqn': ['google_ads_source', 'stg_google_ads__campaign_stats'], 'alias': 'stg_google_ads__campaign_stats', 'checksum': {'name': 'sha256', 'checksum': '4d8f1522db5e641f065131caf87cc3d4bb2895837d1da1adb9373e6f6e3187a3'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily performance of a campaign in Google Ads broken down to the ad network and device type.', 'columns': {'account_id': {'name': 'account_id', 'description': 'The Customer ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'The date being reported on.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID of the Campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_network_type': {'name': 'ad_network_type', 'description': 'The Google Ad network type used across the account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'device': {'name': 'device', 'description': 'Account ad performance per unique device where the ads were served.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The number of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The sum of your cost-per-click (CPC) and cost-per-thousand impressions (CPM) costs during this period.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'Count of how often your ad has appeared on a search results page or website on the Google Network.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'google_ads_source://models\\stg_google_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.9323995, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__campaign_stats`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_google_ads__campaign_stats_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_google_ads__campaign_stats_tmp')),\n                staging_columns=get_campaign_stats_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select \n        customer_id as account_id, \n        date as date_day, \n        id as campaign_id, \n        ad_network_type,\n        device,\n        clicks, \n        cost_micros / 1000000.0 as spend, \n        impressions\n        \n        {{ fivetran_utils.fill_pass_through_columns('google_ads__campaign_stats_passthrough_metrics') }}\n\n    from fields\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_google_ads__campaign_stats_tmp'], ['stg_google_ads__campaign_stats_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.google_ads_source.get_campaign_stats_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.google_ads_source.stg_google_ads__campaign_stats_tmp', 'model.google_ads_source.stg_google_ads__campaign_stats_tmp']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__keyword_stats': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__keyword_stats', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'stg_google_ads__keyword_stats.sql', 'original_file_path': 'models\\stg_google_ads__keyword_stats.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__keyword_stats', 'fqn': ['google_ads_source', 'stg_google_ads__keyword_stats'], 'alias': 'stg_google_ads__keyword_stats', 'checksum': {'name': 'sha256', 'checksum': 'ffc5f45c98b6b7a2824807980d55ad185258b67c2e8b3066844722616cdf4074'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily performance of a keyword in Google Ads.', 'columns': {'account_id': {'name': 'account_id', 'description': 'The Customer ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'The date being reported on.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'The ID of the AdGroup.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_id': {'name': 'keyword_id', 'description': 'The unique ID of the keyword record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID of the Campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'criterion_id': {'name': 'criterion_id', 'description': 'Reference to the ad group criterion used for the keyword.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The number of clicks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The sum of your cost-per-click (CPC) and cost-per-thousand impressions (CPM) costs during this period.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'Count of how often your ad has appeared on a search results page or website on the Google Network.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'google_ads_source://models\\stg_google_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433485.9354188, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__keyword_stats`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_google_ads__keyword_stats_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_google_ads__keyword_stats_tmp')),\n                staging_columns=get_keyword_stats_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select \n        _fivetran_id as keyword_id,\n        customer_id as account_id, \n        date as date_day, \n        cast(ad_group_id as {{ dbt.type_string() }}) as ad_group_id,\n        ad_group_criterion_criterion_id as criterion_id,\n        campaign_id, \n        clicks, \n        cost_micros / 1000000.0 as spend, \n        impressions\n        \n        {{ fivetran_utils.fill_pass_through_columns('google_ads__keyword_stats_passthrough_metrics') }}\n\n    from fields\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_google_ads__keyword_stats_tmp'], ['stg_google_ads__keyword_stats_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.google_ads_source.get_keyword_stats_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_string', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.google_ads_source.stg_google_ads__keyword_stats_tmp', 'model.google_ads_source.stg_google_ads__keyword_stats_tmp']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__account_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__account_history_tmp', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'tmp\\stg_google_ads__account_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_google_ads__account_history_tmp.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__account_history_tmp', 'fqn': ['google_ads_source', 'tmp', 'stg_google_ads__account_history_tmp'], 'alias': 'stg_google_ads__account_history_tmp', 'checksum': {'name': 'sha256', 'checksum': 'b5f8dd1b72ffdcf3bd32a1c0ab81a33aed0f43b042998b6d9cf57605a4226386'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433482.4475272, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__account_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('account_history') }}", 'language': 'sql', 'refs': [], 'sources': [['google_ads', 'account_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.google_ads_source.google_ads.account_history']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__account_stats_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__account_stats_tmp', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'tmp\\stg_google_ads__account_stats_tmp.sql', 'original_file_path': 'models\\tmp\\stg_google_ads__account_stats_tmp.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__account_stats_tmp', 'fqn': ['google_ads_source', 'tmp', 'stg_google_ads__account_stats_tmp'], 'alias': 'stg_google_ads__account_stats_tmp', 'checksum': {'name': 'sha256', 'checksum': '64986ed4826b8e88bc9cbc3bde6840448bc855e6084bc3d12da016addb34dafa'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433482.4545517, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__account_stats_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('account_stats') }}", 'language': 'sql', 'refs': [], 'sources': [['google_ads', 'account_stats']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.google_ads_source.google_ads.account_stats']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__ad_group_criterion_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__ad_group_criterion_history_tmp', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'tmp\\stg_google_ads__ad_group_criterion_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_google_ads__ad_group_criterion_history_tmp.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__ad_group_criterion_history_tmp', 'fqn': ['google_ads_source', 'tmp', 'stg_google_ads__ad_group_criterion_history_tmp'], 'alias': 'stg_google_ads__ad_group_criterion_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '82cd3b85a00f84d6433d30fb5a2c6b6882381c4200bdad44fd5a761219418b48'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433482.4624908, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__ad_group_criterion_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('ad_group_criterion_history') }}", 'language': 'sql', 'refs': [], 'sources': [['google_ads', 'ad_group_criterion_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.google_ads_source.google_ads.ad_group_criterion_history']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__ad_group_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__ad_group_history_tmp', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'tmp\\stg_google_ads__ad_group_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_google_ads__ad_group_history_tmp.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__ad_group_history_tmp', 'fqn': ['google_ads_source', 'tmp', 'stg_google_ads__ad_group_history_tmp'], 'alias': 'stg_google_ads__ad_group_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '663aad714cdf84b0a06475835364f36ffca4392b342ce434ea9ac3b38b96e548'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433482.4701786, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__ad_group_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('ad_group_history') }}", 'language': 'sql', 'refs': [], 'sources': [['google_ads', 'ad_group_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.google_ads_source.google_ads.ad_group_history']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__ad_group_stats_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__ad_group_stats_tmp', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'tmp\\stg_google_ads__ad_group_stats_tmp.sql', 'original_file_path': 'models\\tmp\\stg_google_ads__ad_group_stats_tmp.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__ad_group_stats_tmp', 'fqn': ['google_ads_source', 'tmp', 'stg_google_ads__ad_group_stats_tmp'], 'alias': 'stg_google_ads__ad_group_stats_tmp', 'checksum': {'name': 'sha256', 'checksum': 'df5f65c5bda3d22cada3c02ded54c4eb2a7e13ef2f1bc6169fed1f0c03fe761e'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433482.4766443, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__ad_group_stats_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('ad_group_stats') }}", 'language': 'sql', 'refs': [], 'sources': [['google_ads', 'ad_group_stats']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.google_ads_source.google_ads.ad_group_stats']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__ad_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__ad_history_tmp', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'tmp\\stg_google_ads__ad_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_google_ads__ad_history_tmp.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__ad_history_tmp', 'fqn': ['google_ads_source', 'tmp', 'stg_google_ads__ad_history_tmp'], 'alias': 'stg_google_ads__ad_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '237e4cca801b026f9d0aaeff2130bf3d2f3c9050e364406b5b59ba18db547166'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433482.4852748, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__ad_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('ad_history') }}", 'language': 'sql', 'refs': [], 'sources': [['google_ads', 'ad_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.google_ads_source.google_ads.ad_history']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__ad_stats_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__ad_stats_tmp', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'tmp\\stg_google_ads__ad_stats_tmp.sql', 'original_file_path': 'models\\tmp\\stg_google_ads__ad_stats_tmp.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__ad_stats_tmp', 'fqn': ['google_ads_source', 'tmp', 'stg_google_ads__ad_stats_tmp'], 'alias': 'stg_google_ads__ad_stats_tmp', 'checksum': {'name': 'sha256', 'checksum': '69fac90225ad40ce593bc7a83bea96739e0018b2d4b90c4dd7be0555b980c316'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433482.494297, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__ad_stats_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('ad_stats') }}", 'language': 'sql', 'refs': [], 'sources': [['google_ads', 'ad_stats']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.google_ads_source.google_ads.ad_stats']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__campaign_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__campaign_history_tmp', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'tmp\\stg_google_ads__campaign_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_google_ads__campaign_history_tmp.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__campaign_history_tmp', 'fqn': ['google_ads_source', 'tmp', 'stg_google_ads__campaign_history_tmp'], 'alias': 'stg_google_ads__campaign_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '1ca8c796342ffe6e1c664697a81bbe0787b3999df6e155e114aabb3f85df6ac6'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433482.5019393, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__campaign_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('campaign_history') }}", 'language': 'sql', 'refs': [], 'sources': [['google_ads', 'campaign_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.google_ads_source.google_ads.campaign_history']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__campaign_stats_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__campaign_stats_tmp', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'tmp\\stg_google_ads__campaign_stats_tmp.sql', 'original_file_path': 'models\\tmp\\stg_google_ads__campaign_stats_tmp.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__campaign_stats_tmp', 'fqn': ['google_ads_source', 'tmp', 'stg_google_ads__campaign_stats_tmp'], 'alias': 'stg_google_ads__campaign_stats_tmp', 'checksum': {'name': 'sha256', 'checksum': 'ac4bf76095a969b6cc66bdfc6bf1e53e555be2fee1eb08c867e0489a910ab491'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433482.509004, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__campaign_stats_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('campaign_stats') }}", 'language': 'sql', 'refs': [], 'sources': [['google_ads', 'campaign_stats']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.google_ads_source.google_ads.campaign_stats']}, 'compiled_path': None}, 'model.google_ads_source.stg_google_ads__keyword_stats_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_google_ads_source', 'name': 'stg_google_ads__keyword_stats_tmp', 'resource_type': 'model', 'package_name': 'google_ads_source', 'path': 'tmp\\stg_google_ads__keyword_stats_tmp.sql', 'original_file_path': 'models\\tmp\\stg_google_ads__keyword_stats_tmp.sql', 'unique_id': 'model.google_ads_source.stg_google_ads__keyword_stats_tmp', 'fqn': ['google_ads_source', 'tmp', 'stg_google_ads__keyword_stats_tmp'], 'alias': 'stg_google_ads__keyword_stats_tmp', 'checksum': {'name': 'sha256', 'checksum': '4568538a6402c68eb5e94f0e9f17373b8473723218597ad8990553524dc31691'}, 'config': {'enabled': True, 'alias': None, 'schema': 'google_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'google_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433482.516014, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_google_ads_source`.`stg_google_ads__keyword_stats_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__google_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('keyword_stats') }}", 'language': 'sql', 'refs': [], 'sources': [['google_ads', 'keyword_stats']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.google_ads_source.google_ads.keyword_stats']}, 'compiled_path': None}, 'model.snapchat_ads.snapchat_ads__account_report': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads', 'name': 'snapchat_ads__account_report', 'resource_type': 'model', 'package_name': 'snapchat_ads', 'path': 'snapchat_ads__account_report.sql', 'original_file_path': 'models\\snapchat_ads__account_report.sql', 'unique_id': 'model.snapchat_ads.snapchat_ads__account_report', 'fqn': ['snapchat_ads', 'snapchat_ads__account_report'], 'alias': 'snapchat_ads__account_report', 'checksum': {'name': 'sha256', 'checksum': '712da861e6b20cf879f1f5c936329cbfaf3a0e98728c707d692405b5629df197'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily performance of a Snapchat ad account.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_account_id': {'name': 'ad_account_id', 'description': 'The ID of the account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_account_name': {'name': 'ad_account_name', 'description': 'The name of the account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': 'The current used by the account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend on the ad in the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions the ad had on the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'swipes': {'name': 'swipes', 'description': 'The number of swipes the ad had on the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'snapchat_ads://models\\snapchat.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433486.9837668, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads`.`snapchat_ads__account_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nwith ad_hourly as (\n\n    select *\n    from {{ var('ad_hourly_report') }}\n\n), account as (\n\n    select *\n    from {{ var('ad_account_history') }}\n    where is_most_recent_record = true\n\n), ads as (\n\n    select *\n    from {{ var('ad_history') }}\n    where is_most_recent_record = true\n\n), ad_squads as (\n\n    select *\n    from {{ var('ad_squad_history') }}\n    where is_most_recent_record = true\n\n), campaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record = true\n\n\n), aggregated as (\n\n    select\n        cast(ad_hourly.date_hour as date) as date_day,\n        account.ad_account_id,\n        account.ad_account_name,\n        account.currency,\n        sum(ad_hourly.swipes) as swipes,\n        sum(ad_hourly.impressions) as impressions,\n        round(sum(ad_hourly.spend),2) as spend\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='snapchat_ads__ad_hourly_passthrough_metrics', transform = 'sum') }}\n    \n    from ad_hourly\n    left join ads \n        on ad_hourly.ad_id = ads.ad_id\n    left join ad_squads\n        on ads.ad_squad_id = ad_squads.ad_squad_id\n    left join campaigns\n        on ad_squads.campaign_id = campaigns.campaign_id\n    left join account\n        on campaigns.ad_account_id = account.ad_account_id\n\n    {{ dbt_utils.group_by(4) }}\n\n)\n\nselect *\nfrom aggregated", 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_hourly_report'], ['stg_snapchat_ads__ad_account_history'], ['stg_snapchat_ads__ad_history'], ['stg_snapchat_ads__ad_squad_history'], ['stg_snapchat_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report', 'model.snapchat_ads_source.stg_snapchat_ads__ad_account_history', 'model.snapchat_ads_source.stg_snapchat_ads__ad_history', 'model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history', 'model.snapchat_ads_source.stg_snapchat_ads__campaign_history']}, 'compiled_path': None}, 'model.snapchat_ads.snapchat_ads__ad_report': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads', 'name': 'snapchat_ads__ad_report', 'resource_type': 'model', 'package_name': 'snapchat_ads', 'path': 'snapchat_ads__ad_report.sql', 'original_file_path': 'models\\snapchat_ads__ad_report.sql', 'unique_id': 'model.snapchat_ads.snapchat_ads__ad_report', 'fqn': ['snapchat_ads', 'snapchat_ads__ad_report'], 'alias': 'snapchat_ads__ad_report', 'checksum': {'name': 'sha256', 'checksum': '883a24dba7248457561b24e845d2e8beec4fd361a2a8aef051b5cb01305f48fe'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily performance of a Snapchat ad account.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_id': {'name': 'ad_id', 'description': 'The ID of the ad in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_account_id': {'name': 'ad_account_id', 'description': 'The ID of the account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_account_name': {'name': 'ad_account_name', 'description': 'The name of the account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_name': {'name': 'ad_name', 'description': 'The name of the ad in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': 'The current used by the account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend on the ad in the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions the ad had on the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'swipes': {'name': 'swipes', 'description': 'The number of swipes the ad had on the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'snapchat_ads://models\\snapchat.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433486.985774, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads`.`snapchat_ads__ad_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nwith ad_hourly as (\n\n    select *\n    from {{ var('ad_hourly_report') }}\n\n), creatives as (\n\n    select *\n    from {{ ref('snapchat_ads__creative_history_prep') }}\n\n), account as (\n\n    select *\n    from {{ var('ad_account_history') }}\n    where is_most_recent_record = true\n\n), ads as (\n\n    select *\n    from {{ var('ad_history') }}\n    where is_most_recent_record = true\n\n), aggregated as (\n\n    select\n        cast(ad_hourly.date_hour as date) as date_day,\n        account.ad_account_id,\n        account.ad_account_name,\n        ad_hourly.ad_id,\n        ads.ad_name,\n        account.currency,\n        sum(ad_hourly.swipes) as swipes,\n        sum(ad_hourly.impressions) as impressions,\n        round(sum(ad_hourly.spend),2) as spend\n        \n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='snapchat_ads__ad_hourly_passthrough_metrics', transform = 'sum') }}\n    \n    from ad_hourly\n    left join ads \n        on ad_hourly.ad_id = ads.ad_id\n    left join creatives\n        on ads.creative_id = creatives.creative_id\n    left join account\n        on creatives.ad_account_id = account.ad_account_id\n    \n    {{ dbt_utils.group_by(6) }}\n\n)\n\nselect *\nfrom aggregated", 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_hourly_report'], ['snapchat_ads__creative_history_prep'], ['stg_snapchat_ads__ad_account_history'], ['stg_snapchat_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report', 'model.snapchat_ads.snapchat_ads__creative_history_prep', 'model.snapchat_ads_source.stg_snapchat_ads__ad_account_history', 'model.snapchat_ads_source.stg_snapchat_ads__ad_history']}, 'compiled_path': None}, 'model.snapchat_ads.snapchat_ads__ad_squad_report': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads', 'name': 'snapchat_ads__ad_squad_report', 'resource_type': 'model', 'package_name': 'snapchat_ads', 'path': 'snapchat_ads__ad_squad_report.sql', 'original_file_path': 'models\\snapchat_ads__ad_squad_report.sql', 'unique_id': 'model.snapchat_ads.snapchat_ads__ad_squad_report', 'fqn': ['snapchat_ads', 'snapchat_ads__ad_squad_report'], 'alias': 'snapchat_ads__ad_squad_report', 'checksum': {'name': 'sha256', 'checksum': '6d33fd85d1fc074fd8ba3f52b028d3b6f97d8e33c77bcd1fa5795527170a065a'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily performance of a Snapchat ad squad.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_squad_id': {'name': 'ad_squad_id', 'description': 'The ID of the ad squad in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_account_id': {'name': 'ad_account_id', 'description': 'The ID of the account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_account_name': {'name': 'ad_account_name', 'description': 'The name of the account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID of the campaign in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the campaign in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_squad_name': {'name': 'ad_squad_name', 'description': 'The name of the ad squad in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': 'The current used by the account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend on the ad in the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions the ad had on the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'swipes': {'name': 'swipes', 'description': 'The number of swipes the ad had on the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'snapchat_ads://models\\snapchat.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433486.9933734, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads`.`snapchat_ads__ad_squad_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nwith ad_squad_hourly as (\n\n    select *\n    from {{ var('ad_squad_hourly_report') }}\n\n), account as (\n\n    select *\n    from {{ var('ad_account_history') }}\n    where is_most_recent_record = true\n\n), ad_squads as (\n\n    select *\n    from {{ var('ad_squad_history') }}\n    where is_most_recent_record = true\n\n), campaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record = true\n\n\n), aggregated as (\n\n    select\n        cast(ad_squad_hourly.date_hour as date) as date_day,\n        account.ad_account_id,\n        account.ad_account_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        ad_squad_hourly.ad_squad_id,\n        ad_squads.ad_squad_name,\n        account.currency,\n        sum(ad_squad_hourly.swipes) as swipes,\n        sum(ad_squad_hourly.impressions) as impressions,\n        round(sum(ad_squad_hourly.spend),2) as spend\n        \n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='snapchat_ads__ad_squad_hourly_passthrough_metrics', transform = 'sum') }}\n    \n    from ad_squad_hourly\n    left join ad_squads\n        on ad_squad_hourly.ad_squad_id = ad_squads.ad_squad_id\n    left join campaigns\n        on ad_squads.campaign_id = campaigns.campaign_id\n    left join account\n        on campaigns.ad_account_id = account.ad_account_id\n    \n    {{ dbt_utils.group_by(8) }}\n\n)\n\nselect *\nfrom aggregated", 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_squad_hourly_report'], ['stg_snapchat_ads__ad_account_history'], ['stg_snapchat_ads__ad_squad_history'], ['stg_snapchat_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report', 'model.snapchat_ads_source.stg_snapchat_ads__ad_account_history', 'model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history', 'model.snapchat_ads_source.stg_snapchat_ads__campaign_history']}, 'compiled_path': None}, 'model.snapchat_ads.snapchat_ads__campaign_report': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads', 'name': 'snapchat_ads__campaign_report', 'resource_type': 'model', 'package_name': 'snapchat_ads', 'path': 'snapchat_ads__campaign_report.sql', 'original_file_path': 'models\\snapchat_ads__campaign_report.sql', 'unique_id': 'model.snapchat_ads.snapchat_ads__campaign_report', 'fqn': ['snapchat_ads', 'snapchat_ads__campaign_report'], 'alias': 'snapchat_ads__campaign_report', 'checksum': {'name': 'sha256', 'checksum': '37a0ae79a3b9a6455f3c7f6d5c83ca1ab54ae0fc2b2c103c981a43e0744fdc88'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily performance of a Snapchat campaign.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID of the campaign in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_account_id': {'name': 'ad_account_id', 'description': 'The ID of the account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_account_name': {'name': 'ad_account_name', 'description': 'The name of the account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the campaign in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': 'The current used by the account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend on the ad in the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions the ad had on the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'swipes': {'name': 'swipes', 'description': 'The number of swipes the ad had on the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'snapchat_ads://models\\snapchat.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433486.9903738, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads`.`snapchat_ads__campaign_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nwith campaign_hourly as (\n\n    select *\n    from {{ var('campaign_hourly_report') }}\n\n), account as (\n\n    select *\n    from {{ var('ad_account_history') }}\n    where is_most_recent_record = true\n\n), campaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record = true\n\n\n), aggregated as (\n\n    select\n        cast(campaign_hourly.date_hour as date) as date_day,\n        account.ad_account_id,\n        account.ad_account_name,\n        campaign_hourly.campaign_id,\n        campaigns.campaign_name,\n        account.currency,\n        sum(campaign_hourly.swipes) as swipes,\n        sum(campaign_hourly.impressions) as impressions,\n        round(sum(campaign_hourly.spend),2) as spend\n        \n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='snapchat_ads__campaign_hourly_report_passthrough_metrics', transform = 'sum') }}\n    \n    from campaign_hourly\n    left join campaigns\n        on campaign_hourly.campaign_id = campaigns.campaign_id\n    left join account\n        on campaigns.ad_account_id = account.ad_account_id\n    \n    {{ dbt_utils.group_by(6) }}\n\n)\n\nselect *\nfrom aggregated", 'language': 'sql', 'refs': [['stg_snapchat_ads__campaign_hourly_report'], ['stg_snapchat_ads__ad_account_history'], ['stg_snapchat_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report', 'model.snapchat_ads_source.stg_snapchat_ads__ad_account_history', 'model.snapchat_ads_source.stg_snapchat_ads__campaign_history']}, 'compiled_path': None}, 'model.snapchat_ads.snapchat_ads__url_report': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads', 'name': 'snapchat_ads__url_report', 'resource_type': 'model', 'package_name': 'snapchat_ads', 'path': 'snapchat_ads__url_report.sql', 'original_file_path': 'models\\snapchat_ads__url_report.sql', 'unique_id': 'model.snapchat_ads.snapchat_ads__url_report', 'fqn': ['snapchat_ads', 'snapchat_ads__url_report'], 'alias': 'snapchat_ads__url_report', 'checksum': {'name': 'sha256', 'checksum': '5ef679cec36298aa943c64d752fd4f730f71b1ab20127e5bbbd5d1ad952131f4'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the daily performance of Snapchat ads that leverage urls.', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date of the report.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_id': {'name': 'ad_id', 'description': 'The ID of the ad in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_squad_id': {'name': 'ad_squad_id', 'description': 'The ID of the ad squad in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID of the campaign in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_account_id': {'name': 'ad_account_id', 'description': 'The ID of the account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_account_name': {'name': 'ad_account_name', 'description': 'The name of the account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_name': {'name': 'ad_name', 'description': 'The name of the ad in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_squad_name': {'name': 'ad_squad_name', 'description': 'The name of the ad squad in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the campaign in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': 'The current used by the account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'base_url': {'name': 'base_url', 'description': 'The base URL of the ad, extracted from the web_view_url.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_host': {'name': 'url_host', 'description': 'The URL host of the ad, extracted from the web_view_url.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_path': {'name': 'url_path', 'description': 'The URL path of the ad, extracted from the web_view_url.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_source': {'name': 'utm_source', 'description': 'The utm_source parameter of the ad, extracted from the web_view_url.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_medium': {'name': 'utm_medium', 'description': 'The utm_medium parameter of the ad, extracted from the web_view_url.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_campaign': {'name': 'utm_campaign', 'description': 'The utm_campaign parameter of the ad, extracted from the web_view_url.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_content': {'name': 'utm_content', 'description': 'The utm_content parameter of the ad, extracted from the web_view_url.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_term': {'name': 'utm_term', 'description': 'The utm_term parameter of the ad, extracted from the web_view_url.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend on the ad in the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions the ad had on the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'swipes': {'name': 'swipes', 'description': 'The number of swipes the ad had on the given day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'snapchat_ads://models\\snapchat.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433486.9989486, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads`.`snapchat_ads__url_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nwith ad_hourly as (\n\n    select *\n    from {{ var('ad_hourly_report') }}\n\n), creatives as (\n\n    select *\n    from {{ ref('snapchat_ads__creative_history_prep') }}\n\n), account as (\n\n    select *\n    from {{ var('ad_account_history') }}\n    where is_most_recent_record = true\n\n), ads as (\n\n    select *\n    from {{ var('ad_history') }}\n    where is_most_recent_record = true\n\n), ad_squads as (\n\n    select *\n    from {{ var('ad_squad_history') }}\n    where is_most_recent_record = true\n\n), campaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record = true\n\n\n), aggregated as (\n\n    select\n        cast(ad_hourly.date_hour as date) as date_day,\n        account.ad_account_id,\n        account.ad_account_name,\n        ad_hourly.ad_id,\n        ads.ad_name,\n        ad_squads.ad_squad_id,\n        ad_squads.ad_squad_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        account.currency,\n        creatives.base_url,\n        creatives.url_host,\n        creatives.url_path,\n        creatives.utm_source,\n        creatives.utm_medium,\n        creatives.utm_campaign,\n        creatives.utm_content,\n        creatives.utm_term,\n        sum(ad_hourly.swipes) as swipes,\n        sum(ad_hourly.impressions) as impressions,\n        round(sum(ad_hourly.spend),2) as spend\n        \n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='snapchat_ads__ad_hourly_passthrough_metrics', transform = 'sum') }}\n    \n    from ad_hourly\n    left join ads \n        on ad_hourly.ad_id = ads.ad_id\n    left join creatives\n        on ads.creative_id = creatives.creative_id\n    left join ad_squads\n        on ads.ad_squad_id = ad_squads.ad_squad_id\n    left join campaigns\n        on ad_squads.campaign_id = campaigns.campaign_id\n    left join account\n        on creatives.ad_account_id = account.ad_account_id\n\n    {% if var('ad_reporting__url_report__using_null_filter', True) %}\n        -- We only want utm ads to populate this report. Therefore, we filter where url ads are populated.\n        where creatives.url is not null\n    {% endif %}\n\n    {{ dbt_utils.group_by(18) }}\n\n)\n\nselect *\nfrom aggregated", 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_hourly_report'], ['snapchat_ads__creative_history_prep'], ['stg_snapchat_ads__ad_account_history'], ['stg_snapchat_ads__ad_history'], ['stg_snapchat_ads__ad_squad_history'], ['stg_snapchat_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report', 'model.snapchat_ads.snapchat_ads__creative_history_prep', 'model.snapchat_ads_source.stg_snapchat_ads__ad_account_history', 'model.snapchat_ads_source.stg_snapchat_ads__ad_history', 'model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history', 'model.snapchat_ads_source.stg_snapchat_ads__campaign_history']}, 'compiled_path': None}, 'model.snapchat_ads.snapchat_ads__creative_history_prep': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads', 'name': 'snapchat_ads__creative_history_prep', 'resource_type': 'model', 'package_name': 'snapchat_ads', 'path': 'intermediate\\snapchat_ads__creative_history_prep.sql', 'original_file_path': 'models\\intermediate\\snapchat_ads__creative_history_prep.sql', 'unique_id': 'model.snapchat_ads.snapchat_ads__creative_history_prep', 'fqn': ['snapchat_ads', 'intermediate', 'snapchat_ads__creative_history_prep'], 'alias': 'snapchat_ads__creative_history_prep', 'checksum': {'name': 'sha256', 'checksum': '96937fe8400a512c70ff7cf59a4f215276169b68df7c5bdd67b9a0c1234d86e8'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'ephemeral', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads', 'materialized': 'ephemeral', 'enabled': True}, 'created_at': 1694433483.9295022, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': '{{ config(enabled=var(\'ad_reporting__snapchat_ads_enabled\', true)) }}\nwith base as (\n\n    select *\n    from {{ var(\'creative_history\') }}\n    where is_most_recent_record = true\n\n), url_tags as (\n\n    select *\n    from {{ var(\'creative_url_tag_history\') }}\n    where is_most_recent_record = true\n\n), url_tags_pivoted as (\n\n    select \n        creative_id,\n        min(case when param_key = \'utm_source\' then param_value end) as utm_source,\n        min(case when param_key = \'utm_medium\' then param_value end) as utm_medium,\n        min(case when param_key = \'utm_campaign\' then param_value end) as utm_campaign,\n        min(case when param_key = \'utm_content\' then param_value end) as utm_content,\n        min(case when param_key = \'utm_term\' then param_value end) as utm_term\n    from url_tags\n    group by 1\n\n), fields as (\n\n    select\n        base.creative_id,\n        base.ad_account_id,\n        base.creative_name,\n        base.url,\n        {{ dbt.split_part(\'base.url\', "\'?\'", 1) }} as base_url,\n        {{ dbt_utils.get_url_host(\'base.url\') }} as url_host,\n        \'/\' || {{ dbt_utils.get_url_path(\'base.url\') }} as url_path,\n        coalesce(url_tags_pivoted.utm_source, {{ dbt_utils.get_url_parameter(\'base.url\', \'utm_source\') }}) as utm_source,\n        coalesce(url_tags_pivoted.utm_medium, {{ dbt_utils.get_url_parameter(\'base.url\', \'utm_medium\') }}) as utm_medium,\n        coalesce(url_tags_pivoted.utm_campaign, {{ dbt_utils.get_url_parameter(\'base.url\', \'utm_campaign\') }}) as utm_campaign,\n        coalesce(url_tags_pivoted.utm_content, {{ dbt_utils.get_url_parameter(\'base.url\', \'utm_content\') }}) as utm_content,\n        coalesce(url_tags_pivoted.utm_term, {{ dbt_utils.get_url_parameter(\'base.url\', \'utm_term\') }}) as utm_term\n    from base\n    left join url_tags_pivoted\n        on base.creative_id = url_tags_pivoted.creative_id\n\n)\n\nselect *\nfrom fields', 'language': 'sql', 'refs': [['stg_snapchat_ads__creative_history'], ['stg_snapchat_ads__creative_url_tag_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.split_part', 'macro.dbt_utils.get_url_host', 'macro.dbt_utils.get_url_path', 'macro.dbt_utils.get_url_parameter'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__creative_history', 'model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__ad_account_history': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__ad_account_history', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'stg_snapchat_ads__ad_account_history.sql', 'original_file_path': 'models\\stg_snapchat_ads__ad_account_history.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__ad_account_history', 'fqn': ['snapchat_ads_source', 'stg_snapchat_ads__ad_account_history'], 'alias': 'stg_snapchat_ads__ad_account_history', 'checksum': {'name': 'sha256', 'checksum': 'b3c1ecb6e139e06bd3242b0ae35973de841a51fc916e32db5ee62a61c69da760'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents a historic version of an ad account in Snapchat.', 'columns': {'_fivetran_synced': {'name': '_fivetran_synced', 'description': 'When the record was last synced by Fivetran.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_account_id': {'name': 'ad_account_id', 'description': 'The ID of the account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_account_name': {'name': 'ad_account_name', 'description': 'The name of the account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser': {'name': 'advertiser', 'description': 'Name of advertiser', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': 'Currency used by account', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'created_at': {'name': 'created_at', 'description': 'Created at timestamp', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_at': {'name': 'updated_at', 'description': 'Timestamp of when the record was updated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'timezone': {'name': 'timezone', 'description': 'Account timezone', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_most_recent_record': {'name': 'is_most_recent_record', 'description': 'Boolean representing whether a record is the most recent version of that record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'snapchat_ads_source://models\\stg_snapchat.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.0870197, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__ad_account_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_snapchat_ads__ad_account_history_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_snapchat_ads__ad_account_history_tmp')),\n                staging_columns=get_ad_account_history_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select \n        id as ad_account_id,\n        name as ad_account_name,\n        cast (created_at as {{ dbt.type_timestamp() }}) as created_at,\n        advertiser, \n        currency,\n        timezone,\n        cast (_fivetran_synced as {{ dbt.type_timestamp() }}) as _fivetran_synced,\n        cast (updated_at as {{ dbt.type_timestamp() }}) as updated_at,\n        row_number() over (partition by id order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_account_history_tmp'], ['stg_snapchat_ads__ad_account_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.snapchat_ads_source.get_ad_account_history_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_timestamp'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_account_history_tmp', 'model.snapchat_ads_source.stg_snapchat_ads__ad_account_history_tmp']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__ad_history': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__ad_history', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'stg_snapchat_ads__ad_history.sql', 'original_file_path': 'models\\stg_snapchat_ads__ad_history.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__ad_history', 'fqn': ['snapchat_ads_source', 'stg_snapchat_ads__ad_history'], 'alias': 'stg_snapchat_ads__ad_history', 'checksum': {'name': 'sha256', 'checksum': 'b9f87bec0fe3fe17b30ccd2de99f8cb85d764a3867d0c7d1876f60a91b717445'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents a historic version of an ad in Snapchat.', 'columns': {'_fivetran_synced': {'name': '_fivetran_synced', 'description': 'When the record was last synced by Fivetran.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_id': {'name': 'ad_id', 'description': 'The ID of the ad in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_squad_id': {'name': 'ad_squad_id', 'description': 'The ID of the related ad squad in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'creative_id': {'name': 'creative_id', 'description': 'The ID of the related creative in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_name': {'name': 'ad_name', 'description': 'The name of the ad in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'created_at': {'name': 'created_at', 'description': 'Created at timestamp', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_at': {'name': 'updated_at', 'description': 'Timestamp of when the record was updated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_most_recent_record': {'name': 'is_most_recent_record', 'description': 'Boolean representing whether a record is the most recent version of that record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'snapchat_ads_source://models\\stg_snapchat.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.0897043, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__ad_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_snapchat_ads__ad_history_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_snapchat_ads__ad_history_tmp')),\n                staging_columns=get_ad_history_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select \n        id as ad_id,\n        name as ad_name,\n        cast (created_at as {{ dbt.type_timestamp() }}) as created_at,\n        ad_squad_id,\n        creative_id,\n        cast (_fivetran_synced as {{ dbt.type_timestamp() }}) as _fivetran_synced,\n        cast (updated_at as {{ dbt.type_timestamp() }}) as updated_at,\n        row_number() over (partition by id order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_history_tmp'], ['stg_snapchat_ads__ad_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.snapchat_ads_source.get_ad_history_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_timestamp'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_history_tmp', 'model.snapchat_ads_source.stg_snapchat_ads__ad_history_tmp']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__ad_hourly_report', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'stg_snapchat_ads__ad_hourly_report.sql', 'original_file_path': 'models\\stg_snapchat_ads__ad_hourly_report.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report', 'fqn': ['snapchat_ads_source', 'stg_snapchat_ads__ad_hourly_report'], 'alias': 'stg_snapchat_ads__ad_hourly_report', 'checksum': {'name': 'sha256', 'checksum': 'ce7ad13fe4751d9607130fc2995b208171cfd944ac7fbd8a499209ae6a75aba2'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents an hourly performance summary for an ad in Snapchat.', 'columns': {'ad_id': {'name': 'ad_id', 'description': 'The ID of the ad that the report relates to in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_hour': {'name': 'date_hour', 'description': 'The hour that the report relates to.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'attachment_quartile_1': {'name': 'attachment_quartile_1', 'description': 'Number of times your Long Form Video was viewed to 25%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'attachment_quartile_2': {'name': 'attachment_quartile_2', 'description': 'Number of times your Long Form Video was viewed to 50%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'attachment_quartile_3': {'name': 'attachment_quartile_3', 'description': 'Number of times your Long Form Video was viewed to 75%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'attachment_total_view_time': {'name': 'attachment_total_view_time', 'description': 'Total time Snapchatters spent on the attachment (HH:MM:SS)', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'attachment_view_completion': {'name': 'attachment_view_completion', 'description': 'The number of times your Long Form Video was viewed to completion (97% )', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'quartile_1': {'name': 'quartile_1', 'description': 'The number of times your video ad was viewed to 25%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'quartile_2': {'name': 'quartile_2', 'description': 'The number of times your video ad was viewed to 50%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'quartile_3': {'name': 'quartile_3', 'description': 'The number of times your video ad was viewed to 75%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'saves': {'name': 'saves', 'description': 'Number of times a lens/filter was saved to Memories', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'shares': {'name': 'shares', 'description': 'Number of times a lens/filter was shared in a Chat or Story', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'screen_time': {'name': 'screen_time', 'description': 'The number of milli seconds spent watching your ad across all paid impressions. Screen time starts recording as soon as the media is fully rendered on the device and the autoplay video starts', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views': {'name': 'video_views', 'description': 'The number of times your video was watched at least 2 seconds or swiped up, whichever comes first', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'view_completion': {'name': 'view_completion', 'description': 'The number of times your video ad was viewed to completion (97% )', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'view_time': {'name': 'view_time', 'description': 'The number of milli seconds spent watching your ad across all users reached.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions for an ad in the hour of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The amount of spend for an ad in the hour of the record converted from micros.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'swipes': {'name': 'swipes', 'description': 'The number of swipes for an ad in the hour of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'snapchat_ads_source://models\\stg_snapchat.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.0937033, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__ad_hourly_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_snapchat_ads__ad_hourly_report_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_snapchat_ads__ad_hourly_report_tmp')),\n                staging_columns=get_ad_hourly_report_columns()\n            )\n        }}        \n    from base\n),\n\nfinal as (\n    \n    select \n        ad_id,\n        cast (date as {{ dbt.type_timestamp() }}) as date_hour,\n        attachment_quartile_1,\n        attachment_quartile_2,\n        attachment_quartile_3,\n        (attachment_total_view_time_millis / 1000000.0) as attachment_total_view_time,\n        attachment_view_completion,\n        quartile_1,\n        quartile_2,\n        quartile_3,\n        saves,\n        shares,\n        (screen_time_millis / 1000000.0) as screen_time,\n        video_views,\n        view_completion,\n        (view_time_millis / 1000000.0) as view_time,\n        impressions,\n        (spend / 1000000.0) as spend,\n        swipes\n\n        {{ fivetran_utils.fill_pass_through_columns('snapchat_ads__ad_hourly_passthrough_metrics') }}\n\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_hourly_report_tmp'], ['stg_snapchat_ads__ad_hourly_report_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.snapchat_ads_source.get_ad_hourly_report_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_timestamp', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report_tmp', 'model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report_tmp']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__ad_squad_history', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'stg_snapchat_ads__ad_squad_history.sql', 'original_file_path': 'models\\stg_snapchat_ads__ad_squad_history.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history', 'fqn': ['snapchat_ads_source', 'stg_snapchat_ads__ad_squad_history'], 'alias': 'stg_snapchat_ads__ad_squad_history', 'checksum': {'name': 'sha256', 'checksum': 'b78ca2d715716a88b33e55219ef00243ae62fa062be779ccbd0e4ace8351e903'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents a historic version of an ad squad in Snapchat.', 'columns': {'_fivetran_synced': {'name': '_fivetran_synced', 'description': 'When the record was last synced by Fivetran.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_squad_id': {'name': 'ad_squad_id', 'description': 'The ID of the ad squad in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_squad_name': {'name': 'ad_squad_name', 'description': 'The name of the ad squad in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'created_at': {'name': 'created_at', 'description': 'Created at timestamp.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_at': {'name': 'updated_at', 'description': 'Timestamp of when the record was updated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID of the related campaign in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_most_recent_record': {'name': 'is_most_recent_record', 'description': 'Boolean representing whether a record is the most recent version of that record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'snapchat_ads_source://models\\stg_snapchat.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.0957031, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__ad_squad_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_snapchat_ads__ad_squad_history_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_snapchat_ads__ad_squad_history_tmp')),\n                staging_columns=get_ad_squad_history_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n\n    select \n        id as ad_squad_id,\n        name as ad_squad_name,\n        cast (created_at as {{ dbt.type_timestamp() }}) as created_at,\n        campaign_id,\n        cast (_fivetran_synced as {{ dbt.type_timestamp() }}) as _fivetran_synced,\n        cast (updated_at as {{ dbt.type_timestamp() }}) as updated_at,\n        row_number() over (partition by id order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_squad_history_tmp'], ['stg_snapchat_ads__ad_squad_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.snapchat_ads_source.get_ad_squad_history_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_timestamp'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history_tmp', 'model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history_tmp']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__ad_squad_hourly_report', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'stg_snapchat_ads__ad_squad_hourly_report.sql', 'original_file_path': 'models\\stg_snapchat_ads__ad_squad_hourly_report.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report', 'fqn': ['snapchat_ads_source', 'stg_snapchat_ads__ad_squad_hourly_report'], 'alias': 'stg_snapchat_ads__ad_squad_hourly_report', 'checksum': {'name': 'sha256', 'checksum': 'aad7890ff2546a5611d55ff7393a3580ffae73d4f1036f158589bd8c20dd36e7'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents a historic version of an ad in Snapchat.', 'columns': {'ad_squad_id': {'name': 'ad_squad_id', 'description': 'ID of the ad squad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_hour': {'name': 'date_hour', 'description': 'The hour that the report relates to.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'attachment_quartile_1': {'name': 'attachment_quartile_1', 'description': 'Number of times your Long Form Video was viewed to 25%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'attachment_quartile_2': {'name': 'attachment_quartile_2', 'description': 'Number of times your Long Form Video was viewed to 50%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'attachment_quartile_3': {'name': 'attachment_quartile_3', 'description': 'Number of times your Long Form Video was viewed to 75%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'attachment_total_view_time': {'name': 'attachment_total_view_time', 'description': 'Total time Snapchatters spent on the attachment (HH:MM:SS)', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'attachment_view_completion': {'name': 'attachment_view_completion', 'description': 'The number of times your Long Form Video was viewed to completion (97% )', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'quartile_1': {'name': 'quartile_1', 'description': 'The number of times your video ad was viewed to 25%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'quartile_2': {'name': 'quartile_2', 'description': 'The number of times your video ad was viewed to 50%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'quartile_3': {'name': 'quartile_3', 'description': 'The number of times your video ad was viewed to 75%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'saves': {'name': 'saves', 'description': 'Number of times a lens/filter was saved to Memories', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'shares': {'name': 'shares', 'description': 'Number of times a lens/filter was shared in a Chat or Story', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'screen_time': {'name': 'screen_time', 'description': 'The number of milli seconds spent watching your ad across all paid impressions. Screen time starts recording as soon as the media is fully rendered on the device and the autoplay video starts', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views': {'name': 'video_views', 'description': 'The number of times your video was watched at least 2 seconds or swiped up, whichever comes first', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'view_completion': {'name': 'view_completion', 'description': 'The number of times your video ad was viewed to completion (97% )', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'view_time': {'name': 'view_time', 'description': 'The number of milli seconds spent watching your ad across all users reached.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions for an ad in the hour of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The amount of spend for an ad in the hour of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'swipes': {'name': 'swipes', 'description': 'The number of swipes for an ad in the hour of the record. Swipes are when your ad was swiped up on or the CTA was tapped to view the attachment below.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'snapchat_ads_source://models\\stg_snapchat.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.1023574, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__ad_squad_hourly_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_snapchat_ads__ad_squad_hourly_report_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_snapchat_ads__ad_squad_hourly_report_tmp')),\n                staging_columns=get_ad_squad_hourly_report_columns()\n            )\n        }}        \n    from base\n),\n\nfinal as (\n    \n    select \n        ad_squad_id,\n        cast (date as {{ dbt.type_timestamp() }}) as date_hour,\n        attachment_quartile_1,\n        attachment_quartile_2,\n        attachment_quartile_3,\n        (attachment_total_view_time_millis / 1000000.0) as attachment_total_view_time,\n        attachment_view_completion,\n        quartile_1,\n        quartile_2,\n        quartile_3,\n        saves,\n        shares,\n        (screen_time_millis / 1000000.0) as screen_time,\n        video_views,\n        view_completion,\n        (view_time_millis / 1000000.0) as view_time,\n        impressions,\n        (spend / 1000000.0) as spend,\n        swipes\n\n        {{ fivetran_utils.fill_pass_through_columns('snapchat_ads__ad_squad_hourly_passthrough_metrics') }}\n    \n    from fields\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_squad_hourly_report_tmp'], ['stg_snapchat_ads__ad_squad_hourly_report_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.snapchat_ads_source.get_ad_squad_hourly_report_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_timestamp', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report_tmp', 'model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report_tmp']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__campaign_history': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__campaign_history', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'stg_snapchat_ads__campaign_history.sql', 'original_file_path': 'models\\stg_snapchat_ads__campaign_history.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__campaign_history', 'fqn': ['snapchat_ads_source', 'stg_snapchat_ads__campaign_history'], 'alias': 'stg_snapchat_ads__campaign_history', 'checksum': {'name': 'sha256', 'checksum': 'a8a584b7e724b5a0d6b89278795b3d2a9cfc45aa83be000333e2acb288da179d'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents a historic version of a campaign in Snapchat.', 'columns': {'_fivetran_synced': {'name': '_fivetran_synced', 'description': 'When the record was last synced by Fivetran.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The id of the campaign in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the campaign in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_account_id': {'name': 'ad_account_id', 'description': 'The ID of the related ad account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'created_at': {'name': 'created_at', 'description': 'Created at timestamp.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_at': {'name': 'updated_at', 'description': 'Timestamp of when the record was updated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_most_recent_record': {'name': 'is_most_recent_record', 'description': 'Boolean representing whether a record is the most recent version of that record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'snapchat_ads_source://models\\stg_snapchat.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.1043522, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__campaign_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_snapchat_ads__campaign_history_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_snapchat_ads__campaign_history_tmp')),\n                staging_columns=get_campaign_history_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select\n        id as campaign_id,\n        ad_account_id,\n        cast (created_at as {{ dbt.type_timestamp() }}) as created_at,\n        name as campaign_name,\n        cast (_fivetran_synced as {{ dbt.type_timestamp() }}) as _fivetran_synced,\n        cast (updated_at as {{ dbt.type_timestamp() }}) as updated_at,\n        row_number() over (partition by id order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_snapchat_ads__campaign_history_tmp'], ['stg_snapchat_ads__campaign_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.snapchat_ads_source.get_campaign_history_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_timestamp'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__campaign_history_tmp', 'model.snapchat_ads_source.stg_snapchat_ads__campaign_history_tmp']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__campaign_hourly_report', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'stg_snapchat_ads__campaign_hourly_report.sql', 'original_file_path': 'models\\stg_snapchat_ads__campaign_hourly_report.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report', 'fqn': ['snapchat_ads_source', 'stg_snapchat_ads__campaign_hourly_report'], 'alias': 'stg_snapchat_ads__campaign_hourly_report', 'checksum': {'name': 'sha256', 'checksum': 'b8abf4f1e0b0aa8d163a63e275f064d72d58b1f1ccb72b6c0a28d90dca2ecf38'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents a historic version of an ad in Snapchat.', 'columns': {'campaign_id': {'name': 'campaign_id', 'description': 'ID of campaign', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_hour': {'name': 'date_hour', 'description': 'The hour that the report relates to.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'attachment_quartile_1': {'name': 'attachment_quartile_1', 'description': 'Number of times your Long Form Video was viewed to 25%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'attachment_quartile_2': {'name': 'attachment_quartile_2', 'description': 'Number of times your Long Form Video was viewed to 50%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'attachment_quartile_3': {'name': 'attachment_quartile_3', 'description': 'Number of times your Long Form Video was viewed to 75%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'attachment_total_view_time': {'name': 'attachment_total_view_time', 'description': 'Total time Snapchatters spent on the attachment (HH:MM:SS)', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'attachment_view_completion': {'name': 'attachment_view_completion', 'description': 'The number of times your Long Form Video was viewed to completion (97% )', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'quartile_1': {'name': 'quartile_1', 'description': 'The number of times your video ad was viewed to 25%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'quartile_2': {'name': 'quartile_2', 'description': 'The number of times your video ad was viewed to 50%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'quartile_3': {'name': 'quartile_3', 'description': 'The number of times your video ad was viewed to 75%', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'saves': {'name': 'saves', 'description': 'Number of times a lens/filter was saved to Memories', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'shares': {'name': 'shares', 'description': 'Number of times a lens/filter was shared in a Chat or Story', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'screen_time': {'name': 'screen_time', 'description': 'The number of milli seconds spent watching your ad across all paid impressions. Screen time starts recording as soon as the media is fully rendered on the device and the autoplay video starts', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views': {'name': 'video_views', 'description': 'The number of times your video was watched at least 2 seconds or swiped up, whichever comes first', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'view_completion': {'name': 'view_completion', 'description': 'The number of times your video ad was viewed to completion (97% )', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'view_time': {'name': 'view_time', 'description': 'The number of milli seconds spent watching your ad across all users reached.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions for an ad in the hour of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The amount of spend for an ad in the hour of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'swipes': {'name': 'swipes', 'description': 'The number of swipes for an ad in the hour of the record. Swipes are when your ad was swiped up on or the CTA was tapped to view the attachment below.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'snapchat_ads_source://models\\stg_snapchat.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.1091142, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__campaign_hourly_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_snapchat_ads__campaign_hourly_report_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_snapchat_ads__campaign_hourly_report_tmp')),\n                staging_columns=get_campaign_hourly_report_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select \n        campaign_id,\n        cast (date as {{ dbt.type_timestamp() }}) as date_hour,\n        attachment_quartile_1,\n        attachment_quartile_2,\n        attachment_quartile_3,\n        (attachment_total_view_time_millis / 1000000.0) as attachment_total_view_time,\n        attachment_view_completion,\n        quartile_1,\n        quartile_2,\n        quartile_3,\n        saves,\n        shares,\n        (screen_time_millis / 1000000.0) as screen_time,\n        video_views,\n        view_completion,\n        (view_time_millis / 1000000.0) as view_time,\n        impressions,\n        (spend / 1000000.0) as spend,\n        swipes\n\n        {{ fivetran_utils.fill_pass_through_columns('snapchat_ads__campaign_hourly_report_passthrough_metrics') }}\n    \n    from fields\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_snapchat_ads__campaign_hourly_report_tmp'], ['stg_snapchat_ads__campaign_hourly_report_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.snapchat_ads_source.get_campaign_hourly_report_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_timestamp', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report_tmp', 'model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report_tmp']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__creative_history': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__creative_history', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'stg_snapchat_ads__creative_history.sql', 'original_file_path': 'models\\stg_snapchat_ads__creative_history.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__creative_history', 'fqn': ['snapchat_ads_source', 'stg_snapchat_ads__creative_history'], 'alias': 'stg_snapchat_ads__creative_history', 'checksum': {'name': 'sha256', 'checksum': '52f2479f057f755f7fca3153351bb4bbda4767ca96ed9379a2fa1ec30df6fb52'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents a historic version of a creative in Snapchat.', 'columns': {'_fivetran_synced': {'name': '_fivetran_synced', 'description': 'When the record was last synced by Fivetran.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'creative_id': {'name': 'creative_id', 'description': 'The ID of the creative in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'creative_name': {'name': 'creative_name', 'description': 'The name of the creative in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_account_id': {'name': 'ad_account_id', 'description': 'The ID of the related ad account in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url': {'name': 'url', 'description': "The URL of the creative if the creative is of type 'web view'.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'created_at': {'name': 'created_at', 'description': 'Created at timestamp.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_at': {'name': 'updated_at', 'description': 'Timestamp of when the record was updated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_most_recent_record': {'name': 'is_most_recent_record', 'description': 'Boolean representing whether a record is the most recent version of that record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'snapchat_ads_source://models\\stg_snapchat.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.1121144, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__creative_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_snapchat_ads__creative_history_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_snapchat_ads__creative_history_tmp')),\n                staging_columns=get_creative_history_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select \n        id as creative_id,\n        cast (created_at as {{ dbt.type_timestamp() }}) as created_at,\n        ad_account_id,\n        name as creative_name,\n        web_view_url as url,\n        cast (_fivetran_synced as {{ dbt.type_timestamp() }}) as _fivetran_synced,\n        cast (updated_at as {{ dbt.type_timestamp() }}) as updated_at,\n        row_number() over (partition by id order by _fivetran_synced desc) =1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_snapchat_ads__creative_history_tmp'], ['stg_snapchat_ads__creative_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.snapchat_ads_source.get_creative_history_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_timestamp'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__creative_history_tmp', 'model.snapchat_ads_source.stg_snapchat_ads__creative_history_tmp']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__creative_url_tag_history', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'stg_snapchat_ads__creative_url_tag_history.sql', 'original_file_path': 'models\\stg_snapchat_ads__creative_url_tag_history.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history', 'fqn': ['snapchat_ads_source', 'stg_snapchat_ads__creative_url_tag_history'], 'alias': 'stg_snapchat_ads__creative_url_tag_history', 'checksum': {'name': 'sha256', 'checksum': 'ed5cc64860273e4d9198143e337401240d61e563e41e587369e82184ee3254f5'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents a URL paramter key-value pair for a creative in Snapchat.', 'columns': {'creative_id': {'name': 'creative_id', 'description': 'The ID of the related creative in Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'param_key': {'name': 'param_key', 'description': 'The URL parameter key, i.e. UTM_SOURCE.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'param_value': {'name': 'param_value', 'description': 'The URL parameter value, i.e. Snapchat.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_at': {'name': 'updated_at', 'description': 'Timestamp of when the record was updated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_most_recent_record': {'name': 'is_most_recent_record', 'description': 'Boolean representing whether a record is the most recent version of that record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'snapchat_ads_source://models\\stg_snapchat.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.114107, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__creative_url_tag_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_snapchat_ads__creative_url_tag_history_tmp') }}\n\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_snapchat_ads__creative_url_tag_history_tmp')),\n                staging_columns=get_creative_url_tag_history_columns()\n            )\n        }}\n        \n    from base\n),\n\nfinal as (\n    \n    select  \n        creative_id,\n        key as param_key,\n        value as param_value,\n        cast (updated_at as {{ dbt.type_timestamp() }}) as updated_at,\n        row_number() over (partition by creative_id, key order by updated_at desc) =1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_snapchat_ads__creative_url_tag_history_tmp'], ['stg_snapchat_ads__creative_url_tag_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.snapchat_ads_source.get_creative_url_tag_history_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_timestamp'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history_tmp', 'model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history_tmp']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__ad_account_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__ad_account_history_tmp', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'tmp\\stg_snapchat_ads__ad_account_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_snapchat_ads__ad_account_history_tmp.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__ad_account_history_tmp', 'fqn': ['snapchat_ads_source', 'tmp', 'stg_snapchat_ads__ad_account_history_tmp'], 'alias': 'stg_snapchat_ads__ad_account_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '92091ce537ab3d626fde67bcce6f168cb41ab6ee9975afa0551603e42cc5d78a'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433484.146224, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__ad_account_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nselect *\nfrom {{ var('ad_account_history') }}", 'language': 'sql', 'refs': [], 'sources': [['snapchat_ads', 'ad_account_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.snapchat_ads_source.snapchat_ads.ad_account_history']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__ad_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__ad_history_tmp', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'tmp\\stg_snapchat_ads__ad_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_snapchat_ads__ad_history_tmp.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__ad_history_tmp', 'fqn': ['snapchat_ads_source', 'tmp', 'stg_snapchat_ads__ad_history_tmp'], 'alias': 'stg_snapchat_ads__ad_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '3cbc363ef9fe699bcc42261d8eda6184c55f2574efa083ca7091aa5ddedd42e9'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433484.15351, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__ad_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nselect *\nfrom {{ var('ad_history') }}", 'language': 'sql', 'refs': [], 'sources': [['snapchat_ads', 'ad_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.snapchat_ads_source.snapchat_ads.ad_history']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__ad_hourly_report_tmp', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'tmp\\stg_snapchat_ads__ad_hourly_report_tmp.sql', 'original_file_path': 'models\\tmp\\stg_snapchat_ads__ad_hourly_report_tmp.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report_tmp', 'fqn': ['snapchat_ads_source', 'tmp', 'stg_snapchat_ads__ad_hourly_report_tmp'], 'alias': 'stg_snapchat_ads__ad_hourly_report_tmp', 'checksum': {'name': 'sha256', 'checksum': 'c1fd36fe859740eae7e8c35022731b4090dd0e6a0cc598f8ce7275134e500fe0'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433484.160198, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__ad_hourly_report_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nselect *\nfrom {{ var('ad_hourly_report') }}", 'language': 'sql', 'refs': [], 'sources': [['snapchat_ads', 'ad_hourly_report']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.snapchat_ads_source.snapchat_ads.ad_hourly_report']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__ad_squad_history_tmp', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'tmp\\stg_snapchat_ads__ad_squad_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_snapchat_ads__ad_squad_history_tmp.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history_tmp', 'fqn': ['snapchat_ads_source', 'tmp', 'stg_snapchat_ads__ad_squad_history_tmp'], 'alias': 'stg_snapchat_ads__ad_squad_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '20be450378d3826688fd5d75226187b30b17782d6ea922076111a4d6440598f9'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433484.1754222, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__ad_squad_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nselect *\nfrom {{ var('ad_squad_history') }}", 'language': 'sql', 'refs': [], 'sources': [['snapchat_ads', 'ad_squad_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.snapchat_ads_source.snapchat_ads.ad_squad_history']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__ad_squad_hourly_report_tmp', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'tmp\\stg_snapchat_ads__ad_squad_hourly_report_tmp.sql', 'original_file_path': 'models\\tmp\\stg_snapchat_ads__ad_squad_hourly_report_tmp.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report_tmp', 'fqn': ['snapchat_ads_source', 'tmp', 'stg_snapchat_ads__ad_squad_hourly_report_tmp'], 'alias': 'stg_snapchat_ads__ad_squad_hourly_report_tmp', 'checksum': {'name': 'sha256', 'checksum': 'aa1aa691bef011ccfd98f91b4b82a8838fab485131f0e17f53799f7c21bb09f3'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433484.1837356, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__ad_squad_hourly_report_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nselect *\nfrom {{ var('ad_squad_hourly_report') }}", 'language': 'sql', 'refs': [], 'sources': [['snapchat_ads', 'ad_squad_hourly_report']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.snapchat_ads_source.snapchat_ads.ad_squad_hourly_report']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__campaign_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__campaign_history_tmp', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'tmp\\stg_snapchat_ads__campaign_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_snapchat_ads__campaign_history_tmp.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__campaign_history_tmp', 'fqn': ['snapchat_ads_source', 'tmp', 'stg_snapchat_ads__campaign_history_tmp'], 'alias': 'stg_snapchat_ads__campaign_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '8ba400ddeeb2cf5c0cb71d6361ee8455d1a5272936dce07eaade1606a596cfdb'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433484.1903412, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__campaign_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nselect *\nfrom {{ var('campaign_history') }}", 'language': 'sql', 'refs': [], 'sources': [['snapchat_ads', 'campaign_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.snapchat_ads_source.snapchat_ads.campaign_history']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__campaign_hourly_report_tmp', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'tmp\\stg_snapchat_ads__campaign_hourly_report_tmp.sql', 'original_file_path': 'models\\tmp\\stg_snapchat_ads__campaign_hourly_report_tmp.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report_tmp', 'fqn': ['snapchat_ads_source', 'tmp', 'stg_snapchat_ads__campaign_hourly_report_tmp'], 'alias': 'stg_snapchat_ads__campaign_hourly_report_tmp', 'checksum': {'name': 'sha256', 'checksum': 'b18dc4fa023f874afa53107adf3b50bf02fa4ac757d01f176279822b37a3c1ee'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433484.1978676, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__campaign_hourly_report_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nselect *\nfrom {{ var('campaign_hourly_report') }}", 'language': 'sql', 'refs': [], 'sources': [['snapchat_ads', 'campaign_hourly_report']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.snapchat_ads_source.snapchat_ads.campaign_hourly_report']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__creative_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__creative_history_tmp', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'tmp\\stg_snapchat_ads__creative_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_snapchat_ads__creative_history_tmp.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__creative_history_tmp', 'fqn': ['snapchat_ads_source', 'tmp', 'stg_snapchat_ads__creative_history_tmp'], 'alias': 'stg_snapchat_ads__creative_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '97f2460634e450cdce998385dac55f4754305b6c9ea9c8756b1d8cd6ef961e4d'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433484.2040768, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__creative_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nselect *\nfrom {{ var('creative_history') }}", 'language': 'sql', 'refs': [], 'sources': [['snapchat_ads', 'creative_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.snapchat_ads_source.snapchat_ads.creative_history']}, 'compiled_path': None}, 'model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_snapchat_ads_source', 'name': 'stg_snapchat_ads__creative_url_tag_history_tmp', 'resource_type': 'model', 'package_name': 'snapchat_ads_source', 'path': 'tmp\\stg_snapchat_ads__creative_url_tag_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_snapchat_ads__creative_url_tag_history_tmp.sql', 'unique_id': 'model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history_tmp', 'fqn': ['snapchat_ads_source', 'tmp', 'stg_snapchat_ads__creative_url_tag_history_tmp'], 'alias': 'stg_snapchat_ads__creative_url_tag_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '65d5edd0f0e93654debad17d56afa3f77abd57601fa4e296320dec000d272056'}, 'config': {'enabled': True, 'alias': None, 'schema': 'snapchat_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'snapchat_ads_source', 'materialized': 'view', 'enabled': True}, 'created_at': 1694433484.2116275, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_snapchat_ads_source`.`stg_snapchat_ads__creative_url_tag_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__snapchat_ads_enabled', true)) }}\n\nselect *\nfrom {{ var('creative_url_tag_history') }}", 'language': 'sql', 'refs': [], 'sources': [['snapchat_ads', 'creative_url_tag_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.snapchat_ads_source.snapchat_ads.creative_url_tag_history']}, 'compiled_path': None}, 'model.tiktok_ads.tiktok_ads__advertiser_report': {'database': 'drops-bi', 'schema': 'marketing_full_tiktok_ads', 'name': 'tiktok_ads__advertiser_report', 'resource_type': 'model', 'package_name': 'tiktok_ads', 'path': 'tiktok_ads__advertiser_report.sql', 'original_file_path': 'models\\tiktok_ads__advertiser_report.sql', 'unique_id': 'model.tiktok_ads.tiktok_ads__advertiser_report', 'fqn': ['tiktok_ads', 'tiktok_ads__advertiser_report'], 'alias': 'tiktok_ads__advertiser_report', 'checksum': {'name': 'sha256', 'checksum': 'b78cce2d035af7c7214232ba2acd99a6ade4908ee71ce08fed3322fa380c08b4'}, 'config': {'enabled': True, 'alias': None, 'schema': 'tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents the daily performance of ads at the account level.', 'columns': {'date_day': {'name': 'date_day', 'description': 'Day of record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser_name': {'name': 'advertiser_name', 'description': 'Advertiser name.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser_id': {'name': 'advertiser_id', 'description': 'Advertiser ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': "Advertiser's currency.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The number of clicks that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The amount of spend that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'reach': {'name': 'reach', 'description': 'The number of unique users who saw your ads at least once. This metric is estimated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'conversion': {'name': 'conversion', 'description': 'The number of times your ad achieved an outcome, based on the secondary goal you selected.   As one campaign may have a number of different secondary goals, this statistic is not supported for campaigns.  Please go to ad groups or ads to view. (The total count is calculated based on the time each ad impression occurred.)\n', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'likes': {'name': 'likes', 'description': 'The number of likes your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'comments': {'name': 'comments', 'description': 'The number of comments your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'shares': {'name': 'shares', 'description': 'The number of shares that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'profile_visits': {'name': 'profile_visits', 'description': 'The number of profile visits that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'follows': {'name': 'follows', 'description': 'The number of follows that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_watched_2_s': {'name': 'video_watched_2_s', 'description': 'The number of times your video played for at least 2 seconds, or completely played. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_watched_6_s': {'name': 'video_watched_6_s', 'description': 'The number of times your video played for at least 6 seconds, or completely played. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_25': {'name': 'video_views_p_25', 'description': 'The number of times your video was played at 25% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_50': {'name': 'video_views_p_50', 'description': 'The number of times your video was played at 50% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_75': {'name': 'video_views_p_75', 'description': 'The number of times your video was played at 75% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_cpc': {'name': 'daily_cpc', 'description': "The average amount of money you've spent on a click.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_cpm': {'name': 'daily_cpm', 'description': "The average amount of money you've spent per 1,000 impressions.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_ctr': {'name': 'daily_ctr', 'description': 'The percentage of times people saw your ad and performed a click.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tiktok_ads://models\\tiktok_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'tiktok_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.1950324, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_tiktok_ads`.`tiktok_ads__advertiser_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nwith hourly as (\n    \n    select *\n    from {{ var('ad_report_hourly') }}\n),\n\nadvertiser as (\n\n    select *\n    from {{ var('advertiser') }}\n), \n\nads as (\n\n    select *\n    from {{ var('ad_history') }}\n    where is_most_recent_record\n), \n\njoined as (\n\n    select\n        cast(hourly.stat_time_hour as date) as date_day,\n        ads.advertiser_id,\n        advertiser.advertiser_name,\n        advertiser.currency,\n        sum(hourly.clicks) as clicks,\n        sum(hourly.impressions) as impressions,\n        sum(hourly.spend) as spend,\n        sum(hourly.reach) as reach,\n        sum(hourly.conversion) as conversion,\n        sum(hourly.likes) as likes,\n        sum(hourly.comments) as comments,\n        sum(hourly.shares) as shares,\n        sum(hourly.profile_visits) as profile_visits,\n        sum(hourly.follows) as follows,\n        sum(hourly.video_watched_2_s) as video_watched_2_s, \n        sum(hourly.video_watched_6_s) as video_watched_6_s, \n        sum(hourly.video_views_p_25) as video_views_p_25, \n        sum(hourly.video_views_p_50) as video_views_p_50,\n        sum(hourly.video_views_p_75) as video_views_p_75,\n        sum(hourly.spend)/nullif(sum(hourly.clicks),0) as daily_cpc,\n        (sum(hourly.spend)/nullif(sum(hourly.impressions),0))*1000 as daily_cpm,\n        (sum(hourly.clicks)/nullif(sum(hourly.impressions),0))*100 as daily_ctr\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='tiktok_ads__ad_hourly_passthrough_metrics', transform = 'sum') }}\n    \n    from hourly\n    left join ads\n        on hourly.ad_id = ads.ad_id\n    left join advertiser\n        on ads.advertiser_id = advertiser.advertiser_id\n    {{ dbt_utils.group_by(4) }}\n\n)\n\nselect *\nfrom joined", 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_report_hourly'], ['stg_tiktok_ads__advertiser'], ['stg_tiktok_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly', 'model.tiktok_ads_source.stg_tiktok_ads__advertiser', 'model.tiktok_ads_source.stg_tiktok_ads__ad_history']}, 'compiled_path': None}, 'model.tiktok_ads.tiktok_ads__ad_group_report': {'database': 'drops-bi', 'schema': 'marketing_full_tiktok_ads', 'name': 'tiktok_ads__ad_group_report', 'resource_type': 'model', 'package_name': 'tiktok_ads', 'path': 'tiktok_ads__ad_group_report.sql', 'original_file_path': 'models\\tiktok_ads__ad_group_report.sql', 'unique_id': 'model.tiktok_ads.tiktok_ads__ad_group_report', 'fqn': ['tiktok_ads', 'tiktok_ads__ad_group_report'], 'alias': 'tiktok_ads__ad_group_report', 'checksum': {'name': 'sha256', 'checksum': 'cd6f0250ddc693a683fb43b67c723a0f30c205465b44856b369764e593d0188a'}, 'config': {'enabled': True, 'alias': None, 'schema': 'tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents the daily performance of ads at the ad group level.', 'columns': {'date_day': {'name': 'date_day', 'description': 'Day of record', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'Ad group ID', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'Ad group name', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'Campaign name', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser_id': {'name': 'advertiser_id', 'description': 'Advertiser ID', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser_name': {'name': 'advertiser_name', 'description': 'Advertiser name.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': "Advertiser's currency.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'action_categories': {'name': 'action_categories', 'description': 'IDs of the action categories (behaviors) that you want to target.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'age': {'name': 'age', 'description': 'Age groups you want to target.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'audience_type': {'name': 'audience_type', 'description': 'Audience Type', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'budget': {'name': 'budget', 'description': 'Ad budget. Returns 0.0 when Campaign Budget Optimization (budget_optimize_switch) is on.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'category': {'name': 'category', 'description': 'Ad group category.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'interest_category': {'name': 'interest_category', 'description': 'Interest classification. If the interest is specified, users that do not meet interest target will be excluded during delivery.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'gender': {'name': 'gender', 'description': 'Gender that you want to target.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'languages': {'name': 'languages', 'description': 'Codes of the languages that you want to target.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The number of clicks that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The amount of spend that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'reach': {'name': 'reach', 'description': 'The number of unique users who saw your ads at least once. This metric is estimated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'conversion': {'name': 'conversion', 'description': 'The number of times your ad achieved an outcome, based on the secondary goal you selected.   As one campaign may have a number of different secondary goals, this statistic is not supported for campaigns.  Please go to ad groups or ads to view. (The total count is calculated based on the time each ad impression occurred.)\n', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'likes': {'name': 'likes', 'description': 'The number of likes your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'comments': {'name': 'comments', 'description': 'The number of comments your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'shares': {'name': 'shares', 'description': 'The number of shares that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'profile_visits': {'name': 'profile_visits', 'description': 'The number of profile visits that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'follows': {'name': 'follows', 'description': 'The number of follows that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_watched_2_s': {'name': 'video_watched_2_s', 'description': 'The number of times your video played for at least 2 seconds, or completely played. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_watched_6_s': {'name': 'video_watched_6_s', 'description': 'The number of times your video played for at least 6 seconds, or completely played. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_25': {'name': 'video_views_p_25', 'description': 'The number of times your video was played at 25% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_50': {'name': 'video_views_p_50', 'description': 'The number of times your video was played at 50% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_75': {'name': 'video_views_p_75', 'description': 'The number of times your video was played at 75% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_cpc': {'name': 'daily_cpc', 'description': "The average amount of money you've spent on a click.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_cpm': {'name': 'daily_cpm', 'description': "The average amount of money you've spent per 1,000 impressions.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_ctr': {'name': 'daily_ctr', 'description': 'The percentage of times people saw your ad and performed a click.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tiktok_ads://models\\tiktok_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'tiktok_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.2133067, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_tiktok_ads`.`tiktok_ads__ad_group_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nwith hourly as (\n    \n    select *\n    from {{ var('ad_group_report_hourly') }}\n), \n\nad_groups as (\n\n    select *\n    from {{ var('ad_group_history') }}\n    where is_most_recent_record\n), \n\nadvertiser as (\n\n    select *\n    from {{ var('advertiser') }}\n), \n\ncampaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record\n), \n\naggregated as (\n\n    select\n        cast(hourly.stat_time_hour as date) as date_day,\n        ad_groups.advertiser_id,\n        advertiser.advertiser_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        hourly.ad_group_id,\n        ad_groups.ad_group_name,\n        advertiser.currency,\n        ad_groups.action_categories,\n        ad_groups.category,\n        ad_groups.gender,\n        ad_groups.audience_type,\n        ad_groups.budget,\n        ad_groups.age,\n        ad_groups.languages,\n        ad_groups.interest_category,\n        sum(hourly.impressions) as impressions,\n        sum(hourly.clicks) as clicks,\n        sum(hourly.spend) as spend,\n        sum(hourly.reach) as reach,\n        sum(hourly.conversion) as conversion,\n        sum(hourly.likes) as likes,\n        sum(hourly.comments) as comments,\n        sum(hourly.shares) as shares,\n        sum(hourly.profile_visits) as profile_visits,\n        sum(hourly.follows) as follows,\n        sum(hourly.video_watched_2_s) as video_watched_2_s,\n        sum(hourly.video_watched_6_s) as video_watched_6_s,\n        sum(hourly.video_views_p_25) as video_views_p_25,\n        sum(hourly.video_views_p_50) as video_views_p_50, \n        sum(hourly.video_views_p_75) as video_views_p_75,\n        sum(hourly.spend)/nullif(sum(hourly.clicks),0) as daily_cpc,\n        (sum(hourly.spend)/nullif(sum(hourly.impressions),0))*1000 as daily_cpm,\n        (sum(hourly.clicks)/nullif(sum(hourly.impressions),0))*100 as daily_ctr\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='tiktok_ads__ad_group_hourly_passthrough_metrics', transform = 'sum') }}\n    \n    from hourly\n    left join ad_groups \n        on hourly.ad_group_id = ad_groups.ad_group_id\n    left join advertiser\n        on ad_groups.advertiser_id = advertiser.advertiser_id\n    left join campaigns\n        on ad_groups.campaign_id = campaigns.campaign_id\n    {{ dbt_utils.group_by(16) }}\n\n)\n\nselect *\nfrom aggregated", 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_group_report_hourly'], ['stg_tiktok_ads__ad_group_history'], ['stg_tiktok_ads__advertiser'], ['stg_tiktok_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly', 'model.tiktok_ads_source.stg_tiktok_ads__ad_group_history', 'model.tiktok_ads_source.stg_tiktok_ads__advertiser', 'model.tiktok_ads_source.stg_tiktok_ads__campaign_history']}, 'compiled_path': None}, 'model.tiktok_ads.tiktok_ads__ad_report': {'database': 'drops-bi', 'schema': 'marketing_full_tiktok_ads', 'name': 'tiktok_ads__ad_report', 'resource_type': 'model', 'package_name': 'tiktok_ads', 'path': 'tiktok_ads__ad_report.sql', 'original_file_path': 'models\\tiktok_ads__ad_report.sql', 'unique_id': 'model.tiktok_ads.tiktok_ads__ad_report', 'fqn': ['tiktok_ads', 'tiktok_ads__ad_report'], 'alias': 'tiktok_ads__ad_report', 'checksum': {'name': 'sha256', 'checksum': 'ceee3ce54092049c327198fdc079ec337fa26661db48a8f976bc996997f8cac6'}, 'config': {'enabled': True, 'alias': None, 'schema': 'tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents the daily performance of ads at the ad level.', 'columns': {'date_day': {'name': 'date_day', 'description': 'Day of record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_id': {'name': 'ad_id', 'description': 'Ad ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_name': {'name': 'ad_name', 'description': 'Ad name.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'Campaign name.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser_name': {'name': 'advertiser_name', 'description': 'Advertiser name.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser_id': {'name': 'advertiser_id', 'description': 'Advertiser ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'Ad group ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'Ad group name.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'action_categories': {'name': 'action_categories', 'description': 'IDs of the action categories (behaviors) that you want to target.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'age': {'name': 'age', 'description': 'Age groups you want to target.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'audience_type': {'name': 'audience_type', 'description': 'Audience Type', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'budget': {'name': 'budget', 'description': 'Ad budget. Returns 0.0 when Campaign Budget Optimization (budget_optimize_switch) is on.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'category': {'name': 'category', 'description': 'Ad group category.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'interest_category': {'name': 'interest_category', 'description': 'Interest classification. If the interest is specified, users that do not meet interest target will be excluded during delivery.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'gender': {'name': 'gender', 'description': 'Gender that you want to target.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'languages': {'name': 'languages', 'description': 'Codes of the languages that you want to target.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': "Advertiser's currency.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The number of clicks that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The amount of spend that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'reach': {'name': 'reach', 'description': 'The number of unique users who saw your ads at least once. This metric is estimated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'conversion': {'name': 'conversion', 'description': 'The number of times your ad achieved an outcome, based on the secondary goal you selected.   As one campaign may have a number of different secondary goals, this statistic is not supported for campaigns.  Please go to ad groups or ads to view. (The total count is calculated based on the time each ad impression occurred.)\n', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'likes': {'name': 'likes', 'description': 'The number of likes your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'comments': {'name': 'comments', 'description': 'The number of comments your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'shares': {'name': 'shares', 'description': 'The number of shares that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'profile_visits': {'name': 'profile_visits', 'description': 'The number of profile visits that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'follows': {'name': 'follows', 'description': 'The number of follows that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_watched_2_s': {'name': 'video_watched_2_s', 'description': 'The number of times your video played for at least 2 seconds, or completely played. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_watched_6_s': {'name': 'video_watched_6_s', 'description': 'The number of times your video played for at least 6 seconds, or completely played. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_25': {'name': 'video_views_p_25', 'description': 'The number of times your video was played at 25% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_50': {'name': 'video_views_p_50', 'description': 'The number of times your video was played at 50% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_75': {'name': 'video_views_p_75', 'description': 'The number of times your video was played at 75% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_cpc': {'name': 'daily_cpc', 'description': "The average amount of money you've spent on a click.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_cpm': {'name': 'daily_cpm', 'description': "The average amount of money you've spent per 1,000 impressions.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_ctr': {'name': 'daily_ctr', 'description': 'The percentage of times people saw your ad and performed a click.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tiktok_ads://models\\tiktok_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'tiktok_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.2035413, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_tiktok_ads`.`tiktok_ads__ad_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nwith hourly as (\n    \n    select *\n    from {{ var('ad_report_hourly') }}\n), \n\nads as (\n\n    select *\n    from {{ var('ad_history') }}\n    where is_most_recent_record\n), \n\nad_groups as (\n\n    select *\n    from {{ var('ad_group_history') }}\n    where is_most_recent_record\n), \n\nadvertiser as (\n\n    select *\n    from {{ var('advertiser') }}\n), \n\ncampaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record\n),\n\naggregated as (\n\n    select\n        cast(hourly.stat_time_hour as date) as date_day,\n        ad_groups.advertiser_id,\n        advertiser.advertiser_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        ad_groups.ad_group_id,\n        ad_groups.ad_group_name,\n        hourly.ad_id,\n        ads.ad_name,\n        advertiser.currency,\n        ad_groups.category,\n        ad_groups.action_categories,\n        ad_groups.gender,\n        ad_groups.audience_type,\n        ad_groups.budget,\n        ad_groups.age,\n        ad_groups.languages,\n        ad_groups.interest_category,\n        sum(hourly.impressions) as impressions,\n        sum(hourly.clicks) as clicks,\n        sum(hourly.spend) as spend,\n        sum(hourly.reach) as reach,\n        sum(hourly.conversion) as conversion,\n        sum(hourly.likes) as likes,\n        sum(hourly.comments) as comments,\n        sum(hourly.shares) as shares,\n        sum(hourly.profile_visits) as profile_visits,\n        sum(hourly.follows) as follows,\n        sum(hourly.video_watched_2_s) as video_watched_2_s,\n        sum(hourly.video_watched_6_s) as video_watched_6_s,\n        sum(hourly.video_views_p_25) as video_views_p_25,\n        sum(hourly.video_views_p_50) as video_views_p_50, \n        sum(hourly.video_views_p_75) as video_views_p_75,\n        sum(hourly.spend)/nullif(sum(hourly.clicks),0) as daily_cpc,\n        (sum(hourly.spend)/nullif(sum(hourly.impressions),0))*1000 as daily_cpm,\n        (sum(hourly.clicks)/nullif(sum(hourly.impressions),0))*100 as daily_ctr\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='tiktok_ads__ad_hourly_passthrough_metrics', transform = 'sum') }}\n    \n    from hourly\n    left join ads\n        on hourly.ad_id = ads.ad_id\n    left join ad_groups \n        on ads.ad_group_id = ad_groups.ad_group_id\n    left join advertiser\n        on ads.advertiser_id = advertiser.advertiser_id\n    left join campaigns\n        on ads.campaign_id = campaigns.campaign_id\n    {{ dbt_utils.group_by(18) }}\n\n)\n\nselect *\nfrom aggregated", 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_report_hourly'], ['stg_tiktok_ads__ad_history'], ['stg_tiktok_ads__ad_group_history'], ['stg_tiktok_ads__advertiser'], ['stg_tiktok_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly', 'model.tiktok_ads_source.stg_tiktok_ads__ad_history', 'model.tiktok_ads_source.stg_tiktok_ads__ad_group_history', 'model.tiktok_ads_source.stg_tiktok_ads__advertiser', 'model.tiktok_ads_source.stg_tiktok_ads__campaign_history']}, 'compiled_path': None}, 'model.tiktok_ads.tiktok_ads__campaign_report': {'database': 'drops-bi', 'schema': 'marketing_full_tiktok_ads', 'name': 'tiktok_ads__campaign_report', 'resource_type': 'model', 'package_name': 'tiktok_ads', 'path': 'tiktok_ads__campaign_report.sql', 'original_file_path': 'models\\tiktok_ads__campaign_report.sql', 'unique_id': 'model.tiktok_ads.tiktok_ads__campaign_report', 'fqn': ['tiktok_ads', 'tiktok_ads__campaign_report'], 'alias': 'tiktok_ads__campaign_report', 'checksum': {'name': 'sha256', 'checksum': 'e326da741a25ba4b3cdbeca8fb8e249c30cd5ef582be47077c14f4259804286f'}, 'config': {'enabled': True, 'alias': None, 'schema': 'tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents the daily performance at the campaign level.', 'columns': {'date_day': {'name': 'date_day', 'description': 'Day of record', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'Campaign name', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': "Advertiser's currency.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser_id': {'name': 'advertiser_id', 'description': 'Advertiser ID', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser_name': {'name': 'advertiser_name', 'description': 'Advertiser name', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The number of clicks that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The amount of spend that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'reach': {'name': 'reach', 'description': 'The number of unique users who saw your ads at least once. This metric is estimated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'conversion': {'name': 'conversion', 'description': 'The number of times your ad achieved an outcome, based on the secondary goal you selected.   As one campaign may have a number of different secondary goals, this statistic is not supported for campaigns.  Please go to ad groups or ads to view. (The total count is calculated based on the time each ad impression occurred.)\n', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'likes': {'name': 'likes', 'description': 'The number of likes your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'comments': {'name': 'comments', 'description': 'The number of comments your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'shares': {'name': 'shares', 'description': 'The number of shares that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'profile_visits': {'name': 'profile_visits', 'description': 'The number of profile visits that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'follows': {'name': 'follows', 'description': 'The number of follows that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_watched_2_s': {'name': 'video_watched_2_s', 'description': 'The number of times your video played for at least 2 seconds, or completely played. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_watched_6_s': {'name': 'video_watched_6_s', 'description': 'The number of times your video played for at least 6 seconds, or completely played. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_25': {'name': 'video_views_p_25', 'description': 'The number of times your video was played at 25% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_50': {'name': 'video_views_p_50', 'description': 'The number of times your video was played at 50% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_75': {'name': 'video_views_p_75', 'description': 'The number of times your video was played at 75% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_cpc': {'name': 'daily_cpc', 'description': "The average amount of money you've spent on a click.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_cpm': {'name': 'daily_cpm', 'description': "The average amount of money you've spent per 1,000 impressions.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_ctr': {'name': 'daily_ctr', 'description': 'The percentage of times people saw your ad and performed a click.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tiktok_ads://models\\tiktok_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'tiktok_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.2188604, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_tiktok_ads`.`tiktok_ads__campaign_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nwith hourly as (\n    \n    select *\n    from {{ var('campaign_report_hourly') }}\n), \n\ncampaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record\n), \n\nadvertiser as (\n\n    select *\n    from {{ var('advertiser') }}\n), \n\naggregated as (\n\n    select\n        cast(hourly.stat_time_hour as date) as date_day,\n        advertiser.advertiser_id,\n        advertiser.advertiser_name,\n        hourly.campaign_id,\n        campaigns.campaign_name,\n        advertiser.currency,\n        sum(hourly.impressions) as impressions,\n        sum(hourly.clicks) as clicks,\n        sum(hourly.spend) as spend,\n        sum(hourly.reach) as reach,\n        sum(hourly.conversion) as conversion,\n        sum(hourly.likes) as likes,\n        sum(hourly.comments) as comments,\n        sum(hourly.shares) as shares,\n        sum(hourly.profile_visits) as profile_visits,\n        sum(hourly.follows) as follows,\n        sum(hourly.video_watched_2_s) as video_watched_2_s,\n        sum(hourly.video_watched_6_s) as video_watched_6_s,\n        sum(hourly.video_views_p_25) as video_views_p_25,\n        sum(hourly.video_views_p_50) as video_views_p_50, \n        sum(hourly.video_views_p_75) as video_views_p_75,\n        sum(hourly.spend)/nullif(sum(hourly.clicks),0) as daily_cpc,\n        (sum(hourly.spend)/nullif(sum(hourly.impressions),0))*1000 as daily_cpm,\n        (sum(hourly.clicks)/nullif(sum(hourly.impressions),0))*100 as daily_ctr\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='tiktok_ads__campaign_hourly_passthrough_metrics', transform = 'sum') }}\n    \n    from hourly\n    left join campaigns\n        on hourly.campaign_id = campaigns.campaign_id\n    left join advertiser\n        on campaigns.advertiser_id = advertiser.advertiser_id\n    {{ dbt_utils.group_by(6) }}\n\n)\n\nselect *\nfrom aggregated", 'language': 'sql', 'refs': [['stg_tiktok_ads__campaign_report_hourly'], ['stg_tiktok_ads__campaign_history'], ['stg_tiktok_ads__advertiser']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly', 'model.tiktok_ads_source.stg_tiktok_ads__campaign_history', 'model.tiktok_ads_source.stg_tiktok_ads__advertiser']}, 'compiled_path': None}, 'model.tiktok_ads.tiktok_ads__url_report': {'database': 'drops-bi', 'schema': 'marketing_full_tiktok_ads', 'name': 'tiktok_ads__url_report', 'resource_type': 'model', 'package_name': 'tiktok_ads', 'path': 'tiktok_ads__url_report.sql', 'original_file_path': 'models\\tiktok_ads__url_report.sql', 'unique_id': 'model.tiktok_ads.tiktok_ads__url_report', 'fqn': ['tiktok_ads', 'tiktok_ads__url_report'], 'alias': 'tiktok_ads__url_report', 'checksum': {'name': 'sha256', 'checksum': '9d2e1b017a072d77ccdd7ce5d906429fdee130e6cefc34eb49358079223e2f32'}, 'config': {'enabled': True, 'alias': None, 'schema': 'tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents the daily performance of ads at the URL level.', 'columns': {'date_day': {'name': 'date_day', 'description': 'Day of record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_id': {'name': 'ad_id', 'description': 'Ad ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_name': {'name': 'ad_name', 'description': 'Ad name.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'Campaign name.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser_name': {'name': 'advertiser_name', 'description': 'Advertiser name.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser_id': {'name': 'advertiser_id', 'description': 'Advertiser ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'Ad group ID.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'Ad group name.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'base_url': {'name': 'base_url', 'description': 'The base URL of the ad, extracted from the `landing page url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_host': {'name': 'url_host', 'description': 'The URL host of the ad, extracted from the `landing page url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_path': {'name': 'url_path', 'description': 'The URL path of the ad, extracted from the `landing page url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_source': {'name': 'utm_source', 'description': 'The utm_source parameter of the ad, extracted from the `landing page url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_medium': {'name': 'utm_medium', 'description': 'The utm_medium parameter of the ad, extracted from the `landing page url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_campaign': {'name': 'utm_campaign', 'description': 'The utm_campaign parameter of the ad, extracted from the `landing page url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_content': {'name': 'utm_content', 'description': 'The utm_content parameter of the ad, extracted from the `landing page url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_term': {'name': 'utm_term', 'description': 'The utm_term parameter of the ad, extracted from the `landing page url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'action_categories': {'name': 'action_categories', 'description': 'IDs of the action categories (behaviors) that you want to target.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'age': {'name': 'age', 'description': 'Age groups you want to target.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'audience_type': {'name': 'audience_type', 'description': 'Audience Type', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'budget': {'name': 'budget', 'description': 'Ad budget. Returns 0.0 when Campaign Budget Optimization (budget_optimize_switch) is on.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'category': {'name': 'category', 'description': 'Ad group category.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'interest_category': {'name': 'interest_category', 'description': 'Interest classification. If the interest is specified, users that do not meet interest target will be excluded during delivery.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'gender': {'name': 'gender', 'description': 'Gender that you want to target.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'languages': {'name': 'languages', 'description': 'Codes of the languages that you want to target.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': "Advertiser's currency.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The number of clicks that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The amount of spend that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'reach': {'name': 'reach', 'description': 'The number of unique users who saw your ads at least once. This metric is estimated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'conversion': {'name': 'conversion', 'description': 'The number of times your ad achieved an outcome, based on the secondary goal you selected.   As one campaign may have a number of different secondary goals, this statistic is not supported for campaigns.  Please go to ad groups or ads to view. (The total count is calculated based on the time each ad impression occurred.)\n', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'likes': {'name': 'likes', 'description': 'The number of likes your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'comments': {'name': 'comments', 'description': 'The number of comments your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'shares': {'name': 'shares', 'description': 'The number of shares that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'profile_visits': {'name': 'profile_visits', 'description': 'The number of profile visits that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'follows': {'name': 'follows', 'description': 'The number of follows that occurred on the day of the record.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_watched_2_s': {'name': 'video_watched_2_s', 'description': 'The number of times your video played for at least 2 seconds, or completely played. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_watched_6_s': {'name': 'video_watched_6_s', 'description': 'The number of times your video played for at least 6 seconds, or completely played. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_25': {'name': 'video_views_p_25', 'description': 'The number of times your video was played at 25% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_50': {'name': 'video_views_p_50', 'description': 'The number of times your video was played at 50% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_75': {'name': 'video_views_p_75', 'description': 'The number of times your video was played at 75% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_cpc': {'name': 'daily_cpc', 'description': "The average amount of money you've spent on a click.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_cpm': {'name': 'daily_cpm', 'description': "The average amount of money you've spent per 1,000 impressions.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_ctr': {'name': 'daily_ctr', 'description': 'The percentage of times people saw your ad and performed a click.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tiktok_ads://models\\tiktok_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'tiktok_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.230404, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_tiktok_ads`.`tiktok_ads__url_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nwith hourly as (\n    \n    select *\n    from {{ var('ad_report_hourly') }}\n), \n\nads as (\n\n    select *\n    from {{ var('ad_history') }}\n    where is_most_recent_record\n), \n\nad_groups as (\n\n    select *\n    from {{ var('ad_group_history') }}\n    where is_most_recent_record\n), \n\nadvertiser as (\n\n    select *\n    from {{ var('advertiser') }}\n), \n\ncampaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_most_recent_record\n), \n\naggregated as (\n\n    select\n        cast(hourly.stat_time_hour as date) as date_day,\n        ad_groups.advertiser_id,\n        advertiser.advertiser_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        ad_groups.ad_group_id,\n        ad_groups.ad_group_name,\n        hourly.ad_id,\n        ads.ad_name,\n        ads.base_url,\n        ads.url_host,\n        ads.url_path,\n        ads.utm_source,\n        ads.utm_medium,\n        ads.utm_campaign,\n        ads.utm_content,\n        ads.utm_term,\n        advertiser.currency,\n        ad_groups.action_categories,\n        ad_groups.category,\n        ad_groups.gender,\n        ad_groups.audience_type,\n        ad_groups.budget,\n        ad_groups.age,\n        ad_groups.languages,\n        ad_groups.interest_category,\n        sum(hourly.impressions) as impressions,\n        sum(hourly.clicks) as clicks,\n        sum(hourly.spend) as spend,\n        sum(hourly.reach) as reach,\n        sum(hourly.conversion) as conversion,\n        sum(hourly.likes) as likes,\n        sum(hourly.comments) as comments,\n        sum(hourly.shares) as shares,\n        sum(hourly.profile_visits) as profile_visits,\n        sum(hourly.follows) as follows,\n        sum(hourly.video_watched_2_s) as video_watched_2_s,\n        sum(hourly.video_watched_6_s) as video_watched_6_s,\n        sum(hourly.video_views_p_25) as video_views_p_25,\n        sum(hourly.video_views_p_50) as video_views_p_50, \n        sum(hourly.video_views_p_75) as video_views_p_75,\n        sum(hourly.spend)/nullif(sum(hourly.clicks),0) as daily_cpc,\n        (sum(hourly.spend)/nullif(sum(hourly.impressions),0))*1000 as daily_cpm,\n        (sum(hourly.clicks)/nullif(sum(hourly.impressions),0))*100 as daily_ctr\n\n        {{ fivetran_utils.persist_pass_through_columns(pass_through_variable='tiktok_ads__ad_hourly_passthrough_metrics', transform = 'sum') }}\n    \n    from hourly\n    left join ads\n        on hourly.ad_id = ads.ad_id\n    left join ad_groups \n        on ads.ad_group_id = ad_groups.ad_group_id\n    left join advertiser\n        on ads.advertiser_id = advertiser.advertiser_id\n    left join campaigns\n        on ads.campaign_id = campaigns.campaign_id\n\n    {% if var('ad_reporting__url_report__using_null_filter', True) %}\n        -- We are filtering for only ads where url fields are populated.\n        where ads.landing_page_url is not null\n    {% endif %}\n\n    {{ dbt_utils.group_by(26) }}\n\n)\n\nselect *\nfrom aggregated", 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_report_hourly'], ['stg_tiktok_ads__ad_history'], ['stg_tiktok_ads__ad_group_history'], ['stg_tiktok_ads__advertiser'], ['stg_tiktok_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly', 'model.tiktok_ads_source.stg_tiktok_ads__ad_history', 'model.tiktok_ads_source.stg_tiktok_ads__ad_group_history', 'model.tiktok_ads_source.stg_tiktok_ads__advertiser', 'model.tiktok_ads_source.stg_tiktok_ads__campaign_history']}, 'compiled_path': None}, 'model.tiktok_ads_source.stg_tiktok_ads__advertiser': {'database': 'drops-bi', 'schema': 'marketing_full_stg_tiktok_ads', 'name': 'stg_tiktok_ads__advertiser', 'resource_type': 'model', 'package_name': 'tiktok_ads_source', 'path': 'stg_tiktok_ads__advertiser.sql', 'original_file_path': 'models\\stg_tiktok_ads__advertiser.sql', 'unique_id': 'model.tiktok_ads_source.stg_tiktok_ads__advertiser', 'fqn': ['tiktok_ads_source', 'stg_tiktok_ads__advertiser'], 'alias': 'stg_tiktok_ads__advertiser', 'checksum': {'name': 'sha256', 'checksum': '759a97a786242ecdb350f1852e0861bbeae8218dc19a4047fee98c96ea0ba8be'}, 'config': {'enabled': True, 'alias': None, 'schema': 'stg_tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents data for each advertiser.', 'columns': {'advertiser_id': {'name': 'advertiser_id', 'description': 'Advertiser ID', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'address': {'name': 'address', 'description': 'Advertiser address information', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'balance': {'name': 'balance', 'description': 'Account available balance', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'company': {'name': 'company', 'description': "Advertiser's company name", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'contacter': {'name': 'contacter', 'description': 'Contact Person', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'country': {'name': 'country', 'description': "The advertiser's country", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'create_time': {'name': 'create_time', 'description': "Advertiser's create time", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': 'Type of currency used by advertisers', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'description': {'name': 'description', 'description': 'Brand description, i.e. promotional content', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'email': {'name': 'email', 'description': 'Advertiser contact email, desensitised data', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'industry': {'name': 'industry', 'description': 'Advertiser industry category', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'language': {'name': 'language', 'description': 'Language used by advertisers', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'license_no': {'name': 'license_no', 'description': 'License number', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'license_url': {'name': 'license_url', 'description': 'License preview address, the link is valid for an hour by default.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser_name': {'name': 'advertiser_name', 'description': 'Advertiser name', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'phone_number': {'name': 'phone_number', 'description': 'Contact mobile number, desensitised data', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'telephone': {'name': 'telephone', 'description': 'Fixed phone number, desensitised data', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'timezone': {'name': 'timezone', 'description': 'Ad account time zone including GMT offset', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tiktok_ads_source://models\\stg_tiktok_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'stg_tiktok_ads', 'enabled': True}, 'created_at': 1694433487.3590302, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_stg_tiktok_ads`.`stg_tiktok_ads__advertiser`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_tiktok_ads__advertiser_tmp') }}\n), \n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_tiktok_ads__advertiser_tmp')),\n                staging_columns=get_advertiser_columns()\n            )\n        }}\n\n    from base\n),\n\nfinal as (\n\n    select   \n        id as advertiser_id, \n        address, \n        balance, \n        company, \n        contacter, \n        country, \n        currency, \n        description, \n        email, \n        industry, \n        language,\n        name as advertiser_name, \n        phone_number, \n        telephone, \n        timezone\n    from fields\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_tiktok_ads__advertiser_tmp'], ['stg_tiktok_ads__advertiser_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.tiktok_ads_source.get_advertiser_columns', 'macro.fivetran_utils.fill_staging_columns'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__advertiser_tmp', 'model.tiktok_ads_source.stg_tiktok_ads__advertiser_tmp']}, 'compiled_path': None}, 'model.tiktok_ads_source.stg_tiktok_ads__ad_group_history': {'database': 'drops-bi', 'schema': 'marketing_full_stg_tiktok_ads', 'name': 'stg_tiktok_ads__ad_group_history', 'resource_type': 'model', 'package_name': 'tiktok_ads_source', 'path': 'stg_tiktok_ads__ad_group_history.sql', 'original_file_path': 'models\\stg_tiktok_ads__ad_group_history.sql', 'unique_id': 'model.tiktok_ads_source.stg_tiktok_ads__ad_group_history', 'fqn': ['tiktok_ads_source', 'stg_tiktok_ads__ad_group_history'], 'alias': 'stg_tiktok_ads__ad_group_history', 'checksum': {'name': 'sha256', 'checksum': '293ad5bd25638965207578b5a55376e173cb199e24c62f0e3fd643c9db913a5a'}, 'config': {'enabled': True, 'alias': None, 'schema': 'stg_tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents data for each ad group.', 'columns': {'ad_group_id': {'name': 'ad_group_id', 'description': 'Ad group ID', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_at': {'name': 'updated_at', 'description': 'Time the record was updated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser_id': {'name': 'advertiser_id', 'description': 'Advertiser ID', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'action_categories': {'name': 'action_categories', 'description': 'IDs of the action categories (behaviors) that you want to target.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': "The Ad group's campaign ID.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'action_days': {'name': 'action_days', 'description': 'Action days', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_name': {'name': 'ad_group_name', 'description': 'Ad group name. Character limit is 512 and cannot contain emoji.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'age': {'name': 'age', 'description': 'Age groups you want to target.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'audience_type': {'name': 'audience_type', 'description': 'Audience Type', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'budget': {'name': 'budget', 'description': 'Ad budget. Returns 0.0 when Campaign Budget Optimization (budget_optimize_switch) is on.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'category': {'name': 'category', 'description': 'Ad group category.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'display_name': {'name': 'display_name', 'description': 'Display name of ad group.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'interest_category': {'name': 'interest_category', 'description': 'Interest classification. If the interest is specified, users that do not meet interest target will be excluded during delivery.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'frequency': {'name': 'frequency', 'description': 'frequency, together with frequency_schedule, controls how often people see your ad (only available for REACH ads).  For example, frequency = 2 frequency_schedule = 3 means "show ads no more than twice every 3 day".\n', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'frequency_schedule': {'name': 'frequency_schedule', 'description': 'frequency, together with frequency, controls how often people see your ad (only available for REACH ads).', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'gender': {'name': 'gender', 'description': 'Gender that you want to target.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'landing_page_url': {'name': 'landing_page_url', 'description': 'Landing page URL.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'languages': {'name': 'languages', 'description': 'Codes of the languages that you want to target.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_most_recent_record': {'name': 'is_most_recent_record', 'description': 'Whether record is the most recent one for this particular grain.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tiktok_ads_source://models\\stg_tiktok_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'stg_tiktok_ads', 'enabled': True}, 'created_at': 1694433487.364032, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_stg_tiktok_ads`.`stg_tiktok_ads__ad_group_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_tiktok_ads__ad_group_history_tmp') }}\n), \n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_tiktok_ads__ad_group_history_tmp')),\n                staging_columns=get_ad_group_history_columns()\n            )\n        }}\n\n    from base\n), \n\nfinal as (\n\n    select\n        adgroup_id as ad_group_id,\n        cast(updated_at as {{ dbt.type_timestamp() }}) as updated_at,\n        advertiser_id,\n        campaign_id,\n        action_days,\n        action_categories,\n        adgroup_name as ad_group_name,\n        age,\n        audience_type,\n        budget,\n        category,\n        display_name,\n        interest_category_v_2 as interest_category,\n        frequency,\n        frequency_schedule,\n        gender,\n        languages, \n        landing_page_url,\n        row_number() over (partition by adgroup_id order by updated_at desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_group_history_tmp'], ['stg_tiktok_ads__ad_group_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.tiktok_ads_source.get_ad_group_history_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_timestamp'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_group_history_tmp', 'model.tiktok_ads_source.stg_tiktok_ads__ad_group_history_tmp']}, 'compiled_path': None}, 'model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly': {'database': 'drops-bi', 'schema': 'marketing_full_stg_tiktok_ads', 'name': 'stg_tiktok_ads__ad_group_report_hourly', 'resource_type': 'model', 'package_name': 'tiktok_ads_source', 'path': 'stg_tiktok_ads__ad_group_report_hourly.sql', 'original_file_path': 'models\\stg_tiktok_ads__ad_group_report_hourly.sql', 'unique_id': 'model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly', 'fqn': ['tiktok_ads_source', 'stg_tiktok_ads__ad_group_report_hourly'], 'alias': 'stg_tiktok_ads__ad_group_report_hourly', 'checksum': {'name': 'sha256', 'checksum': 'e6aa8625ed40497e25ec5f7f5dd5a02febf003e50002aad7d5fa11bc5cd353b8'}, 'config': {'enabled': True, 'alias': None, 'schema': 'stg_tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents data for each ad group for each hour.', 'columns': {'ad_group_id': {'name': 'ad_group_id', 'description': 'Ad group id', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'stat_time_hour': {'name': 'stat_time_hour', 'description': 'Hour of activity', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'cost_per_conversion': {'name': 'cost_per_conversion', 'description': "The average amount of money you've spent on a conversion.  (The total count is calculated based on the time each ad impression occurred.)\n", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'cpc': {'name': 'cpc', 'description': "The average amount of money you've spent on a click.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_play_actions': {'name': 'video_play_actions', 'description': 'The number of times your video starts to play. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'conversion_rate': {'name': 'conversion_rate', 'description': 'The percentage of results you received out of all the clicks of your ads.   (The total count is calculated based on the time each ad impression occurred.)\n', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_75': {'name': 'video_views_p_75', 'description': 'The number of times your video was played at 75% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_50': {'name': 'video_views_p_50', 'description': 'The number of times your video was played at 50% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of times your ads were on screen.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'comments': {'name': 'comments', 'description': 'The number of comments your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'conversion': {'name': 'conversion', 'description': 'The number of times your ad achieved an outcome, based on the secondary goal you selected.   As one campaign may have a number of different secondary goals, this statistic is not supported for campaigns.  Please go to ad groups or ads to view. (The total count is calculated based on the time each ad impression occurred.)\n', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'shares': {'name': 'shares', 'description': 'The number of shares your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The number of clicks on your ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'cost_per_1000_reached': {'name': 'cost_per_1000_reached', 'description': 'The average cost to reach 1,000 unique users. This metric is estimated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_25': {'name': 'video_views_p_25', 'description': 'The number of times your video was played at 25% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'reach': {'name': 'reach', 'description': 'The number of unique users who saw your ads at least once. This metric is estimated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'profile_visits_rate': {'name': 'profile_visits_rate', 'description': 'The rate of profile visits per impression the paid ad drove during the campaign. This metric is only for Boosted TikToks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'average_video_play': {'name': 'average_video_play', 'description': 'The average time your video was played per single video view, including any time spent replaying the video.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'average_video_play_per_user': {'name': 'average_video_play_per_user', 'description': 'The average time per user your video was played per single video view, including any time spent replaying the video.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'profile_visits': {'name': 'profile_visits', 'description': 'The number of profile visits the ad drove during the campaign. This metric is only for Boosted TikToks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'cpm': {'name': 'cpm', 'description': "The average amount of money you've spent per 1,000 impressions.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ctr': {'name': 'ctr', 'description': 'The percentage of times people saw your ad and performed a click.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_watched_2_s': {'name': 'video_watched_2_s', 'description': 'The number of times your video played for at least 2 seconds. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'follows': {'name': 'follows', 'description': 'The number of new followers that were gained within 1 day of a user seeing a paid ad. This metric is only for Boosted TikToks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_watched_6_s': {'name': 'video_watched_6_s', 'description': 'The number of times your video played for at least 6 seconds, or completely played. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': "The estimated total amount of money you've spent on your campaign, ad group or ad during its schedule.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'likes': {'name': 'likes', 'description': 'The number of likes your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tiktok_ads_source://models\\stg_tiktok_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'stg_tiktok_ads', 'enabled': True}, 'created_at': 1694433487.3856256, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_stg_tiktok_ads`.`stg_tiktok_ads__ad_group_report_hourly`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_tiktok_ads__ad_group_report_hourly_tmp') }}\n), \n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_tiktok_ads__ad_group_report_hourly_tmp')),\n                staging_columns=get_ad_group_report_hourly_columns()\n            )\n        }}\n    from base\n), \n\nfinal as (\n\n    select  \n        adgroup_id as ad_group_id,\n        cast(stat_time_hour as {{ dbt.type_timestamp() }}) as stat_time_hour, \n        cpc, \n        cpm, \n        ctr, \n        impressions, \n        clicks, \n        spend, \n        reach, \n        conversion, \n        cost_per_conversion, \n        conversion_rate, \n        likes, \n        comments, \n        shares, \n        profile_visits,\n        follows, \n        video_play_actions, \n        video_watched_2_s, \n        video_watched_6_s, \n        video_views_p_25, \n        video_views_p_50,\n        video_views_p_75,  \n        average_video_play, \n        average_video_play_per_user\n\n        {{ fivetran_utils.fill_pass_through_columns('tiktok_ads__ad_group_hourly_passthrough_metrics') }}\n\n    from fields\n) \n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_group_report_hourly_tmp'], ['stg_tiktok_ads__ad_group_report_hourly_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.tiktok_ads_source.get_ad_group_report_hourly_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_timestamp', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly_tmp', 'model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly_tmp']}, 'compiled_path': None}, 'model.tiktok_ads_source.stg_tiktok_ads__ad_history': {'database': 'drops-bi', 'schema': 'marketing_full_stg_tiktok_ads', 'name': 'stg_tiktok_ads__ad_history', 'resource_type': 'model', 'package_name': 'tiktok_ads_source', 'path': 'stg_tiktok_ads__ad_history.sql', 'original_file_path': 'models\\stg_tiktok_ads__ad_history.sql', 'unique_id': 'model.tiktok_ads_source.stg_tiktok_ads__ad_history', 'fqn': ['tiktok_ads_source', 'stg_tiktok_ads__ad_history'], 'alias': 'stg_tiktok_ads__ad_history', 'checksum': {'name': 'sha256', 'checksum': '04ee4bd6f5c670fa46d8c3d6846d21da350c898d5287ee8cca7a8db9518f5b5e'}, 'config': {'enabled': True, 'alias': None, 'schema': 'stg_tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents data for each ad.', 'columns': {'ad_id': {'name': 'ad_id', 'description': 'Ad ID', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_at': {'name': 'updated_at', 'description': 'Time the record was updated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_group_id': {'name': 'ad_group_id', 'description': 'Ad group ID', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser_id': {'name': 'advertiser_id', 'description': 'Advertiser ID', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'base_url': {'name': 'base_url', 'description': 'The base URL of the ad, extracted from the `landing page url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ad_name': {'name': 'ad_name', 'description': 'Ad Name.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'call_to_action': {'name': 'call_to_action', 'description': 'Call to action values.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'click_tracking_url': {'name': 'click_tracking_url', 'description': 'Click monitoring URL.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impression_tracking_url': {'name': 'impression_tracking_url', 'description': 'Display monitoring URL.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'landing_page_url': {'name': 'landing_page_url', 'description': 'Landing page URL.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_host': {'name': 'url_host', 'description': 'The URL host of the ad, extracted from the `landing_page_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_path': {'name': 'url_path', 'description': 'The URL path of the ad, extracted from the `landing_page_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_source': {'name': 'utm_source', 'description': 'The utm_source parameter of the ad, extracted from the `landing_page_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_medium': {'name': 'utm_medium', 'description': 'The utm_medium parameter of the ad, extracted from the `landing_page_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_campaign': {'name': 'utm_campaign', 'description': 'The utm_campaign parameter of the ad, extracted from the `landing_page_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_content': {'name': 'utm_content', 'description': 'The utm_content parameter of the ad, extracted from the `landing_page_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_term': {'name': 'utm_term', 'description': 'The utm_term parameter of the ad, extracted from the `landing_page_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_most_recent_record': {'name': 'is_most_recent_record', 'description': 'Whether record is the most recent one for this particular grain.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tiktok_ads_source://models\\stg_tiktok_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'stg_tiktok_ads', 'enabled': True}, 'created_at': 1694433487.3695424, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_stg_tiktok_ads`.`stg_tiktok_ads__ad_history`', 'raw_code': '{{ config(enabled=var(\'ad_reporting__tiktok_ads_enabled\', true)) }}\n\nwith base as (\n\n    select *\n    from {{ ref(\'stg_tiktok_ads__ad_history_tmp\') }}\n), \n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref(\'stg_tiktok_ads__ad_history_tmp\')),\n                staging_columns=get_ad_history_columns()\n            )\n        }}\n\n    from base\n), \n\nfinal as (\n\n    select  \n        ad_id,\n        cast(updated_at as {{ dbt.type_timestamp() }}) as updated_at,\n        adgroup_id as ad_group_id,\n        advertiser_id,\n        campaign_id,\n        ad_name,\n        call_to_action,\n        click_tracking_url,\n        impression_tracking_url,\n        {{ dbt.split_part(\'landing_page_url\', "\'?\'", 1) }} as base_url,\n        {{ dbt_utils.get_url_host(\'landing_page_url\') }} as url_host,\n        \'/\' || {{ dbt_utils.get_url_path(\'landing_page_url\') }} as url_path,\n        {{ dbt_utils.get_url_parameter(\'landing_page_url\', \'utm_source\') }} as utm_source,\n        {{ dbt_utils.get_url_parameter(\'landing_page_url\', \'utm_medium\') }} as utm_medium,\n        {{ dbt_utils.get_url_parameter(\'landing_page_url\', \'utm_campaign\') }} as utm_campaign,\n        {{ dbt_utils.get_url_parameter(\'landing_page_url\', \'utm_content\') }} as utm_content,\n        {{ dbt_utils.get_url_parameter(\'landing_page_url\', \'utm_term\') }} as utm_term,\n        landing_page_url,\n        row_number() over (partition by ad_id order by updated_at desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final', 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_history_tmp'], ['stg_tiktok_ads__ad_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.tiktok_ads_source.get_ad_history_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_timestamp', 'macro.dbt.split_part', 'macro.dbt_utils.get_url_host', 'macro.dbt_utils.get_url_path', 'macro.dbt_utils.get_url_parameter'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_history_tmp', 'model.tiktok_ads_source.stg_tiktok_ads__ad_history_tmp']}, 'compiled_path': None}, 'model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly': {'database': 'drops-bi', 'schema': 'marketing_full_stg_tiktok_ads', 'name': 'stg_tiktok_ads__ad_report_hourly', 'resource_type': 'model', 'package_name': 'tiktok_ads_source', 'path': 'stg_tiktok_ads__ad_report_hourly.sql', 'original_file_path': 'models\\stg_tiktok_ads__ad_report_hourly.sql', 'unique_id': 'model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly', 'fqn': ['tiktok_ads_source', 'stg_tiktok_ads__ad_report_hourly'], 'alias': 'stg_tiktok_ads__ad_report_hourly', 'checksum': {'name': 'sha256', 'checksum': '6da656ea12d8f458960301cdc683b06b0556eb112a4d553491d9b9267ff78776'}, 'config': {'enabled': True, 'alias': None, 'schema': 'stg_tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents data for each ad for each hour.', 'columns': {'ad_id': {'name': 'ad_id', 'description': 'Ad id', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'stat_time_hour': {'name': 'stat_time_hour', 'description': 'Hour of activity', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'cost_per_conversion': {'name': 'cost_per_conversion', 'description': "The average amount of money you've spent on a conversion.  (The total count is calculated based on the time each ad impression occurred.)\n", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'cpc': {'name': 'cpc', 'description': "The average amount of money you've spent on a click.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_play_actions': {'name': 'video_play_actions', 'description': 'The number of times your video starts to play. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'conversion_rate': {'name': 'conversion_rate', 'description': 'The percentage of results you received out of all the clicks of your ads.   (The total count is calculated based on the time each ad impression occurred.)\n', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_75': {'name': 'video_views_p_75', 'description': 'The number of times your video was played at 75% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_50': {'name': 'video_views_p_50', 'description': 'The number of times your video was played at 50% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of times your ads were on screen.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'comments': {'name': 'comments', 'description': 'The number of comments your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'conversion': {'name': 'conversion', 'description': 'The number of times your ad achieved an outcome, based on the secondary goal you selected.   As one campaign may have a number of different secondary goals, this statistic is not supported for campaigns.  Please go to ad groups or ads to view. (The total count is calculated based on the time each ad impression occurred.)\n', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'shares': {'name': 'shares', 'description': 'The number of shares your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The number of clicks on your ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'cost_per_1000_reached': {'name': 'cost_per_1000_reached', 'description': 'The average cost to reach 1,000 unique users. This metric is estimated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_25': {'name': 'video_views_p_25', 'description': 'The number of times your video was played at 25% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'reach': {'name': 'reach', 'description': 'The number of unique users who saw your ads at least once. This metric is estimated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'profile_visits_rate': {'name': 'profile_visits_rate', 'description': 'The rate of profile visits per impression the paid ad drove during the campaign. This metric is only for Boosted TikToks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'average_video_play': {'name': 'average_video_play', 'description': 'The average time your video was played per single video view, including any time spent replaying the video.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'average_video_play_per_user': {'name': 'average_video_play_per_user', 'description': 'The average time per user your video was played per single video view, including any time spent replaying the video.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'profile_visits': {'name': 'profile_visits', 'description': 'The number of profile visits the ad drove during the campaign. This metric is only for Boosted TikToks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'cpm': {'name': 'cpm', 'description': "The average amount of money you've spent per 1,000 impressions.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ctr': {'name': 'ctr', 'description': 'The percentage of times people saw your ad and performed a click.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_watched_2_s': {'name': 'video_watched_2_s', 'description': 'The number of times your video played for at least 2 seconds. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'follows': {'name': 'follows', 'description': 'The number of new followers that were gained within 1 day of a user seeing a paid ad. This metric is only for Boosted TikToks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_watched_6_s': {'name': 'video_watched_6_s', 'description': 'The number of times your video played for at least 6 seconds, or completely played. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': "The estimated total amount of money you've spent on your campaign, ad group or ad during its schedule.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'likes': {'name': 'likes', 'description': 'The number of likes your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tiktok_ads_source://models\\stg_tiktok_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'stg_tiktok_ads', 'enabled': True}, 'created_at': 1694433487.3791192, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_stg_tiktok_ads`.`stg_tiktok_ads__ad_report_hourly`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_tiktok_ads__ad_report_hourly_tmp') }}\n), \n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_tiktok_ads__ad_report_hourly_tmp')),\n                staging_columns=get_ad_report_hourly_columns()\n            )\n        }}\n    from base\n), \n\nfinal as (\n\n    select  \n        ad_id, \n        cast(stat_time_hour as {{ dbt.type_timestamp() }}) as stat_time_hour, \n        cpc, \n        cpm, \n        ctr, \n        impressions, \n        clicks, \n        spend, \n        reach, \n        conversion, \n        cost_per_conversion, \n        conversion_rate, \n        likes, \n        comments, \n        shares, \n        profile_visits,\n        follows, \n        video_play_actions, \n        video_watched_2_s, \n        video_watched_6_s, \n        video_views_p_25, \n        video_views_p_50,\n        video_views_p_75,  \n        average_video_play, \n        average_video_play_per_user\n\n        {{ fivetran_utils.fill_pass_through_columns('tiktok_ads__ad_hourly_passthrough_metrics') }}\n    from fields\n)\n\nselect * \nfrom final", 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_report_hourly_tmp'], ['stg_tiktok_ads__ad_report_hourly_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.tiktok_ads_source.get_ad_report_hourly_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_timestamp', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly_tmp', 'model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly_tmp']}, 'compiled_path': None}, 'model.tiktok_ads_source.stg_tiktok_ads__campaign_history': {'database': 'drops-bi', 'schema': 'marketing_full_stg_tiktok_ads', 'name': 'stg_tiktok_ads__campaign_history', 'resource_type': 'model', 'package_name': 'tiktok_ads_source', 'path': 'stg_tiktok_ads__campaign_history.sql', 'original_file_path': 'models\\stg_tiktok_ads__campaign_history.sql', 'unique_id': 'model.tiktok_ads_source.stg_tiktok_ads__campaign_history', 'fqn': ['tiktok_ads_source', 'stg_tiktok_ads__campaign_history'], 'alias': 'stg_tiktok_ads__campaign_history', 'checksum': {'name': 'sha256', 'checksum': 'cee0a9b6849129be52b0512780a02bfc3ced5461a128c9a7006cfaf5230673c9'}, 'config': {'enabled': True, 'alias': None, 'schema': 'stg_tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents data for each campaign.', 'columns': {'campaign_id': {'name': 'campaign_id', 'description': 'Campaign ID', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_at': {'name': 'updated_at', 'description': 'Time the record was updated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser_id': {'name': 'advertiser_id', 'description': 'Advertiser ID', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'Campaign name', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_type': {'name': 'campaign_type', 'description': 'Campaign Type, indicates the campaign is a regular campaign or iOS 14 campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'split_test_variable': {'name': 'split_test_variable', 'description': 'Split Test variables. Optional values; TARGETING, BIDDING_OPTIMIZATION , CREATIVE.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_most_recent_record': {'name': 'is_most_recent_record', 'description': 'Whether record is the most recent one for this particular grain.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tiktok_ads_source://models\\stg_tiktok_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'stg_tiktok_ads', 'enabled': True}, 'created_at': 1694433487.3715425, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_stg_tiktok_ads`.`stg_tiktok_ads__campaign_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_tiktok_ads__campaign_history_tmp') }}\n), \n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_tiktok_ads__campaign_history_tmp')),\n                staging_columns=get_campaign_history_columns()\n            )\n        }}\n    from base\n), \n\nfinal as (\n\n    select   \n        campaign_id,\n        cast(updated_at as {{ dbt.type_timestamp() }}) as updated_at,\n        advertiser_id,\n        campaign_name,\n        campaign_type,\n        split_test_variable,\n        row_number() over (partition by campaign_id order by updated_at desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_tiktok_ads__campaign_history_tmp'], ['stg_tiktok_ads__campaign_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.tiktok_ads_source.get_campaign_history_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_timestamp'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__campaign_history_tmp', 'model.tiktok_ads_source.stg_tiktok_ads__campaign_history_tmp']}, 'compiled_path': None}, 'model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly': {'database': 'drops-bi', 'schema': 'marketing_full_stg_tiktok_ads', 'name': 'stg_tiktok_ads__campaign_report_hourly', 'resource_type': 'model', 'package_name': 'tiktok_ads_source', 'path': 'stg_tiktok_ads__campaign_report_hourly.sql', 'original_file_path': 'models\\stg_tiktok_ads__campaign_report_hourly.sql', 'unique_id': 'model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly', 'fqn': ['tiktok_ads_source', 'stg_tiktok_ads__campaign_report_hourly'], 'alias': 'stg_tiktok_ads__campaign_report_hourly', 'checksum': {'name': 'sha256', 'checksum': '4a1fb091732e5edc0b035accbe4bf8d5485868129b8e52e6573cc9b06bca582e'}, 'config': {'enabled': True, 'alias': None, 'schema': 'stg_tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represent data for each campaign for each hour.', 'columns': {'campaign_id': {'name': 'campaign_id', 'description': 'Campaign id', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'stat_time_hour': {'name': 'stat_time_hour', 'description': 'Hour of activity', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'cost_per_conversion': {'name': 'cost_per_conversion', 'description': "The average amount of money you've spent on a conversion.  (The total count is calculated based on the time each ad impression occurred.)\n", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'cpc': {'name': 'cpc', 'description': "The average amount of money you've spent on a click.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_play_actions': {'name': 'video_play_actions', 'description': 'The number of times your video starts to play. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'conversion_rate': {'name': 'conversion_rate', 'description': 'The percentage of results you received out of all the clicks of your ads.   (The total count is calculated based on the time each ad impression occurred.)\n', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_75': {'name': 'video_views_p_75', 'description': 'The number of times your video was played at 75% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_50': {'name': 'video_views_p_50', 'description': 'The number of times your video was played at 50% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of times your ads were on screen.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'comments': {'name': 'comments', 'description': 'The number of comments your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'conversion': {'name': 'conversion', 'description': 'The number of times your ad achieved an outcome, based on the secondary goal you selected.   As one campaign may have a number of different secondary goals, this statistic is not supported for campaigns.  Please go to ad groups or ads to view. (The total count is calculated based on the time each ad impression occurred.)\n', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'shares': {'name': 'shares', 'description': 'The number of shares your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The number of clicks on your ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'cost_per_1000_reached': {'name': 'cost_per_1000_reached', 'description': 'The average cost to reach 1,000 unique users. This metric is estimated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_views_p_25': {'name': 'video_views_p_25', 'description': 'The number of times your video was played at 25% of its length. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'reach': {'name': 'reach', 'description': 'The number of unique users who saw your ads at least once. This metric is estimated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'profile_visits_rate': {'name': 'profile_visits_rate', 'description': 'The rate of profile visits per impression the paid ad drove during the campaign. This metric is only for Boosted TikToks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'average_video_play': {'name': 'average_video_play', 'description': 'The average time your video was played per single video view, including any time spent replaying the video.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'average_video_play_per_user': {'name': 'average_video_play_per_user', 'description': 'The average time per user your video was played per single video view, including any time spent replaying the video.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'profile_visits': {'name': 'profile_visits', 'description': 'The number of profile visits the ad drove during the campaign. This metric is only for Boosted TikToks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'cpm': {'name': 'cpm', 'description': "The average amount of money you've spent per 1,000 impressions.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'ctr': {'name': 'ctr', 'description': 'The percentage of times people saw your ad and performed a click.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_watched_2_s': {'name': 'video_watched_2_s', 'description': 'The number of times your video played for at least 2 seconds. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'follows': {'name': 'follows', 'description': 'The number of new followers that were gained within 1 day of a user seeing a paid ad. This metric is only for Boosted TikToks.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'video_watched_6_s': {'name': 'video_watched_6_s', 'description': 'The number of times your video played for at least 6 seconds, or completely played. Replays will not be counted.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': "The estimated total amount of money you've spent on your campaign, ad group or ad during its schedule.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'likes': {'name': 'likes', 'description': 'The number of likes your video creative received within 1 day of a user seeing a paid ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tiktok_ads_source://models\\stg_tiktok_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'stg_tiktok_ads', 'enabled': True}, 'created_at': 1694433487.3931904, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_stg_tiktok_ads`.`stg_tiktok_ads__campaign_report_hourly`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nwith base as (\n\n    select *\n    from {{ ref('stg_tiktok_ads__campaign_report_hourly_tmp') }}\n), \n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_tiktok_ads__campaign_report_hourly_tmp')),\n                staging_columns=get_campaign_report_hourly_columns()\n            )\n        }}\n    from base\n), \n\nfinal as (\n\n    select  \n        campaign_id,\n        cast(stat_time_hour as {{ dbt.type_timestamp() }}) as stat_time_hour,\n        cpc, \n        cpm,\n        ctr,\n        impressions,\n        clicks,\n        spend,\n        reach,\n        conversion,\n        cost_per_conversion,\n        conversion_rate,\n        likes,\n        comments,\n        shares,\n        profile_visits,\n        follows,\n        video_play_actions,\n        video_watched_2_s,\n        video_watched_6_s,\n        video_views_p_25,\n        video_views_p_50,\n        video_views_p_75,\n        average_video_play,\n        average_video_play_per_user\n\n        {{ fivetran_utils.fill_pass_through_columns('tiktok_ads__campaign_hourly_passthrough_metrics') }}\n        \n    from fields\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_tiktok_ads__campaign_report_hourly_tmp'], ['stg_tiktok_ads__campaign_report_hourly_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.tiktok_ads_source.get_campaign_report_hourly_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.type_timestamp', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly_tmp', 'model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly_tmp']}, 'compiled_path': None}, 'model.tiktok_ads_source.stg_tiktok_ads__advertiser_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_stg_tiktok_ads', 'name': 'stg_tiktok_ads__advertiser_tmp', 'resource_type': 'model', 'package_name': 'tiktok_ads_source', 'path': 'tmp\\stg_tiktok_ads__advertiser_tmp.sql', 'original_file_path': 'models\\tmp\\stg_tiktok_ads__advertiser_tmp.sql', 'unique_id': 'model.tiktok_ads_source.stg_tiktok_ads__advertiser_tmp', 'fqn': ['tiktok_ads_source', 'tmp', 'stg_tiktok_ads__advertiser_tmp'], 'alias': 'stg_tiktok_ads__advertiser_tmp', 'checksum': {'name': 'sha256', 'checksum': '43da3da14719af2f23e901aa756fc51b3bd807b1172a7776a811541ee26e8688'}, 'config': {'enabled': True, 'alias': None, 'schema': 'stg_tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view', 'schema': 'stg_tiktok_ads', 'enabled': True}, 'created_at': 1694433484.4322507, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_stg_tiktok_ads`.`stg_tiktok_ads__advertiser_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nselect *\nfrom {{ var('advertiser') }}", 'language': 'sql', 'refs': [], 'sources': [['tiktok_ads', 'advertiser']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.tiktok_ads_source.tiktok_ads.advertiser']}, 'compiled_path': None}, 'model.tiktok_ads_source.stg_tiktok_ads__ad_group_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_stg_tiktok_ads', 'name': 'stg_tiktok_ads__ad_group_history_tmp', 'resource_type': 'model', 'package_name': 'tiktok_ads_source', 'path': 'tmp\\stg_tiktok_ads__ad_group_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_tiktok_ads__ad_group_history_tmp.sql', 'unique_id': 'model.tiktok_ads_source.stg_tiktok_ads__ad_group_history_tmp', 'fqn': ['tiktok_ads_source', 'tmp', 'stg_tiktok_ads__ad_group_history_tmp'], 'alias': 'stg_tiktok_ads__ad_group_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '656a88662bd5fe65b7e782c1d24ecfc5459e7541ec41b4418f4472f3633aa347'}, 'config': {'enabled': True, 'alias': None, 'schema': 'stg_tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view', 'schema': 'stg_tiktok_ads', 'enabled': True}, 'created_at': 1694433484.4399116, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_stg_tiktok_ads`.`stg_tiktok_ads__ad_group_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nselect *\nfrom {{ var('ad_group_history') }}", 'language': 'sql', 'refs': [], 'sources': [['tiktok_ads', 'adgroup_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.tiktok_ads_source.tiktok_ads.adgroup_history']}, 'compiled_path': None}, 'model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_stg_tiktok_ads', 'name': 'stg_tiktok_ads__ad_group_report_hourly_tmp', 'resource_type': 'model', 'package_name': 'tiktok_ads_source', 'path': 'tmp\\stg_tiktok_ads__ad_group_report_hourly_tmp.sql', 'original_file_path': 'models\\tmp\\stg_tiktok_ads__ad_group_report_hourly_tmp.sql', 'unique_id': 'model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly_tmp', 'fqn': ['tiktok_ads_source', 'tmp', 'stg_tiktok_ads__ad_group_report_hourly_tmp'], 'alias': 'stg_tiktok_ads__ad_group_report_hourly_tmp', 'checksum': {'name': 'sha256', 'checksum': '5e607a6ea02a4f66c2d50b092e2d37d6b07d0de03b0490dddde773197364937e'}, 'config': {'enabled': True, 'alias': None, 'schema': 'stg_tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view', 'schema': 'stg_tiktok_ads', 'enabled': True}, 'created_at': 1694433484.446912, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_stg_tiktok_ads`.`stg_tiktok_ads__ad_group_report_hourly_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nselect *\nfrom {{ var('ad_group_hourly') }}", 'language': 'sql', 'refs': [], 'sources': [['tiktok_ads', 'adgroup_report_hourly']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.tiktok_ads_source.tiktok_ads.adgroup_report_hourly']}, 'compiled_path': None}, 'model.tiktok_ads_source.stg_tiktok_ads__ad_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_stg_tiktok_ads', 'name': 'stg_tiktok_ads__ad_history_tmp', 'resource_type': 'model', 'package_name': 'tiktok_ads_source', 'path': 'tmp\\stg_tiktok_ads__ad_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_tiktok_ads__ad_history_tmp.sql', 'unique_id': 'model.tiktok_ads_source.stg_tiktok_ads__ad_history_tmp', 'fqn': ['tiktok_ads_source', 'tmp', 'stg_tiktok_ads__ad_history_tmp'], 'alias': 'stg_tiktok_ads__ad_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '70d0e01a26a5250c141b3a67fd3b1ffcfceea35645e82096257852badea2b9d2'}, 'config': {'enabled': True, 'alias': None, 'schema': 'stg_tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view', 'schema': 'stg_tiktok_ads', 'enabled': True}, 'created_at': 1694433484.4534218, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_stg_tiktok_ads`.`stg_tiktok_ads__ad_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nselect *\nfrom {{ var('ad_history') }}", 'language': 'sql', 'refs': [], 'sources': [['tiktok_ads', 'ad_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.tiktok_ads_source.tiktok_ads.ad_history']}, 'compiled_path': None}, 'model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_stg_tiktok_ads', 'name': 'stg_tiktok_ads__ad_report_hourly_tmp', 'resource_type': 'model', 'package_name': 'tiktok_ads_source', 'path': 'tmp\\stg_tiktok_ads__ad_report_hourly_tmp.sql', 'original_file_path': 'models\\tmp\\stg_tiktok_ads__ad_report_hourly_tmp.sql', 'unique_id': 'model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly_tmp', 'fqn': ['tiktok_ads_source', 'tmp', 'stg_tiktok_ads__ad_report_hourly_tmp'], 'alias': 'stg_tiktok_ads__ad_report_hourly_tmp', 'checksum': {'name': 'sha256', 'checksum': '30949b79355e85af66a3df6de9ef124c666c0bf8ecc911ad673eb56cf3124b7e'}, 'config': {'enabled': True, 'alias': None, 'schema': 'stg_tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view', 'schema': 'stg_tiktok_ads', 'enabled': True}, 'created_at': 1694433484.461214, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_stg_tiktok_ads`.`stg_tiktok_ads__ad_report_hourly_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nselect *\nfrom {{ var('ad_report_hourly') }}", 'language': 'sql', 'refs': [], 'sources': [['tiktok_ads', 'ad_report_hourly']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.tiktok_ads_source.tiktok_ads.ad_report_hourly']}, 'compiled_path': None}, 'model.tiktok_ads_source.stg_tiktok_ads__campaign_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_stg_tiktok_ads', 'name': 'stg_tiktok_ads__campaign_history_tmp', 'resource_type': 'model', 'package_name': 'tiktok_ads_source', 'path': 'tmp\\stg_tiktok_ads__campaign_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_tiktok_ads__campaign_history_tmp.sql', 'unique_id': 'model.tiktok_ads_source.stg_tiktok_ads__campaign_history_tmp', 'fqn': ['tiktok_ads_source', 'tmp', 'stg_tiktok_ads__campaign_history_tmp'], 'alias': 'stg_tiktok_ads__campaign_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '1c8e0405cc5ddf7b7748f613590108b0b3f786b44a35ac4382079c19072febe5'}, 'config': {'enabled': True, 'alias': None, 'schema': 'stg_tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view', 'schema': 'stg_tiktok_ads', 'enabled': True}, 'created_at': 1694433484.4681664, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_stg_tiktok_ads`.`stg_tiktok_ads__campaign_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nselect *\nfrom {{ var('campaign_history') }}", 'language': 'sql', 'refs': [], 'sources': [['tiktok_ads', 'campaign_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.tiktok_ads_source.tiktok_ads.campaign_history']}, 'compiled_path': None}, 'model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_stg_tiktok_ads', 'name': 'stg_tiktok_ads__campaign_report_hourly_tmp', 'resource_type': 'model', 'package_name': 'tiktok_ads_source', 'path': 'tmp\\stg_tiktok_ads__campaign_report_hourly_tmp.sql', 'original_file_path': 'models\\tmp\\stg_tiktok_ads__campaign_report_hourly_tmp.sql', 'unique_id': 'model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly_tmp', 'fqn': ['tiktok_ads_source', 'tmp', 'stg_tiktok_ads__campaign_report_hourly_tmp'], 'alias': 'stg_tiktok_ads__campaign_report_hourly_tmp', 'checksum': {'name': 'sha256', 'checksum': '3a734b2b71b67ce84e5c0fadfff18429e2aa52abcae9f16aa3832a7c5e94c25e'}, 'config': {'enabled': True, 'alias': None, 'schema': 'stg_tiktok_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view', 'schema': 'stg_tiktok_ads', 'enabled': True}, 'created_at': 1694433484.4747887, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_stg_tiktok_ads`.`stg_tiktok_ads__campaign_report_hourly_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__tiktok_ads_enabled', true)) }}\n\nselect *\nfrom {{ var('campaign_report_hourly') }}", 'language': 'sql', 'refs': [], 'sources': [['tiktok_ads', 'campaign_report_hourly']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.tiktok_ads_source.tiktok_ads.campaign_report_hourly']}, 'compiled_path': None}, 'model.twitter_ads.twitter_ads__account_report': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads', 'name': 'twitter_ads__account_report', 'resource_type': 'model', 'package_name': 'twitter_ads', 'path': 'twitter_ads__account_report.sql', 'original_file_path': 'models\\twitter_ads__account_report.sql', 'unique_id': 'model.twitter_ads.twitter_ads__account_report', 'fqn': ['twitter_ads', 'twitter_ads__account_report'], 'alias': 'twitter_ads__account_report', 'checksum': {'name': 'sha256', 'checksum': '16ac0265f5e3aa59cf06260bb446a6ef88d625c029d2e7298d44b9008c350fa9'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents the daily performance of ads at the account level, within a placement in Twitter.\n', 'columns': {'spend_micro': {'name': 'spend_micro', 'description': 'The spend (in micros) for the account on that day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend for the account on that day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The clicks for th account on that day. Includes clicks on the URL (shortened or regular links), profile pic, screen name, username, detail, hashtags, and likes.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'The date of the performance.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The impressions for the account on that day.  This is the number of users who see a Promoted Ad either in their home timeline or search results.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_clicks': {'name': 'url_clicks', 'description': 'The url clicks for the account on that day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'placement': {'name': 'placement', 'description': "Where on Twitter the ad is being displayed. Possible values include 'ALL_ON_TWITTER', 'PUBLISHER_NETWORK', 'TWITTER_PROFILE', 'TWITTER_SEARCH', 'TWITTER_TIMELINE', and 'TAP_*', which are more granular options for `PUBLISHER_NETWORK`.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'approval_status': {'name': 'approval_status', 'description': 'The approval status of the account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'business_id': {'name': 'business_id', 'description': 'The ID of the related business.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'business_name': {'name': 'business_name', 'description': 'The name of the related business.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'created_timestamp': {'name': 'created_timestamp', 'description': 'Timestamp of when a record was created.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_deleted': {'name': 'is_deleted', 'description': 'Whether the record has been deleted or not.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The ID of the account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'Name of the account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'industry_type': {'name': 'industry_type', 'description': 'The industry of the accounts.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'timezone': {'name': 'timezone', 'description': 'The timezone the account is set to.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'timezone_switched_timestamp': {'name': 'timezone_switched_timestamp', 'description': "The timestamp the account's timezone was last changed.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_timestamp': {'name': 'updated_timestamp', 'description': 'Timestamp of when the record was last updated in Google Ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'twitter_ads://models\\twitter.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'twitter_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.539229, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads`.`twitter_ads__account_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nwith accounts as (\n\n    select *\n    from {{ var('account_history') }}\n    where is_latest_version\n),\n\npromoted_tweet_report as (\n    \n    select *\n    from {{ var('promoted_tweet_report') }}\n),\n\nrollup_report as (\n\n    select \n        date_day,\n        account_id,\n        placement,\n        sum(clicks) as clicks, \n        sum(impressions) as impressions,\n        sum(spend) as spend,\n        sum(spend_micro) as spend_micro,\n        sum(url_clicks) as url_clicks\n\n        {{ fivetran_utils.persist_pass_through_columns('twitter_ads__promoted_tweet_report_passthrough_metrics', transform='sum') }}\n\n    from promoted_tweet_report\n    group by 1,2,3\n\n),\n\nfinal as (\n\n    select \n        report.date_day,\n        report.placement, \n        report.account_id,\n        accounts.name as account_name,\n        accounts.is_deleted,\n        accounts.timezone,\n        accounts.industry_type,\n        accounts.approval_status,\n        accounts.business_name,\n        accounts.business_id,\n        accounts.created_timestamp,\n        accounts.updated_timestamp,\n        accounts.timezone_switched_timestamp,\n        sum(report.clicks) as clicks, \n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend,\n        sum(report.spend_micro) as spend_micro,\n        sum(report.url_clicks) as url_clicks\n\n        {{ fivetran_utils.persist_pass_through_columns('twitter_ads__promoted_tweet_report_passthrough_metrics', transform='sum') }}\n\n    from rollup_report as report\n    left join accounts \n        on report.account_id = accounts.account_id\n\n    {{ dbt_utils.group_by(n=13) }}\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_twitter_ads__account_history'], ['stg_twitter_ads__promoted_tweet_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__account_history', 'model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report']}, 'compiled_path': None}, 'model.twitter_ads.twitter_ads__campaign_report': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads', 'name': 'twitter_ads__campaign_report', 'resource_type': 'model', 'package_name': 'twitter_ads', 'path': 'twitter_ads__campaign_report.sql', 'original_file_path': 'models\\twitter_ads__campaign_report.sql', 'unique_id': 'model.twitter_ads.twitter_ads__campaign_report', 'fqn': ['twitter_ads', 'twitter_ads__campaign_report'], 'alias': 'twitter_ads__campaign_report', 'checksum': {'name': 'sha256', 'checksum': 'ac412006847147c6ef722fbf416456e8a94a3f0fee9eeed3b26a663e9820a3ab'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents the daily performance of ads at the account and campaign level, within a placement in Twitter.\n', 'columns': {'campaign_id': {'name': 'campaign_id', 'description': 'The ID of the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The number of clicks on that date. Includes clicks on the URL (shortened or regular links), profile pic, screen name, username, detail, hashtags, and likes.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'The date of the performance.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions on that date.  This is the number of users who see a Promoted Ad either in their home timeline or search results.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The amount of spend on that date.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend_micro': {'name': 'spend_micro', 'description': 'The amount of spend, in micros, on that date.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_clicks': {'name': 'url_clicks', 'description': 'The number of URL clicks on that date.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'placement': {'name': 'placement', 'description': "Where on Twitter the ad is being displayed. Possible values include 'ALL_ON_TWITTER', 'PUBLISHER_NETWORK', 'TWITTER_PROFILE', 'TWITTER_SEARCH', 'TWITTER_TIMELINE', and 'TAP_*', which are more granular options for `PUBLISHER_NETWORK`.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The ID of the related account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The name of the related account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'created_timestamp': {'name': 'created_timestamp', 'description': 'Timestamp of when a record was created.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': 'The currency all metrics for the account are set to.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_deleted': {'name': 'is_deleted', 'description': 'Whether the record has been deleted or not.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'end_timestamp': {'name': 'end_timestamp', 'description': 'The time the campaign will end', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_status': {'name': 'campaign_status', 'description': 'The status of the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'frequency_cap': {'name': 'frequency_cap', 'description': 'The maximum number of times an ad could be delivered to a user.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_servable': {'name': 'is_servable', 'description': 'Whether the campaign is in a state to be actively served to users.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_standard_delivery': {'name': 'is_standard_delivery', 'description': 'Whether standard delivery is enabled (vs accelerated delivery).', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'start_timestamp': {'name': 'start_timestamp', 'description': 'The time the campaign will start.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_timestamp': {'name': 'updated_timestamp', 'description': 'Timestamp of when the record was last updated in Google Ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'funding_instrument_id': {'name': 'funding_instrument_id', 'description': 'Reference to the funding instrument.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_budget_amount': {'name': 'daily_budget_amount', 'description': 'The daily budget amount to be allocated to the campaign. The currency associated with the specified funding instrument will be used.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'total_budget_amount': {'name': 'total_budget_amount', 'description': 'The total budget amount to be allocated to the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'twitter_ads://models\\twitter.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'twitter_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.52531, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads`.`twitter_ads__campaign_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nwith report as (\n\n    select *\n    from {{ var('campaign_report') }}\n),\n\ncampaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_latest_version\n),\n\naccounts as (\n\n    select *\n    from {{ var('account_history') }}\n    where is_latest_version\n),\n\nfinal as (\n\n    select \n        report.date_day,\n        report.placement, \n        report.account_id,\n        accounts.name as account_name,\n        report.campaign_id,\n        campaigns.campaign_name,\n        campaigns.is_deleted,\n        campaigns.entity_status as campaign_status,\n        campaigns.currency,\n        campaigns.is_servable,\n        campaigns.is_standard_delivery,\n        campaigns.frequency_cap,\n        campaigns.start_timestamp,\n        campaigns.end_timestamp,\n        campaigns.created_timestamp,\n        campaigns.updated_timestamp,\n        campaigns.funding_instrument_id,\n        campaigns.daily_budget_amount,\n        campaigns.total_budget_amount,\n        sum(report.clicks) as clicks, \n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend,\n        sum(report.spend_micro) as spend_micro,\n        sum(report.url_clicks) as url_clicks\n\n        {{ fivetran_utils.persist_pass_through_columns('twitter_ads__campaign_report_passthrough_metrics', transform='sum') }}\n\n    from report \n    left join campaigns \n        on report.campaign_id = campaigns.campaign_id\n    left join accounts\n        on report.account_id = accounts.account_id\n\n    {{ dbt_utils.group_by(n=19) }}\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_twitter_ads__campaign_report'], ['stg_twitter_ads__campaign_history'], ['stg_twitter_ads__account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__campaign_report', 'model.twitter_ads_source.stg_twitter_ads__campaign_history', 'model.twitter_ads_source.stg_twitter_ads__account_history']}, 'compiled_path': None}, 'model.twitter_ads.twitter_ads__keyword_report': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads', 'name': 'twitter_ads__keyword_report', 'resource_type': 'model', 'package_name': 'twitter_ads', 'path': 'twitter_ads__keyword_report.sql', 'original_file_path': 'models\\twitter_ads__keyword_report.sql', 'unique_id': 'model.twitter_ads.twitter_ads__keyword_report', 'fqn': ['twitter_ads', 'twitter_ads__keyword_report'], 'alias': 'twitter_ads__keyword_report', 'checksum': {'name': 'sha256', 'checksum': '0ddfaeac37414648fe3241b0c879c7162ed91f6345ef8687c23c903a19149705'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents the daily performance of ads at the account, campaign, line item (ad group), and keyword level, within a placement in Twitter.\n', 'columns': {'account_id': {'name': 'account_id', 'description': 'The ID of the related account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend_micro': {'name': 'spend_micro', 'description': 'The spend for the line item + keyword on that day, in micros and in whichever currency was selected during account creation.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend for the line item + keyword on that day in whichever currency was selected during account creation.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The clicks for the line item + keyword on that day. Includes clicks on the URL (shortened or regular links), profile pic, screen name, username, detail, hashtags, and likes.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'The date of the performance.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The impressions for the line item + keyword on that day.  This is the number of users who see a Promoted Ad either in their home timeline or search results.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'line_item_id': {'name': 'line_item_id', 'description': 'The ID of the related line item (ad group).', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_clicks': {'name': 'url_clicks', 'description': 'The url clicks for the line item + keyword on that day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword': {'name': 'keyword', 'description': 'The keyword whose performance is being tracked.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword_id': {'name': 'keyword_id', 'description': "Unique key of the table built from the combination of 'account_id', 'line_item_id', 'segment', and 'placement' fields.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'placement': {'name': 'placement', 'description': "Where on Twitter the ad is being displayed. Possible values include 'ALL_ON_TWITTER', 'PUBLISHER_NETWORK', 'TWITTER_PROFILE', 'TWITTER_SEARCH', 'TWITTER_TIMELINE', and 'TAP_*', which are more granular options for `PUBLISHER_NETWORK`.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'Name of the associated account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID of the related campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the related campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'line_item_name': {'name': 'line_item_name', 'description': 'The ID of the related line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': 'The currency all metrics for the account are set to.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'twitter_ads://models\\twitter.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'twitter_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.5435753, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads`.`twitter_ads__keyword_report`', 'raw_code': "{{ config(enabled=fivetran_utils.enabled_vars(['ad_reporting__twitter_ads_enabled','twitter_ads__using_keywords'])) }}\n\nwith report as (\n\n    select *\n    from {{ var('line_item_keywords_report') }}\n),\n\nline_items as (\n\n    select *\n    from {{ var('line_item_history') }}\n    where is_latest_version\n),\n\ncampaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_latest_version\n),\n\naccounts as (\n\n    select *\n    from {{ var('account_history') }}\n    where is_latest_version\n),\n\nfinal as (\n\n    select \n        report.date_day,\n        report.placement, \n        report.account_id,\n        accounts.name as account_name,\n        line_items.campaign_id,\n        campaigns.campaign_name,\n        report.line_item_id,\n        line_items.name as line_item_name,\n        report.keyword_id,\n        report.keyword,\n        line_items.currency,\n        sum(report.clicks) as clicks, \n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend,\n        sum(report.spend_micro) as spend_micro,\n        sum(report.url_clicks) as url_clicks\n\n        {{ fivetran_utils.persist_pass_through_columns('twitter_ads__line_item_keywords_report_passthrough_metrics', transform='sum')}}\n\n    from report \n    left join line_items\n        on report.line_item_id = line_items.line_item_id\n    left join campaigns \n        on line_items.campaign_id = campaigns.campaign_id\n    left join accounts\n        on report.account_id = accounts.account_id\n\n    {{ dbt_utils.group_by(n=11) }}\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_twitter_ads__line_item_keywords_report'], ['stg_twitter_ads__line_item_history'], ['stg_twitter_ads__campaign_history'], ['stg_twitter_ads__account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.enabled_vars', 'macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report', 'model.twitter_ads_source.stg_twitter_ads__line_item_history', 'model.twitter_ads_source.stg_twitter_ads__campaign_history', 'model.twitter_ads_source.stg_twitter_ads__account_history']}, 'compiled_path': None}, 'model.twitter_ads.twitter_ads__line_item_report': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads', 'name': 'twitter_ads__line_item_report', 'resource_type': 'model', 'package_name': 'twitter_ads', 'path': 'twitter_ads__line_item_report.sql', 'original_file_path': 'models\\twitter_ads__line_item_report.sql', 'unique_id': 'model.twitter_ads.twitter_ads__line_item_report', 'fqn': ['twitter_ads', 'twitter_ads__line_item_report'], 'alias': 'twitter_ads__line_item_report', 'checksum': {'name': 'sha256', 'checksum': 'db0229d29cf1dbd5701d716465c399fe7be337436c2887f82fc25918d98ca90b'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents the daily performance of ads at the account, campaign, and line item (ad group) level, within a placement in Twitter.\n', 'columns': {'campaign_id': {'name': 'campaign_id', 'description': "The ID of the line item's campaign.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': "The name of the line item's campaign.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The number of clicks on that date. Includes clicks on the URL (shortened or regular links), profile pic, screen name, username, detail, hashtags, and likes.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'The date of the performance.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The number of impressions on that date.  This is the number of users who see a Promoted Ad either in their home timeline or search results.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'line_item_id': {'name': 'line_item_id', 'description': 'The ID of the line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'line_item_name': {'name': 'line_item_name', 'description': 'The name of the line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The amount of spend on that date.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend_micro': {'name': 'spend_micro', 'description': 'The amount of spend, in micros, on that date.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_clicks': {'name': 'url_clicks', 'description': 'The number of URL clicks on that date.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'placement': {'name': 'placement', 'description': "Where on Twitter the ad is being displayed. Possible values include 'ALL_ON_TWITTER', 'PUBLISHER_NETWORK', 'TWITTER_PROFILE', 'TWITTER_SEARCH', 'TWITTER_TIMELINE', and 'TAP_*', which are more granular options for `PUBLISHER_NETWORK`.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The ID of the related account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The name of the related account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser_domain': {'name': 'advertiser_domain', 'description': 'The website domain for this advertiser, without the protocol specification.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser_user_id': {'name': 'advertiser_user_id', 'description': 'The Twitter user identifier for the handle promoting the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'bid_type': {'name': 'bid_type', 'description': 'The bidding mechanism.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'bid_unit': {'name': 'bid_unit', 'description': 'The bid unit for this line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'charge_by': {'name': 'charge_by', 'description': 'The unit to charge this line item by.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'created_timestamp': {'name': 'created_timestamp', 'description': 'Timestamp of when a record was created.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'creative_source': {'name': 'creative_source', 'description': 'The source of the creatives for the line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': 'The currency in which metrics will be reported.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_deleted': {'name': 'is_deleted', 'description': 'Whether the record has been deleted or not.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'end_timestamp': {'name': 'end_timestamp', 'description': 'The timestamp at which the line item will stop being served.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'line_item_status': {'name': 'line_item_status', 'description': 'The status of the line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_status': {'name': 'campaign_status', 'description': "The status of the line item's related campaign.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'objective': {'name': 'objective', 'description': 'The campaign objective for this line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'optimization': {'name': 'optimization', 'description': 'The optimization setting to use with this line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'primary_web_event_tag': {'name': 'primary_web_event_tag', 'description': 'The identifier of the primary web event tag. Allows more accurate tracking of engagements for the campaign pertaining to this line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'product_type': {'name': 'product_type', 'description': 'The type of promoted product that this line item will contain.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'start_timestamp': {'name': 'start_timestamp', 'description': 'The timestamp at which the line item will start being served.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_timestamp': {'name': 'updated_timestamp', 'description': 'Timestamp of when the record was last updated in Google Ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'bid_amount': {'name': 'bid_amount', 'description': 'The bid amount to be associated with this line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'total_budget_amount': {'name': 'total_budget_amount', 'description': 'The total budget amount to be allocated to the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'target_cpa': {'name': 'target_cpa', 'description': 'The target cost per acquisition for the line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'twitter_ads://models\\twitter.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'twitter_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.533285, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads`.`twitter_ads__line_item_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nwith report as (\n\n    select *\n    from {{ var('line_item_report') }}\n),\n\nline_items as (\n\n    select *\n    from {{ var('line_item_history') }}\n    where is_latest_version\n),\n\ncampaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_latest_version\n),\n\naccounts as (\n\n    select *\n    from {{ var('account_history') }}\n    where is_latest_version\n),\n\nfinal as (\n\n    select \n        report.date_day,\n        report.placement, \n        report.account_id,\n        accounts.name as account_name,\n        line_items.campaign_id,\n        campaigns.campaign_name,\n        report.line_item_id,\n        line_items.name as line_item_name,\n        line_items.is_deleted,\n        line_items.entity_status as line_item_status,\n        campaigns.entity_status as campaign_status,\n        line_items.currency,\n        line_items.advertiser_domain,\n        line_items.advertiser_user_id,\n        line_items.bid_type,\n        line_items.bid_unit,\n        line_items.charge_by,\n        line_items.objective,\n        line_items.optimization,\n        line_items.product_type,\n        line_items.primary_web_event_tag,\n        line_items.creative_source,\n        line_items.start_timestamp,\n        line_items.end_timestamp,\n        line_items.created_timestamp,\n        line_items.updated_timestamp,\n        line_items.target_cpa,\n        line_items.total_budget_amount,\n        line_items.bid_amount,\n        sum(report.clicks) as clicks, \n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend,\n        sum(report.spend_micro) as spend_micro,\n        sum(report.url_clicks) as url_clicks\n\n        {{ fivetran_utils.persist_pass_through_columns('twitter_ads__line_item_report_passthrough_metrics', transform='sum')}}\n\n    from report \n    left join line_items\n        on report.line_item_id = line_items.line_item_id\n    left join campaigns \n        on line_items.campaign_id = campaigns.campaign_id\n    left join accounts\n        on report.account_id = accounts.account_id\n\n    {{ dbt_utils.group_by(n=29) }}\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_twitter_ads__line_item_report'], ['stg_twitter_ads__line_item_history'], ['stg_twitter_ads__campaign_history'], ['stg_twitter_ads__account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__line_item_report', 'model.twitter_ads_source.stg_twitter_ads__line_item_history', 'model.twitter_ads_source.stg_twitter_ads__campaign_history', 'model.twitter_ads_source.stg_twitter_ads__account_history']}, 'compiled_path': None}, 'model.twitter_ads.twitter_ads__promoted_tweet_report': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads', 'name': 'twitter_ads__promoted_tweet_report', 'resource_type': 'model', 'package_name': 'twitter_ads', 'path': 'twitter_ads__promoted_tweet_report.sql', 'original_file_path': 'models\\twitter_ads__promoted_tweet_report.sql', 'unique_id': 'model.twitter_ads.twitter_ads__promoted_tweet_report', 'fqn': ['twitter_ads', 'twitter_ads__promoted_tweet_report'], 'alias': 'twitter_ads__promoted_tweet_report', 'checksum': {'name': 'sha256', 'checksum': 'bfe92b3b7b4256289f1f52608543c3e81151c3e345dc27623c7e7658386058d6'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents the daily performance of ads at the account, campaign, line item (ad group), and promoted tweet level, within a placement in Twitter.\n', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date of the performance.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'placement': {'name': 'placement', 'description': "Where on Twitter the ad is being displayed. Possible values include 'ALL_ON_TWITTER', 'PUBLISHER_NETWORK', 'TWITTER_PROFILE', 'TWITTER_SEARCH', 'TWITTER_TIMELINE', and 'TAP_*', which are more granular options for `PUBLISHER_NETWORK`.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The ID of the related account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The name of the related account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID of the related campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the related campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'line_item_id': {'name': 'line_item_id', 'description': 'The ID of the related line item (ad group).', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'line_item_name': {'name': 'line_item_name', 'description': 'The ID of the related line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'promoted_tweet_id': {'name': 'promoted_tweet_id', 'description': 'The ID of the promoted tweet that the URL appeared in.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'tweet_id': {'name': 'tweet_id', 'description': 'The ID of the tweet that the URL appeared in.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'tweet_name': {'name': 'tweet_name', 'description': 'The name, if provided, of the tweet that the URL appeared in.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'full_text': {'name': 'full_text', 'description': 'The full text of the tweet that the URL appeared in.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': 'The currency all metrics for the account are set to.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The clicks for the promoted tweet + URL on that day. Includes clicks on the URL (shortened or regular links), profile pic, screen name, username, detail, hashtags, and likes.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The impressions for the promoted tweet + URL on that day.  This is the number of users who see a Promoted Ad either in their home timeline or search results.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend for the promoted tweet + URL on that day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend_micro': {'name': 'spend_micro', 'description': 'The spend, in micros, for the tweet + URL on that day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_clicks': {'name': 'url_clicks', 'description': 'The URL clicks for the promoted tweet + URL on that day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'approval_status': {'name': 'approval_status', 'description': 'The approval status of the promoted tweet.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'created_timestamp': {'name': 'created_timestamp', 'description': 'Timestamp of when a record was created.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_deleted': {'name': 'is_deleted', 'description': 'Whether the record has been deleted or not.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'promoted_tweet_status': {'name': 'promoted_tweet_status', 'description': 'The status of the promoted tweet.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_status': {'name': 'campaign_status', 'description': "The status of the tweet's campaign.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'line_item_status': {'name': 'line_item_status', 'description': "The status of the tweet's line item.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_timestamp': {'name': 'updated_timestamp', 'description': 'Timestamp of when the record was last updated in Google Ads.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'language': {'name': 'language', 'description': 'Two-letter language code of the tweet.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'twitter_ads://models\\twitter.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'twitter_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.5504713, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads`.`twitter_ads__promoted_tweet_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nwith report as (\n\n    select *\n    from {{ var('promoted_tweet_report') }}\n),\n\ncampaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_latest_version\n),\n\naccounts as (\n\n    select *\n    from {{ var('account_history') }}\n    where is_latest_version\n),\n\nline_items as (\n\n    select *\n    from {{ var('line_item_history') }}\n    where is_latest_version\n),\n\npromoted_tweets as (\n\n    select *\n    from {{ var('promoted_tweet_history') }}\n    where is_latest_version\n),\n\ntweets as (\n\n    select *\n    from {{ var('tweet') }}\n),\n\nfinal as (\n\n    select \n        report.date_day,\n        report.placement, \n        accounts.account_id,\n        accounts.name as account_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        line_items.line_item_id,\n        line_items.name as line_item_name,\n        promoted_tweets.promoted_tweet_id,\n        promoted_tweets.tweet_id,\n        tweets.name as tweet_name,\n        tweets.full_text,\n        promoted_tweets.is_deleted,\n        promoted_tweets.entity_status as promoted_tweet_status,\n        campaigns.entity_status as campaign_status,\n        line_items.entity_status as line_item_status,\n        tweets.language,\n        campaigns.currency,\n        promoted_tweets.approval_status,\n        promoted_tweets.created_timestamp,\n        promoted_tweets.updated_timestamp,\n        sum(report.clicks) as clicks, \n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend,\n        sum(report.spend_micro) as spend_micro,\n        sum(report.url_clicks) as url_clicks\n\n        {{ fivetran_utils.persist_pass_through_columns('twitter_ads__promoted_tweet_report_passthrough_metrics', transform='sum') }}\n\n    from report \n    left join promoted_tweets \n        on report.promoted_tweet_id = promoted_tweets.promoted_tweet_id\n    left join tweets\n        on promoted_tweets.tweet_id = tweets.tweet_id\n    left join line_items\n        on promoted_tweets.line_item_id = line_items.line_item_id\n    left join campaigns \n        on line_items.campaign_id = campaigns.campaign_id\n    left join accounts\n        on report.account_id = accounts.account_id\n\n    {{ dbt_utils.group_by(n=21) }}\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_twitter_ads__promoted_tweet_report'], ['stg_twitter_ads__campaign_history'], ['stg_twitter_ads__account_history'], ['stg_twitter_ads__line_item_history'], ['stg_twitter_ads__promoted_tweet_history'], ['stg_twitter_ads__tweet']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report', 'model.twitter_ads_source.stg_twitter_ads__campaign_history', 'model.twitter_ads_source.stg_twitter_ads__account_history', 'model.twitter_ads_source.stg_twitter_ads__line_item_history', 'model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history', 'model.twitter_ads_source.stg_twitter_ads__tweet']}, 'compiled_path': None}, 'model.twitter_ads.twitter_ads__url_report': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads', 'name': 'twitter_ads__url_report', 'resource_type': 'model', 'package_name': 'twitter_ads', 'path': 'twitter_ads__url_report.sql', 'original_file_path': 'models\\twitter_ads__url_report.sql', 'unique_id': 'model.twitter_ads.twitter_ads__url_report', 'fqn': ['twitter_ads', 'twitter_ads__url_report'], 'alias': 'twitter_ads__url_report', 'checksum': {'name': 'sha256', 'checksum': '06fc0ec0eca546e85c1f848988ec0e3b8c4c30504aa9d920c690fc58ed4ae5cb'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record in this table represents the daily performance of ads at the account, campaign, line item (ad group), promoted tweet, and url level, within a placement in Twitter.\n', 'columns': {'date_day': {'name': 'date_day', 'description': 'The date of the performance.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'placement': {'name': 'placement', 'description': "Where on Twitter the ad is being displayed. Possible values include 'ALL_ON_TWITTER', 'PUBLISHER_NETWORK', 'TWITTER_PROFILE', 'TWITTER_SEARCH', 'TWITTER_TIMELINE', and 'TAP_*', which are more granular options for `PUBLISHER_NETWORK`.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The ID of the related account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_name': {'name': 'account_name', 'description': 'The name of the related account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID of the related campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the related campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'line_item_id': {'name': 'line_item_id', 'description': 'The ID of the related line item (ad group).', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'line_item_name': {'name': 'line_item_name', 'description': 'The ID of the related line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'promoted_tweet_id': {'name': 'promoted_tweet_id', 'description': 'The ID of the promoted tweet that the URL appeared in.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'tweet_id': {'name': 'tweet_id', 'description': 'The ID of the tweet that the URL appeared in.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'tweet_name': {'name': 'tweet_name', 'description': 'The name, if provided, of the tweet that the URL appeared in.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'tweet_full_text': {'name': 'tweet_full_text', 'description': 'The full text of the tweet that the URL appeared in.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'base_url': {'name': 'base_url', 'description': 'The base URL of the ad, extracted from the `expanded_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_host': {'name': 'url_host', 'description': 'The URL host of the ad, extracted from the `expanded_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_path': {'name': 'url_path', 'description': 'The URL path of the ad, extracted from the `expanded_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_source': {'name': 'utm_source', 'description': 'The utm_source parameter of the ad, extracted from the `expanded_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_medium': {'name': 'utm_medium', 'description': 'The utm_medium parameter of the ad, extracted from the `expanded_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_campaign': {'name': 'utm_campaign', 'description': 'The utm_campaign parameter of the ad, extracted from the `expanded_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_content': {'name': 'utm_content', 'description': 'The utm_content parameter of the ad, extracted from the `expanded_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_term': {'name': 'utm_term', 'description': 'The utm_term parameter of the ad, extracted from the `expanded_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'display_url': {'name': 'display_url', 'description': 'The URL as it will be displayed.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'expanded_url': {'name': 'expanded_url', 'description': 'The fully expanded URL.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': 'The currency all metrics for the account are set to.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The clicks for the promoted tweet + URL on that day. Includes clicks on the URL (shortened or regular links), profile pic, screen name, username, detail, hashtags, and likes.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The impressions for the promoted tweet + URL on that day.  This is the number of users who see a Promoted Ad either in their home timeline or search results.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend for the promoted tweet + URL on that day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend_micro': {'name': 'spend_micro', 'description': 'The spend, in micros, for the tweet + URL on that day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_clicks': {'name': 'url_clicks', 'description': 'The URL clicks for the promoted tweet + URL on that day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'twitter_ads://models\\twitter.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'schema': 'twitter_ads', 'materialized': 'table', 'enabled': True}, 'created_at': 1694433487.5576773, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads`.`twitter_ads__url_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nwith report as (\n\n    select *\n    from {{ var('promoted_tweet_report') }}\n),\n\ncampaigns as (\n\n    select *\n    from {{ var('campaign_history') }}\n    where is_latest_version\n),\n\naccounts as (\n\n    select *\n    from {{ var('account_history') }}\n    where is_latest_version\n),\n\nline_items as (\n\n    select *\n    from {{ var('line_item_history') }}\n    where is_latest_version\n),\n\npromoted_tweets as (\n\n    select *\n    from {{ var('promoted_tweet_history') }}\n    where is_latest_version\n),\n\ntweets as (\n\n    select *\n    from {{ var('tweet') }}\n),\n\ntweet_url as (\n\n    select *\n    from {{ var('tweet_url') }}\n    where index = 0\n),\n\nfinal as (\n\n    select \n        report.date_day,\n        report.placement, \n        accounts.account_id,\n        accounts.name as account_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        line_items.line_item_id,\n        line_items.name as line_item_name,\n        promoted_tweets.promoted_tweet_id,\n        promoted_tweets.tweet_id,\n        tweets.name as tweet_name,\n        tweets.full_text as tweet_full_text,\n        tweet_url.base_url,\n        tweet_url.url_host,\n        tweet_url.url_path,\n        tweet_url.utm_source,\n        tweet_url.utm_medium,\n        tweet_url.utm_campaign,\n        tweet_url.utm_content,\n        tweet_url.utm_term,\n        tweet_url.expanded_url,\n        tweet_url.display_url,\n        campaigns.currency,\n        sum(report.clicks) as clicks, \n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend,\n        sum(report.spend_micro) as spend_micro,\n        sum(report.url_clicks) as url_clicks\n\n        {{ fivetran_utils.persist_pass_through_columns('twitter_ads__promoted_tweet_report_passthrough_metrics', transform='sum') }}\n\n    from report \n    left join promoted_tweets \n        on report.promoted_tweet_id = promoted_tweets.promoted_tweet_id\n    left join tweet_url \n        on promoted_tweets.tweet_id = tweet_url.tweet_id\n    left join tweets\n        on promoted_tweets.tweet_id = tweets.tweet_id\n    left join line_items\n        on promoted_tweets.line_item_id = line_items.line_item_id\n    left join campaigns \n        on line_items.campaign_id = campaigns.campaign_id\n    left join accounts\n        on report.account_id = accounts.account_id\n    \n    {% if var('ad_reporting__url_report__using_null_filter', True) %}\n        where tweet_url.expanded_url is not null\n    {% endif %}\n\n    {{ dbt_utils.group_by(n=23) }}\n\n    \n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_twitter_ads__promoted_tweet_report'], ['stg_twitter_ads__campaign_history'], ['stg_twitter_ads__account_history'], ['stg_twitter_ads__line_item_history'], ['stg_twitter_ads__promoted_tweet_history'], ['stg_twitter_ads__tweet'], ['stg_twitter_ads__tweet_url']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.persist_pass_through_columns', 'macro.dbt_utils.group_by'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report', 'model.twitter_ads_source.stg_twitter_ads__campaign_history', 'model.twitter_ads_source.stg_twitter_ads__account_history', 'model.twitter_ads_source.stg_twitter_ads__line_item_history', 'model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history', 'model.twitter_ads_source.stg_twitter_ads__tweet', 'model.twitter_ads_source.stg_twitter_ads__tweet_url']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__account_history': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__account_history', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'stg_twitter_ads__account_history.sql', 'original_file_path': 'models\\stg_twitter_ads__account_history.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__account_history', 'fqn': ['twitter_ads_source', 'stg_twitter_ads__account_history'], 'alias': 'stg_twitter_ads__account_history', 'checksum': {'name': 'sha256', 'checksum': '9ac9bf89b2163524505de7f16c38d7103b3af267458bf5190428238b25b87bd4'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents a version of each account. The versions can be differentiated by the updated_at timestamp.', 'columns': {'approval_status': {'name': 'approval_status', 'description': 'The approval status of the account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'business_id': {'name': 'business_id', 'description': 'The ID of the related business.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'business_name': {'name': 'business_name', 'description': 'The name of the related business.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'created_timestamp': {'name': 'created_timestamp', 'description': 'The timestamp the account was created.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_deleted': {'name': 'is_deleted', 'description': 'Whether the record has been deleted or not.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The ID of the account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'industry_type': {'name': 'industry_type', 'description': 'The industry of the accounts.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'name': {'name': 'name', 'description': 'The name of the account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'timezone': {'name': 'timezone', 'description': 'The timezone the account is set to.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'timezone_switched_timestamp': {'name': 'timezone_switched_timestamp', 'description': "The timestamp the account's timezone was last changed.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_timestamp': {'name': 'updated_timestamp', 'description': 'The timestamp the account was last updated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_latest_version': {'name': 'is_latest_version', 'description': 'Whether the record is the most latest version for the account', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'salt': {'name': 'salt', 'description': 'The random encryption key used to hash data.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'twitter_ads_source://models\\stg_twitter_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433487.67056, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__account_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nwith source as (\n\n    select *\n    from {{ ref('stg_twitter_ads__account_history_tmp') }}\n\n),\n\nfields as (\n\n    select\n    \n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_twitter_ads__account_history_tmp')),\n                staging_columns=get_account_history_columns()\n            )\n        }}\n\n    from source\n\n), \n\nfinal as (\n\n    select\n        approval_status,\n        business_id,\n        business_name,\n        created_at as created_timestamp,\n        deleted as is_deleted,\n        id as account_id,\n        industry_type,\n        name,\n        salt,\n        timezone,\n        timezone_switch_at as timezone_switched_timestamp,\n        updated_at as updated_timestamp,\n        row_number() over (partition by id order by updated_at desc) = 1 as is_latest_version\n    \n    from fields \n)\n\nselect * from final", 'language': 'sql', 'refs': [['stg_twitter_ads__account_history_tmp'], ['stg_twitter_ads__account_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.twitter_ads_source.get_account_history_columns', 'macro.fivetran_utils.fill_staging_columns'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__account_history_tmp', 'model.twitter_ads_source.stg_twitter_ads__account_history_tmp']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__campaign_history': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__campaign_history', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'stg_twitter_ads__campaign_history.sql', 'original_file_path': 'models\\stg_twitter_ads__campaign_history.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__campaign_history', 'fqn': ['twitter_ads_source', 'stg_twitter_ads__campaign_history'], 'alias': 'stg_twitter_ads__campaign_history', 'checksum': {'name': 'sha256', 'checksum': '774d386e9ad64cc31bc4067ef71444c35b0dd5b24e7635905ca4f774d6996934'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents a version of each campaign. The versions can be differentiated by the updated_at timestamp.', 'columns': {'account_id': {'name': 'account_id', 'description': 'The ID of the related account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'created_timestamp': {'name': 'created_timestamp', 'description': 'The timestamp the account was created.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': 'The currency all metrics for the account are set to.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_budget_amount_local_micro': {'name': 'daily_budget_amount_local_micro', 'description': 'The daily budget amount to be allocated to the campaign, in micros. The currency associated with the specified funding instrument will be used.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_deleted': {'name': 'is_deleted', 'description': 'Whether the record has been deleted or not.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'duration_in_days': {'name': 'duration_in_days', 'description': 'The time period within which the frequency_cap is achieved.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'end_timestamp': {'name': 'end_timestamp', 'description': 'The time the campaign will end', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'entity_status': {'name': 'entity_status', 'description': 'The status of the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'frequency_cap': {'name': 'frequency_cap', 'description': 'The maximum number of times an ad could be delivered to a user.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID of the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_name': {'name': 'campaign_name', 'description': 'The name of the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_servable': {'name': 'is_servable', 'description': 'Whether the campaign is in a state to be actively served to users.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_standard_delivery': {'name': 'is_standard_delivery', 'description': 'Whether standard delivery is enabled (vs accelerated delivery).', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'start_timestamp': {'name': 'start_timestamp', 'description': 'The time the campaign will start.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'total_budget_amount_local_micro': {'name': 'total_budget_amount_local_micro', 'description': 'The total budget amount to be allocated to the campaign, in micros.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_timestamp': {'name': 'updated_timestamp', 'description': 'The timestamp the account was last updated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_latest_version': {'name': 'is_latest_version', 'description': 'Whether the record is the most latest version for the campaign', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'funding_instrument_id': {'name': 'funding_instrument_id', 'description': 'Reference to the funding instrument.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'daily_budget_amount': {'name': 'daily_budget_amount', 'description': 'The daily budget amount to be allocated to the campaign. The currency associated with the specified funding instrument will be used.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'total_budget_amount': {'name': 'total_budget_amount', 'description': 'The total budget amount to be allocated to the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'twitter_ads_source://models\\stg_twitter_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433487.674904, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__campaign_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nwith source as (\n\n    select *\n    from {{ ref('stg_twitter_ads__campaign_history_tmp') }}\n\n),\n\nfields as (\n\n    select\n    \n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_twitter_ads__campaign_history_tmp')),\n                staging_columns=get_campaign_history_columns()\n            )\n        }}\n\n    from source\n\n), \n\nfinal as (\n\n    select\n        account_id,\n        created_at as created_timestamp,\n        currency,\n        daily_budget_amount_local_micro,\n        deleted as is_deleted,\n        duration_in_days,\n        end_time as end_timestamp,\n        entity_status,\n        frequency_cap,\n        funding_instrument_id,\n        id as campaign_id,\n        name as campaign_name,\n        servable as is_servable,\n        standard_delivery as is_standard_delivery,\n        start_time as start_timestamp,\n        total_budget_amount_local_micro,\n        updated_at as updated_timestamp,\n        round(daily_budget_amount_local_micro / 1000000.0,2) as daily_budget_amount,\n        round(total_budget_amount_local_micro / 1000000.0,2) as total_budget_amount,\n        row_number() over (partition by id order by updated_at desc) = 1 as is_latest_version\n    \n    from fields \n)\n\nselect * from final", 'language': 'sql', 'refs': [['stg_twitter_ads__campaign_history_tmp'], ['stg_twitter_ads__campaign_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.twitter_ads_source.get_campaign_history_columns', 'macro.fivetran_utils.fill_staging_columns'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__campaign_history_tmp', 'model.twitter_ads_source.stg_twitter_ads__campaign_history_tmp']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__campaign_report': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__campaign_report', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'stg_twitter_ads__campaign_report.sql', 'original_file_path': 'models\\stg_twitter_ads__campaign_report.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__campaign_report', 'fqn': ['twitter_ads_source', 'stg_twitter_ads__campaign_report'], 'alias': 'stg_twitter_ads__campaign_report', 'checksum': {'name': 'sha256', 'checksum': 'f81071b6cdbc860c2ae2316870f010fe0f0fc2c8166fc3b2d5eeea729f6defcd'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the performance of an ad campaign on a given day, for its placement in Twitter.', 'columns': {'account_id': {'name': 'account_id', 'description': 'The ID of the related account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend_micro': {'name': 'spend_micro', 'description': 'The spend for the campaign on that day, in micros and in whichever currency was selected during account creation.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend for the campaign on that day in whichever currency was selected during account creation.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The clicks for the campaign on that day. Includes clicks on the URL (shortened or regular links), profile pic, screen name, username, detail, hashtags, and likes.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'The date of the performance.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The impressions for the campaign on that day.  This is the number of users who see a Promoted Ad either in their home timeline or search results.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID of the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_clicks': {'name': 'url_clicks', 'description': 'The url clicks for the campaign on that day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'placement': {'name': 'placement', 'description': "Where on Twitter the ad is being displayed. Possible values include 'ALL_ON_TWITTER', 'PUBLISHER_NETWORK', 'TWITTER_PROFILE', 'TWITTER_SEARCH', 'TWITTER_TIMELINE', and 'TAP_*', which are more granular options for `PUBLISHER_NETWORK`.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'twitter_ads_source://models\\stg_twitter_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433487.6950505, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__campaign_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_twitter_ads__campaign_report_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_twitter_ads__campaign_report_tmp')),\n                staging_columns=get_campaign_report_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select \n        {{ dbt.date_trunc('day', 'date') }} as date_day,\n        account_id,\n        campaign_id,\n        placement,\n        clicks,\n        impressions,\n        billed_charge_local_micro as spend_micro,\n        round(billed_charge_local_micro / 1000000.0,2) as spend,\n        url_clicks\n\n        {{ fivetran_utils.fill_pass_through_columns('twitter_ads__campaign_report_passthrough_metrics') }}\n    \n    from fields\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_twitter_ads__campaign_report_tmp'], ['stg_twitter_ads__campaign_report_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.twitter_ads_source.get_campaign_report_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.date_trunc', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__campaign_report_tmp', 'model.twitter_ads_source.stg_twitter_ads__campaign_report_tmp']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__line_item_history': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__line_item_history', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'stg_twitter_ads__line_item_history.sql', 'original_file_path': 'models\\stg_twitter_ads__line_item_history.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__line_item_history', 'fqn': ['twitter_ads_source', 'stg_twitter_ads__line_item_history'], 'alias': 'stg_twitter_ads__line_item_history', 'checksum': {'name': 'sha256', 'checksum': '46a8268335b747ca45d70e2b6f3c9a426b26a655d751cdc0843b4a3d41af8598'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents a version of each line item. The versions can be differentiated by the updated_at timestamp.', 'columns': {'advertiser_domain': {'name': 'advertiser_domain', 'description': 'The website domain for this advertiser, without the protocol specification.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'advertiser_user_id': {'name': 'advertiser_user_id', 'description': 'The Twitter user identifier for the handle promoting the ad.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'automatically_select_bid': {'name': 'automatically_select_bid', 'description': 'Whether automatically optimize bidding is enabled based on daily budget and campaign flight dates.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'bid_amount_local_micro': {'name': 'bid_amount_local_micro', 'description': 'The bid amount to be associated with this line item, in micros.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'bid_type': {'name': 'bid_type', 'description': 'The bidding mechanism.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'bid_unit': {'name': 'bid_unit', 'description': 'The bid unit for this line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'campaign_id': {'name': 'campaign_id', 'description': 'The ID of the related campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'charge_by': {'name': 'charge_by', 'description': 'The unit to charge this line item by.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'created_timestamp': {'name': 'created_timestamp', 'description': 'The timestamp the account was created.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'creative_source': {'name': 'creative_source', 'description': 'The source of the creatives for the line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'currency': {'name': 'currency', 'description': 'The currency in which metrics will be reported.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_deleted': {'name': 'is_deleted', 'description': 'Whether the record has been deleted or not.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'end_timestamp': {'name': 'end_timestamp', 'description': 'The timestamp at which the line item will stop being served.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'entity_status': {'name': 'entity_status', 'description': 'The status of the line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'line_item_id': {'name': 'line_item_id', 'description': 'The ID of the line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'name': {'name': 'name', 'description': 'The name of the line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'objective': {'name': 'objective', 'description': 'The campaign objective for this line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'optimization': {'name': 'optimization', 'description': 'The optimization setting to use with this line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'primary_web_event_tag': {'name': 'primary_web_event_tag', 'description': 'The identifier of the primary web event tag. Allows more accurate tracking of engagements for the campaign pertaining to this line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'product_type': {'name': 'product_type', 'description': 'The type of promoted product that this line item will contain.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'start_timestamp': {'name': 'start_timestamp', 'description': 'The timestamp at which the line item will start being served.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'target_cpa_local_micro': {'name': 'target_cpa_local_micro', 'description': 'The target cost per acquisition for the line item, in micros.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'total_budget_amount_local_micro': {'name': 'total_budget_amount_local_micro', 'description': 'The total budget amount to be allocated to the line item, in micros.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_timestamp': {'name': 'updated_timestamp', 'description': 'The timestamp the account was last updated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_latest_version': {'name': 'is_latest_version', 'description': 'Whether the record is the most latest version for the line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'bid_amount': {'name': 'bid_amount', 'description': 'The bid amount to be associated with this line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'total_budget_amount': {'name': 'total_budget_amount', 'description': 'The total budget amount to be allocated to the campaign.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'target_cpa': {'name': 'target_cpa', 'description': 'The target cost per acquisition for the line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'twitter_ads_source://models\\stg_twitter_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433487.6826112, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__line_item_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nwith source as (\n\n    select *\n    from {{ ref('stg_twitter_ads__line_item_history_tmp') }}\n\n),\n\nfields as (\n\n    select\n    \n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_twitter_ads__line_item_history_tmp')),\n                staging_columns=get_line_item_history_columns()\n            )\n        }}\n\n    from source\n\n), \n\nfinal as (\n\n    select\n        advertiser_domain,\n        advertiser_user_id,\n        automatically_select_bid,\n        bid_amount_local_micro,\n        bid_type,\n        bid_unit,\n        campaign_id,\n        charge_by,\n        created_at as created_timestamp,\n        creative_source,\n        currency,\n        deleted as is_deleted,\n        end_time as end_timestamp,\n        entity_status,\n        id as line_item_id,\n        name,\n        objective,\n        optimization,\n        primary_web_event_tag,\n        product_type,\n        start_time as start_timestamp,\n        target_cpa_local_micro,\n        total_budget_amount_local_micro,\n        updated_at as updated_timestamp,\n        round(bid_amount_local_micro / 1000000.0,2) as bid_amount,\n        round(total_budget_amount_local_micro / 1000000.0,2) as total_budget_amount,\n        round(target_cpa_local_micro / 1000000.0,2) as target_cpa,\n        row_number() over (partition by id order by updated_at desc) = 1 as is_latest_version\n    \n    from fields \n)\n\nselect * from final", 'language': 'sql', 'refs': [['stg_twitter_ads__line_item_history_tmp'], ['stg_twitter_ads__line_item_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.twitter_ads_source.get_line_item_history_columns', 'macro.fivetran_utils.fill_staging_columns'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__line_item_history_tmp', 'model.twitter_ads_source.stg_twitter_ads__line_item_history_tmp']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__line_item_keywords_report', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'stg_twitter_ads__line_item_keywords_report.sql', 'original_file_path': 'models\\stg_twitter_ads__line_item_keywords_report.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report', 'fqn': ['twitter_ads_source', 'stg_twitter_ads__line_item_keywords_report'], 'alias': 'stg_twitter_ads__line_item_keywords_report', 'checksum': {'name': 'sha256', 'checksum': 'b980b624c4483406f75c6c3f69c6ad4579616881539ba383f96f6e1b001df09a'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the performance of a line item (ad group) and keyword combination on a given day, for its placement in Twitter.', 'columns': {'keyword_id': {'name': 'keyword_id', 'description': "Unique key of the table built from the combination of 'account_id', 'line_item_id','segment', and 'placement' fields.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'account_id': {'name': 'account_id', 'description': 'The ID of the related account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend_micro': {'name': 'spend_micro', 'description': 'The spend for the line item + keyword on that day, in micros and in whichever currency was selected during account creation.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend for the line item + keyword on that day in whichever currency was selected during account creation.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The clicks for the line item + keyword on that day. Includes clicks on the URL (shortened or regular links), profile pic, screen name, username, detail, hashtags, and likes.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'The date of the performance.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The impressions for the line item + keyword on that day.  This is the number of users who see a Promoted Ad either in their home timeline or search results.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'line_item_id': {'name': 'line_item_id', 'description': 'The ID of the line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_clicks': {'name': 'url_clicks', 'description': 'The url clicks for the line item + keyword on that day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'keyword': {'name': 'keyword', 'description': 'The keyword whose performance is being tracked.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'placement': {'name': 'placement', 'description': "Where on Twitter the ad is being displayed. Possible values include 'ALL_ON_TWITTER', 'PUBLISHER_NETWORK', 'TWITTER_PROFILE', 'TWITTER_SEARCH', 'TWITTER_TIMELINE', and 'TAP_*', which are more granular options for `PUBLISHER_NETWORK`.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'twitter_ads_source://models\\stg_twitter_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433487.7009437, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__line_item_keywords_report`', 'raw_code': "{{ config(enabled=fivetran_utils.enabled_vars(['ad_reporting__twitter_ads_enabled','twitter_ads__using_keywords'])) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_twitter_ads__line_item_keywords_report_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_twitter_ads__line_item_keywords_report_tmp')),\n                staging_columns=get_line_item_keywords_report_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select \n        {{ dbt.date_trunc('day', 'date') }} as date_day,\n        {{ dbt_utils.generate_surrogate_key(['account_id', 'line_item_id','segment','placement']) }} as keyword_id,\n        account_id,\n        line_item_id,\n        segment as keyword,\n        placement,\n        clicks,\n        impressions,\n        billed_charge_local_micro as spend_micro,\n        round(billed_charge_local_micro / 1000000.0,2) as spend,\n        url_clicks\n\n        {{ fivetran_utils.fill_pass_through_columns('twitter_ads__line_item_keywords_report_passthrough_metrics') }}\n\n    from fields\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_twitter_ads__line_item_keywords_report_tmp'], ['stg_twitter_ads__line_item_keywords_report_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.enabled_vars', 'macro.twitter_ads_source.get_line_item_keywords_report_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.date_trunc', 'macro.dbt_utils.generate_surrogate_key', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report_tmp', 'model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report_tmp']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__line_item_report': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__line_item_report', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'stg_twitter_ads__line_item_report.sql', 'original_file_path': 'models\\stg_twitter_ads__line_item_report.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__line_item_report', 'fqn': ['twitter_ads_source', 'stg_twitter_ads__line_item_report'], 'alias': 'stg_twitter_ads__line_item_report', 'checksum': {'name': 'sha256', 'checksum': '3e4a99488dfe650a4fbdcd7a60b982d2044c2c2b3ad1be7479fc35c4b929d343'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents the performance of a line item (ad group) on a given day, for its placement in Twitter.', 'columns': {'account_id': {'name': 'account_id', 'description': 'The ID of the related account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend_micro': {'name': 'spend_micro', 'description': 'The spend for the line item on that day, in micros and in whichever currency was selected during account creation.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend for the line item on that day in whichever currency was selected during account creation.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The clicks for the line item on that day. Includes clicks on the URL (shortened or regular links), profile pic, screen name, username, detail, hashtags, and likes.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'The date of the performance.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The impressions for the line item on that day.  This is the number of users who see a Promoted Ad either in their home timeline or search results.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'line_item_id': {'name': 'line_item_id', 'description': 'The ID of the line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_clicks': {'name': 'url_clicks', 'description': 'The url clicks for the line item on that day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'placement': {'name': 'placement', 'description': "Where on Twitter the ad is being displayed. Possible values include 'ALL_ON_TWITTER', 'PUBLISHER_NETWORK', 'TWITTER_PROFILE', 'TWITTER_SEARCH', 'TWITTER_TIMELINE', and 'TAP_*', which are more granular options for `PUBLISHER_NETWORK`.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'twitter_ads_source://models\\stg_twitter_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433487.6978247, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__line_item_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_twitter_ads__line_item_report_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_twitter_ads__line_item_report_tmp')),\n                staging_columns=get_line_item_report_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select \n        {{ dbt.date_trunc('day', 'date') }} as date_day,\n        account_id,\n        line_item_id,\n        placement,\n        clicks,\n        impressions,\n        billed_charge_local_micro as spend_micro,\n        round(billed_charge_local_micro / 1000000.0,2) as spend,\n        url_clicks\n\n        {{ fivetran_utils.fill_pass_through_columns('twitter_ads__line_item_report_passthrough_metrics') }}\n\n    from fields\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_twitter_ads__line_item_report_tmp'], ['stg_twitter_ads__line_item_report_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.twitter_ads_source.get_line_item_report_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.date_trunc', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__line_item_report_tmp', 'model.twitter_ads_source.stg_twitter_ads__line_item_report_tmp']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__promoted_tweet_history', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'stg_twitter_ads__promoted_tweet_history.sql', 'original_file_path': 'models\\stg_twitter_ads__promoted_tweet_history.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history', 'fqn': ['twitter_ads_source', 'stg_twitter_ads__promoted_tweet_history'], 'alias': 'stg_twitter_ads__promoted_tweet_history', 'checksum': {'name': 'sha256', 'checksum': 'c80a0cb29ef10133607a7a85d12f01b4a3dfe4100939746893a2ac56d17dd03b'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents a version of each promoted tweet. The versions can be differentiated by the updated_at timestamp.', 'columns': {'approval_status': {'name': 'approval_status', 'description': 'The approval status of the promoted tweet.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'created_timestamp': {'name': 'created_timestamp', 'description': 'The timestamp the account was created.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_deleted': {'name': 'is_deleted', 'description': 'Whether the record has been deleted or not.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'entity_status': {'name': 'entity_status', 'description': 'The status of the promoted tweet.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'promoted_tweet_id': {'name': 'promoted_tweet_id', 'description': 'The ID of the promoted tweet.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'line_item_id': {'name': 'line_item_id', 'description': 'The ID of the related line item.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'tweet_id': {'name': 'tweet_id', 'description': 'The ID of the related tweet.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'updated_timestamp': {'name': 'updated_timestamp', 'description': 'The timestamp the account was last updated.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'is_latest_version': {'name': 'is_latest_version', 'description': 'Whether the record is the most latest version for the promoted tweet.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'twitter_ads_source://models\\stg_twitter_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433487.6847818, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__promoted_tweet_history`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nwith source as (\n\n    select *\n    from {{ ref('stg_twitter_ads__promoted_tweet_history_tmp') }}\n\n),\n\nfields as (\n\n    select\n    \n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_twitter_ads__promoted_tweet_history_tmp')),\n                staging_columns=get_promoted_tweet_history_columns()\n            )\n        }}\n\n    from source\n\n), \n\nfinal as (\n\n    select\n        approval_status,\n        created_at as created_timestamp,\n        deleted as is_deleted,\n        entity_status,\n        id as promoted_tweet_id,\n        line_item_id,\n        tweet_id,\n        updated_at as updated_timestamp,\n        row_number() over (partition by id order by updated_at desc) = 1 as is_latest_version\n    from fields \n)\n\nselect * from final", 'language': 'sql', 'refs': [['stg_twitter_ads__promoted_tweet_history_tmp'], ['stg_twitter_ads__promoted_tweet_history_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.twitter_ads_source.get_promoted_tweet_history_columns', 'macro.fivetran_utils.fill_staging_columns'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history_tmp', 'model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history_tmp']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__promoted_tweet_report', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'stg_twitter_ads__promoted_tweet_report.sql', 'original_file_path': 'models\\stg_twitter_ads__promoted_tweet_report.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report', 'fqn': ['twitter_ads_source', 'stg_twitter_ads__promoted_tweet_report'], 'alias': 'stg_twitter_ads__promoted_tweet_report', 'checksum': {'name': 'sha256', 'checksum': '90aa40996baaf0ab4455ec96ddd1bb6e9fabee419da4496f9b534e0d866ac36d'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': "Each record represents the performance of a promoted tweet on a given day, in the tweet's defined placement.", 'columns': {'account_id': {'name': 'account_id', 'description': 'The ID of the related account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend_micro': {'name': 'spend_micro', 'description': 'The spend (in micros) for the promoted tweet on that day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'spend': {'name': 'spend', 'description': 'The spend for the promoted tweet on that day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'clicks': {'name': 'clicks', 'description': 'The clicks for the promoted tweet on that day. Includes clicks on the URL (shortened or regular links), profile pic, screen name, username, detail, hashtags, and likes.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'date_day': {'name': 'date_day', 'description': 'The date of the performance.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'impressions': {'name': 'impressions', 'description': 'The impressions for the promoted tweet on that day.  This is the number of users who see a Promoted Ad either in their home timeline or search results.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'promoted_tweet_id': {'name': 'promoted_tweet_id', 'description': 'The ID of the related promoted tweet.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_clicks': {'name': 'url_clicks', 'description': 'The url clicks for the promoted tweet on that day.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'placement': {'name': 'placement', 'description': "Where on Twitter the ad is being displayed. Possible values include 'ALL_ON_TWITTER', 'PUBLISHER_NETWORK', 'TWITTER_PROFILE', 'TWITTER_SEARCH', 'TWITTER_TIMELINE', and 'TAP_*', which are more granular options for `PUBLISHER_NETWORK`.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'twitter_ads_source://models\\stg_twitter_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433487.6885397, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__promoted_tweet_report`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nwith source as (\n\n    select *\n    from {{ ref('stg_twitter_ads__promoted_tweet_report_tmp') }}\n\n),\n\nrenamed as (\n\n    select\n    \n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_twitter_ads__promoted_tweet_report_tmp')),\n                staging_columns=get_promoted_tweet_report_columns()\n            )\n        }}\n\n    from source\n\n), spend_calc as (\n\n    select\n        {{ dbt.date_trunc('day', 'date') }} as date_day,\n        account_id,\n        promoted_tweet_id,\n        placement,\n        clicks as clicks,\n        impressions as impressions,\n        billed_charge_local_micro as spend_micro,\n        round(billed_charge_local_micro / 1000000.0,2) as spend,\n        url_clicks as url_clicks\n\n        {{ fivetran_utils.fill_pass_through_columns('twitter_ads__promoted_tweet_report_passthrough_metrics') }}\n    \n    from renamed\n\n)\n\nselect * from spend_calc", 'language': 'sql', 'refs': [['stg_twitter_ads__promoted_tweet_report_tmp'], ['stg_twitter_ads__promoted_tweet_report_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.twitter_ads_source.get_promoted_tweet_report_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.date_trunc', 'macro.fivetran_utils.fill_pass_through_columns'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report_tmp', 'model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report_tmp']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__tweet': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__tweet', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'stg_twitter_ads__tweet.sql', 'original_file_path': 'models\\stg_twitter_ads__tweet.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__tweet', 'fqn': ['twitter_ads_source', 'stg_twitter_ads__tweet'], 'alias': 'stg_twitter_ads__tweet', 'checksum': {'name': 'sha256', 'checksum': '495071fcb565d9bcb5f607119259a6a0db5f562833a4c5b4e6b415947b763e21'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents a tweet, promoted or not.', 'columns': {'account_id': {'name': 'account_id', 'description': 'The ID of the related account.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'tweet_id': {'name': 'tweet_id', 'description': 'Unique identifier of the tweet.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'name': {'name': 'name', 'description': 'If provided, the non-public title of the tweet.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'full_text': {'name': 'full_text', 'description': "Full text of the tweet's content.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'language': {'name': 'language', 'description': 'Two-letter language code of the tweet.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'twitter_ads_source://models\\stg_twitter_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433487.7029407, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__tweet`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nwith base as (\n\n    select * \n    from {{ ref('stg_twitter_ads__tweet_tmp') }}\n),\n\nfields as (\n\n    select\n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref('stg_twitter_ads__tweet_tmp')),\n                staging_columns=get_tweet_columns()\n            )\n        }}\n    from base\n),\n\nfinal as (\n    \n    select \n        account_id,\n        id as tweet_id,\n        name,\n        full_text,\n        lang as language\n\n    from fields\n)\n\nselect *\nfrom final", 'language': 'sql', 'refs': [['stg_twitter_ads__tweet_tmp'], ['stg_twitter_ads__tweet_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.twitter_ads_source.get_tweet_columns', 'macro.fivetran_utils.fill_staging_columns'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__tweet_tmp', 'model.twitter_ads_source.stg_twitter_ads__tweet_tmp']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__tweet_url': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__tweet_url', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'stg_twitter_ads__tweet_url.sql', 'original_file_path': 'models\\stg_twitter_ads__tweet_url.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__tweet_url', 'fqn': ['twitter_ads_source', 'stg_twitter_ads__tweet_url'], 'alias': 'stg_twitter_ads__tweet_url', 'checksum': {'name': 'sha256', 'checksum': '96ff5a0344a66484694df8a7eff61312f4b5e5dd177f81470447d7a4698ee2d1'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Each record represents a URL used in a tweet.', 'columns': {'display_url': {'name': 'display_url', 'description': 'The URL as it will be displayed.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'expanded_url': {'name': 'expanded_url', 'description': 'The fully expanded URL.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'index': {'name': 'index', 'description': 'The index of the URL within the tweet (ie if there are multiple URLs)', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'indices': {'name': 'indices', 'description': 'The start and end point of where the URL is placed in the tweet text.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'tweet_id': {'name': 'tweet_id', 'description': 'The ID of the related tweet.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url': {'name': 'url', 'description': "The 't.co' shortened URL.", 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'base_url': {'name': 'base_url', 'description': 'The base URL of the ad, extracted from the `expanded_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_host': {'name': 'url_host', 'description': 'The URL host of the ad, extracted from the `expanded_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'url_path': {'name': 'url_path', 'description': 'The URL path of the ad, extracted from the `expanded_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_source': {'name': 'utm_source', 'description': 'The utm_source parameter of the ad, extracted from the `expanded_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_medium': {'name': 'utm_medium', 'description': 'The utm_medium parameter of the ad, extracted from the `expanded_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_campaign': {'name': 'utm_campaign', 'description': 'The utm_campaign parameter of the ad, extracted from the `expanded_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_content': {'name': 'utm_content', 'description': 'The utm_content parameter of the ad, extracted from the `expanded_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}, 'utm_term': {'name': 'utm_term', 'description': 'The utm_term parameter of the ad, extracted from the `expanded_url`.', 'meta': {}, 'data_type': None, 'quote': None, 'tags': []}}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'twitter_ads_source://models\\stg_twitter_ads.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433487.691785, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__tweet_url`', 'raw_code': '{{ config(enabled=var(\'ad_reporting__twitter_ads_enabled\', True)) }}\n\nwith source as (\n\n    select *\n    from {{ ref(\'stg_twitter_ads__tweet_url_tmp\') }}\n\n),\n\nfields as (\n\n    select\n    \n        {{\n            fivetran_utils.fill_staging_columns(\n                source_columns=adapter.get_columns_in_relation(ref(\'stg_twitter_ads__tweet_url_tmp\')),\n                staging_columns=get_tweet_url_columns()\n            )\n        }}\n\n    from source\n\n), \n\nfinal as (\n\n    select\n        display_url,\n        expanded_url,\n        index,\n        indices,\n        tweet_id,\n        url,\n        {{ dbt.split_part(\'expanded_url\', "\'?\'", 1) }} as base_url,\n        {{ dbt_utils.get_url_host(\'expanded_url\') }} as url_host,\n        \'/\' || {{ dbt_utils.get_url_path(\'expanded_url\') }} as url_path,\n        {{ dbt_utils.get_url_parameter(\'expanded_url\', \'utm_source\') }} as utm_source,\n        {{ dbt_utils.get_url_parameter(\'expanded_url\', \'utm_medium\') }} as utm_medium,\n        {{ dbt_utils.get_url_parameter(\'expanded_url\', \'utm_campaign\') }} as utm_campaign,\n        {{ dbt_utils.get_url_parameter(\'expanded_url\', \'utm_content\') }} as utm_content,\n        {{ dbt_utils.get_url_parameter(\'expanded_url\', \'utm_term\') }} as utm_term\n    \n    from fields\n\n)\n\nselect * from final', 'language': 'sql', 'refs': [['stg_twitter_ads__tweet_url_tmp'], ['stg_twitter_ads__tweet_url_tmp']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.twitter_ads_source.get_tweet_url_columns', 'macro.fivetran_utils.fill_staging_columns', 'macro.dbt.split_part', 'macro.dbt_utils.get_url_host', 'macro.dbt_utils.get_url_path', 'macro.dbt_utils.get_url_parameter'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__tweet_url_tmp', 'model.twitter_ads_source.stg_twitter_ads__tweet_url_tmp']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__account_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__account_history_tmp', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'tmp\\stg_twitter_ads__account_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_twitter_ads__account_history_tmp.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__account_history_tmp', 'fqn': ['twitter_ads_source', 'tmp', 'stg_twitter_ads__account_history_tmp'], 'alias': 'stg_twitter_ads__account_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '76ca411a663d62ed96988cf38c0ea000cb691006c8a9f4a6c326f357d874a7fc'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433484.7837048, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__account_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nselect *\nfrom {{ var('account_history') }}", 'language': 'sql', 'refs': [], 'sources': [['twitter_ads', 'account_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.twitter_ads_source.twitter_ads.account_history']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__campaign_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__campaign_history_tmp', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'tmp\\stg_twitter_ads__campaign_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_twitter_ads__campaign_history_tmp.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__campaign_history_tmp', 'fqn': ['twitter_ads_source', 'tmp', 'stg_twitter_ads__campaign_history_tmp'], 'alias': 'stg_twitter_ads__campaign_history_tmp', 'checksum': {'name': 'sha256', 'checksum': '343754878288e6e847d9af5524d0dd1b09edffac90a7e83f0f8dbd610c028837'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433484.7923882, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__campaign_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nselect *\nfrom {{ var('campaign_history') }}", 'language': 'sql', 'refs': [], 'sources': [['twitter_ads', 'campaign_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.twitter_ads_source.twitter_ads.campaign_history']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__campaign_report_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__campaign_report_tmp', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'tmp\\stg_twitter_ads__campaign_report_tmp.sql', 'original_file_path': 'models\\tmp\\stg_twitter_ads__campaign_report_tmp.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__campaign_report_tmp', 'fqn': ['twitter_ads_source', 'tmp', 'stg_twitter_ads__campaign_report_tmp'], 'alias': 'stg_twitter_ads__campaign_report_tmp', 'checksum': {'name': 'sha256', 'checksum': 'cde4096c85a4069b4865fe37600bed81c625f2ec5e1cb91863d50888a217f562'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433484.798037, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__campaign_report_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('campaign_report') }}", 'language': 'sql', 'refs': [], 'sources': [['twitter_ads', 'campaign_report']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.twitter_ads_source.twitter_ads.campaign_report']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__line_item_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__line_item_history_tmp', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'tmp\\stg_twitter_ads__line_item_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_twitter_ads__line_item_history_tmp.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__line_item_history_tmp', 'fqn': ['twitter_ads_source', 'tmp', 'stg_twitter_ads__line_item_history_tmp'], 'alias': 'stg_twitter_ads__line_item_history_tmp', 'checksum': {'name': 'sha256', 'checksum': 'd796be56366271bfcc2f2d4d23b50372472b0e47a1ba5d62f09ea7218d842b07'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433484.8056767, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__line_item_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nselect *\nfrom {{ var('line_item_history') }}", 'language': 'sql', 'refs': [], 'sources': [['twitter_ads', 'line_item_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.twitter_ads_source.twitter_ads.line_item_history']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__line_item_keywords_report_tmp', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'tmp\\stg_twitter_ads__line_item_keywords_report_tmp.sql', 'original_file_path': 'models\\tmp\\stg_twitter_ads__line_item_keywords_report_tmp.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report_tmp', 'fqn': ['twitter_ads_source', 'tmp', 'stg_twitter_ads__line_item_keywords_report_tmp'], 'alias': 'stg_twitter_ads__line_item_keywords_report_tmp', 'checksum': {'name': 'sha256', 'checksum': '114060cd4737b070ccbc5aef04da886811de6b4bec7e6246e7e36df4f115d55e'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433484.814268, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__line_item_keywords_report_tmp`', 'raw_code': "{{ config(enabled=fivetran_utils.enabled_vars(['ad_reporting__twitter_ads_enabled','twitter_ads__using_keywords'])) }}\n\nselect * \nfrom {{ var('line_item_keywords_report') }}", 'language': 'sql', 'refs': [], 'sources': [['twitter_ads', 'line_item_keywords_report']], 'metrics': [], 'depends_on': {'macros': ['macro.fivetran_utils.enabled_vars'], 'nodes': ['source.twitter_ads_source.twitter_ads.line_item_keywords_report']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__line_item_report_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__line_item_report_tmp', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'tmp\\stg_twitter_ads__line_item_report_tmp.sql', 'original_file_path': 'models\\tmp\\stg_twitter_ads__line_item_report_tmp.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__line_item_report_tmp', 'fqn': ['twitter_ads_source', 'tmp', 'stg_twitter_ads__line_item_report_tmp'], 'alias': 'stg_twitter_ads__line_item_report_tmp', 'checksum': {'name': 'sha256', 'checksum': '9e053b03293d2511468496eb5fafd60ca8a3883594d2b2a24bb61862fb53c552'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433484.8206115, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__line_item_report_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('line_item_report') }}", 'language': 'sql', 'refs': [], 'sources': [['twitter_ads', 'line_item_report']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.twitter_ads_source.twitter_ads.line_item_report']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__promoted_tweet_history_tmp', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'tmp\\stg_twitter_ads__promoted_tweet_history_tmp.sql', 'original_file_path': 'models\\tmp\\stg_twitter_ads__promoted_tweet_history_tmp.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history_tmp', 'fqn': ['twitter_ads_source', 'tmp', 'stg_twitter_ads__promoted_tweet_history_tmp'], 'alias': 'stg_twitter_ads__promoted_tweet_history_tmp', 'checksum': {'name': 'sha256', 'checksum': 'b528c88b68e5a01988e4fb4467e2298ac2be47cfe74ba3ac840044fd214f59da'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433484.8281364, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__promoted_tweet_history_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nselect *\nfrom {{ var('promoted_tweet_history') }}", 'language': 'sql', 'refs': [], 'sources': [['twitter_ads', 'promoted_tweet_history']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.twitter_ads_source.twitter_ads.promoted_tweet_history']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__promoted_tweet_report_tmp', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'tmp\\stg_twitter_ads__promoted_tweet_report_tmp.sql', 'original_file_path': 'models\\tmp\\stg_twitter_ads__promoted_tweet_report_tmp.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report_tmp', 'fqn': ['twitter_ads_source', 'tmp', 'stg_twitter_ads__promoted_tweet_report_tmp'], 'alias': 'stg_twitter_ads__promoted_tweet_report_tmp', 'checksum': {'name': 'sha256', 'checksum': '6bf2743294837bc2b2316127f2df7a40126f942a226653c2f7668e78d972856a'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433484.834522, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__promoted_tweet_report_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nselect *\nfrom {{ var('promoted_tweet_report') }}", 'language': 'sql', 'refs': [], 'sources': [['twitter_ads', 'promoted_tweet_report']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.twitter_ads_source.twitter_ads.promoted_tweet_report']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__tweet_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__tweet_tmp', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'tmp\\stg_twitter_ads__tweet_tmp.sql', 'original_file_path': 'models\\tmp\\stg_twitter_ads__tweet_tmp.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__tweet_tmp', 'fqn': ['twitter_ads_source', 'tmp', 'stg_twitter_ads__tweet_tmp'], 'alias': 'stg_twitter_ads__tweet_tmp', 'checksum': {'name': 'sha256', 'checksum': 'ed6397b8a2245ad4f4e79b75ed4ed8de08fdc4049d651c49e3849db6c073cafd'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433484.8434193, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__tweet_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nselect * \nfrom {{ var('tweet') }}", 'language': 'sql', 'refs': [], 'sources': [['twitter_ads', 'tweet']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.twitter_ads_source.twitter_ads.tweet']}, 'compiled_path': None}, 'model.twitter_ads_source.stg_twitter_ads__tweet_url_tmp': {'database': 'drops-bi', 'schema': 'marketing_full_twitter_ads_source', 'name': 'stg_twitter_ads__tweet_url_tmp', 'resource_type': 'model', 'package_name': 'twitter_ads_source', 'path': 'tmp\\stg_twitter_ads__tweet_url_tmp.sql', 'original_file_path': 'models\\tmp\\stg_twitter_ads__tweet_url_tmp.sql', 'unique_id': 'model.twitter_ads_source.stg_twitter_ads__tweet_url_tmp', 'fqn': ['twitter_ads_source', 'tmp', 'stg_twitter_ads__tweet_url_tmp'], 'alias': 'stg_twitter_ads__tweet_url_tmp', 'checksum': {'name': 'sha256', 'checksum': '9a7338e00449b6c913d5f3c059679ed5be9c64d82f22bb155f6b807124089552'}, 'config': {'enabled': True, 'alias': None, 'schema': 'twitter_ads_source', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view', 'schema': 'twitter_ads_source', 'enabled': True}, 'created_at': 1694433484.8503282, 'config_call_dict': {'enabled': True}, 'relation_name': '`drops-bi`.`marketing_full_twitter_ads_source`.`stg_twitter_ads__tweet_url_tmp`', 'raw_code': "{{ config(enabled=var('ad_reporting__twitter_ads_enabled', True)) }}\n\nselect *\nfrom {{ var('tweet_url') }}", 'language': 'sql', 'refs': [], 'sources': [['twitter_ads', 'tweet_url']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.twitter_ads_source.twitter_ads.tweet_url']}, 'compiled_path': None}, 'test.dbt_ads_test.unique_my_first_dbt_model_id.16e066b321': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'id', 'model': "{{ get_where_subquery(ref('my_first_dbt_model')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'unique_my_first_dbt_model_id', 'resource_type': 'test', 'package_name': 'dbt_ads_test', 'path': 'unique_my_first_dbt_model_id.sql', 'original_file_path': 'models\\example\\schema.yml', 'unique_id': 'test.dbt_ads_test.unique_my_first_dbt_model_id.16e066b321', 'fqn': ['dbt_ads_test', 'example', 'unique_my_first_dbt_model_id'], 'alias': 'unique_my_first_dbt_model_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433484.879982, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['my_first_dbt_model']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['model.dbt_ads_test.my_first_dbt_model']}, 'compiled_path': None, 'column_name': 'id', 'file_key_name': 'models.my_first_dbt_model'}, 'test.dbt_ads_test.not_null_my_first_dbt_model_id.5fb22c2710': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'id', 'model': "{{ get_where_subquery(ref('my_first_dbt_model')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_my_first_dbt_model_id', 'resource_type': 'test', 'package_name': 'dbt_ads_test', 'path': 'not_null_my_first_dbt_model_id.sql', 'original_file_path': 'models\\example\\schema.yml', 'unique_id': 'test.dbt_ads_test.not_null_my_first_dbt_model_id.5fb22c2710', 'fqn': ['dbt_ads_test', 'example', 'not_null_my_first_dbt_model_id'], 'alias': 'not_null_my_first_dbt_model_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433484.8819444, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['my_first_dbt_model']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.dbt_ads_test.my_first_dbt_model']}, 'compiled_path': None, 'column_name': 'id', 'file_key_name': 'models.my_first_dbt_model'}, 'test.dbt_ads_test.unique_my_second_dbt_model_id.57a0f8c493': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'id', 'model': "{{ get_where_subquery(ref('my_second_dbt_model')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'unique_my_second_dbt_model_id', 'resource_type': 'test', 'package_name': 'dbt_ads_test', 'path': 'unique_my_second_dbt_model_id.sql', 'original_file_path': 'models\\example\\schema.yml', 'unique_id': 'test.dbt_ads_test.unique_my_second_dbt_model_id.57a0f8c493', 'fqn': ['dbt_ads_test', 'example', 'unique_my_second_dbt_model_id'], 'alias': 'unique_my_second_dbt_model_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433484.8829713, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['my_second_dbt_model']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['model.dbt_ads_test.my_second_dbt_model']}, 'compiled_path': None, 'column_name': 'id', 'file_key_name': 'models.my_second_dbt_model'}, 'test.dbt_ads_test.not_null_my_second_dbt_model_id.151b76d778': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'id', 'model': "{{ get_where_subquery(ref('my_second_dbt_model')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_my_second_dbt_model_id', 'resource_type': 'test', 'package_name': 'dbt_ads_test', 'path': 'not_null_my_second_dbt_model_id.sql', 'original_file_path': 'models\\example\\schema.yml', 'unique_id': 'test.dbt_ads_test.not_null_my_second_dbt_model_id.151b76d778', 'fqn': ['dbt_ads_test', 'example', 'not_null_my_second_dbt_model_id'], 'alias': 'not_null_my_second_dbt_model_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433484.8849704, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['my_second_dbt_model']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.dbt_ads_test.my_second_dbt_model']}, 'compiled_path': None, 'column_name': 'id', 'file_key_name': 'models.my_second_dbt_model'}, 'test.ad_reporting.not_null_ad_reporting__account_report_account_id.316a64c022': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('ad_reporting__account_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_ad_reporting__account_report_account_id', 'resource_type': 'test', 'package_name': 'ad_reporting', 'path': 'not_null_ad_reporting__account_report_account_id.sql', 'original_file_path': 'models\\ad_reporting_models.yml', 'unique_id': 'test.ad_reporting.not_null_ad_reporting__account_report_account_id.316a64c022', 'fqn': ['ad_reporting', 'not_null_ad_reporting__account_report_account_id'], 'alias': 'not_null_ad_reporting__account_report_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433484.9610484, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['ad_reporting__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.ad_reporting.ad_reporting__account_report']}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.ad_reporting__account_report'}, 'test.ad_reporting.dbt_utils_unique_combination_of_columns_ad_reporting__account_report_platform__date_day__account_id.1cadcf1583': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['platform', 'date_day', 'account_id'], 'model': "{{ get_where_subquery(ref('ad_reporting__account_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_ad_reporting__account_report_platform__date_day__account_id', 'resource_type': 'test', 'package_name': 'ad_reporting', 'path': 'dbt_utils_unique_combination_o_096d5dbf3a188e4736e3d2c607a5a2ce.sql', 'original_file_path': 'models\\ad_reporting_models.yml', 'unique_id': 'test.ad_reporting.dbt_utils_unique_combination_of_columns_ad_reporting__account_report_platform__date_day__account_id.1cadcf1583', 'fqn': ['ad_reporting', 'dbt_utils_unique_combination_of_columns_ad_reporting__account_report_platform__date_day__account_id'], 'alias': 'dbt_utils_unique_combination_o_096d5dbf3a188e4736e3d2c607a5a2ce', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_096d5dbf3a188e4736e3d2c607a5a2ce', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_096d5dbf3a188e4736e3d2c607a5a2ce'}, 'created_at': 1694433484.9630334, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_096d5dbf3a188e4736e3d2c607a5a2ce'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_096d5dbf3a188e4736e3d2c607a5a2ce") }}', 'language': 'sql', 'refs': [['ad_reporting__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.ad_reporting.ad_reporting__account_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.ad_reporting__account_report'}, 'test.ad_reporting.not_null_ad_reporting__ad_group_report_ad_group_id.963e17e842': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('ad_reporting__ad_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_ad_reporting__ad_group_report_ad_group_id', 'resource_type': 'test', 'package_name': 'ad_reporting', 'path': 'not_null_ad_reporting__ad_group_report_ad_group_id.sql', 'original_file_path': 'models\\ad_reporting_models.yml', 'unique_id': 'test.ad_reporting.not_null_ad_reporting__ad_group_report_ad_group_id.963e17e842', 'fqn': ['ad_reporting', 'not_null_ad_reporting__ad_group_report_ad_group_id'], 'alias': 'not_null_ad_reporting__ad_group_report_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433484.9747314, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['ad_reporting__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.ad_reporting.ad_reporting__ad_group_report']}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.ad_reporting__ad_group_report'}, 'test.ad_reporting.dbt_utils_unique_combination_of_columns_ad_reporting__ad_group_report_platform__date_day__ad_group_id__campaign_id__account_id.2116e5a78a': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['platform', 'date_day', 'ad_group_id', 'campaign_id', 'account_id'], 'model': "{{ get_where_subquery(ref('ad_reporting__ad_group_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_ad_reporting__ad_group_report_platform__date_day__ad_group_id__campaign_id__account_id', 'resource_type': 'test', 'package_name': 'ad_reporting', 'path': 'dbt_utils_unique_combination_o_86fffff8dec06644eeb81f4837856342.sql', 'original_file_path': 'models\\ad_reporting_models.yml', 'unique_id': 'test.ad_reporting.dbt_utils_unique_combination_of_columns_ad_reporting__ad_group_report_platform__date_day__ad_group_id__campaign_id__account_id.2116e5a78a', 'fqn': ['ad_reporting', 'dbt_utils_unique_combination_of_columns_ad_reporting__ad_group_report_platform__date_day__ad_group_id__campaign_id__account_id'], 'alias': 'dbt_utils_unique_combination_o_86fffff8dec06644eeb81f4837856342', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_86fffff8dec06644eeb81f4837856342', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_86fffff8dec06644eeb81f4837856342'}, 'created_at': 1694433484.9757214, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_86fffff8dec06644eeb81f4837856342'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_86fffff8dec06644eeb81f4837856342") }}', 'language': 'sql', 'refs': [['ad_reporting__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.ad_reporting.ad_reporting__ad_group_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.ad_reporting__ad_group_report'}, 'test.ad_reporting.not_null_ad_reporting__ad_report_ad_id.f3eb210152': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('ad_reporting__ad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_ad_reporting__ad_report_ad_id', 'resource_type': 'test', 'package_name': 'ad_reporting', 'path': 'not_null_ad_reporting__ad_report_ad_id.sql', 'original_file_path': 'models\\ad_reporting_models.yml', 'unique_id': 'test.ad_reporting.not_null_ad_reporting__ad_report_ad_id.f3eb210152', 'fqn': ['ad_reporting', 'not_null_ad_reporting__ad_report_ad_id'], 'alias': 'not_null_ad_reporting__ad_report_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433484.982014, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['ad_reporting__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.ad_reporting.ad_reporting__ad_report']}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.ad_reporting__ad_report'}, 'test.ad_reporting.dbt_utils_unique_combination_of_columns_ad_reporting__ad_report_platform__date_day__ad_id__ad_group_id__campaign_id__account_id.3c5bc5ae55': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['platform', 'date_day', 'ad_id', 'ad_group_id', 'campaign_id', 'account_id'], 'model': "{{ get_where_subquery(ref('ad_reporting__ad_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_ad_reporting__ad_report_platform__date_day__ad_id__ad_group_id__campaign_id__account_id', 'resource_type': 'test', 'package_name': 'ad_reporting', 'path': 'dbt_utils_unique_combination_o_c3ce7d8d1708ef4f2ca05b498dce6f21.sql', 'original_file_path': 'models\\ad_reporting_models.yml', 'unique_id': 'test.ad_reporting.dbt_utils_unique_combination_of_columns_ad_reporting__ad_report_platform__date_day__ad_id__ad_group_id__campaign_id__account_id.3c5bc5ae55', 'fqn': ['ad_reporting', 'dbt_utils_unique_combination_of_columns_ad_reporting__ad_report_platform__date_day__ad_id__ad_group_id__campaign_id__account_id'], 'alias': 'dbt_utils_unique_combination_o_c3ce7d8d1708ef4f2ca05b498dce6f21', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_c3ce7d8d1708ef4f2ca05b498dce6f21', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_c3ce7d8d1708ef4f2ca05b498dce6f21'}, 'created_at': 1694433484.98302, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_c3ce7d8d1708ef4f2ca05b498dce6f21'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_c3ce7d8d1708ef4f2ca05b498dce6f21") }}', 'language': 'sql', 'refs': [['ad_reporting__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.ad_reporting.ad_reporting__ad_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.ad_reporting__ad_report'}, 'test.ad_reporting.not_null_ad_reporting__campaign_report_campaign_id.1cfaa7698b': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('ad_reporting__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_ad_reporting__campaign_report_campaign_id', 'resource_type': 'test', 'package_name': 'ad_reporting', 'path': 'not_null_ad_reporting__campaign_report_campaign_id.sql', 'original_file_path': 'models\\ad_reporting_models.yml', 'unique_id': 'test.ad_reporting.not_null_ad_reporting__campaign_report_campaign_id.1cfaa7698b', 'fqn': ['ad_reporting', 'not_null_ad_reporting__campaign_report_campaign_id'], 'alias': 'not_null_ad_reporting__campaign_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433484.9892986, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['ad_reporting__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.ad_reporting.ad_reporting__campaign_report']}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.ad_reporting__campaign_report'}, 'test.ad_reporting.dbt_utils_unique_combination_of_columns_ad_reporting__campaign_report_platform__date_day__campaign_id__account_id.4b3426da0f': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['platform', 'date_day', 'campaign_id', 'account_id'], 'model': "{{ get_where_subquery(ref('ad_reporting__campaign_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_ad_reporting__campaign_report_platform__date_day__campaign_id__account_id', 'resource_type': 'test', 'package_name': 'ad_reporting', 'path': 'dbt_utils_unique_combination_o_f617d9a2a7237faaa5a8bf82407d243f.sql', 'original_file_path': 'models\\ad_reporting_models.yml', 'unique_id': 'test.ad_reporting.dbt_utils_unique_combination_of_columns_ad_reporting__campaign_report_platform__date_day__campaign_id__account_id.4b3426da0f', 'fqn': ['ad_reporting', 'dbt_utils_unique_combination_of_columns_ad_reporting__campaign_report_platform__date_day__campaign_id__account_id'], 'alias': 'dbt_utils_unique_combination_o_f617d9a2a7237faaa5a8bf82407d243f', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_f617d9a2a7237faaa5a8bf82407d243f', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_f617d9a2a7237faaa5a8bf82407d243f'}, 'created_at': 1694433484.9913108, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_f617d9a2a7237faaa5a8bf82407d243f'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_f617d9a2a7237faaa5a8bf82407d243f") }}', 'language': 'sql', 'refs': [['ad_reporting__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.ad_reporting.ad_reporting__campaign_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.ad_reporting__campaign_report'}, 'test.ad_reporting.not_null_ad_reporting__keyword_report_keyword_id.51a45fb334': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'keyword_id', 'model': "{{ get_where_subquery(ref('ad_reporting__keyword_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_ad_reporting__keyword_report_keyword_id', 'resource_type': 'test', 'package_name': 'ad_reporting', 'path': 'not_null_ad_reporting__keyword_report_keyword_id.sql', 'original_file_path': 'models\\ad_reporting_models.yml', 'unique_id': 'test.ad_reporting.not_null_ad_reporting__keyword_report_keyword_id.51a45fb334', 'fqn': ['ad_reporting', 'not_null_ad_reporting__keyword_report_keyword_id'], 'alias': 'not_null_ad_reporting__keyword_report_keyword_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433484.995298, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['ad_reporting__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.ad_reporting.ad_reporting__keyword_report']}, 'compiled_path': None, 'column_name': 'keyword_id', 'file_key_name': 'models.ad_reporting__keyword_report'}, 'test.ad_reporting.dbt_utils_unique_combination_of_columns_ad_reporting__keyword_report_platform__date_day__keyword_id__keyword_match_type__ad_group_id__campaign_id__account_id.49b7b978b6': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['platform', 'date_day', 'keyword_id', 'keyword_match_type', 'ad_group_id', 'campaign_id', 'account_id'], 'model': "{{ get_where_subquery(ref('ad_reporting__keyword_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_ad_reporting__keyword_report_platform__date_day__keyword_id__keyword_match_type__ad_group_id__campaign_id__account_id', 'resource_type': 'test', 'package_name': 'ad_reporting', 'path': 'dbt_utils_unique_combination_o_5499321364b1d21748e920ddf811ea4e.sql', 'original_file_path': 'models\\ad_reporting_models.yml', 'unique_id': 'test.ad_reporting.dbt_utils_unique_combination_of_columns_ad_reporting__keyword_report_platform__date_day__keyword_id__keyword_match_type__ad_group_id__campaign_id__account_id.49b7b978b6', 'fqn': ['ad_reporting', 'dbt_utils_unique_combination_of_columns_ad_reporting__keyword_report_platform__date_day__keyword_id__keyword_match_type__ad_group_id__campaign_id__account_id'], 'alias': 'dbt_utils_unique_combination_o_5499321364b1d21748e920ddf811ea4e', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_5499321364b1d21748e920ddf811ea4e', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_5499321364b1d21748e920ddf811ea4e'}, 'created_at': 1694433484.9979613, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_5499321364b1d21748e920ddf811ea4e'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_5499321364b1d21748e920ddf811ea4e") }}', 'language': 'sql', 'refs': [['ad_reporting__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.ad_reporting.ad_reporting__keyword_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.ad_reporting__keyword_report'}, 'test.ad_reporting.not_null_ad_reporting__search_report_search_query.ee2f0fcafb': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'search_query', 'model': "{{ get_where_subquery(ref('ad_reporting__search_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_ad_reporting__search_report_search_query', 'resource_type': 'test', 'package_name': 'ad_reporting', 'path': 'not_null_ad_reporting__search_report_search_query.sql', 'original_file_path': 'models\\ad_reporting_models.yml', 'unique_id': 'test.ad_reporting.not_null_ad_reporting__search_report_search_query.ee2f0fcafb', 'fqn': ['ad_reporting', 'not_null_ad_reporting__search_report_search_query'], 'alias': 'not_null_ad_reporting__search_report_search_query', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.0039656, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['ad_reporting__search_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.ad_reporting.ad_reporting__search_report']}, 'compiled_path': None, 'column_name': 'search_query', 'file_key_name': 'models.ad_reporting__search_report'}, 'test.ad_reporting.dbt_utils_unique_combination_of_columns_ad_reporting__search_report_platform__date_day__search_query__search_match_type__keyword_id__ad_group_id__campaign_id__account_id.4efd457bbf': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['platform', 'date_day', 'search_query', 'search_match_type', 'keyword_id', 'ad_group_id', 'campaign_id', 'account_id'], 'model': "{{ get_where_subquery(ref('ad_reporting__search_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_ad_reporting__search_report_platform__date_day__search_query__search_match_type__keyword_id__ad_group_id__campaign_id__account_id', 'resource_type': 'test', 'package_name': 'ad_reporting', 'path': 'dbt_utils_unique_combination_o_437a89e9e4e53f95ce99529e3a181371.sql', 'original_file_path': 'models\\ad_reporting_models.yml', 'unique_id': 'test.ad_reporting.dbt_utils_unique_combination_of_columns_ad_reporting__search_report_platform__date_day__search_query__search_match_type__keyword_id__ad_group_id__campaign_id__account_id.4efd457bbf', 'fqn': ['ad_reporting', 'dbt_utils_unique_combination_of_columns_ad_reporting__search_report_platform__date_day__search_query__search_match_type__keyword_id__ad_group_id__campaign_id__account_id'], 'alias': 'dbt_utils_unique_combination_o_437a89e9e4e53f95ce99529e3a181371', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_437a89e9e4e53f95ce99529e3a181371', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_437a89e9e4e53f95ce99529e3a181371'}, 'created_at': 1694433485.0049653, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_437a89e9e4e53f95ce99529e3a181371'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_437a89e9e4e53f95ce99529e3a181371") }}', 'language': 'sql', 'refs': [['ad_reporting__search_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.ad_reporting.ad_reporting__search_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.ad_reporting__search_report'}, 'test.ad_reporting.not_null_ad_reporting__url_report_base_url.a29864e5b6': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'base_url', 'model': "{{ get_where_subquery(ref('ad_reporting__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_ad_reporting__url_report_base_url', 'resource_type': 'test', 'package_name': 'ad_reporting', 'path': 'not_null_ad_reporting__url_report_base_url.sql', 'original_file_path': 'models\\ad_reporting_models.yml', 'unique_id': 'test.ad_reporting.not_null_ad_reporting__url_report_base_url.a29864e5b6', 'fqn': ['ad_reporting', 'not_null_ad_reporting__url_report_base_url'], 'alias': 'not_null_ad_reporting__url_report_base_url', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True}, 'created_at': 1694433485.0124779, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(enabled=True) }}', 'language': 'sql', 'refs': [['ad_reporting__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.ad_reporting.ad_reporting__url_report']}, 'compiled_path': None, 'column_name': 'base_url', 'file_key_name': 'models.ad_reporting__url_report'}, 'test.ad_reporting.dbt_utils_unique_combination_of_columns_ad_reporting__url_report_platform__date_day__ad_group_id__campaign_id__account_id__base_url__url_host__url_path__utm_campaign__utm_content__utm_medium__utm_source__utm_term.cd216b1424': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['platform', 'date_day', 'ad_group_id', 'campaign_id', 'account_id', 'base_url', 'url_host', 'url_path', 'utm_campaign', 'utm_content', 'utm_medium', 'utm_source', 'utm_term'], 'model': "{{ get_where_subquery(ref('ad_reporting__url_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_ad_reporting__url_report_platform__date_day__ad_group_id__campaign_id__account_id__base_url__url_host__url_path__utm_campaign__utm_content__utm_medium__utm_source__utm_term', 'resource_type': 'test', 'package_name': 'ad_reporting', 'path': 'dbt_utils_unique_combination_o_996efa0d96cfeb69e01d6d9960ce6a10.sql', 'original_file_path': 'models\\ad_reporting_models.yml', 'unique_id': 'test.ad_reporting.dbt_utils_unique_combination_of_columns_ad_reporting__url_report_platform__date_day__ad_group_id__campaign_id__account_id__base_url__url_host__url_path__utm_campaign__utm_content__utm_medium__utm_source__utm_term.cd216b1424', 'fqn': ['ad_reporting', 'dbt_utils_unique_combination_of_columns_ad_reporting__url_report_platform__date_day__ad_group_id__campaign_id__account_id__base_url__url_host__url_path__utm_campaign__utm_content__utm_medium__utm_source__utm_term'], 'alias': 'dbt_utils_unique_combination_o_996efa0d96cfeb69e01d6d9960ce6a10', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_996efa0d96cfeb69e01d6d9960ce6a10', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_996efa0d96cfeb69e01d6d9960ce6a10'}, 'created_at': 1694433485.014478, 'config_call_dict': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_996efa0d96cfeb69e01d6d9960ce6a10'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(enabled=True,alias="dbt_utils_unique_combination_o_996efa0d96cfeb69e01d6d9960ce6a10") }}', 'language': 'sql', 'refs': [['ad_reporting__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.ad_reporting.ad_reporting__url_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.ad_reporting__url_report'}, 'test.amazon_ads.not_null_amazon_ads__account_report_profile_id.87fb8dbe66': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'profile_id', 'model': "{{ get_where_subquery(ref('amazon_ads__account_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_amazon_ads__account_report_profile_id', 'resource_type': 'test', 'package_name': 'amazon_ads', 'path': 'not_null_amazon_ads__account_report_profile_id.sql', 'original_file_path': 'models\\amazon_ads.yml', 'unique_id': 'test.amazon_ads.not_null_amazon_ads__account_report_profile_id.87fb8dbe66', 'fqn': ['amazon_ads', 'not_null_amazon_ads__account_report_profile_id'], 'alias': 'not_null_amazon_ads__account_report_profile_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.1376734, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['amazon_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'profile_id', 'file_key_name': 'models.amazon_ads__account_report'}, 'test.amazon_ads.not_null_amazon_ads__account_report_account_id.83adef7061': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('amazon_ads__account_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_amazon_ads__account_report_account_id', 'resource_type': 'test', 'package_name': 'amazon_ads', 'path': 'not_null_amazon_ads__account_report_account_id.sql', 'original_file_path': 'models\\amazon_ads.yml', 'unique_id': 'test.amazon_ads.not_null_amazon_ads__account_report_account_id.83adef7061', 'fqn': ['amazon_ads', 'not_null_amazon_ads__account_report_account_id'], 'alias': 'not_null_amazon_ads__account_report_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.1396778, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['amazon_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.amazon_ads__account_report'}, 'test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__account_report_date_day__profile_id.3d2673ade2': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'profile_id'], 'model': "{{ get_where_subquery(ref('amazon_ads__account_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_amazon_ads__account_report_date_day__profile_id', 'resource_type': 'test', 'package_name': 'amazon_ads', 'path': 'dbt_utils_unique_combination_o_6ed874aa44aa50dc6754845fe295cf06.sql', 'original_file_path': 'models\\amazon_ads.yml', 'unique_id': 'test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__account_report_date_day__profile_id.3d2673ade2', 'fqn': ['amazon_ads', 'dbt_utils_unique_combination_of_columns_amazon_ads__account_report_date_day__profile_id'], 'alias': 'dbt_utils_unique_combination_o_6ed874aa44aa50dc6754845fe295cf06', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_6ed874aa44aa50dc6754845fe295cf06', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_6ed874aa44aa50dc6754845fe295cf06'}, 'created_at': 1694433485.1416774, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_6ed874aa44aa50dc6754845fe295cf06'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_6ed874aa44aa50dc6754845fe295cf06") }}', 'language': 'sql', 'refs': [['amazon_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.amazon_ads__account_report'}, 'test.amazon_ads.not_null_amazon_ads__ad_group_report_ad_group_id.8a23dc123a': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('amazon_ads__ad_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_amazon_ads__ad_group_report_ad_group_id', 'resource_type': 'test', 'package_name': 'amazon_ads', 'path': 'not_null_amazon_ads__ad_group_report_ad_group_id.sql', 'original_file_path': 'models\\amazon_ads.yml', 'unique_id': 'test.amazon_ads.not_null_amazon_ads__ad_group_report_ad_group_id.8a23dc123a', 'fqn': ['amazon_ads', 'not_null_amazon_ads__ad_group_report_ad_group_id'], 'alias': 'not_null_amazon_ads__ad_group_report_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.1460452, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['amazon_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.amazon_ads__ad_group_report'}, 'test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__ad_group_report_date_day__ad_group_id.e2963c59e1': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'ad_group_id'], 'model': "{{ get_where_subquery(ref('amazon_ads__ad_group_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_amazon_ads__ad_group_report_date_day__ad_group_id', 'resource_type': 'test', 'package_name': 'amazon_ads', 'path': 'dbt_utils_unique_combination_o_18996a14b967587808436224f70e9241.sql', 'original_file_path': 'models\\amazon_ads.yml', 'unique_id': 'test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__ad_group_report_date_day__ad_group_id.e2963c59e1', 'fqn': ['amazon_ads', 'dbt_utils_unique_combination_of_columns_amazon_ads__ad_group_report_date_day__ad_group_id'], 'alias': 'dbt_utils_unique_combination_o_18996a14b967587808436224f70e9241', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_18996a14b967587808436224f70e9241', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_18996a14b967587808436224f70e9241'}, 'created_at': 1694433485.1485703, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_18996a14b967587808436224f70e9241'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_18996a14b967587808436224f70e9241") }}', 'language': 'sql', 'refs': [['amazon_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.amazon_ads__ad_group_report'}, 'test.amazon_ads.not_null_amazon_ads__ad_report_ad_id.93728159b3': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('amazon_ads__ad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_amazon_ads__ad_report_ad_id', 'resource_type': 'test', 'package_name': 'amazon_ads', 'path': 'not_null_amazon_ads__ad_report_ad_id.sql', 'original_file_path': 'models\\amazon_ads.yml', 'unique_id': 'test.amazon_ads.not_null_amazon_ads__ad_report_ad_id.93728159b3', 'fqn': ['amazon_ads', 'not_null_amazon_ads__ad_report_ad_id'], 'alias': 'not_null_amazon_ads__ad_report_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.1526148, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['amazon_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.amazon_ads__ad_report'}, 'test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__ad_report_date_day__ad_id.cb64b8d0f7': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'ad_id'], 'model': "{{ get_where_subquery(ref('amazon_ads__ad_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_amazon_ads__ad_report_date_day__ad_id', 'resource_type': 'test', 'package_name': 'amazon_ads', 'path': 'dbt_utils_unique_combination_o_7e938186a70fc693a9b0fdc4e976a536.sql', 'original_file_path': 'models\\amazon_ads.yml', 'unique_id': 'test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__ad_report_date_day__ad_id.cb64b8d0f7', 'fqn': ['amazon_ads', 'dbt_utils_unique_combination_of_columns_amazon_ads__ad_report_date_day__ad_id'], 'alias': 'dbt_utils_unique_combination_o_7e938186a70fc693a9b0fdc4e976a536', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_7e938186a70fc693a9b0fdc4e976a536', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_7e938186a70fc693a9b0fdc4e976a536'}, 'created_at': 1694433485.1536229, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_7e938186a70fc693a9b0fdc4e976a536'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_7e938186a70fc693a9b0fdc4e976a536") }}', 'language': 'sql', 'refs': [['amazon_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.amazon_ads__ad_report'}, 'test.amazon_ads.not_null_amazon_ads__campaign_report_campaign_id.a9cabadd7c': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('amazon_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_amazon_ads__campaign_report_campaign_id', 'resource_type': 'test', 'package_name': 'amazon_ads', 'path': 'not_null_amazon_ads__campaign_report_campaign_id.sql', 'original_file_path': 'models\\amazon_ads.yml', 'unique_id': 'test.amazon_ads.not_null_amazon_ads__campaign_report_campaign_id.a9cabadd7c', 'fqn': ['amazon_ads', 'not_null_amazon_ads__campaign_report_campaign_id'], 'alias': 'not_null_amazon_ads__campaign_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.1581519, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['amazon_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.amazon_ads__campaign_report'}, 'test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__campaign_report_date_day__campaign_id.32a2e699e0': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'campaign_id'], 'model': "{{ get_where_subquery(ref('amazon_ads__campaign_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_amazon_ads__campaign_report_date_day__campaign_id', 'resource_type': 'test', 'package_name': 'amazon_ads', 'path': 'dbt_utils_unique_combination_o_1ea261631e657e41cdd7eb8202913e33.sql', 'original_file_path': 'models\\amazon_ads.yml', 'unique_id': 'test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__campaign_report_date_day__campaign_id.32a2e699e0', 'fqn': ['amazon_ads', 'dbt_utils_unique_combination_of_columns_amazon_ads__campaign_report_date_day__campaign_id'], 'alias': 'dbt_utils_unique_combination_o_1ea261631e657e41cdd7eb8202913e33', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_1ea261631e657e41cdd7eb8202913e33', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_1ea261631e657e41cdd7eb8202913e33'}, 'created_at': 1694433485.1601562, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_1ea261631e657e41cdd7eb8202913e33'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_1ea261631e657e41cdd7eb8202913e33") }}', 'language': 'sql', 'refs': [['amazon_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.amazon_ads__campaign_report'}, 'test.amazon_ads.not_null_amazon_ads__portfolio_report_profile_id.1a910441c6': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'profile_id', 'model': "{{ get_where_subquery(ref('amazon_ads__portfolio_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_amazon_ads__portfolio_report_profile_id', 'resource_type': 'test', 'package_name': 'amazon_ads', 'path': 'not_null_amazon_ads__portfolio_report_profile_id.sql', 'original_file_path': 'models\\amazon_ads.yml', 'unique_id': 'test.amazon_ads.not_null_amazon_ads__portfolio_report_profile_id.1a910441c6', 'fqn': ['amazon_ads', 'not_null_amazon_ads__portfolio_report_profile_id'], 'alias': 'not_null_amazon_ads__portfolio_report_profile_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.1651554, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['amazon_ads__portfolio_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'profile_id', 'file_key_name': 'models.amazon_ads__portfolio_report'}, 'test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__portfolio_report_date_day__portfolio_id.1a53f40fd6': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'portfolio_id'], 'model': "{{ get_where_subquery(ref('amazon_ads__portfolio_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_amazon_ads__portfolio_report_date_day__portfolio_id', 'resource_type': 'test', 'package_name': 'amazon_ads', 'path': 'dbt_utils_unique_combination_o_2b914fbf0d57f280e6738a6bf6a2805f.sql', 'original_file_path': 'models\\amazon_ads.yml', 'unique_id': 'test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__portfolio_report_date_day__portfolio_id.1a53f40fd6', 'fqn': ['amazon_ads', 'dbt_utils_unique_combination_of_columns_amazon_ads__portfolio_report_date_day__portfolio_id'], 'alias': 'dbt_utils_unique_combination_o_2b914fbf0d57f280e6738a6bf6a2805f', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_2b914fbf0d57f280e6738a6bf6a2805f', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_2b914fbf0d57f280e6738a6bf6a2805f'}, 'created_at': 1694433485.1661553, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_2b914fbf0d57f280e6738a6bf6a2805f'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_2b914fbf0d57f280e6738a6bf6a2805f") }}', 'language': 'sql', 'refs': [['amazon_ads__portfolio_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.amazon_ads__portfolio_report'}, 'test.amazon_ads.not_null_amazon_ads__keyword_report_keyword_id.303f680e4a': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'keyword_id', 'model': "{{ get_where_subquery(ref('amazon_ads__keyword_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_amazon_ads__keyword_report_keyword_id', 'resource_type': 'test', 'package_name': 'amazon_ads', 'path': 'not_null_amazon_ads__keyword_report_keyword_id.sql', 'original_file_path': 'models\\amazon_ads.yml', 'unique_id': 'test.amazon_ads.not_null_amazon_ads__keyword_report_keyword_id.303f680e4a', 'fqn': ['amazon_ads', 'not_null_amazon_ads__keyword_report_keyword_id'], 'alias': 'not_null_amazon_ads__keyword_report_keyword_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.1706653, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['amazon_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'keyword_id', 'file_key_name': 'models.amazon_ads__keyword_report'}, 'test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__keyword_report_date_day__keyword_id.2f70b31a80': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'keyword_id'], 'model': "{{ get_where_subquery(ref('amazon_ads__keyword_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_amazon_ads__keyword_report_date_day__keyword_id', 'resource_type': 'test', 'package_name': 'amazon_ads', 'path': 'dbt_utils_unique_combination_o_5f7a5df7cd8d9aa6dcf433fbef667751.sql', 'original_file_path': 'models\\amazon_ads.yml', 'unique_id': 'test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__keyword_report_date_day__keyword_id.2f70b31a80', 'fqn': ['amazon_ads', 'dbt_utils_unique_combination_of_columns_amazon_ads__keyword_report_date_day__keyword_id'], 'alias': 'dbt_utils_unique_combination_o_5f7a5df7cd8d9aa6dcf433fbef667751', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_5f7a5df7cd8d9aa6dcf433fbef667751', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_5f7a5df7cd8d9aa6dcf433fbef667751'}, 'created_at': 1694433485.1726654, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_5f7a5df7cd8d9aa6dcf433fbef667751'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_5f7a5df7cd8d9aa6dcf433fbef667751") }}', 'language': 'sql', 'refs': [['amazon_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.amazon_ads__keyword_report'}, 'test.amazon_ads.not_null_amazon_ads__search_report_search_term.3c23d4658a': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'search_term', 'model': "{{ get_where_subquery(ref('amazon_ads__search_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_amazon_ads__search_report_search_term', 'resource_type': 'test', 'package_name': 'amazon_ads', 'path': 'not_null_amazon_ads__search_report_search_term.sql', 'original_file_path': 'models\\amazon_ads.yml', 'unique_id': 'test.amazon_ads.not_null_amazon_ads__search_report_search_term.3c23d4658a', 'fqn': ['amazon_ads', 'not_null_amazon_ads__search_report_search_term'], 'alias': 'not_null_amazon_ads__search_report_search_term', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.177171, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['amazon_ads__search_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'search_term', 'file_key_name': 'models.amazon_ads__search_report'}, 'test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__search_report_date_day__search_term__keyword_id.be92659f9f': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'search_term', 'keyword_id'], 'model': "{{ get_where_subquery(ref('amazon_ads__search_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_amazon_ads__search_report_date_day__search_term__keyword_id', 'resource_type': 'test', 'package_name': 'amazon_ads', 'path': 'dbt_utils_unique_combination_o_31232c8fcd8b9b4a5cc701d1caae2b67.sql', 'original_file_path': 'models\\amazon_ads.yml', 'unique_id': 'test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__search_report_date_day__search_term__keyword_id.be92659f9f', 'fqn': ['amazon_ads', 'dbt_utils_unique_combination_of_columns_amazon_ads__search_report_date_day__search_term__keyword_id'], 'alias': 'dbt_utils_unique_combination_o_31232c8fcd8b9b4a5cc701d1caae2b67', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_31232c8fcd8b9b4a5cc701d1caae2b67', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_31232c8fcd8b9b4a5cc701d1caae2b67'}, 'created_at': 1694433485.178192, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_31232c8fcd8b9b4a5cc701d1caae2b67'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_31232c8fcd8b9b4a5cc701d1caae2b67") }}', 'language': 'sql', 'refs': [['amazon_ads__search_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.amazon_ads__search_report'}, 'test.amazon_ads_source.not_null_stg_amazon_ads__ad_group_history_ad_group_id.6b524b990b': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('stg_amazon_ads__ad_group_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_amazon_ads__ad_group_history_ad_group_id', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'not_null_stg_amazon_ads__ad_group_history_ad_group_id.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.not_null_stg_amazon_ads__ad_group_history_ad_group_id.6b524b990b', 'fqn': ['amazon_ads_source', 'not_null_stg_amazon_ads__ad_group_history_ad_group_id'], 'alias': 'not_null_stg_amazon_ads__ad_group_history_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.275537, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_amazon_ads__ad_group_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.stg_amazon_ads__ad_group_history'}, 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__ad_group_history_ad_group_id__last_updated_date.9d2ad05ee9': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_group_id', 'last_updated_date'], 'model': "{{ get_where_subquery(ref('stg_amazon_ads__ad_group_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__ad_group_history_ad_group_id__last_updated_date', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'dbt_utils_unique_combination_o_b825bf39ab172d49ce4969d3360ae9a1.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__ad_group_history_ad_group_id__last_updated_date.9d2ad05ee9', 'fqn': ['amazon_ads_source', 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__ad_group_history_ad_group_id__last_updated_date'], 'alias': 'dbt_utils_unique_combination_o_b825bf39ab172d49ce4969d3360ae9a1', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_b825bf39ab172d49ce4969d3360ae9a1', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_b825bf39ab172d49ce4969d3360ae9a1'}, 'created_at': 1694433485.2772014, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_b825bf39ab172d49ce4969d3360ae9a1'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_b825bf39ab172d49ce4969d3360ae9a1") }}', 'language': 'sql', 'refs': [['stg_amazon_ads__ad_group_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_amazon_ads__ad_group_history'}, 'test.amazon_ads_source.not_null_stg_amazon_ads__ad_group_level_report_ad_group_id.ee4ef641c3': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('stg_amazon_ads__ad_group_level_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_amazon_ads__ad_group_level_report_ad_group_id', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'not_null_stg_amazon_ads__ad_group_level_report_ad_group_id.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.not_null_stg_amazon_ads__ad_group_level_report_ad_group_id.ee4ef641c3', 'fqn': ['amazon_ads_source', 'not_null_stg_amazon_ads__ad_group_level_report_ad_group_id'], 'alias': 'not_null_stg_amazon_ads__ad_group_level_report_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.2819834, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_amazon_ads__ad_group_level_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.stg_amazon_ads__ad_group_level_report'}, 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__ad_group_level_report_ad_group_id__date_day.f014d2ad94': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_group_id', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_amazon_ads__ad_group_level_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__ad_group_level_report_ad_group_id__date_day', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'dbt_utils_unique_combination_o_b23ba4f5baf6fbdd2fefaeb1251b311d.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__ad_group_level_report_ad_group_id__date_day.f014d2ad94', 'fqn': ['amazon_ads_source', 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__ad_group_level_report_ad_group_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_b23ba4f5baf6fbdd2fefaeb1251b311d', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_b23ba4f5baf6fbdd2fefaeb1251b311d', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_b23ba4f5baf6fbdd2fefaeb1251b311d'}, 'created_at': 1694433485.2840018, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_b23ba4f5baf6fbdd2fefaeb1251b311d'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_b23ba4f5baf6fbdd2fefaeb1251b311d") }}', 'language': 'sql', 'refs': [['stg_amazon_ads__ad_group_level_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_amazon_ads__ad_group_level_report'}, 'test.amazon_ads_source.not_null_stg_amazon_ads__advertised_product_report_ad_id.307c6bc8d4': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('stg_amazon_ads__advertised_product_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_amazon_ads__advertised_product_report_ad_id', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'not_null_stg_amazon_ads__advertised_product_report_ad_id.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.not_null_stg_amazon_ads__advertised_product_report_ad_id.307c6bc8d4', 'fqn': ['amazon_ads_source', 'not_null_stg_amazon_ads__advertised_product_report_ad_id'], 'alias': 'not_null_stg_amazon_ads__advertised_product_report_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.2885091, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_amazon_ads__advertised_product_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.stg_amazon_ads__advertised_product_report'}, 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__advertised_product_report_ad_id__date_day.866a51d99d': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_amazon_ads__advertised_product_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__advertised_product_report_ad_id__date_day', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'dbt_utils_unique_combination_o_aeb3570ec2093361b49d6d6843df0417.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__advertised_product_report_ad_id__date_day.866a51d99d', 'fqn': ['amazon_ads_source', 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__advertised_product_report_ad_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_aeb3570ec2093361b49d6d6843df0417', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_aeb3570ec2093361b49d6d6843df0417', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_aeb3570ec2093361b49d6d6843df0417'}, 'created_at': 1694433485.289511, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_aeb3570ec2093361b49d6d6843df0417'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_aeb3570ec2093361b49d6d6843df0417") }}', 'language': 'sql', 'refs': [['stg_amazon_ads__advertised_product_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_amazon_ads__advertised_product_report'}, 'test.amazon_ads_source.not_null_stg_amazon_ads__campaign_history_campaign_id.49e395897c': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_amazon_ads__campaign_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_amazon_ads__campaign_history_campaign_id', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'not_null_stg_amazon_ads__campaign_history_campaign_id.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.not_null_stg_amazon_ads__campaign_history_campaign_id.49e395897c', 'fqn': ['amazon_ads_source', 'not_null_stg_amazon_ads__campaign_history_campaign_id'], 'alias': 'not_null_stg_amazon_ads__campaign_history_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.2945113, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_amazon_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_amazon_ads__campaign_history'}, 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__campaign_history_campaign_id__last_updated_date.3a70468382': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', 'last_updated_date'], 'model': "{{ get_where_subquery(ref('stg_amazon_ads__campaign_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__campaign_history_campaign_id__last_updated_date', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'dbt_utils_unique_combination_o_ea36d6ecb42fc2f85eae0659671721d9.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__campaign_history_campaign_id__last_updated_date.3a70468382', 'fqn': ['amazon_ads_source', 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__campaign_history_campaign_id__last_updated_date'], 'alias': 'dbt_utils_unique_combination_o_ea36d6ecb42fc2f85eae0659671721d9', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_ea36d6ecb42fc2f85eae0659671721d9', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_ea36d6ecb42fc2f85eae0659671721d9'}, 'created_at': 1694433485.295511, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_ea36d6ecb42fc2f85eae0659671721d9'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_ea36d6ecb42fc2f85eae0659671721d9") }}', 'language': 'sql', 'refs': [['stg_amazon_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_amazon_ads__campaign_history'}, 'test.amazon_ads_source.not_null_stg_amazon_ads__campaign_level_report_campaign_id.1efec68194': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_amazon_ads__campaign_level_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_amazon_ads__campaign_level_report_campaign_id', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'not_null_stg_amazon_ads__campaign_level_report_campaign_id.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.not_null_stg_amazon_ads__campaign_level_report_campaign_id.1efec68194', 'fqn': ['amazon_ads_source', 'not_null_stg_amazon_ads__campaign_level_report_campaign_id'], 'alias': 'not_null_stg_amazon_ads__campaign_level_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.3013697, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_amazon_ads__campaign_level_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_amazon_ads__campaign_level_report'}, 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__campaign_level_report_campaign_id__date_day.8e5392b313': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_amazon_ads__campaign_level_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__campaign_level_report_campaign_id__date_day', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'dbt_utils_unique_combination_o_8181dab5f509aa221040aca686d2f748.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__campaign_level_report_campaign_id__date_day.8e5392b313', 'fqn': ['amazon_ads_source', 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__campaign_level_report_campaign_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_8181dab5f509aa221040aca686d2f748', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_8181dab5f509aa221040aca686d2f748', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_8181dab5f509aa221040aca686d2f748'}, 'created_at': 1694433485.3024483, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_8181dab5f509aa221040aca686d2f748'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_8181dab5f509aa221040aca686d2f748") }}', 'language': 'sql', 'refs': [['stg_amazon_ads__campaign_level_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_amazon_ads__campaign_level_report'}, 'test.amazon_ads_source.not_null_stg_amazon_ads__keyword_history_keyword_id.f21f6add6e': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'keyword_id', 'model': "{{ get_where_subquery(ref('stg_amazon_ads__keyword_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_amazon_ads__keyword_history_keyword_id', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'not_null_stg_amazon_ads__keyword_history_keyword_id.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.not_null_stg_amazon_ads__keyword_history_keyword_id.f21f6add6e', 'fqn': ['amazon_ads_source', 'not_null_stg_amazon_ads__keyword_history_keyword_id'], 'alias': 'not_null_stg_amazon_ads__keyword_history_keyword_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.307242, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_amazon_ads__keyword_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'keyword_id', 'file_key_name': 'models.stg_amazon_ads__keyword_history'}, 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__keyword_history_keyword_id__last_updated_date.fcd76c3197': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['keyword_id', 'last_updated_date'], 'model': "{{ get_where_subquery(ref('stg_amazon_ads__keyword_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__keyword_history_keyword_id__last_updated_date', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'dbt_utils_unique_combination_o_346b096ed77071642a51719dee42f3be.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__keyword_history_keyword_id__last_updated_date.fcd76c3197', 'fqn': ['amazon_ads_source', 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__keyword_history_keyword_id__last_updated_date'], 'alias': 'dbt_utils_unique_combination_o_346b096ed77071642a51719dee42f3be', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_346b096ed77071642a51719dee42f3be', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_346b096ed77071642a51719dee42f3be'}, 'created_at': 1694433485.3083346, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_346b096ed77071642a51719dee42f3be'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_346b096ed77071642a51719dee42f3be") }}', 'language': 'sql', 'refs': [['stg_amazon_ads__keyword_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_amazon_ads__keyword_history'}, 'test.amazon_ads_source.not_null_stg_amazon_ads__portfolio_history_portfolio_id.e22bb2ba02': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'portfolio_id', 'model': "{{ get_where_subquery(ref('stg_amazon_ads__portfolio_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_amazon_ads__portfolio_history_portfolio_id', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'not_null_stg_amazon_ads__portfolio_history_portfolio_id.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.not_null_stg_amazon_ads__portfolio_history_portfolio_id.e22bb2ba02', 'fqn': ['amazon_ads_source', 'not_null_stg_amazon_ads__portfolio_history_portfolio_id'], 'alias': 'not_null_stg_amazon_ads__portfolio_history_portfolio_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.3126948, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_amazon_ads__portfolio_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'portfolio_id', 'file_key_name': 'models.stg_amazon_ads__portfolio_history'}, 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__portfolio_history_portfolio_id__last_updated_date.72b1221050': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['portfolio_id', 'last_updated_date'], 'model': "{{ get_where_subquery(ref('stg_amazon_ads__portfolio_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__portfolio_history_portfolio_id__last_updated_date', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'dbt_utils_unique_combination_o_f34d615bb6f942bd1789096833bf4147.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__portfolio_history_portfolio_id__last_updated_date.72b1221050', 'fqn': ['amazon_ads_source', 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__portfolio_history_portfolio_id__last_updated_date'], 'alias': 'dbt_utils_unique_combination_o_f34d615bb6f942bd1789096833bf4147', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_f34d615bb6f942bd1789096833bf4147', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_f34d615bb6f942bd1789096833bf4147'}, 'created_at': 1694433485.3148673, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_f34d615bb6f942bd1789096833bf4147'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_f34d615bb6f942bd1789096833bf4147") }}', 'language': 'sql', 'refs': [['stg_amazon_ads__portfolio_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_amazon_ads__portfolio_history'}, 'test.amazon_ads_source.not_null_stg_amazon_ads__product_ad_history_ad_id.8744ab1cd8': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('stg_amazon_ads__product_ad_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_amazon_ads__product_ad_history_ad_id', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'not_null_stg_amazon_ads__product_ad_history_ad_id.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.not_null_stg_amazon_ads__product_ad_history_ad_id.8744ab1cd8', 'fqn': ['amazon_ads_source', 'not_null_stg_amazon_ads__product_ad_history_ad_id'], 'alias': 'not_null_stg_amazon_ads__product_ad_history_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.319785, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_amazon_ads__product_ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.stg_amazon_ads__product_ad_history'}, 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__product_ad_history_ad_id__last_updated_date.b0106257b4': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'last_updated_date'], 'model': "{{ get_where_subquery(ref('stg_amazon_ads__product_ad_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__product_ad_history_ad_id__last_updated_date', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'dbt_utils_unique_combination_o_ab95560d07b97f5673463efe945e7814.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__product_ad_history_ad_id__last_updated_date.b0106257b4', 'fqn': ['amazon_ads_source', 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__product_ad_history_ad_id__last_updated_date'], 'alias': 'dbt_utils_unique_combination_o_ab95560d07b97f5673463efe945e7814', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_ab95560d07b97f5673463efe945e7814', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_ab95560d07b97f5673463efe945e7814'}, 'created_at': 1694433485.3218746, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_ab95560d07b97f5673463efe945e7814'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_ab95560d07b97f5673463efe945e7814") }}', 'language': 'sql', 'refs': [['stg_amazon_ads__product_ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_amazon_ads__product_ad_history'}, 'test.amazon_ads_source.not_null_stg_amazon_ads__profile_profile_id.bd192c102b': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'profile_id', 'model': "{{ get_where_subquery(ref('stg_amazon_ads__profile')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_amazon_ads__profile_profile_id', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'not_null_stg_amazon_ads__profile_profile_id.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.not_null_stg_amazon_ads__profile_profile_id.bd192c102b', 'fqn': ['amazon_ads_source', 'not_null_stg_amazon_ads__profile_profile_id'], 'alias': 'not_null_stg_amazon_ads__profile_profile_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.32587, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_amazon_ads__profile']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'profile_id', 'file_key_name': 'models.stg_amazon_ads__profile'}, 'test.amazon_ads_source.not_null_stg_amazon_ads__targeting_keyword_report_keyword_id.101a3299d7': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'keyword_id', 'model': "{{ get_where_subquery(ref('stg_amazon_ads__targeting_keyword_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_amazon_ads__targeting_keyword_report_keyword_id', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'not_null_stg_amazon_ads__targeting_keyword_report_keyword_id.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.not_null_stg_amazon_ads__targeting_keyword_report_keyword_id.101a3299d7', 'fqn': ['amazon_ads_source', 'not_null_stg_amazon_ads__targeting_keyword_report_keyword_id'], 'alias': 'not_null_stg_amazon_ads__targeting_keyword_report_keyword_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.3274589, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_amazon_ads__targeting_keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'keyword_id', 'file_key_name': 'models.stg_amazon_ads__targeting_keyword_report'}, 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__targeting_keyword_report_keyword_id__date_day.cc516f7bcb': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['keyword_id', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_amazon_ads__targeting_keyword_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__targeting_keyword_report_keyword_id__date_day', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'dbt_utils_unique_combination_o_4a47e02be36493c13722699ad58e4de6.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__targeting_keyword_report_keyword_id__date_day.cc516f7bcb', 'fqn': ['amazon_ads_source', 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__targeting_keyword_report_keyword_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_4a47e02be36493c13722699ad58e4de6', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_4a47e02be36493c13722699ad58e4de6', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_4a47e02be36493c13722699ad58e4de6'}, 'created_at': 1694433485.3295317, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_4a47e02be36493c13722699ad58e4de6'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_4a47e02be36493c13722699ad58e4de6") }}', 'language': 'sql', 'refs': [['stg_amazon_ads__targeting_keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_amazon_ads__targeting_keyword_report'}, 'test.amazon_ads_source.not_null_stg_amazon_ads__search_term_ad_keyword_report_search_term.ef04af3b06': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'search_term', 'model': "{{ get_where_subquery(ref('stg_amazon_ads__search_term_ad_keyword_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_amazon_ads__search_term_ad_keyword_report_search_term', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'not_null_stg_amazon_ads__searc_f003e4b73838d347c57dd6506254bcfe.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.not_null_stg_amazon_ads__search_term_ad_keyword_report_search_term.ef04af3b06', 'fqn': ['amazon_ads_source', 'not_null_stg_amazon_ads__search_term_ad_keyword_report_search_term'], 'alias': 'not_null_stg_amazon_ads__searc_f003e4b73838d347c57dd6506254bcfe', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'not_null_stg_amazon_ads__searc_f003e4b73838d347c57dd6506254bcfe', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'not_null_stg_amazon_ads__searc_f003e4b73838d347c57dd6506254bcfe'}, 'created_at': 1694433485.3345373, 'config_call_dict': {'alias': 'not_null_stg_amazon_ads__searc_f003e4b73838d347c57dd6506254bcfe'}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias="not_null_stg_amazon_ads__searc_f003e4b73838d347c57dd6506254bcfe") }}', 'language': 'sql', 'refs': [['stg_amazon_ads__search_term_ad_keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'search_term', 'file_key_name': 'models.stg_amazon_ads__search_term_ad_keyword_report'}, 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__search_term_ad_keyword_report_search_term__keyword_id__date_day.fb8ba99693': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['search_term', 'keyword_id', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_amazon_ads__search_term_ad_keyword_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__search_term_ad_keyword_report_search_term__keyword_id__date_day', 'resource_type': 'test', 'package_name': 'amazon_ads_source', 'path': 'dbt_utils_unique_combination_o_13c9d53b5377a45a6af6b108d52f9f28.sql', 'original_file_path': 'models\\stg_amazon_ads.yml', 'unique_id': 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__search_term_ad_keyword_report_search_term__keyword_id__date_day.fb8ba99693', 'fqn': ['amazon_ads_source', 'dbt_utils_unique_combination_of_columns_stg_amazon_ads__search_term_ad_keyword_report_search_term__keyword_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_13c9d53b5377a45a6af6b108d52f9f28', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_13c9d53b5377a45a6af6b108d52f9f28', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_13c9d53b5377a45a6af6b108d52f9f28'}, 'created_at': 1694433485.335532, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_13c9d53b5377a45a6af6b108d52f9f28'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_13c9d53b5377a45a6af6b108d52f9f28") }}', 'language': 'sql', 'refs': [['stg_amazon_ads__search_term_ad_keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_amazon_ads__search_term_ad_keyword_report'}, 'test.apple_search_ads.not_null_apple_search_ads__ad_group_report_ad_group_id.60febec6b5': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('apple_search_ads__ad_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_apple_search_ads__ad_group_report_ad_group_id', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'not_null_apple_search_ads__ad_group_report_ad_group_id.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.not_null_apple_search_ads__ad_group_report_ad_group_id.60febec6b5', 'fqn': ['apple_search_ads', 'not_null_apple_search_ads__ad_group_report_ad_group_id'], 'alias': 'not_null_apple_search_ads__ad_group_report_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.3733687, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['apple_search_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads.apple_search_ads__ad_group_report']}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.apple_search_ads__ad_group_report'}, 'test.apple_search_ads.not_null_apple_search_ads__ad_group_report_date_day.e6ffb30b3c': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('apple_search_ads__ad_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_apple_search_ads__ad_group_report_date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'not_null_apple_search_ads__ad_group_report_date_day.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.not_null_apple_search_ads__ad_group_report_date_day.e6ffb30b3c', 'fqn': ['apple_search_ads', 'not_null_apple_search_ads__ad_group_report_date_day'], 'alias': 'not_null_apple_search_ads__ad_group_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.3753622, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['apple_search_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads.apple_search_ads__ad_group_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.apple_search_ads__ad_group_report'}, 'test.apple_search_ads.dbt_utils_unique_combination_of_columns_apple_search_ads__ad_group_report_organization_id__campaign_id__ad_group_id__date_day.19d180bab9': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['organization_id', 'campaign_id', 'ad_group_id', 'date_day'], 'model': "{{ get_where_subquery(ref('apple_search_ads__ad_group_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_apple_search_ads__ad_group_report_organization_id__campaign_id__ad_group_id__date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'dbt_utils_unique_combination_o_36b2ef766b4fc10b364ed4744c94afb2.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.dbt_utils_unique_combination_of_columns_apple_search_ads__ad_group_report_organization_id__campaign_id__ad_group_id__date_day.19d180bab9', 'fqn': ['apple_search_ads', 'dbt_utils_unique_combination_of_columns_apple_search_ads__ad_group_report_organization_id__campaign_id__ad_group_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_36b2ef766b4fc10b364ed4744c94afb2', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_36b2ef766b4fc10b364ed4744c94afb2', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_36b2ef766b4fc10b364ed4744c94afb2'}, 'created_at': 1694433485.37706, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_36b2ef766b4fc10b364ed4744c94afb2'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_36b2ef766b4fc10b364ed4744c94afb2") }}', 'language': 'sql', 'refs': [['apple_search_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.apple_search_ads.apple_search_ads__ad_group_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.apple_search_ads__ad_group_report'}, 'test.apple_search_ads.not_null_apple_search_ads__ad_report_ad_id.0ab2c5075c': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('apple_search_ads__ad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_apple_search_ads__ad_report_ad_id', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'not_null_apple_search_ads__ad_report_ad_id.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.not_null_apple_search_ads__ad_report_ad_id.0ab2c5075c', 'fqn': ['apple_search_ads', 'not_null_apple_search_ads__ad_report_ad_id'], 'alias': 'not_null_apple_search_ads__ad_report_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.3828845, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['apple_search_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads.apple_search_ads__ad_report']}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.apple_search_ads__ad_report'}, 'test.apple_search_ads.not_null_apple_search_ads__ad_report_date_day.b86c049e17': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('apple_search_ads__ad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_apple_search_ads__ad_report_date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'not_null_apple_search_ads__ad_report_date_day.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.not_null_apple_search_ads__ad_report_date_day.b86c049e17', 'fqn': ['apple_search_ads', 'not_null_apple_search_ads__ad_report_date_day'], 'alias': 'not_null_apple_search_ads__ad_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.3848877, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['apple_search_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads.apple_search_ads__ad_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.apple_search_ads__ad_report'}, 'test.apple_search_ads.dbt_utils_unique_combination_of_columns_apple_search_ads__ad_report_organization_id__campaign_id__ad_group_id__ad_id__date_day.54e27817a1': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['organization_id', 'campaign_id', 'ad_group_id', 'ad_id', 'date_day'], 'model': "{{ get_where_subquery(ref('apple_search_ads__ad_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_apple_search_ads__ad_report_organization_id__campaign_id__ad_group_id__ad_id__date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'dbt_utils_unique_combination_o_bd72aacf9db10be434541a5eb54a963c.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.dbt_utils_unique_combination_of_columns_apple_search_ads__ad_report_organization_id__campaign_id__ad_group_id__ad_id__date_day.54e27817a1', 'fqn': ['apple_search_ads', 'dbt_utils_unique_combination_of_columns_apple_search_ads__ad_report_organization_id__campaign_id__ad_group_id__ad_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_bd72aacf9db10be434541a5eb54a963c', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_bd72aacf9db10be434541a5eb54a963c', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_bd72aacf9db10be434541a5eb54a963c'}, 'created_at': 1694433485.3858852, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_bd72aacf9db10be434541a5eb54a963c'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_bd72aacf9db10be434541a5eb54a963c") }}', 'language': 'sql', 'refs': [['apple_search_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.apple_search_ads.apple_search_ads__ad_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.apple_search_ads__ad_report'}, 'test.apple_search_ads.not_null_apple_search_ads__campaign_report_campaign_id.e26ed1e146': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('apple_search_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_apple_search_ads__campaign_report_campaign_id', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'not_null_apple_search_ads__campaign_report_campaign_id.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.not_null_apple_search_ads__campaign_report_campaign_id.e26ed1e146', 'fqn': ['apple_search_ads', 'not_null_apple_search_ads__campaign_report_campaign_id'], 'alias': 'not_null_apple_search_ads__campaign_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.390831, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['apple_search_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads.apple_search_ads__campaign_report']}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.apple_search_ads__campaign_report'}, 'test.apple_search_ads.not_null_apple_search_ads__campaign_report_date_day.35652b8d1a': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('apple_search_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_apple_search_ads__campaign_report_date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'not_null_apple_search_ads__campaign_report_date_day.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.not_null_apple_search_ads__campaign_report_date_day.35652b8d1a', 'fqn': ['apple_search_ads', 'not_null_apple_search_ads__campaign_report_date_day'], 'alias': 'not_null_apple_search_ads__campaign_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.3929, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['apple_search_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads.apple_search_ads__campaign_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.apple_search_ads__campaign_report'}, 'test.apple_search_ads.dbt_utils_unique_combination_of_columns_apple_search_ads__campaign_report_organization_id__campaign_id__date_day.647e56213f': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['organization_id', 'campaign_id', 'date_day'], 'model': "{{ get_where_subquery(ref('apple_search_ads__campaign_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_apple_search_ads__campaign_report_organization_id__campaign_id__date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'dbt_utils_unique_combination_o_3acbf89c4e0b6809bc53bfa9067d89c5.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.dbt_utils_unique_combination_of_columns_apple_search_ads__campaign_report_organization_id__campaign_id__date_day.647e56213f', 'fqn': ['apple_search_ads', 'dbt_utils_unique_combination_of_columns_apple_search_ads__campaign_report_organization_id__campaign_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_3acbf89c4e0b6809bc53bfa9067d89c5', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_3acbf89c4e0b6809bc53bfa9067d89c5', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_3acbf89c4e0b6809bc53bfa9067d89c5'}, 'created_at': 1694433485.3948987, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_3acbf89c4e0b6809bc53bfa9067d89c5'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_3acbf89c4e0b6809bc53bfa9067d89c5") }}', 'language': 'sql', 'refs': [['apple_search_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.apple_search_ads.apple_search_ads__campaign_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.apple_search_ads__campaign_report'}, 'test.apple_search_ads.not_null_apple_search_ads__keyword_report_keyword_id.ea493710db': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'keyword_id', 'model': "{{ get_where_subquery(ref('apple_search_ads__keyword_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_apple_search_ads__keyword_report_keyword_id', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'not_null_apple_search_ads__keyword_report_keyword_id.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.not_null_apple_search_ads__keyword_report_keyword_id.ea493710db', 'fqn': ['apple_search_ads', 'not_null_apple_search_ads__keyword_report_keyword_id'], 'alias': 'not_null_apple_search_ads__keyword_report_keyword_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.3994472, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['apple_search_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads.apple_search_ads__keyword_report']}, 'compiled_path': None, 'column_name': 'keyword_id', 'file_key_name': 'models.apple_search_ads__keyword_report'}, 'test.apple_search_ads.not_null_apple_search_ads__keyword_report_date_day.3dec8d0e82': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('apple_search_ads__keyword_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_apple_search_ads__keyword_report_date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'not_null_apple_search_ads__keyword_report_date_day.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.not_null_apple_search_ads__keyword_report_date_day.3dec8d0e82', 'fqn': ['apple_search_ads', 'not_null_apple_search_ads__keyword_report_date_day'], 'alias': 'not_null_apple_search_ads__keyword_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.4014351, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['apple_search_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads.apple_search_ads__keyword_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.apple_search_ads__keyword_report'}, 'test.apple_search_ads.dbt_utils_unique_combination_of_columns_apple_search_ads__keyword_report_organization_id__campaign_id__ad_group_id__keyword_id__date_day.78fb033a13': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['organization_id', 'campaign_id', 'ad_group_id', 'keyword_id', 'date_day'], 'model': "{{ get_where_subquery(ref('apple_search_ads__keyword_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_apple_search_ads__keyword_report_organization_id__campaign_id__ad_group_id__keyword_id__date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'dbt_utils_unique_combination_o_533c8551a101baa56c397525cb8a9246.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.dbt_utils_unique_combination_of_columns_apple_search_ads__keyword_report_organization_id__campaign_id__ad_group_id__keyword_id__date_day.78fb033a13', 'fqn': ['apple_search_ads', 'dbt_utils_unique_combination_of_columns_apple_search_ads__keyword_report_organization_id__campaign_id__ad_group_id__keyword_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_533c8551a101baa56c397525cb8a9246', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_533c8551a101baa56c397525cb8a9246', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_533c8551a101baa56c397525cb8a9246'}, 'created_at': 1694433485.4024363, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_533c8551a101baa56c397525cb8a9246'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_533c8551a101baa56c397525cb8a9246") }}', 'language': 'sql', 'refs': [['apple_search_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.apple_search_ads.apple_search_ads__keyword_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.apple_search_ads__keyword_report'}, 'test.apple_search_ads.not_null_apple_search_ads__organization_report_organization_id.b6cf7d69f8': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'organization_id', 'model': "{{ get_where_subquery(ref('apple_search_ads__organization_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_apple_search_ads__organization_report_organization_id', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'not_null_apple_search_ads__organization_report_organization_id.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.not_null_apple_search_ads__organization_report_organization_id.b6cf7d69f8', 'fqn': ['apple_search_ads', 'not_null_apple_search_ads__organization_report_organization_id'], 'alias': 'not_null_apple_search_ads__organization_report_organization_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.4091349, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['apple_search_ads__organization_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads.apple_search_ads__organization_report']}, 'compiled_path': None, 'column_name': 'organization_id', 'file_key_name': 'models.apple_search_ads__organization_report'}, 'test.apple_search_ads.not_null_apple_search_ads__organization_report_date_day.5784fed523': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('apple_search_ads__organization_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_apple_search_ads__organization_report_date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'not_null_apple_search_ads__organization_report_date_day.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.not_null_apple_search_ads__organization_report_date_day.5784fed523', 'fqn': ['apple_search_ads', 'not_null_apple_search_ads__organization_report_date_day'], 'alias': 'not_null_apple_search_ads__organization_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.4110644, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['apple_search_ads__organization_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads.apple_search_ads__organization_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.apple_search_ads__organization_report'}, 'test.apple_search_ads.dbt_utils_unique_combination_of_columns_apple_search_ads__organization_report_organization_id__date_day.8bc84fccc3': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['organization_id', 'date_day'], 'model': "{{ get_where_subquery(ref('apple_search_ads__organization_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_apple_search_ads__organization_report_organization_id__date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'dbt_utils_unique_combination_o_f2f453668a8bb7c0387ed85fc7bfaf2d.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.dbt_utils_unique_combination_of_columns_apple_search_ads__organization_report_organization_id__date_day.8bc84fccc3', 'fqn': ['apple_search_ads', 'dbt_utils_unique_combination_of_columns_apple_search_ads__organization_report_organization_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_f2f453668a8bb7c0387ed85fc7bfaf2d', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_f2f453668a8bb7c0387ed85fc7bfaf2d', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_f2f453668a8bb7c0387ed85fc7bfaf2d'}, 'created_at': 1694433485.413132, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_f2f453668a8bb7c0387ed85fc7bfaf2d'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_f2f453668a8bb7c0387ed85fc7bfaf2d") }}', 'language': 'sql', 'refs': [['apple_search_ads__organization_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.apple_search_ads.apple_search_ads__organization_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.apple_search_ads__organization_report'}, 'test.apple_search_ads.not_null_apple_search_ads__search_term_report_date_day.1bc3b0d57c': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('apple_search_ads__search_term_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_apple_search_ads__search_term_report_date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'not_null_apple_search_ads__search_term_report_date_day.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.not_null_apple_search_ads__search_term_report_date_day.1bc3b0d57c', 'fqn': ['apple_search_ads', 'not_null_apple_search_ads__search_term_report_date_day'], 'alias': 'not_null_apple_search_ads__search_term_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.4171433, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['apple_search_ads__search_term_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads.apple_search_ads__search_term_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.apple_search_ads__search_term_report'}, 'test.apple_search_ads.not_null_apple_search_ads__search_term_report_search_term_text.aecc7447f7': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'search_term_text', 'model': "{{ get_where_subquery(ref('apple_search_ads__search_term_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_apple_search_ads__search_term_report_search_term_text', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'not_null_apple_search_ads__search_term_report_search_term_text.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.not_null_apple_search_ads__search_term_report_search_term_text.aecc7447f7', 'fqn': ['apple_search_ads', 'not_null_apple_search_ads__search_term_report_search_term_text'], 'alias': 'not_null_apple_search_ads__search_term_report_search_term_text', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.418504, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['apple_search_ads__search_term_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads.apple_search_ads__search_term_report']}, 'compiled_path': None, 'column_name': 'search_term_text', 'file_key_name': 'models.apple_search_ads__search_term_report'}, 'test.apple_search_ads.dbt_utils_unique_combination_of_columns_apple_search_ads__search_term_report_search_term_text__date_day.e60fe79ec4': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['search_term_text', 'date_day'], 'model': "{{ get_where_subquery(ref('apple_search_ads__search_term_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_apple_search_ads__search_term_report_search_term_text__date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads', 'path': 'dbt_utils_unique_combination_o_7c3690db5ce751fbf1f2dff07b3a8690.sql', 'original_file_path': 'models\\apple_search_ads.yml', 'unique_id': 'test.apple_search_ads.dbt_utils_unique_combination_of_columns_apple_search_ads__search_term_report_search_term_text__date_day.e60fe79ec4', 'fqn': ['apple_search_ads', 'dbt_utils_unique_combination_of_columns_apple_search_ads__search_term_report_search_term_text__date_day'], 'alias': 'dbt_utils_unique_combination_o_7c3690db5ce751fbf1f2dff07b3a8690', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_7c3690db5ce751fbf1f2dff07b3a8690', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_7c3690db5ce751fbf1f2dff07b3a8690'}, 'created_at': 1694433485.4205694, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_7c3690db5ce751fbf1f2dff07b3a8690'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_7c3690db5ce751fbf1f2dff07b3a8690") }}', 'language': 'sql', 'refs': [['apple_search_ads__search_term_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.apple_search_ads.apple_search_ads__search_term_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.apple_search_ads__search_term_report'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_group_history_modified_at.e5d65fa28f': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'modified_at', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__ad_group_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__ad_group_history_modified_at', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__ad_group_history_modified_at.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_group_history_modified_at.e5d65fa28f', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__ad_group_history_modified_at'], 'alias': 'not_null_stg_apple_search_ads__ad_group_history_modified_at', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.4937468, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_group_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_group_history']}, 'compiled_path': None, 'column_name': 'modified_at', 'file_key_name': 'models.stg_apple_search_ads__ad_group_history'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_group_history_ad_group_id.dc128eecb7': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__ad_group_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__ad_group_history_ad_group_id', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__ad_group_history_ad_group_id.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_group_history_ad_group_id.dc128eecb7', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__ad_group_history_ad_group_id'], 'alias': 'not_null_stg_apple_search_ads__ad_group_history_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.4957469, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_group_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_group_history']}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.stg_apple_search_ads__ad_group_history'}, 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_group_history_ad_group_id__modified_at.84af14c83b': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_group_id', 'modified_at'], 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__ad_group_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_group_history_ad_group_id__modified_at', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'dbt_utils_unique_combination_o_d82553a0f3b4daa8d59460c85a542d4f.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_group_history_ad_group_id__modified_at.84af14c83b', 'fqn': ['apple_search_ads_source', 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_group_history_ad_group_id__modified_at'], 'alias': 'dbt_utils_unique_combination_o_d82553a0f3b4daa8d59460c85a542d4f', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_d82553a0f3b4daa8d59460c85a542d4f', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_d82553a0f3b4daa8d59460c85a542d4f'}, 'created_at': 1694433485.497347, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_d82553a0f3b4daa8d59460c85a542d4f'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_d82553a0f3b4daa8d59460c85a542d4f") }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_group_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_group_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_apple_search_ads__ad_group_history'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_group_report_ad_group_id.a115f9cfc1': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__ad_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__ad_group_report_ad_group_id', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__ad_group_report_ad_group_id.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_group_report_ad_group_id.a115f9cfc1', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__ad_group_report_ad_group_id'], 'alias': 'not_null_stg_apple_search_ads__ad_group_report_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.5033512, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_group_report']}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.stg_apple_search_ads__ad_group_report'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_group_report_date_day.4dfd46a43b': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__ad_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__ad_group_report_date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__ad_group_report_date_day.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_group_report_date_day.4dfd46a43b', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__ad_group_report_date_day'], 'alias': 'not_null_stg_apple_search_ads__ad_group_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.5053513, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_group_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_apple_search_ads__ad_group_report'}, 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_group_report_ad_group_id__date_day.a0fcc4e33c': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_group_id', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__ad_group_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_group_report_ad_group_id__date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'dbt_utils_unique_combination_o_107a9492c163887581fde6b34131e42d.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_group_report_ad_group_id__date_day.a0fcc4e33c', 'fqn': ['apple_search_ads_source', 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_group_report_ad_group_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_107a9492c163887581fde6b34131e42d', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_107a9492c163887581fde6b34131e42d', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_107a9492c163887581fde6b34131e42d'}, 'created_at': 1694433485.5079048, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_107a9492c163887581fde6b34131e42d'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_107a9492c163887581fde6b34131e42d") }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_group_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_apple_search_ads__ad_group_report'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_history_modified_at.2eea7e006d': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'modified_at', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__ad_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__ad_history_modified_at', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__ad_history_modified_at.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_history_modified_at.2eea7e006d', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__ad_history_modified_at'], 'alias': 'not_null_stg_apple_search_ads__ad_history_modified_at', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.5119083, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_history']}, 'compiled_path': None, 'column_name': 'modified_at', 'file_key_name': 'models.stg_apple_search_ads__ad_history'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_history_ad_id.4ad3bde32a': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__ad_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__ad_history_ad_id', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__ad_history_ad_id.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_history_ad_id.4ad3bde32a', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__ad_history_ad_id'], 'alias': 'not_null_stg_apple_search_ads__ad_history_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.5139081, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_history']}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.stg_apple_search_ads__ad_history'}, 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_history_ad_id__modified_at.38599b8cba': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'modified_at'], 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__ad_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_history_ad_id__modified_at', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'dbt_utils_unique_combination_o_ed0f61b146739c836defcf2fb6005d31.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_history_ad_id__modified_at.38599b8cba', 'fqn': ['apple_search_ads_source', 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_history_ad_id__modified_at'], 'alias': 'dbt_utils_unique_combination_o_ed0f61b146739c836defcf2fb6005d31', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_ed0f61b146739c836defcf2fb6005d31', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_ed0f61b146739c836defcf2fb6005d31'}, 'created_at': 1694433485.515908, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_ed0f61b146739c836defcf2fb6005d31'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_ed0f61b146739c836defcf2fb6005d31") }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_apple_search_ads__ad_history'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_report_date_day.e6252346d8': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__ad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__ad_report_date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__ad_report_date_day.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_report_date_day.e6252346d8', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__ad_report_date_day'], 'alias': 'not_null_stg_apple_search_ads__ad_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.5206516, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_apple_search_ads__ad_report'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_report_ad_group_id.a397755e9f': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__ad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__ad_report_ad_group_id', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__ad_report_ad_group_id.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_report_ad_group_id.a397755e9f', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__ad_report_ad_group_id'], 'alias': 'not_null_stg_apple_search_ads__ad_report_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.5212753, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_report']}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.stg_apple_search_ads__ad_report'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_report_ad_id.d08e760c58': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__ad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__ad_report_ad_id', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__ad_report_ad_id.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__ad_report_ad_id.d08e760c58', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__ad_report_ad_id'], 'alias': 'not_null_stg_apple_search_ads__ad_report_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.5232966, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_report']}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.stg_apple_search_ads__ad_report'}, 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_report_ad_id__date_day__ad_group_id.0d8d23c516': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'date_day', 'ad_group_id'], 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__ad_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_report_ad_id__date_day__ad_group_id', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'dbt_utils_unique_combination_o_9ce5e828ce9fa0987b5e86cbcb1207b9.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_report_ad_id__date_day__ad_group_id.0d8d23c516', 'fqn': ['apple_search_ads_source', 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__ad_report_ad_id__date_day__ad_group_id'], 'alias': 'dbt_utils_unique_combination_o_9ce5e828ce9fa0987b5e86cbcb1207b9', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_9ce5e828ce9fa0987b5e86cbcb1207b9', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_9ce5e828ce9fa0987b5e86cbcb1207b9'}, 'created_at': 1694433485.5253243, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_9ce5e828ce9fa0987b5e86cbcb1207b9'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_9ce5e828ce9fa0987b5e86cbcb1207b9") }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__ad_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_apple_search_ads__ad_report'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__campaign_history_modified_at.f34a7a97c9': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'modified_at', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__campaign_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__campaign_history_modified_at', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__campaign_history_modified_at.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__campaign_history_modified_at.f34a7a97c9', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__campaign_history_modified_at'], 'alias': 'not_null_stg_apple_search_ads__campaign_history_modified_at', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.5295045, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__campaign_history']}, 'compiled_path': None, 'column_name': 'modified_at', 'file_key_name': 'models.stg_apple_search_ads__campaign_history'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__campaign_history_campaign_id.3f0f7502b8': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__campaign_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__campaign_history_campaign_id', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__campaign_history_campaign_id.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__campaign_history_campaign_id.3f0f7502b8', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__campaign_history_campaign_id'], 'alias': 'not_null_stg_apple_search_ads__campaign_history_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.5314407, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__campaign_history']}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_apple_search_ads__campaign_history'}, 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__campaign_history_campaign_id__modified_at.317f970af9': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', 'modified_at'], 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__campaign_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__campaign_history_campaign_id__modified_at', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'dbt_utils_unique_combination_o_055fa7e8a6c292e0f56d1feec61284a9.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__campaign_history_campaign_id__modified_at.317f970af9', 'fqn': ['apple_search_ads_source', 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__campaign_history_campaign_id__modified_at'], 'alias': 'dbt_utils_unique_combination_o_055fa7e8a6c292e0f56d1feec61284a9', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_055fa7e8a6c292e0f56d1feec61284a9', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_055fa7e8a6c292e0f56d1feec61284a9'}, 'created_at': 1694433485.5324538, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_055fa7e8a6c292e0f56d1feec61284a9'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_055fa7e8a6c292e0f56d1feec61284a9") }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__campaign_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_apple_search_ads__campaign_history'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__campaign_report_campaign_id.b83941e728': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__campaign_report_campaign_id', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__campaign_report_campaign_id.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__campaign_report_campaign_id.b83941e728', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__campaign_report_campaign_id'], 'alias': 'not_null_stg_apple_search_ads__campaign_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.5379999, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__campaign_report']}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_apple_search_ads__campaign_report'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__campaign_report_date_day.c8dc10a6f3': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__campaign_report_date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__campaign_report_date_day.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__campaign_report_date_day.c8dc10a6f3', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__campaign_report_date_day'], 'alias': 'not_null_stg_apple_search_ads__campaign_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.5390027, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__campaign_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_apple_search_ads__campaign_report'}, 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__campaign_report_campaign_id__date_day.bad41b0481': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__campaign_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__campaign_report_campaign_id__date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'dbt_utils_unique_combination_o_d8bdb244aa45cb237ef5189371733c07.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__campaign_report_campaign_id__date_day.bad41b0481', 'fqn': ['apple_search_ads_source', 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__campaign_report_campaign_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_d8bdb244aa45cb237ef5189371733c07', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_d8bdb244aa45cb237ef5189371733c07', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_d8bdb244aa45cb237ef5189371733c07'}, 'created_at': 1694433485.5410025, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_d8bdb244aa45cb237ef5189371733c07'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_d8bdb244aa45cb237ef5189371733c07") }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__campaign_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_apple_search_ads__campaign_report'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__keyword_history_modified_at.42fde5a287': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'modified_at', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__keyword_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__keyword_history_modified_at', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__keyword_history_modified_at.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__keyword_history_modified_at.42fde5a287', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__keyword_history_modified_at'], 'alias': 'not_null_stg_apple_search_ads__keyword_history_modified_at', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.5450025, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__keyword_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__keyword_history']}, 'compiled_path': None, 'column_name': 'modified_at', 'file_key_name': 'models.stg_apple_search_ads__keyword_history'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__keyword_history_keyword_id.889f83cfd2': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'keyword_id', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__keyword_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__keyword_history_keyword_id', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__keyword_history_keyword_id.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__keyword_history_keyword_id.889f83cfd2', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__keyword_history_keyword_id'], 'alias': 'not_null_stg_apple_search_ads__keyword_history_keyword_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.5475078, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__keyword_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__keyword_history']}, 'compiled_path': None, 'column_name': 'keyword_id', 'file_key_name': 'models.stg_apple_search_ads__keyword_history'}, 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__keyword_history_keyword_id__modified_at.7b06162d24': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['keyword_id', 'modified_at'], 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__keyword_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__keyword_history_keyword_id__modified_at', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'dbt_utils_unique_combination_o_26b09b2f81a50b0ba84b566cd7df85b5.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__keyword_history_keyword_id__modified_at.7b06162d24', 'fqn': ['apple_search_ads_source', 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__keyword_history_keyword_id__modified_at'], 'alias': 'dbt_utils_unique_combination_o_26b09b2f81a50b0ba84b566cd7df85b5', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_26b09b2f81a50b0ba84b566cd7df85b5', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_26b09b2f81a50b0ba84b566cd7df85b5'}, 'created_at': 1694433485.5485096, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_26b09b2f81a50b0ba84b566cd7df85b5'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_26b09b2f81a50b0ba84b566cd7df85b5") }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__keyword_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__keyword_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_apple_search_ads__keyword_history'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__keyword_report_keyword_id.501725b09e': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'keyword_id', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__keyword_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__keyword_report_keyword_id', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__keyword_report_keyword_id.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__keyword_report_keyword_id.501725b09e', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__keyword_report_keyword_id'], 'alias': 'not_null_stg_apple_search_ads__keyword_report_keyword_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.5535116, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__keyword_report']}, 'compiled_path': None, 'column_name': 'keyword_id', 'file_key_name': 'models.stg_apple_search_ads__keyword_report'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__keyword_report_date_day.16098db928': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__keyword_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__keyword_report_date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__keyword_report_date_day.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__keyword_report_date_day.16098db928', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__keyword_report_date_day'], 'alias': 'not_null_stg_apple_search_ads__keyword_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.5545115, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__keyword_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_apple_search_ads__keyword_report'}, 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__keyword_report_keyword_id__date_day.9f0099cff8': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['keyword_id', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__keyword_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__keyword_report_keyword_id__date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'dbt_utils_unique_combination_o_2ec7f68205f05a3b68cfa7324135a1a5.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__keyword_report_keyword_id__date_day.9f0099cff8', 'fqn': ['apple_search_ads_source', 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__keyword_report_keyword_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_2ec7f68205f05a3b68cfa7324135a1a5', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_2ec7f68205f05a3b68cfa7324135a1a5', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_2ec7f68205f05a3b68cfa7324135a1a5'}, 'created_at': 1694433485.5555115, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_2ec7f68205f05a3b68cfa7324135a1a5'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_2ec7f68205f05a3b68cfa7324135a1a5") }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__keyword_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_apple_search_ads__keyword_report'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__organization_organization_id.b013ce33cb': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'organization_id', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__organization')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__organization_organization_id', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__organization_organization_id.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__organization_organization_id.b013ce33cb', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__organization_organization_id'], 'alias': 'not_null_stg_apple_search_ads__organization_organization_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.5611367, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__organization']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__organization']}, 'compiled_path': None, 'column_name': 'organization_id', 'file_key_name': 'models.stg_apple_search_ads__organization'}, 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__organization_organization_id.8647048f7a': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['organization_id'], 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__organization')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__organization_organization_id', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'dbt_utils_unique_combination_o_53ded9060f9d3981217ae23e5d2ba89b.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__organization_organization_id.8647048f7a', 'fqn': ['apple_search_ads_source', 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__organization_organization_id'], 'alias': 'dbt_utils_unique_combination_o_53ded9060f9d3981217ae23e5d2ba89b', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_53ded9060f9d3981217ae23e5d2ba89b', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_53ded9060f9d3981217ae23e5d2ba89b'}, 'created_at': 1694433485.5621367, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_53ded9060f9d3981217ae23e5d2ba89b'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_53ded9060f9d3981217ae23e5d2ba89b") }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__organization']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__organization']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_apple_search_ads__organization'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__search_term_report__fivetran_id.aa430d1dad': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': '_fivetran_id', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__search_term_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__search_term_report__fivetran_id', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__search_term_report__fivetran_id.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__search_term_report__fivetran_id.aa430d1dad', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__search_term_report__fivetran_id'], 'alias': 'not_null_stg_apple_search_ads__search_term_report__fivetran_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.5661366, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__search_term_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__search_term_report']}, 'compiled_path': None, 'column_name': '_fivetran_id', 'file_key_name': 'models.stg_apple_search_ads__search_term_report'}, 'test.apple_search_ads_source.not_null_stg_apple_search_ads__search_term_report_date_day.fd93df3302': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__search_term_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_apple_search_ads__search_term_report_date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'not_null_stg_apple_search_ads__search_term_report_date_day.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.not_null_stg_apple_search_ads__search_term_report_date_day.fd93df3302', 'fqn': ['apple_search_ads_source', 'not_null_stg_apple_search_ads__search_term_report_date_day'], 'alias': 'not_null_stg_apple_search_ads__search_term_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.568339, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__search_term_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__search_term_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_apple_search_ads__search_term_report'}, 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__search_term_report__fivetran_id__date_day.aad2a48344': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['_fivetran_id', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_apple_search_ads__search_term_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__search_term_report__fivetran_id__date_day', 'resource_type': 'test', 'package_name': 'apple_search_ads_source', 'path': 'dbt_utils_unique_combination_o_4b957c6b8a75dcd1a6055884f71d71c1.sql', 'original_file_path': 'models\\stg_apple_search_ads.yml', 'unique_id': 'test.apple_search_ads_source.dbt_utils_unique_combination_of_columns_stg_apple_search_ads__search_term_report__fivetran_id__date_day.aad2a48344', 'fqn': ['apple_search_ads_source', 'dbt_utils_unique_combination_of_columns_stg_apple_search_ads__search_term_report__fivetran_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_4b957c6b8a75dcd1a6055884f71d71c1', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_4b957c6b8a75dcd1a6055884f71d71c1', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_4b957c6b8a75dcd1a6055884f71d71c1'}, 'created_at': 1694433485.5693612, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_4b957c6b8a75dcd1a6055884f71d71c1'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_4b957c6b8a75dcd1a6055884f71d71c1") }}', 'language': 'sql', 'refs': [['stg_apple_search_ads__search_term_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.apple_search_ads_source.stg_apple_search_ads__search_term_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_apple_search_ads__search_term_report'}, 'test.facebook_ads.not_null_facebook_ads__url_report_base_url.b7757e50be': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'base_url', 'model': "{{ get_where_subquery(ref('facebook_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_facebook_ads__url_report_base_url', 'resource_type': 'test', 'package_name': 'facebook_ads', 'path': 'not_null_facebook_ads__url_report_base_url.sql', 'original_file_path': 'models\\facebook.yml', 'unique_id': 'test.facebook_ads.not_null_facebook_ads__url_report_base_url.b7757e50be', 'fqn': ['facebook_ads', 'not_null_facebook_ads__url_report_base_url'], 'alias': 'not_null_facebook_ads__url_report_base_url', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True}, 'created_at': 1694433485.5997598, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(enabled=True) }}', 'language': 'sql', 'refs': [['facebook_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'base_url', 'file_key_name': 'models.facebook_ads__url_report'}, 'test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__url_report_date_day__account_id__campaign_id__ad_set_id__ad_id.03a7e82eb7': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'campaign_id', 'ad_set_id', 'ad_id'], 'model': "{{ get_where_subquery(ref('facebook_ads__url_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_facebook_ads__url_report_date_day__account_id__campaign_id__ad_set_id__ad_id', 'resource_type': 'test', 'package_name': 'facebook_ads', 'path': 'dbt_utils_unique_combination_o_bf91f5ef1059f34c9059e06e293717eb.sql', 'original_file_path': 'models\\facebook.yml', 'unique_id': 'test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__url_report_date_day__account_id__campaign_id__ad_set_id__ad_id.03a7e82eb7', 'fqn': ['facebook_ads', 'dbt_utils_unique_combination_of_columns_facebook_ads__url_report_date_day__account_id__campaign_id__ad_set_id__ad_id'], 'alias': 'dbt_utils_unique_combination_o_bf91f5ef1059f34c9059e06e293717eb', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_bf91f5ef1059f34c9059e06e293717eb', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_bf91f5ef1059f34c9059e06e293717eb'}, 'created_at': 1694433485.6017594, 'config_call_dict': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_bf91f5ef1059f34c9059e06e293717eb'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(enabled=True,alias="dbt_utils_unique_combination_o_bf91f5ef1059f34c9059e06e293717eb") }}', 'language': 'sql', 'refs': [['facebook_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.facebook_ads__url_report'}, 'test.facebook_ads.not_null_facebook_ads__ad_report_ad_id.3811d9c238': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('facebook_ads__ad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_facebook_ads__ad_report_ad_id', 'resource_type': 'test', 'package_name': 'facebook_ads', 'path': 'not_null_facebook_ads__ad_report_ad_id.sql', 'original_file_path': 'models\\facebook.yml', 'unique_id': 'test.facebook_ads.not_null_facebook_ads__ad_report_ad_id.3811d9c238', 'fqn': ['facebook_ads', 'not_null_facebook_ads__ad_report_ad_id'], 'alias': 'not_null_facebook_ads__ad_report_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.6057594, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['facebook_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.facebook_ads__ad_report'}, 'test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__ad_report_date_day__account_id__campaign_id__ad_set_id__ad_id.0a25b64738': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'campaign_id', 'ad_set_id', 'ad_id'], 'model': "{{ get_where_subquery(ref('facebook_ads__ad_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_facebook_ads__ad_report_date_day__account_id__campaign_id__ad_set_id__ad_id', 'resource_type': 'test', 'package_name': 'facebook_ads', 'path': 'dbt_utils_unique_combination_o_6751270b8425b93a72568a6ff0b52e2e.sql', 'original_file_path': 'models\\facebook.yml', 'unique_id': 'test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__ad_report_date_day__account_id__campaign_id__ad_set_id__ad_id.0a25b64738', 'fqn': ['facebook_ads', 'dbt_utils_unique_combination_of_columns_facebook_ads__ad_report_date_day__account_id__campaign_id__ad_set_id__ad_id'], 'alias': 'dbt_utils_unique_combination_o_6751270b8425b93a72568a6ff0b52e2e', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_6751270b8425b93a72568a6ff0b52e2e', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_6751270b8425b93a72568a6ff0b52e2e'}, 'created_at': 1694433485.608323, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_6751270b8425b93a72568a6ff0b52e2e'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_6751270b8425b93a72568a6ff0b52e2e") }}', 'language': 'sql', 'refs': [['facebook_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.facebook_ads__ad_report'}, 'test.facebook_ads.not_null_facebook_ads__ad_set_report_ad_set_id.1ac870f5e4': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_set_id', 'model': "{{ get_where_subquery(ref('facebook_ads__ad_set_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_facebook_ads__ad_set_report_ad_set_id', 'resource_type': 'test', 'package_name': 'facebook_ads', 'path': 'not_null_facebook_ads__ad_set_report_ad_set_id.sql', 'original_file_path': 'models\\facebook.yml', 'unique_id': 'test.facebook_ads.not_null_facebook_ads__ad_set_report_ad_set_id.1ac870f5e4', 'fqn': ['facebook_ads', 'not_null_facebook_ads__ad_set_report_ad_set_id'], 'alias': 'not_null_facebook_ads__ad_set_report_ad_set_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.6133256, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['facebook_ads__ad_set_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_set_id', 'file_key_name': 'models.facebook_ads__ad_set_report'}, 'test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__ad_set_report_date_day__account_id__campaign_id__ad_set_id.3dd4da872f': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'campaign_id', 'ad_set_id'], 'model': "{{ get_where_subquery(ref('facebook_ads__ad_set_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_facebook_ads__ad_set_report_date_day__account_id__campaign_id__ad_set_id', 'resource_type': 'test', 'package_name': 'facebook_ads', 'path': 'dbt_utils_unique_combination_o_b03f58e6a60804a93ab31dbb358dad74.sql', 'original_file_path': 'models\\facebook.yml', 'unique_id': 'test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__ad_set_report_date_day__account_id__campaign_id__ad_set_id.3dd4da872f', 'fqn': ['facebook_ads', 'dbt_utils_unique_combination_of_columns_facebook_ads__ad_set_report_date_day__account_id__campaign_id__ad_set_id'], 'alias': 'dbt_utils_unique_combination_o_b03f58e6a60804a93ab31dbb358dad74', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_b03f58e6a60804a93ab31dbb358dad74', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_b03f58e6a60804a93ab31dbb358dad74'}, 'created_at': 1694433485.6153252, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_b03f58e6a60804a93ab31dbb358dad74'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_b03f58e6a60804a93ab31dbb358dad74") }}', 'language': 'sql', 'refs': [['facebook_ads__ad_set_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.facebook_ads__ad_set_report'}, 'test.facebook_ads.not_null_facebook_ads__campaign_report_campaign_id.d4f96d8d21': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('facebook_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_facebook_ads__campaign_report_campaign_id', 'resource_type': 'test', 'package_name': 'facebook_ads', 'path': 'not_null_facebook_ads__campaign_report_campaign_id.sql', 'original_file_path': 'models\\facebook.yml', 'unique_id': 'test.facebook_ads.not_null_facebook_ads__campaign_report_campaign_id.d4f96d8d21', 'fqn': ['facebook_ads', 'not_null_facebook_ads__campaign_report_campaign_id'], 'alias': 'not_null_facebook_ads__campaign_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.6209068, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['facebook_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.facebook_ads__campaign_report'}, 'test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__campaign_report_date_day__account_id__campaign_id.7cd75107e6': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'campaign_id'], 'model': "{{ get_where_subquery(ref('facebook_ads__campaign_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_facebook_ads__campaign_report_date_day__account_id__campaign_id', 'resource_type': 'test', 'package_name': 'facebook_ads', 'path': 'dbt_utils_unique_combination_o_cf7853fdf8e24958f5a0e3e1b7c1ced1.sql', 'original_file_path': 'models\\facebook.yml', 'unique_id': 'test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__campaign_report_date_day__account_id__campaign_id.7cd75107e6', 'fqn': ['facebook_ads', 'dbt_utils_unique_combination_of_columns_facebook_ads__campaign_report_date_day__account_id__campaign_id'], 'alias': 'dbt_utils_unique_combination_o_cf7853fdf8e24958f5a0e3e1b7c1ced1', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_cf7853fdf8e24958f5a0e3e1b7c1ced1', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_cf7853fdf8e24958f5a0e3e1b7c1ced1'}, 'created_at': 1694433485.6219068, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_cf7853fdf8e24958f5a0e3e1b7c1ced1'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_cf7853fdf8e24958f5a0e3e1b7c1ced1") }}', 'language': 'sql', 'refs': [['facebook_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.facebook_ads__campaign_report'}, 'test.facebook_ads.not_null_facebook_ads__account_report_account_id.9be02b4024': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('facebook_ads__account_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_facebook_ads__account_report_account_id', 'resource_type': 'test', 'package_name': 'facebook_ads', 'path': 'not_null_facebook_ads__account_report_account_id.sql', 'original_file_path': 'models\\facebook.yml', 'unique_id': 'test.facebook_ads.not_null_facebook_ads__account_report_account_id.9be02b4024', 'fqn': ['facebook_ads', 'not_null_facebook_ads__account_report_account_id'], 'alias': 'not_null_facebook_ads__account_report_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.6269066, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['facebook_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.facebook_ads__account_report'}, 'test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__account_report_date_day__account_id.5a94423e40': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id'], 'model': "{{ get_where_subquery(ref('facebook_ads__account_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_facebook_ads__account_report_date_day__account_id', 'resource_type': 'test', 'package_name': 'facebook_ads', 'path': 'dbt_utils_unique_combination_o_19fe7721a9f8cd99b91dca268368654e.sql', 'original_file_path': 'models\\facebook.yml', 'unique_id': 'test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__account_report_date_day__account_id.5a94423e40', 'fqn': ['facebook_ads', 'dbt_utils_unique_combination_of_columns_facebook_ads__account_report_date_day__account_id'], 'alias': 'dbt_utils_unique_combination_o_19fe7721a9f8cd99b91dca268368654e', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_19fe7721a9f8cd99b91dca268368654e', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_19fe7721a9f8cd99b91dca268368654e'}, 'created_at': 1694433485.6284146, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_19fe7721a9f8cd99b91dca268368654e'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_19fe7721a9f8cd99b91dca268368654e") }}', 'language': 'sql', 'refs': [['facebook_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.facebook_ads__account_report'}, 'test.facebook_ads.not_null_facebook_ads__url_tags__fivetran_id.151d9515f3': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': '_fivetran_id', 'model': "{{ get_where_subquery(ref('facebook_ads__url_tags')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_facebook_ads__url_tags__fivetran_id', 'resource_type': 'test', 'package_name': 'facebook_ads', 'path': 'not_null_facebook_ads__url_tags__fivetran_id.sql', 'original_file_path': 'models\\facebook.yml', 'unique_id': 'test.facebook_ads.not_null_facebook_ads__url_tags__fivetran_id.151d9515f3', 'fqn': ['facebook_ads', 'not_null_facebook_ads__url_tags__fivetran_id'], 'alias': 'not_null_facebook_ads__url_tags__fivetran_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.6334167, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['facebook_ads__url_tags']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': '_fivetran_id', 'file_key_name': 'models.facebook_ads__url_tags'}, 'test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__url_tags__fivetran_id__key__type.ba044777d3': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['_fivetran_id', 'key', 'type'], 'model': "{{ get_where_subquery(ref('facebook_ads__url_tags')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_facebook_ads__url_tags__fivetran_id__key__type', 'resource_type': 'test', 'package_name': 'facebook_ads', 'path': 'dbt_utils_unique_combination_o_496bf013366c506c1f3135f19ec7080a.sql', 'original_file_path': 'models\\facebook.yml', 'unique_id': 'test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__url_tags__fivetran_id__key__type.ba044777d3', 'fqn': ['facebook_ads', 'dbt_utils_unique_combination_of_columns_facebook_ads__url_tags__fivetran_id__key__type'], 'alias': 'dbt_utils_unique_combination_o_496bf013366c506c1f3135f19ec7080a', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_496bf013366c506c1f3135f19ec7080a', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_496bf013366c506c1f3135f19ec7080a'}, 'created_at': 1694433485.6344168, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_496bf013366c506c1f3135f19ec7080a'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_496bf013366c506c1f3135f19ec7080a") }}', 'language': 'sql', 'refs': [['facebook_ads__url_tags']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.facebook_ads__url_tags'}, 'test.facebook_ads_source.not_null_stg_facebook_ads__account_history_account_id.f1cf38c40f': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('stg_facebook_ads__account_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_facebook_ads__account_history_account_id', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'not_null_stg_facebook_ads__account_history_account_id.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.not_null_stg_facebook_ads__account_history_account_id.f1cf38c40f', 'fqn': ['facebook_ads_source', 'not_null_stg_facebook_ads__account_history_account_id'], 'alias': 'not_null_stg_facebook_ads__account_history_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.6921473, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_facebook_ads__account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.stg_facebook_ads__account_history'}, 'test.facebook_ads_source.not_null_stg_facebook_ads__account_history__fivetran_synced.0570e35e1f': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': '_fivetran_synced', 'model': "{{ get_where_subquery(ref('stg_facebook_ads__account_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_facebook_ads__account_history__fivetran_synced', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'not_null_stg_facebook_ads__account_history__fivetran_synced.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.not_null_stg_facebook_ads__account_history__fivetran_synced.0570e35e1f', 'fqn': ['facebook_ads_source', 'not_null_stg_facebook_ads__account_history__fivetran_synced'], 'alias': 'not_null_stg_facebook_ads__account_history__fivetran_synced', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.6942954, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_facebook_ads__account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': '_fivetran_synced', 'file_key_name': 'models.stg_facebook_ads__account_history'}, 'test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__account_history_account_id___fivetran_synced.f9b4d28fa2': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['account_id', '_fivetran_synced'], 'model': "{{ get_where_subquery(ref('stg_facebook_ads__account_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_facebook_ads__account_history_account_id___fivetran_synced', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'dbt_utils_unique_combination_o_6c9521eb7e9747df57d9737e83cb864f.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__account_history_account_id___fivetran_synced.f9b4d28fa2', 'fqn': ['facebook_ads_source', 'dbt_utils_unique_combination_of_columns_stg_facebook_ads__account_history_account_id___fivetran_synced'], 'alias': 'dbt_utils_unique_combination_o_6c9521eb7e9747df57d9737e83cb864f', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_6c9521eb7e9747df57d9737e83cb864f', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_6c9521eb7e9747df57d9737e83cb864f'}, 'created_at': 1694433485.695319, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_6c9521eb7e9747df57d9737e83cb864f'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_6c9521eb7e9747df57d9737e83cb864f") }}', 'language': 'sql', 'refs': [['stg_facebook_ads__account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_facebook_ads__account_history'}, 'test.facebook_ads_source.not_null_stg_facebook_ads__ad_history_ad_id.11429d3064': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('stg_facebook_ads__ad_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_facebook_ads__ad_history_ad_id', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'not_null_stg_facebook_ads__ad_history_ad_id.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.not_null_stg_facebook_ads__ad_history_ad_id.11429d3064', 'fqn': ['facebook_ads_source', 'not_null_stg_facebook_ads__ad_history_ad_id'], 'alias': 'not_null_stg_facebook_ads__ad_history_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.700935, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_facebook_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.stg_facebook_ads__ad_history'}, 'test.facebook_ads_source.not_null_stg_facebook_ads__ad_history_updated_at.250a5a84e4': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'updated_at', 'model': "{{ get_where_subquery(ref('stg_facebook_ads__ad_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_facebook_ads__ad_history_updated_at', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'not_null_stg_facebook_ads__ad_history_updated_at.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.not_null_stg_facebook_ads__ad_history_updated_at.250a5a84e4', 'fqn': ['facebook_ads_source', 'not_null_stg_facebook_ads__ad_history_updated_at'], 'alias': 'not_null_stg_facebook_ads__ad_history_updated_at', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.701935, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_facebook_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'updated_at', 'file_key_name': 'models.stg_facebook_ads__ad_history'}, 'test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__ad_history_ad_id__updated_at.2922c18b58': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'updated_at'], 'model': "{{ get_where_subquery(ref('stg_facebook_ads__ad_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_facebook_ads__ad_history_ad_id__updated_at', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'dbt_utils_unique_combination_o_da2a7458e53ca8b420768a0c3e8e2137.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__ad_history_ad_id__updated_at.2922c18b58', 'fqn': ['facebook_ads_source', 'dbt_utils_unique_combination_of_columns_stg_facebook_ads__ad_history_ad_id__updated_at'], 'alias': 'dbt_utils_unique_combination_o_da2a7458e53ca8b420768a0c3e8e2137', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_da2a7458e53ca8b420768a0c3e8e2137', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_da2a7458e53ca8b420768a0c3e8e2137'}, 'created_at': 1694433485.7041805, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_da2a7458e53ca8b420768a0c3e8e2137'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_da2a7458e53ca8b420768a0c3e8e2137") }}', 'language': 'sql', 'refs': [['stg_facebook_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_facebook_ads__ad_history'}, 'test.facebook_ads_source.not_null_stg_facebook_ads__ad_set_history_ad_set_id.e19a1df1bb': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_set_id', 'model': "{{ get_where_subquery(ref('stg_facebook_ads__ad_set_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_facebook_ads__ad_set_history_ad_set_id', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'not_null_stg_facebook_ads__ad_set_history_ad_set_id.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.not_null_stg_facebook_ads__ad_set_history_ad_set_id.e19a1df1bb', 'fqn': ['facebook_ads_source', 'not_null_stg_facebook_ads__ad_set_history_ad_set_id'], 'alias': 'not_null_stg_facebook_ads__ad_set_history_ad_set_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.7087371, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_facebook_ads__ad_set_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_set_id', 'file_key_name': 'models.stg_facebook_ads__ad_set_history'}, 'test.facebook_ads_source.not_null_stg_facebook_ads__ad_set_history_updated_at.ef7fafe0fa': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'updated_at', 'model': "{{ get_where_subquery(ref('stg_facebook_ads__ad_set_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_facebook_ads__ad_set_history_updated_at', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'not_null_stg_facebook_ads__ad_set_history_updated_at.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.not_null_stg_facebook_ads__ad_set_history_updated_at.ef7fafe0fa', 'fqn': ['facebook_ads_source', 'not_null_stg_facebook_ads__ad_set_history_updated_at'], 'alias': 'not_null_stg_facebook_ads__ad_set_history_updated_at', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.7099044, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_facebook_ads__ad_set_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'updated_at', 'file_key_name': 'models.stg_facebook_ads__ad_set_history'}, 'test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__ad_set_history_ad_set_id__updated_at.0a60ad0fef': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_set_id', 'updated_at'], 'model': "{{ get_where_subquery(ref('stg_facebook_ads__ad_set_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_facebook_ads__ad_set_history_ad_set_id__updated_at', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'dbt_utils_unique_combination_o_214e0ea8c1d3eb6e1c1fae451c60969f.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__ad_set_history_ad_set_id__updated_at.0a60ad0fef', 'fqn': ['facebook_ads_source', 'dbt_utils_unique_combination_of_columns_stg_facebook_ads__ad_set_history_ad_set_id__updated_at'], 'alias': 'dbt_utils_unique_combination_o_214e0ea8c1d3eb6e1c1fae451c60969f', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_214e0ea8c1d3eb6e1c1fae451c60969f', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_214e0ea8c1d3eb6e1c1fae451c60969f'}, 'created_at': 1694433485.7119396, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_214e0ea8c1d3eb6e1c1fae451c60969f'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_214e0ea8c1d3eb6e1c1fae451c60969f") }}', 'language': 'sql', 'refs': [['stg_facebook_ads__ad_set_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_facebook_ads__ad_set_history'}, 'test.facebook_ads_source.not_null_stg_facebook_ads__campaign_history_campaign_id.1ca7a83852': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_facebook_ads__campaign_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_facebook_ads__campaign_history_campaign_id', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'not_null_stg_facebook_ads__campaign_history_campaign_id.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.not_null_stg_facebook_ads__campaign_history_campaign_id.1ca7a83852', 'fqn': ['facebook_ads_source', 'not_null_stg_facebook_ads__campaign_history_campaign_id'], 'alias': 'not_null_stg_facebook_ads__campaign_history_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.7167926, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_facebook_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_facebook_ads__campaign_history'}, 'test.facebook_ads_source.not_null_stg_facebook_ads__campaign_history_updated_at.9e59f99270': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'updated_at', 'model': "{{ get_where_subquery(ref('stg_facebook_ads__campaign_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_facebook_ads__campaign_history_updated_at', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'not_null_stg_facebook_ads__campaign_history_updated_at.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.not_null_stg_facebook_ads__campaign_history_updated_at.9e59f99270', 'fqn': ['facebook_ads_source', 'not_null_stg_facebook_ads__campaign_history_updated_at'], 'alias': 'not_null_stg_facebook_ads__campaign_history_updated_at', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.7178211, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_facebook_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'updated_at', 'file_key_name': 'models.stg_facebook_ads__campaign_history'}, 'test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__campaign_history_campaign_id__updated_at.7437b392c2': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', 'updated_at'], 'model': "{{ get_where_subquery(ref('stg_facebook_ads__campaign_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_facebook_ads__campaign_history_campaign_id__updated_at', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'dbt_utils_unique_combination_o_6067330a8eb187d5024e9840cd7cbd78.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__campaign_history_campaign_id__updated_at.7437b392c2', 'fqn': ['facebook_ads_source', 'dbt_utils_unique_combination_of_columns_stg_facebook_ads__campaign_history_campaign_id__updated_at'], 'alias': 'dbt_utils_unique_combination_o_6067330a8eb187d5024e9840cd7cbd78', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_6067330a8eb187d5024e9840cd7cbd78', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_6067330a8eb187d5024e9840cd7cbd78'}, 'created_at': 1694433485.719894, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_6067330a8eb187d5024e9840cd7cbd78'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_6067330a8eb187d5024e9840cd7cbd78") }}', 'language': 'sql', 'refs': [['stg_facebook_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_facebook_ads__campaign_history'}, 'test.facebook_ads_source.not_null_stg_facebook_ads__creative_history__fivetran_synced.3b0593cb4f': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': '_fivetran_synced', 'model': "{{ get_where_subquery(ref('stg_facebook_ads__creative_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_facebook_ads__creative_history__fivetran_synced', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'not_null_stg_facebook_ads__creative_history__fivetran_synced.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.not_null_stg_facebook_ads__creative_history__fivetran_synced.3b0593cb4f', 'fqn': ['facebook_ads_source', 'not_null_stg_facebook_ads__creative_history__fivetran_synced'], 'alias': 'not_null_stg_facebook_ads__creative_history__fivetran_synced', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.7239525, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_facebook_ads__creative_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': '_fivetran_synced', 'file_key_name': 'models.stg_facebook_ads__creative_history'}, 'test.facebook_ads_source.not_null_stg_facebook_ads__creative_history_creative_id.eb4d804261': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'creative_id', 'model': "{{ get_where_subquery(ref('stg_facebook_ads__creative_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_facebook_ads__creative_history_creative_id', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'not_null_stg_facebook_ads__creative_history_creative_id.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.not_null_stg_facebook_ads__creative_history_creative_id.eb4d804261', 'fqn': ['facebook_ads_source', 'not_null_stg_facebook_ads__creative_history_creative_id'], 'alias': 'not_null_stg_facebook_ads__creative_history_creative_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.7262404, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_facebook_ads__creative_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'creative_id', 'file_key_name': 'models.stg_facebook_ads__creative_history'}, 'test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__creative_history_creative_id___fivetran_synced.69ddc26562': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['creative_id', '_fivetran_synced'], 'model': "{{ get_where_subquery(ref('stg_facebook_ads__creative_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_facebook_ads__creative_history_creative_id___fivetran_synced', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'dbt_utils_unique_combination_o_c52d893dfedd530a7cd19c495da30217.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__creative_history_creative_id___fivetran_synced.69ddc26562', 'fqn': ['facebook_ads_source', 'dbt_utils_unique_combination_of_columns_stg_facebook_ads__creative_history_creative_id___fivetran_synced'], 'alias': 'dbt_utils_unique_combination_o_c52d893dfedd530a7cd19c495da30217', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_c52d893dfedd530a7cd19c495da30217', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_c52d893dfedd530a7cd19c495da30217'}, 'created_at': 1694433485.7277486, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_c52d893dfedd530a7cd19c495da30217'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_c52d893dfedd530a7cd19c495da30217") }}', 'language': 'sql', 'refs': [['stg_facebook_ads__creative_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_facebook_ads__creative_history'}, 'test.facebook_ads_source.not_null_stg_facebook_ads__basic_ad_ad_id.2611b250fc': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('stg_facebook_ads__basic_ad')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_facebook_ads__basic_ad_ad_id', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'not_null_stg_facebook_ads__basic_ad_ad_id.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.not_null_stg_facebook_ads__basic_ad_ad_id.2611b250fc', 'fqn': ['facebook_ads_source', 'not_null_stg_facebook_ads__basic_ad_ad_id'], 'alias': 'not_null_stg_facebook_ads__basic_ad_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.7317803, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_facebook_ads__basic_ad']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.stg_facebook_ads__basic_ad'}, 'test.facebook_ads_source.not_null_stg_facebook_ads__basic_ad_account_id.d06f6d861b': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('stg_facebook_ads__basic_ad')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_facebook_ads__basic_ad_account_id', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'not_null_stg_facebook_ads__basic_ad_account_id.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.not_null_stg_facebook_ads__basic_ad_account_id.d06f6d861b', 'fqn': ['facebook_ads_source', 'not_null_stg_facebook_ads__basic_ad_account_id'], 'alias': 'not_null_stg_facebook_ads__basic_ad_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.7337952, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_facebook_ads__basic_ad']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.stg_facebook_ads__basic_ad'}, 'test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__basic_ad_date_day__ad_id__account_id.bd909529e7': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'ad_id', 'account_id'], 'model': "{{ get_where_subquery(ref('stg_facebook_ads__basic_ad')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_facebook_ads__basic_ad_date_day__ad_id__account_id', 'resource_type': 'test', 'package_name': 'facebook_ads_source', 'path': 'dbt_utils_unique_combination_o_42caf2b48bab7db5c316ae2524dd0683.sql', 'original_file_path': 'models\\stg_facebook_ads.yml', 'unique_id': 'test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__basic_ad_date_day__ad_id__account_id.bd909529e7', 'fqn': ['facebook_ads_source', 'dbt_utils_unique_combination_of_columns_stg_facebook_ads__basic_ad_date_day__ad_id__account_id'], 'alias': 'dbt_utils_unique_combination_o_42caf2b48bab7db5c316ae2524dd0683', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_42caf2b48bab7db5c316ae2524dd0683', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_42caf2b48bab7db5c316ae2524dd0683'}, 'created_at': 1694433485.735807, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_42caf2b48bab7db5c316ae2524dd0683'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_42caf2b48bab7db5c316ae2524dd0683") }}', 'language': 'sql', 'refs': [['stg_facebook_ads__basic_ad']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_facebook_ads__basic_ad'}, 'test.google_ads.not_null_google_ads__url_report_base_url.e3578c0f72': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'base_url', 'model': "{{ get_where_subquery(ref('google_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_google_ads__url_report_base_url', 'resource_type': 'test', 'package_name': 'google_ads', 'path': 'not_null_google_ads__url_report_base_url.sql', 'original_file_path': 'models\\google_ads.yml', 'unique_id': 'test.google_ads.not_null_google_ads__url_report_base_url.e3578c0f72', 'fqn': ['google_ads', 'not_null_google_ads__url_report_base_url'], 'alias': 'not_null_google_ads__url_report_base_url', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True}, 'created_at': 1694433485.8321397, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(enabled=True) }}', 'language': 'sql', 'refs': [['google_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads.google_ads__url_report']}, 'compiled_path': None, 'column_name': 'base_url', 'file_key_name': 'models.google_ads__url_report'}, 'test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__url_report_ad_id__ad_group_id__date_day.a59b8e007f': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'ad_group_id', 'date_day'], 'model': "{{ get_where_subquery(ref('google_ads__url_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_google_ads__url_report_ad_id__ad_group_id__date_day', 'resource_type': 'test', 'package_name': 'google_ads', 'path': 'dbt_utils_unique_combination_o_bea7bc66213b1115e2bf15aef06eda4b.sql', 'original_file_path': 'models\\google_ads.yml', 'unique_id': 'test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__url_report_ad_id__ad_group_id__date_day.a59b8e007f', 'fqn': ['google_ads', 'dbt_utils_unique_combination_of_columns_google_ads__url_report_ad_id__ad_group_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_bea7bc66213b1115e2bf15aef06eda4b', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_bea7bc66213b1115e2bf15aef06eda4b', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_bea7bc66213b1115e2bf15aef06eda4b'}, 'created_at': 1694433485.8341398, 'config_call_dict': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_bea7bc66213b1115e2bf15aef06eda4b'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(enabled=True,alias="dbt_utils_unique_combination_o_bea7bc66213b1115e2bf15aef06eda4b") }}', 'language': 'sql', 'refs': [['google_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.google_ads.google_ads__url_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.google_ads__url_report'}, 'test.google_ads.not_null_google_ads__account_report_account_id.abb0985422': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('google_ads__account_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_google_ads__account_report_account_id', 'resource_type': 'test', 'package_name': 'google_ads', 'path': 'not_null_google_ads__account_report_account_id.sql', 'original_file_path': 'models\\google_ads.yml', 'unique_id': 'test.google_ads.not_null_google_ads__account_report_account_id.abb0985422', 'fqn': ['google_ads', 'not_null_google_ads__account_report_account_id'], 'alias': 'not_null_google_ads__account_report_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.8396509, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['google_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads.google_ads__account_report']}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.google_ads__account_report'}, 'test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__account_report_account_id__date_day.c52089771e': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['account_id', 'date_day'], 'model': "{{ get_where_subquery(ref('google_ads__account_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_google_ads__account_report_account_id__date_day', 'resource_type': 'test', 'package_name': 'google_ads', 'path': 'dbt_utils_unique_combination_o_b50e4c9123068ddc911854925927d1f9.sql', 'original_file_path': 'models\\google_ads.yml', 'unique_id': 'test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__account_report_account_id__date_day.c52089771e', 'fqn': ['google_ads', 'dbt_utils_unique_combination_of_columns_google_ads__account_report_account_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_b50e4c9123068ddc911854925927d1f9', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_b50e4c9123068ddc911854925927d1f9', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_b50e4c9123068ddc911854925927d1f9'}, 'created_at': 1694433485.8406506, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_b50e4c9123068ddc911854925927d1f9'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_b50e4c9123068ddc911854925927d1f9") }}', 'language': 'sql', 'refs': [['google_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.google_ads.google_ads__account_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.google_ads__account_report'}, 'test.google_ads.not_null_google_ads__ad_group_report_ad_group_id.c186523c0c': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('google_ads__ad_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_google_ads__ad_group_report_ad_group_id', 'resource_type': 'test', 'package_name': 'google_ads', 'path': 'not_null_google_ads__ad_group_report_ad_group_id.sql', 'original_file_path': 'models\\google_ads.yml', 'unique_id': 'test.google_ads.not_null_google_ads__ad_group_report_ad_group_id.c186523c0c', 'fqn': ['google_ads', 'not_null_google_ads__ad_group_report_ad_group_id'], 'alias': 'not_null_google_ads__ad_group_report_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.8456504, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['google_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads.google_ads__ad_group_report']}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.google_ads__ad_group_report'}, 'test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__ad_group_report_ad_group_id__date_day.7c8e1c1a2f': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_group_id', 'date_day'], 'model': "{{ get_where_subquery(ref('google_ads__ad_group_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_google_ads__ad_group_report_ad_group_id__date_day', 'resource_type': 'test', 'package_name': 'google_ads', 'path': 'dbt_utils_unique_combination_o_3b4d505407b6ec52ee5fac7c553b0e4f.sql', 'original_file_path': 'models\\google_ads.yml', 'unique_id': 'test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__ad_group_report_ad_group_id__date_day.7c8e1c1a2f', 'fqn': ['google_ads', 'dbt_utils_unique_combination_of_columns_google_ads__ad_group_report_ad_group_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_3b4d505407b6ec52ee5fac7c553b0e4f', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_3b4d505407b6ec52ee5fac7c553b0e4f', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_3b4d505407b6ec52ee5fac7c553b0e4f'}, 'created_at': 1694433485.8472135, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_3b4d505407b6ec52ee5fac7c553b0e4f'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_3b4d505407b6ec52ee5fac7c553b0e4f") }}', 'language': 'sql', 'refs': [['google_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.google_ads.google_ads__ad_group_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.google_ads__ad_group_report'}, 'test.google_ads.not_null_google_ads__ad_report_ad_id.7bd6a287ad': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('google_ads__ad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_google_ads__ad_report_ad_id', 'resource_type': 'test', 'package_name': 'google_ads', 'path': 'not_null_google_ads__ad_report_ad_id.sql', 'original_file_path': 'models\\google_ads.yml', 'unique_id': 'test.google_ads.not_null_google_ads__ad_report_ad_id.7bd6a287ad', 'fqn': ['google_ads', 'not_null_google_ads__ad_report_ad_id'], 'alias': 'not_null_google_ads__ad_report_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.8522182, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['google_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads.google_ads__ad_report']}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.google_ads__ad_report'}, 'test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__ad_report_ad_id__ad_group_id__date_day.fe37ea1a7b': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'ad_group_id', 'date_day'], 'model': "{{ get_where_subquery(ref('google_ads__ad_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_google_ads__ad_report_ad_id__ad_group_id__date_day', 'resource_type': 'test', 'package_name': 'google_ads', 'path': 'dbt_utils_unique_combination_o_0e386e471201820d82331746820c6c2a.sql', 'original_file_path': 'models\\google_ads.yml', 'unique_id': 'test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__ad_report_ad_id__ad_group_id__date_day.fe37ea1a7b', 'fqn': ['google_ads', 'dbt_utils_unique_combination_of_columns_google_ads__ad_report_ad_id__ad_group_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_0e386e471201820d82331746820c6c2a', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_0e386e471201820d82331746820c6c2a', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_0e386e471201820d82331746820c6c2a'}, 'created_at': 1694433485.8532178, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_0e386e471201820d82331746820c6c2a'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_0e386e471201820d82331746820c6c2a") }}', 'language': 'sql', 'refs': [['google_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.google_ads.google_ads__ad_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.google_ads__ad_report'}, 'test.google_ads.not_null_google_ads__campaign_report_campaign_id.cc6694fa0e': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('google_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_google_ads__campaign_report_campaign_id', 'resource_type': 'test', 'package_name': 'google_ads', 'path': 'not_null_google_ads__campaign_report_campaign_id.sql', 'original_file_path': 'models\\google_ads.yml', 'unique_id': 'test.google_ads.not_null_google_ads__campaign_report_campaign_id.cc6694fa0e', 'fqn': ['google_ads', 'not_null_google_ads__campaign_report_campaign_id'], 'alias': 'not_null_google_ads__campaign_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.8577347, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['google_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads.google_ads__campaign_report']}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.google_ads__campaign_report'}, 'test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__campaign_report_campaign_id__advertising_channel_type__advertising_channel_subtype__date_day.f735cda469': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', 'advertising_channel_type', 'advertising_channel_subtype', 'date_day'], 'model': "{{ get_where_subquery(ref('google_ads__campaign_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_google_ads__campaign_report_campaign_id__advertising_channel_type__advertising_channel_subtype__date_day', 'resource_type': 'test', 'package_name': 'google_ads', 'path': 'dbt_utils_unique_combination_o_ec8528411c073564947c460da491432a.sql', 'original_file_path': 'models\\google_ads.yml', 'unique_id': 'test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__campaign_report_campaign_id__advertising_channel_type__advertising_channel_subtype__date_day.f735cda469', 'fqn': ['google_ads', 'dbt_utils_unique_combination_of_columns_google_ads__campaign_report_campaign_id__advertising_channel_type__advertising_channel_subtype__date_day'], 'alias': 'dbt_utils_unique_combination_o_ec8528411c073564947c460da491432a', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_ec8528411c073564947c460da491432a', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_ec8528411c073564947c460da491432a'}, 'created_at': 1694433485.859738, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_ec8528411c073564947c460da491432a'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_ec8528411c073564947c460da491432a") }}', 'language': 'sql', 'refs': [['google_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.google_ads.google_ads__campaign_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.google_ads__campaign_report'}, 'test.google_ads.not_null_google_ads__keyword_report_criterion_id.4cab66a055': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'criterion_id', 'model': "{{ get_where_subquery(ref('google_ads__keyword_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_google_ads__keyword_report_criterion_id', 'resource_type': 'test', 'package_name': 'google_ads', 'path': 'not_null_google_ads__keyword_report_criterion_id.sql', 'original_file_path': 'models\\google_ads.yml', 'unique_id': 'test.google_ads.not_null_google_ads__keyword_report_criterion_id.4cab66a055', 'fqn': ['google_ads', 'not_null_google_ads__keyword_report_criterion_id'], 'alias': 'not_null_google_ads__keyword_report_criterion_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.8647382, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['google_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads.google_ads__keyword_report']}, 'compiled_path': None, 'column_name': 'criterion_id', 'file_key_name': 'models.google_ads__keyword_report'}, 'test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__keyword_report_ad_group_id__criterion_id__date_day.214ff3497d': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_group_id', 'criterion_id', 'date_day'], 'model': "{{ get_where_subquery(ref('google_ads__keyword_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_google_ads__keyword_report_ad_group_id__criterion_id__date_day', 'resource_type': 'test', 'package_name': 'google_ads', 'path': 'dbt_utils_unique_combination_o_5f4b67cbf07cd9f52dc9ddc8771a9f97.sql', 'original_file_path': 'models\\google_ads.yml', 'unique_id': 'test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__keyword_report_ad_group_id__criterion_id__date_day.214ff3497d', 'fqn': ['google_ads', 'dbt_utils_unique_combination_of_columns_google_ads__keyword_report_ad_group_id__criterion_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_5f4b67cbf07cd9f52dc9ddc8771a9f97', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_5f4b67cbf07cd9f52dc9ddc8771a9f97', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_5f4b67cbf07cd9f52dc9ddc8771a9f97'}, 'created_at': 1694433485.8657384, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_5f4b67cbf07cd9f52dc9ddc8771a9f97'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_5f4b67cbf07cd9f52dc9ddc8771a9f97") }}', 'language': 'sql', 'refs': [['google_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.google_ads.google_ads__keyword_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.google_ads__keyword_report'}, 'test.google_ads_source.not_null_stg_google_ads__account_history_account_id.5ca373f51f': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('stg_google_ads__account_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_google_ads__account_history_account_id', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'not_null_stg_google_ads__account_history_account_id.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.not_null_stg_google_ads__account_history_account_id.5ca373f51f', 'fqn': ['google_ads_source', 'not_null_stg_google_ads__account_history_account_id'], 'alias': 'not_null_stg_google_ads__account_history_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.9379342, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_google_ads__account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads_source.stg_google_ads__account_history']}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.stg_google_ads__account_history'}, 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__account_history_account_id__updated_at.19f35742f1': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['account_id', 'updated_at'], 'model': "{{ get_where_subquery(ref('stg_google_ads__account_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_google_ads__account_history_account_id__updated_at', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'dbt_utils_unique_combination_o_73f21be54bd17f372632a4da939970a3.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__account_history_account_id__updated_at.19f35742f1', 'fqn': ['google_ads_source', 'dbt_utils_unique_combination_of_columns_stg_google_ads__account_history_account_id__updated_at'], 'alias': 'dbt_utils_unique_combination_o_73f21be54bd17f372632a4da939970a3', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_73f21be54bd17f372632a4da939970a3', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_73f21be54bd17f372632a4da939970a3'}, 'created_at': 1694433485.939945, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_73f21be54bd17f372632a4da939970a3'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_73f21be54bd17f372632a4da939970a3") }}', 'language': 'sql', 'refs': [['stg_google_ads__account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.google_ads_source.stg_google_ads__account_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_google_ads__account_history'}, 'test.google_ads_source.not_null_stg_google_ads__ad_group_history_ad_group_id.f6c7c939be': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('stg_google_ads__ad_group_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_google_ads__ad_group_history_ad_group_id', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'not_null_stg_google_ads__ad_group_history_ad_group_id.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.not_null_stg_google_ads__ad_group_history_ad_group_id.f6c7c939be', 'fqn': ['google_ads_source', 'not_null_stg_google_ads__ad_group_history_ad_group_id'], 'alias': 'not_null_stg_google_ads__ad_group_history_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.945154, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_google_ads__ad_group_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_group_history']}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.stg_google_ads__ad_group_history'}, 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__ad_group_history_ad_group_id__updated_at.096e8da5fd': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_group_id', 'updated_at'], 'model': "{{ get_where_subquery(ref('stg_google_ads__ad_group_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_google_ads__ad_group_history_ad_group_id__updated_at', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'dbt_utils_unique_combination_o_0c1cbeb5a9539431a7fbce6af1a21d7a.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__ad_group_history_ad_group_id__updated_at.096e8da5fd', 'fqn': ['google_ads_source', 'dbt_utils_unique_combination_of_columns_stg_google_ads__ad_group_history_ad_group_id__updated_at'], 'alias': 'dbt_utils_unique_combination_o_0c1cbeb5a9539431a7fbce6af1a21d7a', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_0c1cbeb5a9539431a7fbce6af1a21d7a', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_0c1cbeb5a9539431a7fbce6af1a21d7a'}, 'created_at': 1694433485.9471705, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_0c1cbeb5a9539431a7fbce6af1a21d7a'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_0c1cbeb5a9539431a7fbce6af1a21d7a") }}', 'language': 'sql', 'refs': [['stg_google_ads__ad_group_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_group_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_google_ads__ad_group_history'}, 'test.google_ads_source.not_null_stg_google_ads__ad_history_ad_id.8c23c38248': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('stg_google_ads__ad_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_google_ads__ad_history_ad_id', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'not_null_stg_google_ads__ad_history_ad_id.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.not_null_stg_google_ads__ad_history_ad_id.8c23c38248', 'fqn': ['google_ads_source', 'not_null_stg_google_ads__ad_history_ad_id'], 'alias': 'not_null_stg_google_ads__ad_history_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.951784, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_google_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_history']}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.stg_google_ads__ad_history'}, 'test.google_ads_source.dbt_expectations_expect_column_values_to_not_match_regex_list_stg_google_ads__ad_history_source_final_urls__any___.7dddbd81e7': {'test_metadata': {'name': 'expect_column_values_to_not_match_regex_list', 'kwargs': {'regex_list': ',', 'match_on': 'any', 'column_name': 'source_final_urls', 'model': "{{ get_where_subquery(ref('stg_google_ads__ad_history')) }}"}, 'namespace': 'dbt_expectations'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_expectations_expect_column_values_to_not_match_regex_list_stg_google_ads__ad_history_source_final_urls__any___', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'dbt_expectations_expect_column_f02cb56d69a9df1e600b3958899ceaa5.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.dbt_expectations_expect_column_values_to_not_match_regex_list_stg_google_ads__ad_history_source_final_urls__any___.7dddbd81e7', 'fqn': ['google_ads_source', 'dbt_expectations_expect_column_values_to_not_match_regex_list_stg_google_ads__ad_history_source_final_urls__any___'], 'alias': 'dbt_expectations_expect_column_f02cb56d69a9df1e600b3958899ceaa5', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_expectations_expect_column_f02cb56d69a9df1e600b3958899ceaa5', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'warn', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'severity': 'warn', 'alias': 'dbt_expectations_expect_column_f02cb56d69a9df1e600b3958899ceaa5'}, 'created_at': 1694433485.9538357, 'config_call_dict': {'severity': 'warn', 'alias': 'dbt_expectations_expect_column_f02cb56d69a9df1e600b3958899ceaa5'}, 'relation_name': None, 'raw_code': '{{ dbt_expectations.test_expect_column_values_to_not_match_regex_list(**_dbt_generic_test_kwargs) }}{{ config(severity="warn",alias="dbt_expectations_expect_column_f02cb56d69a9df1e600b3958899ceaa5") }}', 'language': 'sql', 'refs': [['stg_google_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_expectations.test_expect_column_values_to_not_match_regex_list', 'macro.dbt.get_where_subquery'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_history']}, 'compiled_path': None, 'column_name': 'source_final_urls', 'file_key_name': 'models.stg_google_ads__ad_history'}, 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__ad_history_ad_id__ad_group_id__updated_at.0c065b0a0b': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'ad_group_id', 'updated_at'], 'model': "{{ get_where_subquery(ref('stg_google_ads__ad_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_google_ads__ad_history_ad_id__ad_group_id__updated_at', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'dbt_utils_unique_combination_o_0cf5dbf0b60dae1b36794a079a6f8b74.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__ad_history_ad_id__ad_group_id__updated_at.0c065b0a0b', 'fqn': ['google_ads_source', 'dbt_utils_unique_combination_of_columns_stg_google_ads__ad_history_ad_id__ad_group_id__updated_at'], 'alias': 'dbt_utils_unique_combination_o_0cf5dbf0b60dae1b36794a079a6f8b74', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_0cf5dbf0b60dae1b36794a079a6f8b74', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_0cf5dbf0b60dae1b36794a079a6f8b74'}, 'created_at': 1694433485.9705024, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_0cf5dbf0b60dae1b36794a079a6f8b74'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_0cf5dbf0b60dae1b36794a079a6f8b74") }}', 'language': 'sql', 'refs': [['stg_google_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_google_ads__ad_history'}, 'test.google_ads_source.not_null_stg_google_ads__ad_stats_date_day.9a43c0fce4': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_google_ads__ad_stats')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_google_ads__ad_stats_date_day', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'not_null_stg_google_ads__ad_stats_date_day.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.not_null_stg_google_ads__ad_stats_date_day.9a43c0fce4', 'fqn': ['google_ads_source', 'not_null_stg_google_ads__ad_stats_date_day'], 'alias': 'not_null_stg_google_ads__ad_stats_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.9747741, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_google_ads__ad_stats']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_stats']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_google_ads__ad_stats'}, 'test.google_ads_source.not_null_stg_google_ads__ad_stats_ad_id.2612d83cc8': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('stg_google_ads__ad_stats')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_google_ads__ad_stats_ad_id', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'not_null_stg_google_ads__ad_stats_ad_id.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.not_null_stg_google_ads__ad_stats_ad_id.2612d83cc8', 'fqn': ['google_ads_source', 'not_null_stg_google_ads__ad_stats_ad_id'], 'alias': 'not_null_stg_google_ads__ad_stats_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.9767935, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_google_ads__ad_stats']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_stats']}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.stg_google_ads__ad_stats'}, 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__ad_stats_ad_id__ad_network_type__device__ad_group_id__keyword_ad_group_criterion__date_day.968b016451': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'ad_network_type', 'device', 'ad_group_id', 'keyword_ad_group_criterion', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_google_ads__ad_stats')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_google_ads__ad_stats_ad_id__ad_network_type__device__ad_group_id__keyword_ad_group_criterion__date_day', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'dbt_utils_unique_combination_o_0e6e3aa3d77b11d347e7c430ba7c2ea1.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__ad_stats_ad_id__ad_network_type__device__ad_group_id__keyword_ad_group_criterion__date_day.968b016451', 'fqn': ['google_ads_source', 'dbt_utils_unique_combination_of_columns_stg_google_ads__ad_stats_ad_id__ad_network_type__device__ad_group_id__keyword_ad_group_criterion__date_day'], 'alias': 'dbt_utils_unique_combination_o_0e6e3aa3d77b11d347e7c430ba7c2ea1', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_0e6e3aa3d77b11d347e7c430ba7c2ea1', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_0e6e3aa3d77b11d347e7c430ba7c2ea1'}, 'created_at': 1694433485.9783125, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_0e6e3aa3d77b11d347e7c430ba7c2ea1'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_0e6e3aa3d77b11d347e7c430ba7c2ea1") }}', 'language': 'sql', 'refs': [['stg_google_ads__ad_stats']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_stats']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_google_ads__ad_stats'}, 'test.google_ads_source.not_null_stg_google_ads__campaign_history_campaign_id.fa0c825e75': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_google_ads__campaign_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_google_ads__campaign_history_campaign_id', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'not_null_stg_google_ads__campaign_history_campaign_id.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.not_null_stg_google_ads__campaign_history_campaign_id.fa0c825e75', 'fqn': ['google_ads_source', 'not_null_stg_google_ads__campaign_history_campaign_id'], 'alias': 'not_null_stg_google_ads__campaign_history_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.984042, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_google_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads_source.stg_google_ads__campaign_history']}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_google_ads__campaign_history'}, 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__campaign_history_campaign_id__updated_at.8bf2733e86': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', 'updated_at'], 'model': "{{ get_where_subquery(ref('stg_google_ads__campaign_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_google_ads__campaign_history_campaign_id__updated_at', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'dbt_utils_unique_combination_o_bd5040437362e14b36ab7ce3eaa14d1d.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__campaign_history_campaign_id__updated_at.8bf2733e86', 'fqn': ['google_ads_source', 'dbt_utils_unique_combination_of_columns_stg_google_ads__campaign_history_campaign_id__updated_at'], 'alias': 'dbt_utils_unique_combination_o_bd5040437362e14b36ab7ce3eaa14d1d', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_bd5040437362e14b36ab7ce3eaa14d1d', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_bd5040437362e14b36ab7ce3eaa14d1d'}, 'created_at': 1694433485.9862037, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_bd5040437362e14b36ab7ce3eaa14d1d'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_bd5040437362e14b36ab7ce3eaa14d1d") }}', 'language': 'sql', 'refs': [['stg_google_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.google_ads_source.stg_google_ads__campaign_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_google_ads__campaign_history'}, 'test.google_ads_source.not_null_stg_google_ads__ad_group_criterion_history_criterion_id.7a0a8b8476': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'criterion_id', 'model': "{{ get_where_subquery(ref('stg_google_ads__ad_group_criterion_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_google_ads__ad_group_criterion_history_criterion_id', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'not_null_stg_google_ads__ad_gr_fa51ec93a9a1e739108966cace6ed031.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.not_null_stg_google_ads__ad_group_criterion_history_criterion_id.7a0a8b8476', 'fqn': ['google_ads_source', 'not_null_stg_google_ads__ad_group_criterion_history_criterion_id'], 'alias': 'not_null_stg_google_ads__ad_gr_fa51ec93a9a1e739108966cace6ed031', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'not_null_stg_google_ads__ad_gr_fa51ec93a9a1e739108966cace6ed031', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'not_null_stg_google_ads__ad_gr_fa51ec93a9a1e739108966cace6ed031'}, 'created_at': 1694433485.991006, 'config_call_dict': {'alias': 'not_null_stg_google_ads__ad_gr_fa51ec93a9a1e739108966cace6ed031'}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias="not_null_stg_google_ads__ad_gr_fa51ec93a9a1e739108966cace6ed031") }}', 'language': 'sql', 'refs': [['stg_google_ads__ad_group_criterion_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_group_criterion_history']}, 'compiled_path': None, 'column_name': 'criterion_id', 'file_key_name': 'models.stg_google_ads__ad_group_criterion_history'}, 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__ad_group_criterion_history_criterion_id__ad_group_id__updated_at.197bbc6816': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['criterion_id', 'ad_group_id', 'updated_at'], 'model': "{{ get_where_subquery(ref('stg_google_ads__ad_group_criterion_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_google_ads__ad_group_criterion_history_criterion_id__ad_group_id__updated_at', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'dbt_utils_unique_combination_o_2ce4e2825f6fe9034f28085d1444c1e8.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__ad_group_criterion_history_criterion_id__ad_group_id__updated_at.197bbc6816', 'fqn': ['google_ads_source', 'dbt_utils_unique_combination_of_columns_stg_google_ads__ad_group_criterion_history_criterion_id__ad_group_id__updated_at'], 'alias': 'dbt_utils_unique_combination_o_2ce4e2825f6fe9034f28085d1444c1e8', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_2ce4e2825f6fe9034f28085d1444c1e8', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_2ce4e2825f6fe9034f28085d1444c1e8'}, 'created_at': 1694433485.9920883, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_2ce4e2825f6fe9034f28085d1444c1e8'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_2ce4e2825f6fe9034f28085d1444c1e8") }}', 'language': 'sql', 'refs': [['stg_google_ads__ad_group_criterion_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_group_criterion_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_google_ads__ad_group_criterion_history'}, 'test.google_ads_source.not_null_stg_google_ads__ad_group_stats_date_day.3c6a221786': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_google_ads__ad_group_stats')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_google_ads__ad_group_stats_date_day', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'not_null_stg_google_ads__ad_group_stats_date_day.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.not_null_stg_google_ads__ad_group_stats_date_day.3c6a221786', 'fqn': ['google_ads_source', 'not_null_stg_google_ads__ad_group_stats_date_day'], 'alias': 'not_null_stg_google_ads__ad_group_stats_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.9971292, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_google_ads__ad_group_stats']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_group_stats']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_google_ads__ad_group_stats'}, 'test.google_ads_source.not_null_stg_google_ads__ad_group_stats_ad_group_id.a8d430f077': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('stg_google_ads__ad_group_stats')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_google_ads__ad_group_stats_ad_group_id', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'not_null_stg_google_ads__ad_group_stats_ad_group_id.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.not_null_stg_google_ads__ad_group_stats_ad_group_id.a8d430f077', 'fqn': ['google_ads_source', 'not_null_stg_google_ads__ad_group_stats_ad_group_id'], 'alias': 'not_null_stg_google_ads__ad_group_stats_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433485.9980485, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_google_ads__ad_group_stats']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_group_stats']}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.stg_google_ads__ad_group_stats'}, 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__ad_group_stats_ad_group_id__device__ad_network_type__date_day.ed55af6020': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_group_id', 'device', 'ad_network_type', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_google_ads__ad_group_stats')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_google_ads__ad_group_stats_ad_group_id__device__ad_network_type__date_day', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'dbt_utils_unique_combination_o_779a67237d95206a8de7fb9388c2108c.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__ad_group_stats_ad_group_id__device__ad_network_type__date_day.ed55af6020', 'fqn': ['google_ads_source', 'dbt_utils_unique_combination_of_columns_stg_google_ads__ad_group_stats_ad_group_id__device__ad_network_type__date_day'], 'alias': 'dbt_utils_unique_combination_o_779a67237d95206a8de7fb9388c2108c', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_779a67237d95206a8de7fb9388c2108c', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_779a67237d95206a8de7fb9388c2108c'}, 'created_at': 1694433486.000688, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_779a67237d95206a8de7fb9388c2108c'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_779a67237d95206a8de7fb9388c2108c") }}', 'language': 'sql', 'refs': [['stg_google_ads__ad_group_stats']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.google_ads_source.stg_google_ads__ad_group_stats']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_google_ads__ad_group_stats'}, 'test.google_ads_source.not_null_stg_google_ads__campaign_stats_date_day.dc097fd76b': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_google_ads__campaign_stats')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_google_ads__campaign_stats_date_day', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'not_null_stg_google_ads__campaign_stats_date_day.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.not_null_stg_google_ads__campaign_stats_date_day.dc097fd76b', 'fqn': ['google_ads_source', 'not_null_stg_google_ads__campaign_stats_date_day'], 'alias': 'not_null_stg_google_ads__campaign_stats_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.005071, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_google_ads__campaign_stats']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads_source.stg_google_ads__campaign_stats']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_google_ads__campaign_stats'}, 'test.google_ads_source.not_null_stg_google_ads__campaign_stats_campaign_id.11587fa10f': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_google_ads__campaign_stats')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_google_ads__campaign_stats_campaign_id', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'not_null_stg_google_ads__campaign_stats_campaign_id.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.not_null_stg_google_ads__campaign_stats_campaign_id.11587fa10f', 'fqn': ['google_ads_source', 'not_null_stg_google_ads__campaign_stats_campaign_id'], 'alias': 'not_null_stg_google_ads__campaign_stats_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.0070865, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_google_ads__campaign_stats']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads_source.stg_google_ads__campaign_stats']}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_google_ads__campaign_stats'}, 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__campaign_stats_campaign_id__ad_network_type__device__date_day.69600f7d45': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', 'ad_network_type', 'device', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_google_ads__campaign_stats')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_google_ads__campaign_stats_campaign_id__ad_network_type__device__date_day', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'dbt_utils_unique_combination_o_99cd4c79dd8197dda4f4ac2294fc9259.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__campaign_stats_campaign_id__ad_network_type__device__date_day.69600f7d45', 'fqn': ['google_ads_source', 'dbt_utils_unique_combination_of_columns_stg_google_ads__campaign_stats_campaign_id__ad_network_type__device__date_day'], 'alias': 'dbt_utils_unique_combination_o_99cd4c79dd8197dda4f4ac2294fc9259', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_99cd4c79dd8197dda4f4ac2294fc9259', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_99cd4c79dd8197dda4f4ac2294fc9259'}, 'created_at': 1694433486.007922, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_99cd4c79dd8197dda4f4ac2294fc9259'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_99cd4c79dd8197dda4f4ac2294fc9259") }}', 'language': 'sql', 'refs': [['stg_google_ads__campaign_stats']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.google_ads_source.stg_google_ads__campaign_stats']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_google_ads__campaign_stats'}, 'test.google_ads_source.not_null_stg_google_ads__keyword_stats_date_day.a9da72f74d': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_google_ads__keyword_stats')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_google_ads__keyword_stats_date_day', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'not_null_stg_google_ads__keyword_stats_date_day.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.not_null_stg_google_ads__keyword_stats_date_day.a9da72f74d', 'fqn': ['google_ads_source', 'not_null_stg_google_ads__keyword_stats_date_day'], 'alias': 'not_null_stg_google_ads__keyword_stats_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.0135572, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_google_ads__keyword_stats']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads_source.stg_google_ads__keyword_stats']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_google_ads__keyword_stats'}, 'test.google_ads_source.not_null_stg_google_ads__keyword_stats_keyword_id.f0945d6cf0': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'keyword_id', 'model': "{{ get_where_subquery(ref('stg_google_ads__keyword_stats')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_google_ads__keyword_stats_keyword_id', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'not_null_stg_google_ads__keyword_stats_keyword_id.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.not_null_stg_google_ads__keyword_stats_keyword_id.f0945d6cf0', 'fqn': ['google_ads_source', 'not_null_stg_google_ads__keyword_stats_keyword_id'], 'alias': 'not_null_stg_google_ads__keyword_stats_keyword_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.014668, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_google_ads__keyword_stats']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads_source.stg_google_ads__keyword_stats']}, 'compiled_path': None, 'column_name': 'keyword_id', 'file_key_name': 'models.stg_google_ads__keyword_stats'}, 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__keyword_stats_keyword_id__date_day.8f15198e68': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['keyword_id', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_google_ads__keyword_stats')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_google_ads__keyword_stats_keyword_id__date_day', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'dbt_utils_unique_combination_o_7e3d865f56378985172b621ddff21534.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__keyword_stats_keyword_id__date_day.8f15198e68', 'fqn': ['google_ads_source', 'dbt_utils_unique_combination_of_columns_stg_google_ads__keyword_stats_keyword_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_7e3d865f56378985172b621ddff21534', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_7e3d865f56378985172b621ddff21534', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_7e3d865f56378985172b621ddff21534'}, 'created_at': 1694433486.01576, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_7e3d865f56378985172b621ddff21534'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_7e3d865f56378985172b621ddff21534") }}', 'language': 'sql', 'refs': [['stg_google_ads__keyword_stats']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.google_ads_source.stg_google_ads__keyword_stats']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_google_ads__keyword_stats'}, 'test.google_ads_source.not_null_stg_google_ads__account_stats_account_id.2a9da5417b': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('stg_google_ads__account_stats')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_google_ads__account_stats_account_id', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'not_null_stg_google_ads__account_stats_account_id.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.not_null_stg_google_ads__account_stats_account_id.2a9da5417b', 'fqn': ['google_ads_source', 'not_null_stg_google_ads__account_stats_account_id'], 'alias': 'not_null_stg_google_ads__account_stats_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.0214744, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_google_ads__account_stats']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads_source.stg_google_ads__account_stats']}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.stg_google_ads__account_stats'}, 'test.google_ads_source.not_null_stg_google_ads__account_stats_date_day.57ac8772d5': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_google_ads__account_stats')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_google_ads__account_stats_date_day', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'not_null_stg_google_ads__account_stats_date_day.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.not_null_stg_google_ads__account_stats_date_day.57ac8772d5', 'fqn': ['google_ads_source', 'not_null_stg_google_ads__account_stats_date_day'], 'alias': 'not_null_stg_google_ads__account_stats_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.0234735, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_google_ads__account_stats']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.google_ads_source.stg_google_ads__account_stats']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_google_ads__account_stats'}, 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__account_stats_account_id__device__ad_network_type__date_day.3019f8a860': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['account_id', 'device', 'ad_network_type', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_google_ads__account_stats')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_google_ads__account_stats_account_id__device__ad_network_type__date_day', 'resource_type': 'test', 'package_name': 'google_ads_source', 'path': 'dbt_utils_unique_combination_o_c760910058eb575d2384e263c612c0c3.sql', 'original_file_path': 'models\\stg_google_ads.yml', 'unique_id': 'test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__account_stats_account_id__device__ad_network_type__date_day.3019f8a860', 'fqn': ['google_ads_source', 'dbt_utils_unique_combination_of_columns_stg_google_ads__account_stats_account_id__device__ad_network_type__date_day'], 'alias': 'dbt_utils_unique_combination_o_c760910058eb575d2384e263c612c0c3', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_c760910058eb575d2384e263c612c0c3', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_c760910058eb575d2384e263c612c0c3'}, 'created_at': 1694433486.0244732, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_c760910058eb575d2384e263c612c0c3'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_c760910058eb575d2384e263c612c0c3") }}', 'language': 'sql', 'refs': [['stg_google_ads__account_stats']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.google_ads_source.stg_google_ads__account_stats']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_google_ads__account_stats'}, 'test.linkedin.not_null_linkedin_ads__account_report_account_id.0c34ea1842': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('linkedin_ads__account_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_linkedin_ads__account_report_account_id', 'resource_type': 'test', 'package_name': 'linkedin', 'path': 'not_null_linkedin_ads__account_report_account_id.sql', 'original_file_path': 'models\\linkedin.yml', 'unique_id': 'test.linkedin.not_null_linkedin_ads__account_report_account_id.0c34ea1842', 'fqn': ['linkedin', 'not_null_linkedin_ads__account_report_account_id'], 'alias': 'not_null_linkedin_ads__account_report_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.0628676, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['linkedin_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.linkedin_ads__account_report'}, 'test.linkedin.not_null_linkedin_ads__account_report_date_day.c4b33f8f53': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('linkedin_ads__account_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_linkedin_ads__account_report_date_day', 'resource_type': 'test', 'package_name': 'linkedin', 'path': 'not_null_linkedin_ads__account_report_date_day.sql', 'original_file_path': 'models\\linkedin.yml', 'unique_id': 'test.linkedin.not_null_linkedin_ads__account_report_date_day.c4b33f8f53', 'fqn': ['linkedin', 'not_null_linkedin_ads__account_report_date_day'], 'alias': 'not_null_linkedin_ads__account_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.0648837, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['linkedin_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.linkedin_ads__account_report'}, 'test.linkedin.dbt_utils_unique_combination_of_columns_linkedin_ads__account_report_date_day__account_id.a2dcede91c': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id'], 'model': "{{ get_where_subquery(ref('linkedin_ads__account_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_linkedin_ads__account_report_date_day__account_id', 'resource_type': 'test', 'package_name': 'linkedin', 'path': 'dbt_utils_unique_combination_o_0644abec3559f9c0247b709331bb1231.sql', 'original_file_path': 'models\\linkedin.yml', 'unique_id': 'test.linkedin.dbt_utils_unique_combination_of_columns_linkedin_ads__account_report_date_day__account_id.a2dcede91c', 'fqn': ['linkedin', 'dbt_utils_unique_combination_of_columns_linkedin_ads__account_report_date_day__account_id'], 'alias': 'dbt_utils_unique_combination_o_0644abec3559f9c0247b709331bb1231', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_0644abec3559f9c0247b709331bb1231', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_0644abec3559f9c0247b709331bb1231'}, 'created_at': 1694433486.0658896, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_0644abec3559f9c0247b709331bb1231'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_0644abec3559f9c0247b709331bb1231") }}', 'language': 'sql', 'refs': [['linkedin_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.linkedin_ads__account_report'}, 'test.linkedin.not_null_linkedin_ads__campaign_report_date_day.8d320b88b1': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('linkedin_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_linkedin_ads__campaign_report_date_day', 'resource_type': 'test', 'package_name': 'linkedin', 'path': 'not_null_linkedin_ads__campaign_report_date_day.sql', 'original_file_path': 'models\\linkedin.yml', 'unique_id': 'test.linkedin.not_null_linkedin_ads__campaign_report_date_day.8d320b88b1', 'fqn': ['linkedin', 'not_null_linkedin_ads__campaign_report_date_day'], 'alias': 'not_null_linkedin_ads__campaign_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.0731058, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['linkedin_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.linkedin_ads__campaign_report'}, 'test.linkedin.not_null_linkedin_ads__campaign_report_campaign_id.bf43964b15': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('linkedin_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_linkedin_ads__campaign_report_campaign_id', 'resource_type': 'test', 'package_name': 'linkedin', 'path': 'not_null_linkedin_ads__campaign_report_campaign_id.sql', 'original_file_path': 'models\\linkedin.yml', 'unique_id': 'test.linkedin.not_null_linkedin_ads__campaign_report_campaign_id.bf43964b15', 'fqn': ['linkedin', 'not_null_linkedin_ads__campaign_report_campaign_id'], 'alias': 'not_null_linkedin_ads__campaign_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.0743506, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['linkedin_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.linkedin_ads__campaign_report'}, 'test.linkedin.dbt_utils_unique_combination_of_columns_linkedin_ads__campaign_report_date_day__campaign_id__account_id__campaign_group_id.0b09b4b3f3': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'campaign_id', 'account_id', 'campaign_group_id'], 'model': "{{ get_where_subquery(ref('linkedin_ads__campaign_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_linkedin_ads__campaign_report_date_day__campaign_id__account_id__campaign_group_id', 'resource_type': 'test', 'package_name': 'linkedin', 'path': 'dbt_utils_unique_combination_o_fd56be6c8a6c070551363fa2fd8d2873.sql', 'original_file_path': 'models\\linkedin.yml', 'unique_id': 'test.linkedin.dbt_utils_unique_combination_of_columns_linkedin_ads__campaign_report_date_day__campaign_id__account_id__campaign_group_id.0b09b4b3f3', 'fqn': ['linkedin', 'dbt_utils_unique_combination_of_columns_linkedin_ads__campaign_report_date_day__campaign_id__account_id__campaign_group_id'], 'alias': 'dbt_utils_unique_combination_o_fd56be6c8a6c070551363fa2fd8d2873', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_fd56be6c8a6c070551363fa2fd8d2873', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_fd56be6c8a6c070551363fa2fd8d2873'}, 'created_at': 1694433486.0754344, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_fd56be6c8a6c070551363fa2fd8d2873'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_fd56be6c8a6c070551363fa2fd8d2873") }}', 'language': 'sql', 'refs': [['linkedin_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.linkedin_ads__campaign_report'}, 'test.linkedin.not_null_linkedin_ads__campaign_group_report_date_day.2676a1f76b': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('linkedin_ads__campaign_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_linkedin_ads__campaign_group_report_date_day', 'resource_type': 'test', 'package_name': 'linkedin', 'path': 'not_null_linkedin_ads__campaign_group_report_date_day.sql', 'original_file_path': 'models\\linkedin.yml', 'unique_id': 'test.linkedin.not_null_linkedin_ads__campaign_group_report_date_day.2676a1f76b', 'fqn': ['linkedin', 'not_null_linkedin_ads__campaign_group_report_date_day'], 'alias': 'not_null_linkedin_ads__campaign_group_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.0810497, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['linkedin_ads__campaign_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.linkedin_ads__campaign_group_report'}, 'test.linkedin.not_null_linkedin_ads__campaign_group_report_campaign_group_id.39b448cdaf': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_group_id', 'model': "{{ get_where_subquery(ref('linkedin_ads__campaign_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_linkedin_ads__campaign_group_report_campaign_group_id', 'resource_type': 'test', 'package_name': 'linkedin', 'path': 'not_null_linkedin_ads__campaign_group_report_campaign_group_id.sql', 'original_file_path': 'models\\linkedin.yml', 'unique_id': 'test.linkedin.not_null_linkedin_ads__campaign_group_report_campaign_group_id.39b448cdaf', 'fqn': ['linkedin', 'not_null_linkedin_ads__campaign_group_report_campaign_group_id'], 'alias': 'not_null_linkedin_ads__campaign_group_report_campaign_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.0830793, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['linkedin_ads__campaign_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_group_id', 'file_key_name': 'models.linkedin_ads__campaign_group_report'}, 'test.linkedin.dbt_utils_unique_combination_of_columns_linkedin_ads__campaign_group_report_date_day__campaign_group_id__account_id.f60989a7a6': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'campaign_group_id', 'account_id'], 'model': "{{ get_where_subquery(ref('linkedin_ads__campaign_group_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_linkedin_ads__campaign_group_report_date_day__campaign_group_id__account_id', 'resource_type': 'test', 'package_name': 'linkedin', 'path': 'dbt_utils_unique_combination_o_bcb471c45c713cd1ea59bd0229ed3f9e.sql', 'original_file_path': 'models\\linkedin.yml', 'unique_id': 'test.linkedin.dbt_utils_unique_combination_of_columns_linkedin_ads__campaign_group_report_date_day__campaign_group_id__account_id.f60989a7a6', 'fqn': ['linkedin', 'dbt_utils_unique_combination_of_columns_linkedin_ads__campaign_group_report_date_day__campaign_group_id__account_id'], 'alias': 'dbt_utils_unique_combination_o_bcb471c45c713cd1ea59bd0229ed3f9e', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_bcb471c45c713cd1ea59bd0229ed3f9e', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_bcb471c45c713cd1ea59bd0229ed3f9e'}, 'created_at': 1694433486.0842316, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_bcb471c45c713cd1ea59bd0229ed3f9e'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_bcb471c45c713cd1ea59bd0229ed3f9e") }}', 'language': 'sql', 'refs': [['linkedin_ads__campaign_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.linkedin_ads__campaign_group_report'}, 'test.linkedin.not_null_linkedin_ads__creative_report_date_day.0c6338b020': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('linkedin_ads__creative_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_linkedin_ads__creative_report_date_day', 'resource_type': 'test', 'package_name': 'linkedin', 'path': 'not_null_linkedin_ads__creative_report_date_day.sql', 'original_file_path': 'models\\linkedin.yml', 'unique_id': 'test.linkedin.not_null_linkedin_ads__creative_report_date_day.0c6338b020', 'fqn': ['linkedin', 'not_null_linkedin_ads__creative_report_date_day'], 'alias': 'not_null_linkedin_ads__creative_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.089183, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['linkedin_ads__creative_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.linkedin_ads__creative_report'}, 'test.linkedin.not_null_linkedin_ads__creative_report_creative_id.096d93f889': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'creative_id', 'model': "{{ get_where_subquery(ref('linkedin_ads__creative_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_linkedin_ads__creative_report_creative_id', 'resource_type': 'test', 'package_name': 'linkedin', 'path': 'not_null_linkedin_ads__creative_report_creative_id.sql', 'original_file_path': 'models\\linkedin.yml', 'unique_id': 'test.linkedin.not_null_linkedin_ads__creative_report_creative_id.096d93f889', 'fqn': ['linkedin', 'not_null_linkedin_ads__creative_report_creative_id'], 'alias': 'not_null_linkedin_ads__creative_report_creative_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.0917132, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['linkedin_ads__creative_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'creative_id', 'file_key_name': 'models.linkedin_ads__creative_report'}, 'test.linkedin.dbt_utils_unique_combination_of_columns_linkedin_ads__creative_report_date_day__creative_id__campaign_id__campaign_group_id__account_id.5c000e925f': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'creative_id', 'campaign_id', 'campaign_group_id', 'account_id'], 'model': "{{ get_where_subquery(ref('linkedin_ads__creative_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_linkedin_ads__creative_report_date_day__creative_id__campaign_id__campaign_group_id__account_id', 'resource_type': 'test', 'package_name': 'linkedin', 'path': 'dbt_utils_unique_combination_o_28cc8f6d273bc5b366ed325805452f92.sql', 'original_file_path': 'models\\linkedin.yml', 'unique_id': 'test.linkedin.dbt_utils_unique_combination_of_columns_linkedin_ads__creative_report_date_day__creative_id__campaign_id__campaign_group_id__account_id.5c000e925f', 'fqn': ['linkedin', 'dbt_utils_unique_combination_of_columns_linkedin_ads__creative_report_date_day__creative_id__campaign_id__campaign_group_id__account_id'], 'alias': 'dbt_utils_unique_combination_o_28cc8f6d273bc5b366ed325805452f92', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_28cc8f6d273bc5b366ed325805452f92', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_28cc8f6d273bc5b366ed325805452f92'}, 'created_at': 1694433486.0927904, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_28cc8f6d273bc5b366ed325805452f92'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_28cc8f6d273bc5b366ed325805452f92") }}', 'language': 'sql', 'refs': [['linkedin_ads__creative_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.linkedin_ads__creative_report'}, 'test.linkedin.not_null_linkedin_ads__url_report_date_day.48b540f315': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('linkedin_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_linkedin_ads__url_report_date_day', 'resource_type': 'test', 'package_name': 'linkedin', 'path': 'not_null_linkedin_ads__url_report_date_day.sql', 'original_file_path': 'models\\linkedin.yml', 'unique_id': 'test.linkedin.not_null_linkedin_ads__url_report_date_day.48b540f315', 'fqn': ['linkedin', 'not_null_linkedin_ads__url_report_date_day'], 'alias': 'not_null_linkedin_ads__url_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.0970857, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['linkedin_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.linkedin_ads__url_report'}, 'test.linkedin.not_null_linkedin_ads__url_report_creative_id.83967fe9d2': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'creative_id', 'model': "{{ get_where_subquery(ref('linkedin_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_linkedin_ads__url_report_creative_id', 'resource_type': 'test', 'package_name': 'linkedin', 'path': 'not_null_linkedin_ads__url_report_creative_id.sql', 'original_file_path': 'models\\linkedin.yml', 'unique_id': 'test.linkedin.not_null_linkedin_ads__url_report_creative_id.83967fe9d2', 'fqn': ['linkedin', 'not_null_linkedin_ads__url_report_creative_id'], 'alias': 'not_null_linkedin_ads__url_report_creative_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.1005623, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['linkedin_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'creative_id', 'file_key_name': 'models.linkedin_ads__url_report'}, 'test.linkedin.not_null_linkedin_ads__url_report_click_uri.81534087cb': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'click_uri', 'model': "{{ get_where_subquery(ref('linkedin_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_linkedin_ads__url_report_click_uri', 'resource_type': 'test', 'package_name': 'linkedin', 'path': 'not_null_linkedin_ads__url_report_click_uri.sql', 'original_file_path': 'models\\linkedin.yml', 'unique_id': 'test.linkedin.not_null_linkedin_ads__url_report_click_uri.81534087cb', 'fqn': ['linkedin', 'not_null_linkedin_ads__url_report_click_uri'], 'alias': 'not_null_linkedin_ads__url_report_click_uri', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True}, 'created_at': 1694433486.1025627, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(enabled=True) }}', 'language': 'sql', 'refs': [['linkedin_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'click_uri', 'file_key_name': 'models.linkedin_ads__url_report'}, 'test.linkedin.dbt_utils_unique_combination_of_columns_linkedin_ads__url_report_date_day__creative_id__campaign_id__campaign_group_id__account_id.d00d4a104d': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'creative_id', 'campaign_id', 'campaign_group_id', 'account_id'], 'model': "{{ get_where_subquery(ref('linkedin_ads__url_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_linkedin_ads__url_report_date_day__creative_id__campaign_id__campaign_group_id__account_id', 'resource_type': 'test', 'package_name': 'linkedin', 'path': 'dbt_utils_unique_combination_o_24d7d196c7f59231b7de190c11b33a2f.sql', 'original_file_path': 'models\\linkedin.yml', 'unique_id': 'test.linkedin.dbt_utils_unique_combination_of_columns_linkedin_ads__url_report_date_day__creative_id__campaign_id__campaign_group_id__account_id.d00d4a104d', 'fqn': ['linkedin', 'dbt_utils_unique_combination_of_columns_linkedin_ads__url_report_date_day__creative_id__campaign_id__campaign_group_id__account_id'], 'alias': 'dbt_utils_unique_combination_o_24d7d196c7f59231b7de190c11b33a2f', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_24d7d196c7f59231b7de190c11b33a2f', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_24d7d196c7f59231b7de190c11b33a2f'}, 'created_at': 1694433486.1045623, 'config_call_dict': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_24d7d196c7f59231b7de190c11b33a2f'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(enabled=True,alias="dbt_utils_unique_combination_o_24d7d196c7f59231b7de190c11b33a2f") }}', 'language': 'sql', 'refs': [['linkedin_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.linkedin_ads__url_report'}, 'test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_creative_creative_id.062abfe14b': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'creative_id', 'model': "{{ get_where_subquery(ref('stg_linkedin_ads__ad_analytics_by_creative')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_linkedin_ads__ad_analytics_by_creative_creative_id', 'resource_type': 'test', 'package_name': 'linkedin_source', 'path': 'not_null_stg_linkedin_ads__ad_analytics_by_creative_creative_id.sql', 'original_file_path': 'models\\stg_linkedin.yml', 'unique_id': 'test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_creative_creative_id.062abfe14b', 'fqn': ['linkedin_source', 'not_null_stg_linkedin_ads__ad_analytics_by_creative_creative_id'], 'alias': 'not_null_stg_linkedin_ads__ad_analytics_by_creative_creative_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.1641173, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_linkedin_ads__ad_analytics_by_creative']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'creative_id', 'file_key_name': 'models.stg_linkedin_ads__ad_analytics_by_creative'}, 'test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_creative_date_day.cb81bc4766': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_linkedin_ads__ad_analytics_by_creative')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_linkedin_ads__ad_analytics_by_creative_date_day', 'resource_type': 'test', 'package_name': 'linkedin_source', 'path': 'not_null_stg_linkedin_ads__ad_analytics_by_creative_date_day.sql', 'original_file_path': 'models\\stg_linkedin.yml', 'unique_id': 'test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_creative_date_day.cb81bc4766', 'fqn': ['linkedin_source', 'not_null_stg_linkedin_ads__ad_analytics_by_creative_date_day'], 'alias': 'not_null_stg_linkedin_ads__ad_analytics_by_creative_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.1651227, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_linkedin_ads__ad_analytics_by_creative']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_linkedin_ads__ad_analytics_by_creative'}, 'test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__ad_analytics_by_creative_date_day__creative_id.973a01e410': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'creative_id'], 'model': "{{ get_where_subquery(ref('stg_linkedin_ads__ad_analytics_by_creative')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_linkedin_ads__ad_analytics_by_creative_date_day__creative_id', 'resource_type': 'test', 'package_name': 'linkedin_source', 'path': 'dbt_utils_unique_combination_o_aafc2af91b093fc4d5ae0ca1f56acbf9.sql', 'original_file_path': 'models\\stg_linkedin.yml', 'unique_id': 'test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__ad_analytics_by_creative_date_day__creative_id.973a01e410', 'fqn': ['linkedin_source', 'dbt_utils_unique_combination_of_columns_stg_linkedin_ads__ad_analytics_by_creative_date_day__creative_id'], 'alias': 'dbt_utils_unique_combination_o_aafc2af91b093fc4d5ae0ca1f56acbf9', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_aafc2af91b093fc4d5ae0ca1f56acbf9', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_aafc2af91b093fc4d5ae0ca1f56acbf9'}, 'created_at': 1694433486.1671293, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_aafc2af91b093fc4d5ae0ca1f56acbf9'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_aafc2af91b093fc4d5ae0ca1f56acbf9") }}', 'language': 'sql', 'refs': [['stg_linkedin_ads__ad_analytics_by_creative']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_linkedin_ads__ad_analytics_by_creative'}, 'test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_campaign_campaign_id.d6ae242f1a': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_linkedin_ads__ad_analytics_by_campaign')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_linkedin_ads__ad_analytics_by_campaign_campaign_id', 'resource_type': 'test', 'package_name': 'linkedin_source', 'path': 'not_null_stg_linkedin_ads__ad_analytics_by_campaign_campaign_id.sql', 'original_file_path': 'models\\stg_linkedin.yml', 'unique_id': 'test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_campaign_campaign_id.d6ae242f1a', 'fqn': ['linkedin_source', 'not_null_stg_linkedin_ads__ad_analytics_by_campaign_campaign_id'], 'alias': 'not_null_stg_linkedin_ads__ad_analytics_by_campaign_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.1716776, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_linkedin_ads__ad_analytics_by_campaign']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_linkedin_ads__ad_analytics_by_campaign'}, 'test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_campaign_date_day.ef97bed766': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_linkedin_ads__ad_analytics_by_campaign')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_linkedin_ads__ad_analytics_by_campaign_date_day', 'resource_type': 'test', 'package_name': 'linkedin_source', 'path': 'not_null_stg_linkedin_ads__ad_analytics_by_campaign_date_day.sql', 'original_file_path': 'models\\stg_linkedin.yml', 'unique_id': 'test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_campaign_date_day.ef97bed766', 'fqn': ['linkedin_source', 'not_null_stg_linkedin_ads__ad_analytics_by_campaign_date_day'], 'alias': 'not_null_stg_linkedin_ads__ad_analytics_by_campaign_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.172686, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_linkedin_ads__ad_analytics_by_campaign']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_linkedin_ads__ad_analytics_by_campaign'}, 'test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__ad_analytics_by_campaign_date_day__campaign_id.b03f3dc81d': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'campaign_id'], 'model': "{{ get_where_subquery(ref('stg_linkedin_ads__ad_analytics_by_campaign')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_linkedin_ads__ad_analytics_by_campaign_date_day__campaign_id', 'resource_type': 'test', 'package_name': 'linkedin_source', 'path': 'dbt_utils_unique_combination_o_8315cf2be67da0ba2aede716f1af891c.sql', 'original_file_path': 'models\\stg_linkedin.yml', 'unique_id': 'test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__ad_analytics_by_campaign_date_day__campaign_id.b03f3dc81d', 'fqn': ['linkedin_source', 'dbt_utils_unique_combination_of_columns_stg_linkedin_ads__ad_analytics_by_campaign_date_day__campaign_id'], 'alias': 'dbt_utils_unique_combination_o_8315cf2be67da0ba2aede716f1af891c', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_8315cf2be67da0ba2aede716f1af891c', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_8315cf2be67da0ba2aede716f1af891c'}, 'created_at': 1694433486.1747003, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_8315cf2be67da0ba2aede716f1af891c'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_8315cf2be67da0ba2aede716f1af891c") }}', 'language': 'sql', 'refs': [['stg_linkedin_ads__ad_analytics_by_campaign']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_linkedin_ads__ad_analytics_by_campaign'}, 'test.linkedin_source.not_null_stg_linkedin_ads__creative_history_creative_id.4d51d55474': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'creative_id', 'model': "{{ get_where_subquery(ref('stg_linkedin_ads__creative_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_linkedin_ads__creative_history_creative_id', 'resource_type': 'test', 'package_name': 'linkedin_source', 'path': 'not_null_stg_linkedin_ads__creative_history_creative_id.sql', 'original_file_path': 'models\\stg_linkedin.yml', 'unique_id': 'test.linkedin_source.not_null_stg_linkedin_ads__creative_history_creative_id.4d51d55474', 'fqn': ['linkedin_source', 'not_null_stg_linkedin_ads__creative_history_creative_id'], 'alias': 'not_null_stg_linkedin_ads__creative_history_creative_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.179355, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_linkedin_ads__creative_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'creative_id', 'file_key_name': 'models.stg_linkedin_ads__creative_history'}, 'test.linkedin_source.not_null_stg_linkedin_ads__campaign_history_campaign_id.b026971ca2': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_linkedin_ads__campaign_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_linkedin_ads__campaign_history_campaign_id', 'resource_type': 'test', 'package_name': 'linkedin_source', 'path': 'not_null_stg_linkedin_ads__campaign_history_campaign_id.sql', 'original_file_path': 'models\\stg_linkedin.yml', 'unique_id': 'test.linkedin_source.not_null_stg_linkedin_ads__campaign_history_campaign_id.b026971ca2', 'fqn': ['linkedin_source', 'not_null_stg_linkedin_ads__campaign_history_campaign_id'], 'alias': 'not_null_stg_linkedin_ads__campaign_history_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.180971, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_linkedin_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_linkedin_ads__campaign_history'}, 'test.linkedin_source.not_null_stg_linkedin_ads__campaign_history_version_tag.64954cc469': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'version_tag', 'model': "{{ get_where_subquery(ref('stg_linkedin_ads__campaign_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_linkedin_ads__campaign_history_version_tag', 'resource_type': 'test', 'package_name': 'linkedin_source', 'path': 'not_null_stg_linkedin_ads__campaign_history_version_tag.sql', 'original_file_path': 'models\\stg_linkedin.yml', 'unique_id': 'test.linkedin_source.not_null_stg_linkedin_ads__campaign_history_version_tag.64954cc469', 'fqn': ['linkedin_source', 'not_null_stg_linkedin_ads__campaign_history_version_tag'], 'alias': 'not_null_stg_linkedin_ads__campaign_history_version_tag', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.181973, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_linkedin_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'version_tag', 'file_key_name': 'models.stg_linkedin_ads__campaign_history'}, 'test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__campaign_history_version_tag__campaign_id.2d20780793': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['version_tag', 'campaign_id'], 'model': "{{ get_where_subquery(ref('stg_linkedin_ads__campaign_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_linkedin_ads__campaign_history_version_tag__campaign_id', 'resource_type': 'test', 'package_name': 'linkedin_source', 'path': 'dbt_utils_unique_combination_o_04241a97ca756b5a2103a7a728e18361.sql', 'original_file_path': 'models\\stg_linkedin.yml', 'unique_id': 'test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__campaign_history_version_tag__campaign_id.2d20780793', 'fqn': ['linkedin_source', 'dbt_utils_unique_combination_of_columns_stg_linkedin_ads__campaign_history_version_tag__campaign_id'], 'alias': 'dbt_utils_unique_combination_o_04241a97ca756b5a2103a7a728e18361', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_04241a97ca756b5a2103a7a728e18361', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_04241a97ca756b5a2103a7a728e18361'}, 'created_at': 1694433486.1839726, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_04241a97ca756b5a2103a7a728e18361'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_04241a97ca756b5a2103a7a728e18361") }}', 'language': 'sql', 'refs': [['stg_linkedin_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_linkedin_ads__campaign_history'}, 'test.linkedin_source.not_null_stg_linkedin_ads__campaign_group_history_campaign_group_id.3888f3777d': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_group_id', 'model': "{{ get_where_subquery(ref('stg_linkedin_ads__campaign_group_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_linkedin_ads__campaign_group_history_campaign_group_id', 'resource_type': 'test', 'package_name': 'linkedin_source', 'path': 'not_null_stg_linkedin_ads__cam_ff659fc451955e2142e65b7eefd44f9a.sql', 'original_file_path': 'models\\stg_linkedin.yml', 'unique_id': 'test.linkedin_source.not_null_stg_linkedin_ads__campaign_group_history_campaign_group_id.3888f3777d', 'fqn': ['linkedin_source', 'not_null_stg_linkedin_ads__campaign_group_history_campaign_group_id'], 'alias': 'not_null_stg_linkedin_ads__cam_ff659fc451955e2142e65b7eefd44f9a', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'not_null_stg_linkedin_ads__cam_ff659fc451955e2142e65b7eefd44f9a', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'not_null_stg_linkedin_ads__cam_ff659fc451955e2142e65b7eefd44f9a'}, 'created_at': 1694433486.1884897, 'config_call_dict': {'alias': 'not_null_stg_linkedin_ads__cam_ff659fc451955e2142e65b7eefd44f9a'}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias="not_null_stg_linkedin_ads__cam_ff659fc451955e2142e65b7eefd44f9a") }}', 'language': 'sql', 'refs': [['stg_linkedin_ads__campaign_group_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_group_id', 'file_key_name': 'models.stg_linkedin_ads__campaign_group_history'}, 'test.linkedin_source.not_null_stg_linkedin_ads__campaign_group_history_last_modified_at.a716e2a7ea': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'last_modified_at', 'model': "{{ get_where_subquery(ref('stg_linkedin_ads__campaign_group_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_linkedin_ads__campaign_group_history_last_modified_at', 'resource_type': 'test', 'package_name': 'linkedin_source', 'path': 'not_null_stg_linkedin_ads__cam_2e7858c2b570943ef2af34e42f5302bd.sql', 'original_file_path': 'models\\stg_linkedin.yml', 'unique_id': 'test.linkedin_source.not_null_stg_linkedin_ads__campaign_group_history_last_modified_at.a716e2a7ea', 'fqn': ['linkedin_source', 'not_null_stg_linkedin_ads__campaign_group_history_last_modified_at'], 'alias': 'not_null_stg_linkedin_ads__cam_2e7858c2b570943ef2af34e42f5302bd', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'not_null_stg_linkedin_ads__cam_2e7858c2b570943ef2af34e42f5302bd', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'not_null_stg_linkedin_ads__cam_2e7858c2b570943ef2af34e42f5302bd'}, 'created_at': 1694433486.1894894, 'config_call_dict': {'alias': 'not_null_stg_linkedin_ads__cam_2e7858c2b570943ef2af34e42f5302bd'}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias="not_null_stg_linkedin_ads__cam_2e7858c2b570943ef2af34e42f5302bd") }}', 'language': 'sql', 'refs': [['stg_linkedin_ads__campaign_group_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'last_modified_at', 'file_key_name': 'models.stg_linkedin_ads__campaign_group_history'}, 'test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__campaign_group_history_last_modified_at__campaign_group_id.e761ddb4da': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['last_modified_at', 'campaign_group_id'], 'model': "{{ get_where_subquery(ref('stg_linkedin_ads__campaign_group_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_linkedin_ads__campaign_group_history_last_modified_at__campaign_group_id', 'resource_type': 'test', 'package_name': 'linkedin_source', 'path': 'dbt_utils_unique_combination_o_03fa025e903c1ddc393db8f138302b14.sql', 'original_file_path': 'models\\stg_linkedin.yml', 'unique_id': 'test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__campaign_group_history_last_modified_at__campaign_group_id.e761ddb4da', 'fqn': ['linkedin_source', 'dbt_utils_unique_combination_of_columns_stg_linkedin_ads__campaign_group_history_last_modified_at__campaign_group_id'], 'alias': 'dbt_utils_unique_combination_o_03fa025e903c1ddc393db8f138302b14', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_03fa025e903c1ddc393db8f138302b14', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_03fa025e903c1ddc393db8f138302b14'}, 'created_at': 1694433486.1914895, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_03fa025e903c1ddc393db8f138302b14'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_03fa025e903c1ddc393db8f138302b14") }}', 'language': 'sql', 'refs': [['stg_linkedin_ads__campaign_group_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_linkedin_ads__campaign_group_history'}, 'test.linkedin_source.not_null_stg_linkedin_ads__account_history_account_id.a9fa7f93c0': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('stg_linkedin_ads__account_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_linkedin_ads__account_history_account_id', 'resource_type': 'test', 'package_name': 'linkedin_source', 'path': 'not_null_stg_linkedin_ads__account_history_account_id.sql', 'original_file_path': 'models\\stg_linkedin.yml', 'unique_id': 'test.linkedin_source.not_null_stg_linkedin_ads__account_history_account_id.a9fa7f93c0', 'fqn': ['linkedin_source', 'not_null_stg_linkedin_ads__account_history_account_id'], 'alias': 'not_null_stg_linkedin_ads__account_history_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.1954904, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_linkedin_ads__account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.stg_linkedin_ads__account_history'}, 'test.linkedin_source.not_null_stg_linkedin_ads__account_history_version_tag.58c46c5d81': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'version_tag', 'model': "{{ get_where_subquery(ref('stg_linkedin_ads__account_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_linkedin_ads__account_history_version_tag', 'resource_type': 'test', 'package_name': 'linkedin_source', 'path': 'not_null_stg_linkedin_ads__account_history_version_tag.sql', 'original_file_path': 'models\\stg_linkedin.yml', 'unique_id': 'test.linkedin_source.not_null_stg_linkedin_ads__account_history_version_tag.58c46c5d81', 'fqn': ['linkedin_source', 'not_null_stg_linkedin_ads__account_history_version_tag'], 'alias': 'not_null_stg_linkedin_ads__account_history_version_tag', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.1980436, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_linkedin_ads__account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'version_tag', 'file_key_name': 'models.stg_linkedin_ads__account_history'}, 'test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__account_history_account_id__version_tag.9a655993ce': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['account_id', 'version_tag'], 'model': "{{ get_where_subquery(ref('stg_linkedin_ads__account_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_linkedin_ads__account_history_account_id__version_tag', 'resource_type': 'test', 'package_name': 'linkedin_source', 'path': 'dbt_utils_unique_combination_o_e080bf5d4722552a352202d7efd9af55.sql', 'original_file_path': 'models\\stg_linkedin.yml', 'unique_id': 'test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__account_history_account_id__version_tag.9a655993ce', 'fqn': ['linkedin_source', 'dbt_utils_unique_combination_of_columns_stg_linkedin_ads__account_history_account_id__version_tag'], 'alias': 'dbt_utils_unique_combination_o_e080bf5d4722552a352202d7efd9af55', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_e080bf5d4722552a352202d7efd9af55', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_e080bf5d4722552a352202d7efd9af55'}, 'created_at': 1694433486.199045, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_e080bf5d4722552a352202d7efd9af55'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_e080bf5d4722552a352202d7efd9af55") }}', 'language': 'sql', 'refs': [['stg_linkedin_ads__account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_linkedin_ads__account_history'}, 'test.microsoft_ads.not_null_microsoft_ads__account_report_account_id.f88e46157e': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('microsoft_ads__account_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_microsoft_ads__account_report_account_id', 'resource_type': 'test', 'package_name': 'microsoft_ads', 'path': 'not_null_microsoft_ads__account_report_account_id.sql', 'original_file_path': 'models\\microsoft_ads.yml', 'unique_id': 'test.microsoft_ads.not_null_microsoft_ads__account_report_account_id.f88e46157e', 'fqn': ['microsoft_ads', 'not_null_microsoft_ads__account_report_account_id'], 'alias': 'not_null_microsoft_ads__account_report_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.2455027, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['microsoft_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.microsoft_ads__account_report'}, 'test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__account_report_date_day__account_id__device_os__device_type__network__currency_code.2d5faac68f': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'device_os', 'device_type', 'network', 'currency_code'], 'model': "{{ get_where_subquery(ref('microsoft_ads__account_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_microsoft_ads__account_report_date_day__account_id__device_os__device_type__network__currency_code', 'resource_type': 'test', 'package_name': 'microsoft_ads', 'path': 'dbt_utils_unique_combination_o_9284db0a761f9f76982a86a301c98668.sql', 'original_file_path': 'models\\microsoft_ads.yml', 'unique_id': 'test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__account_report_date_day__account_id__device_os__device_type__network__currency_code.2d5faac68f', 'fqn': ['microsoft_ads', 'dbt_utils_unique_combination_of_columns_microsoft_ads__account_report_date_day__account_id__device_os__device_type__network__currency_code'], 'alias': 'dbt_utils_unique_combination_o_9284db0a761f9f76982a86a301c98668', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_9284db0a761f9f76982a86a301c98668', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_9284db0a761f9f76982a86a301c98668'}, 'created_at': 1694433486.2471087, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_9284db0a761f9f76982a86a301c98668'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_9284db0a761f9f76982a86a301c98668") }}', 'language': 'sql', 'refs': [['microsoft_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.microsoft_ads__account_report'}, 'test.microsoft_ads.not_null_microsoft_ads__ad_group_report_ad_group_id.1974ec5ab9': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('microsoft_ads__ad_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_microsoft_ads__ad_group_report_ad_group_id', 'resource_type': 'test', 'package_name': 'microsoft_ads', 'path': 'not_null_microsoft_ads__ad_group_report_ad_group_id.sql', 'original_file_path': 'models\\microsoft_ads.yml', 'unique_id': 'test.microsoft_ads.not_null_microsoft_ads__ad_group_report_ad_group_id.1974ec5ab9', 'fqn': ['microsoft_ads', 'not_null_microsoft_ads__ad_group_report_ad_group_id'], 'alias': 'not_null_microsoft_ads__ad_group_report_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.2531123, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['microsoft_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.microsoft_ads__ad_group_report'}, 'test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__ad_group_report_date_day__account_id__campaign_id__ad_group_id__device_os__device_type__network__currency_code.87353ef6b3': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'campaign_id', 'ad_group_id', 'device_os', 'device_type', 'network', 'currency_code'], 'model': "{{ get_where_subquery(ref('microsoft_ads__ad_group_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_microsoft_ads__ad_group_report_date_day__account_id__campaign_id__ad_group_id__device_os__device_type__network__currency_code', 'resource_type': 'test', 'package_name': 'microsoft_ads', 'path': 'dbt_utils_unique_combination_o_40dfe26196c4c6b90b8b7492df4c01d6.sql', 'original_file_path': 'models\\microsoft_ads.yml', 'unique_id': 'test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__ad_group_report_date_day__account_id__campaign_id__ad_group_id__device_os__device_type__network__currency_code.87353ef6b3', 'fqn': ['microsoft_ads', 'dbt_utils_unique_combination_of_columns_microsoft_ads__ad_group_report_date_day__account_id__campaign_id__ad_group_id__device_os__device_type__network__currency_code'], 'alias': 'dbt_utils_unique_combination_o_40dfe26196c4c6b90b8b7492df4c01d6', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_40dfe26196c4c6b90b8b7492df4c01d6', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_40dfe26196c4c6b90b8b7492df4c01d6'}, 'created_at': 1694433486.2551122, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_40dfe26196c4c6b90b8b7492df4c01d6'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_40dfe26196c4c6b90b8b7492df4c01d6") }}', 'language': 'sql', 'refs': [['microsoft_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.microsoft_ads__ad_group_report'}, 'test.microsoft_ads.not_null_microsoft_ads__ad_report_ad_id.b089709125': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('microsoft_ads__ad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_microsoft_ads__ad_report_ad_id', 'resource_type': 'test', 'package_name': 'microsoft_ads', 'path': 'not_null_microsoft_ads__ad_report_ad_id.sql', 'original_file_path': 'models\\microsoft_ads.yml', 'unique_id': 'test.microsoft_ads.not_null_microsoft_ads__ad_report_ad_id.b089709125', 'fqn': ['microsoft_ads', 'not_null_microsoft_ads__ad_report_ad_id'], 'alias': 'not_null_microsoft_ads__ad_report_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.2640831, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['microsoft_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.microsoft_ads__ad_report'}, 'test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__ad_report_date_day__account_id__campaign_id__ad_group_id__ad_id__ad_type__device_os__device_type__network__currency_code.4b91f31686': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'campaign_id', 'ad_group_id', 'ad_id', 'ad_type', 'device_os', 'device_type', 'network', 'currency_code'], 'model': "{{ get_where_subquery(ref('microsoft_ads__ad_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_microsoft_ads__ad_report_date_day__account_id__campaign_id__ad_group_id__ad_id__ad_type__device_os__device_type__network__currency_code', 'resource_type': 'test', 'package_name': 'microsoft_ads', 'path': 'dbt_utils_unique_combination_o_77fd1448acda33bd9d2c0555648d2822.sql', 'original_file_path': 'models\\microsoft_ads.yml', 'unique_id': 'test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__ad_report_date_day__account_id__campaign_id__ad_group_id__ad_id__ad_type__device_os__device_type__network__currency_code.4b91f31686', 'fqn': ['microsoft_ads', 'dbt_utils_unique_combination_of_columns_microsoft_ads__ad_report_date_day__account_id__campaign_id__ad_group_id__ad_id__ad_type__device_os__device_type__network__currency_code'], 'alias': 'dbt_utils_unique_combination_o_77fd1448acda33bd9d2c0555648d2822', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_77fd1448acda33bd9d2c0555648d2822', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_77fd1448acda33bd9d2c0555648d2822'}, 'created_at': 1694433486.2660625, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_77fd1448acda33bd9d2c0555648d2822'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_77fd1448acda33bd9d2c0555648d2822") }}', 'language': 'sql', 'refs': [['microsoft_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.microsoft_ads__ad_report'}, 'test.microsoft_ads.not_null_microsoft_ads__campaign_report_campaign_id.67aa50e1f8': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('microsoft_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_microsoft_ads__campaign_report_campaign_id', 'resource_type': 'test', 'package_name': 'microsoft_ads', 'path': 'not_null_microsoft_ads__campaign_report_campaign_id.sql', 'original_file_path': 'models\\microsoft_ads.yml', 'unique_id': 'test.microsoft_ads.not_null_microsoft_ads__campaign_report_campaign_id.67aa50e1f8', 'fqn': ['microsoft_ads', 'not_null_microsoft_ads__campaign_report_campaign_id'], 'alias': 'not_null_microsoft_ads__campaign_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.2737348, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['microsoft_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.microsoft_ads__campaign_report'}, 'test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__campaign_report_date_day__account_id__campaign_id__device_os__device_type__network__currency_code.d7e35aaa9b': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'campaign_id', 'device_os', 'device_type', 'network', 'currency_code'], 'model': "{{ get_where_subquery(ref('microsoft_ads__campaign_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_microsoft_ads__campaign_report_date_day__account_id__campaign_id__device_os__device_type__network__currency_code', 'resource_type': 'test', 'package_name': 'microsoft_ads', 'path': 'dbt_utils_unique_combination_o_90115110f76cc54bfcc637b8965bda7a.sql', 'original_file_path': 'models\\microsoft_ads.yml', 'unique_id': 'test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__campaign_report_date_day__account_id__campaign_id__device_os__device_type__network__currency_code.d7e35aaa9b', 'fqn': ['microsoft_ads', 'dbt_utils_unique_combination_of_columns_microsoft_ads__campaign_report_date_day__account_id__campaign_id__device_os__device_type__network__currency_code'], 'alias': 'dbt_utils_unique_combination_o_90115110f76cc54bfcc637b8965bda7a', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_90115110f76cc54bfcc637b8965bda7a', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_90115110f76cc54bfcc637b8965bda7a'}, 'created_at': 1694433486.2756872, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_90115110f76cc54bfcc637b8965bda7a'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_90115110f76cc54bfcc637b8965bda7a") }}', 'language': 'sql', 'refs': [['microsoft_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.microsoft_ads__campaign_report'}, 'test.microsoft_ads.not_null_microsoft_ads__keyword_report_keyword_id.da1d648d3b': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'keyword_id', 'model': "{{ get_where_subquery(ref('microsoft_ads__keyword_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_microsoft_ads__keyword_report_keyword_id', 'resource_type': 'test', 'package_name': 'microsoft_ads', 'path': 'not_null_microsoft_ads__keyword_report_keyword_id.sql', 'original_file_path': 'models\\microsoft_ads.yml', 'unique_id': 'test.microsoft_ads.not_null_microsoft_ads__keyword_report_keyword_id.da1d648d3b', 'fqn': ['microsoft_ads', 'not_null_microsoft_ads__keyword_report_keyword_id'], 'alias': 'not_null_microsoft_ads__keyword_report_keyword_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.2821443, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['microsoft_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'keyword_id', 'file_key_name': 'models.microsoft_ads__keyword_report'}, 'test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__keyword_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__device_os__device_type__network__currency_code.9ddafdcbe9': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'campaign_id', 'ad_group_id', 'ad_id', 'keyword_id', 'device_os', 'device_type', 'network', 'currency_code'], 'model': "{{ get_where_subquery(ref('microsoft_ads__keyword_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_microsoft_ads__keyword_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__device_os__device_type__network__currency_code', 'resource_type': 'test', 'package_name': 'microsoft_ads', 'path': 'dbt_utils_unique_combination_o_44d9a6d860076a5eefdaf319891f3854.sql', 'original_file_path': 'models\\microsoft_ads.yml', 'unique_id': 'test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__keyword_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__device_os__device_type__network__currency_code.9ddafdcbe9', 'fqn': ['microsoft_ads', 'dbt_utils_unique_combination_of_columns_microsoft_ads__keyword_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__device_os__device_type__network__currency_code'], 'alias': 'dbt_utils_unique_combination_o_44d9a6d860076a5eefdaf319891f3854', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_44d9a6d860076a5eefdaf319891f3854', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_44d9a6d860076a5eefdaf319891f3854'}, 'created_at': 1694433486.2841418, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_44d9a6d860076a5eefdaf319891f3854'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_44d9a6d860076a5eefdaf319891f3854") }}', 'language': 'sql', 'refs': [['microsoft_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.microsoft_ads__keyword_report'}, 'test.microsoft_ads.not_null_microsoft_ads__search_report_search_query.fa3625d66d': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'search_query', 'model': "{{ get_where_subquery(ref('microsoft_ads__search_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_microsoft_ads__search_report_search_query', 'resource_type': 'test', 'package_name': 'microsoft_ads', 'path': 'not_null_microsoft_ads__search_report_search_query.sql', 'original_file_path': 'models\\microsoft_ads.yml', 'unique_id': 'test.microsoft_ads.not_null_microsoft_ads__search_report_search_query.fa3625d66d', 'fqn': ['microsoft_ads', 'not_null_microsoft_ads__search_report_search_query'], 'alias': 'not_null_microsoft_ads__search_report_search_query', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.2913496, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['microsoft_ads__search_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'search_query', 'file_key_name': 'models.microsoft_ads__search_report'}, 'test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__search_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__search_query__device_os__device_type__network__match_type.8b1ebd50a3': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'campaign_id', 'ad_group_id', 'ad_id', 'keyword_id', 'search_query', 'device_os', 'device_type', 'network', 'match_type'], 'model': "{{ get_where_subquery(ref('microsoft_ads__search_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_microsoft_ads__search_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__search_query__device_os__device_type__network__match_type', 'resource_type': 'test', 'package_name': 'microsoft_ads', 'path': 'dbt_utils_unique_combination_o_b73fdaf0afd1eb1f0b0e2311ce77d70d.sql', 'original_file_path': 'models\\microsoft_ads.yml', 'unique_id': 'test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__search_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__search_query__device_os__device_type__network__match_type.8b1ebd50a3', 'fqn': ['microsoft_ads', 'dbt_utils_unique_combination_of_columns_microsoft_ads__search_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__search_query__device_os__device_type__network__match_type'], 'alias': 'dbt_utils_unique_combination_o_b73fdaf0afd1eb1f0b0e2311ce77d70d', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_b73fdaf0afd1eb1f0b0e2311ce77d70d', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_b73fdaf0afd1eb1f0b0e2311ce77d70d'}, 'created_at': 1694433486.2923508, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_b73fdaf0afd1eb1f0b0e2311ce77d70d'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_b73fdaf0afd1eb1f0b0e2311ce77d70d") }}', 'language': 'sql', 'refs': [['microsoft_ads__search_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.microsoft_ads__search_report'}, 'test.microsoft_ads.not_null_microsoft_ads__url_report_base_url.c1af50307a': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'base_url', 'model': "{{ get_where_subquery(ref('microsoft_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_microsoft_ads__url_report_base_url', 'resource_type': 'test', 'package_name': 'microsoft_ads', 'path': 'not_null_microsoft_ads__url_report_base_url.sql', 'original_file_path': 'models\\microsoft_ads.yml', 'unique_id': 'test.microsoft_ads.not_null_microsoft_ads__url_report_base_url.c1af50307a', 'fqn': ['microsoft_ads', 'not_null_microsoft_ads__url_report_base_url'], 'alias': 'not_null_microsoft_ads__url_report_base_url', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True}, 'created_at': 1694433486.3009567, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(enabled=True) }}', 'language': 'sql', 'refs': [['microsoft_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'base_url', 'file_key_name': 'models.microsoft_ads__url_report'}, 'test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__url_report_date_day__account_id__campaign_id__ad_group_id__ad_id__device_os__device_type__network__currency_code.070da99eb7': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'campaign_id', 'ad_group_id', 'ad_id', 'device_os', 'device_type', 'network', 'currency_code'], 'model': "{{ get_where_subquery(ref('microsoft_ads__url_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_microsoft_ads__url_report_date_day__account_id__campaign_id__ad_group_id__ad_id__device_os__device_type__network__currency_code', 'resource_type': 'test', 'package_name': 'microsoft_ads', 'path': 'dbt_utils_unique_combination_o_64edf902e79ea377b0f44b91e375b432.sql', 'original_file_path': 'models\\microsoft_ads.yml', 'unique_id': 'test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__url_report_date_day__account_id__campaign_id__ad_group_id__ad_id__device_os__device_type__network__currency_code.070da99eb7', 'fqn': ['microsoft_ads', 'dbt_utils_unique_combination_of_columns_microsoft_ads__url_report_date_day__account_id__campaign_id__ad_group_id__ad_id__device_os__device_type__network__currency_code'], 'alias': 'dbt_utils_unique_combination_o_64edf902e79ea377b0f44b91e375b432', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_64edf902e79ea377b0f44b91e375b432', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_64edf902e79ea377b0f44b91e375b432'}, 'created_at': 1694433486.3039613, 'config_call_dict': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_64edf902e79ea377b0f44b91e375b432'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(enabled=True,alias="dbt_utils_unique_combination_o_64edf902e79ea377b0f44b91e375b432") }}', 'language': 'sql', 'refs': [['microsoft_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.microsoft_ads__url_report'}, 'test.microsoft_ads_source.not_null_stg_microsoft_ads__account_history_account_id.cc273ee54e': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__account_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_microsoft_ads__account_history_account_id', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'not_null_stg_microsoft_ads__account_history_account_id.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.not_null_stg_microsoft_ads__account_history_account_id.cc273ee54e', 'fqn': ['microsoft_ads_source', 'not_null_stg_microsoft_ads__account_history_account_id'], 'alias': 'not_null_stg_microsoft_ads__account_history_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.40561, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.stg_microsoft_ads__account_history'}, 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__account_history_account_id__modified_at.5975327479': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['account_id', 'modified_at'], 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__account_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__account_history_account_id__modified_at', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'dbt_utils_unique_combination_o_11cb28b23f58e7c1362184b4fa6c2fe7.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__account_history_account_id__modified_at.5975327479', 'fqn': ['microsoft_ads_source', 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__account_history_account_id__modified_at'], 'alias': 'dbt_utils_unique_combination_o_11cb28b23f58e7c1362184b4fa6c2fe7', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_11cb28b23f58e7c1362184b4fa6c2fe7', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_11cb28b23f58e7c1362184b4fa6c2fe7'}, 'created_at': 1694433486.40718, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_11cb28b23f58e7c1362184b4fa6c2fe7'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_11cb28b23f58e7c1362184b4fa6c2fe7") }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_microsoft_ads__account_history'}, 'test.microsoft_ads_source.not_null_stg_microsoft_ads__account_daily_report_account_id.b17f45fe79': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__account_daily_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_microsoft_ads__account_daily_report_account_id', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'not_null_stg_microsoft_ads__account_daily_report_account_id.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.not_null_stg_microsoft_ads__account_daily_report_account_id.b17f45fe79', 'fqn': ['microsoft_ads_source', 'not_null_stg_microsoft_ads__account_daily_report_account_id'], 'alias': 'not_null_stg_microsoft_ads__account_daily_report_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.4116313, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__account_daily_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.stg_microsoft_ads__account_daily_report'}, 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__account_daily_report_date_day__account_id__device_os__device_type__network__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other.85ae65d69a': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'device_os', 'device_type', 'network', 'currency_code', 'ad_distribution', 'bid_match_type', 'delivered_match_type', 'top_vs_other'], 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__account_daily_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__account_daily_report_date_day__account_id__device_os__device_type__network__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'dbt_utils_unique_combination_o_cc3a3d15707b6220c07fd845626d47d3.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__account_daily_report_date_day__account_id__device_os__device_type__network__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other.85ae65d69a', 'fqn': ['microsoft_ads_source', 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__account_daily_report_date_day__account_id__device_os__device_type__network__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other'], 'alias': 'dbt_utils_unique_combination_o_cc3a3d15707b6220c07fd845626d47d3', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_cc3a3d15707b6220c07fd845626d47d3', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_cc3a3d15707b6220c07fd845626d47d3'}, 'created_at': 1694433486.4139075, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_cc3a3d15707b6220c07fd845626d47d3'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_cc3a3d15707b6220c07fd845626d47d3") }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__account_daily_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_microsoft_ads__account_daily_report'}, 'test.microsoft_ads_source.not_null_stg_microsoft_ads__ad_group_history_ad_group_id.c8353342b7': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__ad_group_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_microsoft_ads__ad_group_history_ad_group_id', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'not_null_stg_microsoft_ads__ad_group_history_ad_group_id.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.not_null_stg_microsoft_ads__ad_group_history_ad_group_id.c8353342b7', 'fqn': ['microsoft_ads_source', 'not_null_stg_microsoft_ads__ad_group_history_ad_group_id'], 'alias': 'not_null_stg_microsoft_ads__ad_group_history_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.419868, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__ad_group_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.stg_microsoft_ads__ad_group_history'}, 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_group_history_ad_group_id__modified_at.12004c9de0': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_group_id', 'modified_at'], 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__ad_group_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_group_history_ad_group_id__modified_at', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'dbt_utils_unique_combination_o_29c954196a0dc02a0d6371d1a73027bb.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_group_history_ad_group_id__modified_at.12004c9de0', 'fqn': ['microsoft_ads_source', 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_group_history_ad_group_id__modified_at'], 'alias': 'dbt_utils_unique_combination_o_29c954196a0dc02a0d6371d1a73027bb', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_29c954196a0dc02a0d6371d1a73027bb', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_29c954196a0dc02a0d6371d1a73027bb'}, 'created_at': 1694433486.4220533, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_29c954196a0dc02a0d6371d1a73027bb'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_29c954196a0dc02a0d6371d1a73027bb") }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__ad_group_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_microsoft_ads__ad_group_history'}, 'test.microsoft_ads_source.not_null_stg_microsoft_ads__ad_group_daily_report_ad_group_id.3e03e6eff7': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__ad_group_daily_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_microsoft_ads__ad_group_daily_report_ad_group_id', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'not_null_stg_microsoft_ads__ad_group_daily_report_ad_group_id.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.not_null_stg_microsoft_ads__ad_group_daily_report_ad_group_id.3e03e6eff7', 'fqn': ['microsoft_ads_source', 'not_null_stg_microsoft_ads__ad_group_daily_report_ad_group_id'], 'alias': 'not_null_stg_microsoft_ads__ad_group_daily_report_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.4253156, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__ad_group_daily_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.stg_microsoft_ads__ad_group_daily_report'}, 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_group_daily_report_date_day__account_id__campaign_id__ad_group_id__device_os__device_type__network__language__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other.8792b4adf4': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'campaign_id', 'ad_group_id', 'device_os', 'device_type', 'network', 'language', 'currency_code', 'ad_distribution', 'bid_match_type', 'delivered_match_type', 'top_vs_other'], 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__ad_group_daily_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_group_daily_report_date_day__account_id__campaign_id__ad_group_id__device_os__device_type__network__language__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'dbt_utils_unique_combination_o_3da4052d148940c4b772fa07b9cd0016.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_group_daily_report_date_day__account_id__campaign_id__ad_group_id__device_os__device_type__network__language__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other.8792b4adf4', 'fqn': ['microsoft_ads_source', 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_group_daily_report_date_day__account_id__campaign_id__ad_group_id__device_os__device_type__network__language__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other'], 'alias': 'dbt_utils_unique_combination_o_3da4052d148940c4b772fa07b9cd0016', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_3da4052d148940c4b772fa07b9cd0016', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_3da4052d148940c4b772fa07b9cd0016'}, 'created_at': 1694433486.4279761, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_3da4052d148940c4b772fa07b9cd0016'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_3da4052d148940c4b772fa07b9cd0016") }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__ad_group_daily_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_microsoft_ads__ad_group_daily_report'}, 'test.microsoft_ads_source.not_null_stg_microsoft_ads__ad_history_ad_id.6d02c26574': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__ad_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_microsoft_ads__ad_history_ad_id', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'not_null_stg_microsoft_ads__ad_history_ad_id.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.not_null_stg_microsoft_ads__ad_history_ad_id.6d02c26574', 'fqn': ['microsoft_ads_source', 'not_null_stg_microsoft_ads__ad_history_ad_id'], 'alias': 'not_null_stg_microsoft_ads__ad_history_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.435636, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.stg_microsoft_ads__ad_history'}, 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_history_ad_id__modified_at.1f05b4ee6f': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'modified_at'], 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__ad_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_history_ad_id__modified_at', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'dbt_utils_unique_combination_o_dccf83ffe0fa59cf437b9dc8e3b754cb.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_history_ad_id__modified_at.1f05b4ee6f', 'fqn': ['microsoft_ads_source', 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_history_ad_id__modified_at'], 'alias': 'dbt_utils_unique_combination_o_dccf83ffe0fa59cf437b9dc8e3b754cb', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_dccf83ffe0fa59cf437b9dc8e3b754cb', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_dccf83ffe0fa59cf437b9dc8e3b754cb'}, 'created_at': 1694433486.4372108, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_dccf83ffe0fa59cf437b9dc8e3b754cb'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_dccf83ffe0fa59cf437b9dc8e3b754cb") }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_microsoft_ads__ad_history'}, 'test.microsoft_ads_source.not_null_stg_microsoft_ads__ad_daily_report_ad_id.1ed6689aa8': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__ad_daily_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_microsoft_ads__ad_daily_report_ad_id', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'not_null_stg_microsoft_ads__ad_daily_report_ad_id.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.not_null_stg_microsoft_ads__ad_daily_report_ad_id.1ed6689aa8', 'fqn': ['microsoft_ads_source', 'not_null_stg_microsoft_ads__ad_daily_report_ad_id'], 'alias': 'not_null_stg_microsoft_ads__ad_daily_report_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.4413047, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__ad_daily_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.stg_microsoft_ads__ad_daily_report'}, 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_daily_report_date_day__account_id__campaign_id__ad_group_id__ad_id__device_os__device_type__network__language__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other.80e8146841': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'campaign_id', 'ad_group_id', 'ad_id', 'device_os', 'device_type', 'network', 'language', 'currency_code', 'ad_distribution', 'bid_match_type', 'delivered_match_type', 'top_vs_other'], 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__ad_daily_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_daily_report_date_day__account_id__campaign_id__ad_group_id__ad_id__device_os__device_type__network__language__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'dbt_utils_unique_combination_o_29e31bfeb4535a5db2d2c94e28201269.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_daily_report_date_day__account_id__campaign_id__ad_group_id__ad_id__device_os__device_type__network__language__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other.80e8146841', 'fqn': ['microsoft_ads_source', 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_daily_report_date_day__account_id__campaign_id__ad_group_id__ad_id__device_os__device_type__network__language__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other'], 'alias': 'dbt_utils_unique_combination_o_29e31bfeb4535a5db2d2c94e28201269', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_29e31bfeb4535a5db2d2c94e28201269', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_29e31bfeb4535a5db2d2c94e28201269'}, 'created_at': 1694433486.443375, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_29e31bfeb4535a5db2d2c94e28201269'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_29e31bfeb4535a5db2d2c94e28201269") }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__ad_daily_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_microsoft_ads__ad_daily_report'}, 'test.microsoft_ads_source.not_null_stg_microsoft_ads__campaign_history_campaign_id.ee080a2122': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__campaign_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_microsoft_ads__campaign_history_campaign_id', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'not_null_stg_microsoft_ads__campaign_history_campaign_id.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.not_null_stg_microsoft_ads__campaign_history_campaign_id.ee080a2122', 'fqn': ['microsoft_ads_source', 'not_null_stg_microsoft_ads__campaign_history_campaign_id'], 'alias': 'not_null_stg_microsoft_ads__campaign_history_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.4511654, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_microsoft_ads__campaign_history'}, 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__campaign_history_campaign_id__modified_at.d2a9279427': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', 'modified_at'], 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__campaign_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__campaign_history_campaign_id__modified_at', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'dbt_utils_unique_combination_o_9884c7b093c29b10bef342a8424fc7e0.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__campaign_history_campaign_id__modified_at.d2a9279427', 'fqn': ['microsoft_ads_source', 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__campaign_history_campaign_id__modified_at'], 'alias': 'dbt_utils_unique_combination_o_9884c7b093c29b10bef342a8424fc7e0', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_9884c7b093c29b10bef342a8424fc7e0', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_9884c7b093c29b10bef342a8424fc7e0'}, 'created_at': 1694433486.4521606, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_9884c7b093c29b10bef342a8424fc7e0'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_9884c7b093c29b10bef342a8424fc7e0") }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_microsoft_ads__campaign_history'}, 'test.microsoft_ads_source.not_null_stg_microsoft_ads__campaign_daily_report_campaign_id.8ac0418e84': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__campaign_daily_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_microsoft_ads__campaign_daily_report_campaign_id', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'not_null_stg_microsoft_ads__campaign_daily_report_campaign_id.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.not_null_stg_microsoft_ads__campaign_daily_report_campaign_id.8ac0418e84', 'fqn': ['microsoft_ads_source', 'not_null_stg_microsoft_ads__campaign_daily_report_campaign_id'], 'alias': 'not_null_stg_microsoft_ads__campaign_daily_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.4571266, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__campaign_daily_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_microsoft_ads__campaign_daily_report'}, 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__campaign_daily_report_date_day__account_id__campaign_id__device_os__device_type__network__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other__budget_association_status.6f2312e762': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'campaign_id', 'device_os', 'device_type', 'network', 'currency_code', 'ad_distribution', 'bid_match_type', 'delivered_match_type', 'top_vs_other', 'budget_association_status'], 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__campaign_daily_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__campaign_daily_report_date_day__account_id__campaign_id__device_os__device_type__network__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other__budget_association_status', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'dbt_utils_unique_combination_o_3d58d273ca86ec068f90d76d9e472d27.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__campaign_daily_report_date_day__account_id__campaign_id__device_os__device_type__network__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other__budget_association_status.6f2312e762', 'fqn': ['microsoft_ads_source', 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__campaign_daily_report_date_day__account_id__campaign_id__device_os__device_type__network__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other__budget_association_status'], 'alias': 'dbt_utils_unique_combination_o_3d58d273ca86ec068f90d76d9e472d27', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_3d58d273ca86ec068f90d76d9e472d27', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_3d58d273ca86ec068f90d76d9e472d27'}, 'created_at': 1694433486.4592006, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_3d58d273ca86ec068f90d76d9e472d27'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_3d58d273ca86ec068f90d76d9e472d27") }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__campaign_daily_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_microsoft_ads__campaign_daily_report'}, 'test.microsoft_ads_source.not_null_stg_microsoft_ads__keyword_history_keyword_id.19164a6209': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'keyword_id', 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__keyword_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_microsoft_ads__keyword_history_keyword_id', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'not_null_stg_microsoft_ads__keyword_history_keyword_id.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.not_null_stg_microsoft_ads__keyword_history_keyword_id.19164a6209', 'fqn': ['microsoft_ads_source', 'not_null_stg_microsoft_ads__keyword_history_keyword_id'], 'alias': 'not_null_stg_microsoft_ads__keyword_history_keyword_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.4662035, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__keyword_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'keyword_id', 'file_key_name': 'models.stg_microsoft_ads__keyword_history'}, 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__keyword_history_keyword_id__modified_at.e1c525286c': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['keyword_id', 'modified_at'], 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__keyword_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__keyword_history_keyword_id__modified_at', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'dbt_utils_unique_combination_o_92d3a0a582798627a8df5ec246b5ec67.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__keyword_history_keyword_id__modified_at.e1c525286c', 'fqn': ['microsoft_ads_source', 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__keyword_history_keyword_id__modified_at'], 'alias': 'dbt_utils_unique_combination_o_92d3a0a582798627a8df5ec246b5ec67', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_92d3a0a582798627a8df5ec246b5ec67', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_92d3a0a582798627a8df5ec246b5ec67'}, 'created_at': 1694433486.467136, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_92d3a0a582798627a8df5ec246b5ec67'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_92d3a0a582798627a8df5ec246b5ec67") }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__keyword_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_microsoft_ads__keyword_history'}, 'test.microsoft_ads_source.not_null_stg_microsoft_ads__keyword_daily_report_keyword_id.e16b8c5047': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'keyword_id', 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__keyword_daily_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_microsoft_ads__keyword_daily_report_keyword_id', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'not_null_stg_microsoft_ads__keyword_daily_report_keyword_id.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.not_null_stg_microsoft_ads__keyword_daily_report_keyword_id.e16b8c5047', 'fqn': ['microsoft_ads_source', 'not_null_stg_microsoft_ads__keyword_daily_report_keyword_id'], 'alias': 'not_null_stg_microsoft_ads__keyword_daily_report_keyword_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.472392, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__keyword_daily_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'keyword_id', 'file_key_name': 'models.stg_microsoft_ads__keyword_daily_report'}, 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__keyword_daily_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__device_os__device_type__network__language__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other.c6f46d202a': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'campaign_id', 'ad_group_id', 'ad_id', 'keyword_id', 'device_os', 'device_type', 'network', 'language', 'currency_code', 'ad_distribution', 'bid_match_type', 'delivered_match_type', 'top_vs_other'], 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__keyword_daily_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__keyword_daily_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__device_os__device_type__network__language__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'dbt_utils_unique_combination_o_9a7282cfedb49cdf2e4d14422bce0ed7.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__keyword_daily_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__device_os__device_type__network__language__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other.c6f46d202a', 'fqn': ['microsoft_ads_source', 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__keyword_daily_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__device_os__device_type__network__language__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other'], 'alias': 'dbt_utils_unique_combination_o_9a7282cfedb49cdf2e4d14422bce0ed7', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_9a7282cfedb49cdf2e4d14422bce0ed7', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_9a7282cfedb49cdf2e4d14422bce0ed7'}, 'created_at': 1694433486.4743545, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_9a7282cfedb49cdf2e4d14422bce0ed7'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_9a7282cfedb49cdf2e4d14422bce0ed7") }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__keyword_daily_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_microsoft_ads__keyword_daily_report'}, 'test.microsoft_ads_source.not_null_stg_microsoft_ads__search_daily_report_search_query.57f687adcc': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'search_query', 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__search_daily_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_microsoft_ads__search_daily_report_search_query', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'not_null_stg_microsoft_ads__search_daily_report_search_query.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.not_null_stg_microsoft_ads__search_daily_report_search_query.57f687adcc', 'fqn': ['microsoft_ads_source', 'not_null_stg_microsoft_ads__search_daily_report_search_query'], 'alias': 'not_null_stg_microsoft_ads__search_daily_report_search_query', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.4817307, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__search_daily_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'search_query', 'file_key_name': 'models.stg_microsoft_ads__search_daily_report'}, 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__search_daily_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__search_query__device_os__device_type__network__language__bid_match_type__delivered_match_type__top_vs_other.03cf031d0c': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'campaign_id', 'ad_group_id', 'ad_id', 'keyword_id', 'search_query', 'device_os', 'device_type', 'network', 'language', 'bid_match_type', 'delivered_match_type', 'top_vs_other'], 'model': "{{ get_where_subquery(ref('stg_microsoft_ads__search_daily_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__search_daily_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__search_query__device_os__device_type__network__language__bid_match_type__delivered_match_type__top_vs_other', 'resource_type': 'test', 'package_name': 'microsoft_ads_source', 'path': 'dbt_utils_unique_combination_o_b05df3e2693998bbea08961dfab31379.sql', 'original_file_path': 'models\\stg_microsoft_ads.yml', 'unique_id': 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__search_daily_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__search_query__device_os__device_type__network__language__bid_match_type__delivered_match_type__top_vs_other.03cf031d0c', 'fqn': ['microsoft_ads_source', 'dbt_utils_unique_combination_of_columns_stg_microsoft_ads__search_daily_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__search_query__device_os__device_type__network__language__bid_match_type__delivered_match_type__top_vs_other'], 'alias': 'dbt_utils_unique_combination_o_b05df3e2693998bbea08961dfab31379', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_b05df3e2693998bbea08961dfab31379', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_b05df3e2693998bbea08961dfab31379'}, 'created_at': 1694433486.4838107, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_b05df3e2693998bbea08961dfab31379'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_b05df3e2693998bbea08961dfab31379") }}', 'language': 'sql', 'refs': [['stg_microsoft_ads__search_daily_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_microsoft_ads__search_daily_report'}, 'test.pinterest.not_null_pinterest_ads__url_report_date_day.b09048037e': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('pinterest_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_pinterest_ads__url_report_date_day', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'not_null_pinterest_ads__url_report_date_day.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.not_null_pinterest_ads__url_report_date_day.b09048037e', 'fqn': ['pinterest', 'not_null_pinterest_ads__url_report_date_day'], 'alias': 'not_null_pinterest_ads__url_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.5241444, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['pinterest_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.pinterest_ads__url_report'}, 'test.pinterest.not_null_pinterest_ads__url_report_destination_url.0bb7f30502': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'destination_url', 'model': "{{ get_where_subquery(ref('pinterest_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_pinterest_ads__url_report_destination_url', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'not_null_pinterest_ads__url_report_destination_url.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.not_null_pinterest_ads__url_report_destination_url.0bb7f30502', 'fqn': ['pinterest', 'not_null_pinterest_ads__url_report_destination_url'], 'alias': 'not_null_pinterest_ads__url_report_destination_url', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True}, 'created_at': 1694433486.5261438, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(enabled=True) }}', 'language': 'sql', 'refs': [['pinterest_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'destination_url', 'file_key_name': 'models.pinterest_ads__url_report'}, 'test.pinterest.not_null_pinterest_ads__url_report_pin_promotion_id.0da711ad6a': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'pin_promotion_id', 'model': "{{ get_where_subquery(ref('pinterest_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_pinterest_ads__url_report_pin_promotion_id', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'not_null_pinterest_ads__url_report_pin_promotion_id.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.not_null_pinterest_ads__url_report_pin_promotion_id.0da711ad6a', 'fqn': ['pinterest', 'not_null_pinterest_ads__url_report_pin_promotion_id'], 'alias': 'not_null_pinterest_ads__url_report_pin_promotion_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.5286567, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['pinterest_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'pin_promotion_id', 'file_key_name': 'models.pinterest_ads__url_report'}, 'test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__url_report_pin_promotion_id__ad_group_id__campaign_id__advertiser_id__date_day.bd87b032c8': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['pin_promotion_id', 'ad_group_id', 'campaign_id', 'advertiser_id', 'date_day'], 'model': "{{ get_where_subquery(ref('pinterest_ads__url_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_pinterest_ads__url_report_pin_promotion_id__ad_group_id__campaign_id__advertiser_id__date_day', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'dbt_utils_unique_combination_o_21473120856be0adc6b82e83f018c3a4.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__url_report_pin_promotion_id__ad_group_id__campaign_id__advertiser_id__date_day.bd87b032c8', 'fqn': ['pinterest', 'dbt_utils_unique_combination_of_columns_pinterest_ads__url_report_pin_promotion_id__ad_group_id__campaign_id__advertiser_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_21473120856be0adc6b82e83f018c3a4', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_21473120856be0adc6b82e83f018c3a4', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_21473120856be0adc6b82e83f018c3a4'}, 'created_at': 1694433486.530656, 'config_call_dict': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_21473120856be0adc6b82e83f018c3a4'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(enabled=True,alias="dbt_utils_unique_combination_o_21473120856be0adc6b82e83f018c3a4") }}', 'language': 'sql', 'refs': [['pinterest_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.pinterest_ads__url_report'}, 'test.pinterest.not_null_pinterest_ads__ad_group_report_date_day.ed7c27b8a7': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('pinterest_ads__ad_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_pinterest_ads__ad_group_report_date_day', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'not_null_pinterest_ads__ad_group_report_date_day.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.not_null_pinterest_ads__ad_group_report_date_day.ed7c27b8a7', 'fqn': ['pinterest', 'not_null_pinterest_ads__ad_group_report_date_day'], 'alias': 'not_null_pinterest_ads__ad_group_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.5357263, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['pinterest_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.pinterest_ads__ad_group_report'}, 'test.pinterest.not_null_pinterest_ads__ad_group_report_ad_group_id.134f9ac6c2': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('pinterest_ads__ad_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_pinterest_ads__ad_group_report_ad_group_id', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'not_null_pinterest_ads__ad_group_report_ad_group_id.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.not_null_pinterest_ads__ad_group_report_ad_group_id.134f9ac6c2', 'fqn': ['pinterest', 'not_null_pinterest_ads__ad_group_report_ad_group_id'], 'alias': 'not_null_pinterest_ads__ad_group_report_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.537433, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['pinterest_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.pinterest_ads__ad_group_report'}, 'test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__ad_group_report_ad_group_id__advertiser_id__campaign_id__date_day.d207b7d69d': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_group_id', 'advertiser_id', 'campaign_id', 'date_day'], 'model': "{{ get_where_subquery(ref('pinterest_ads__ad_group_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_pinterest_ads__ad_group_report_ad_group_id__advertiser_id__campaign_id__date_day', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'dbt_utils_unique_combination_o_54d3e3ee8528adecb1b6bc6aef476506.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__ad_group_report_ad_group_id__advertiser_id__campaign_id__date_day.d207b7d69d', 'fqn': ['pinterest', 'dbt_utils_unique_combination_of_columns_pinterest_ads__ad_group_report_ad_group_id__advertiser_id__campaign_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_54d3e3ee8528adecb1b6bc6aef476506', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_54d3e3ee8528adecb1b6bc6aef476506', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_54d3e3ee8528adecb1b6bc6aef476506'}, 'created_at': 1694433486.539504, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_54d3e3ee8528adecb1b6bc6aef476506'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_54d3e3ee8528adecb1b6bc6aef476506") }}', 'language': 'sql', 'refs': [['pinterest_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.pinterest_ads__ad_group_report'}, 'test.pinterest.not_null_pinterest_ads__campaign_report_date_day.10ac8272bf': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('pinterest_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_pinterest_ads__campaign_report_date_day', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'not_null_pinterest_ads__campaign_report_date_day.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.not_null_pinterest_ads__campaign_report_date_day.10ac8272bf', 'fqn': ['pinterest', 'not_null_pinterest_ads__campaign_report_date_day'], 'alias': 'not_null_pinterest_ads__campaign_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.5445051, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['pinterest_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.pinterest_ads__campaign_report'}, 'test.pinterest.not_null_pinterest_ads__campaign_report_campaign_id.8001ea60f2': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('pinterest_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_pinterest_ads__campaign_report_campaign_id', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'not_null_pinterest_ads__campaign_report_campaign_id.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.not_null_pinterest_ads__campaign_report_campaign_id.8001ea60f2', 'fqn': ['pinterest', 'not_null_pinterest_ads__campaign_report_campaign_id'], 'alias': 'not_null_pinterest_ads__campaign_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.5455067, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['pinterest_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.pinterest_ads__campaign_report'}, 'test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__campaign_report_campaign_id__advertiser_id__date_day.b5752d5279': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', 'advertiser_id', 'date_day'], 'model': "{{ get_where_subquery(ref('pinterest_ads__campaign_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_pinterest_ads__campaign_report_campaign_id__advertiser_id__date_day', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'dbt_utils_unique_combination_o_87addc13a4108165c61e6604961b7334.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__campaign_report_campaign_id__advertiser_id__date_day.b5752d5279', 'fqn': ['pinterest', 'dbt_utils_unique_combination_of_columns_pinterest_ads__campaign_report_campaign_id__advertiser_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_87addc13a4108165c61e6604961b7334', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_87addc13a4108165c61e6604961b7334', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_87addc13a4108165c61e6604961b7334'}, 'created_at': 1694433486.5471916, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_87addc13a4108165c61e6604961b7334'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_87addc13a4108165c61e6604961b7334") }}', 'language': 'sql', 'refs': [['pinterest_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.pinterest_ads__campaign_report'}, 'test.pinterest.not_null_pinterest_ads__advertiser_report_date_day.aedeceeeca': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('pinterest_ads__advertiser_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_pinterest_ads__advertiser_report_date_day', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'not_null_pinterest_ads__advertiser_report_date_day.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.not_null_pinterest_ads__advertiser_report_date_day.aedeceeeca', 'fqn': ['pinterest', 'not_null_pinterest_ads__advertiser_report_date_day'], 'alias': 'not_null_pinterest_ads__advertiser_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.5522637, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['pinterest_ads__advertiser_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.pinterest_ads__advertiser_report'}, 'test.pinterest.not_null_pinterest_ads__advertiser_report_advertiser_id.13380f0672': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'advertiser_id', 'model': "{{ get_where_subquery(ref('pinterest_ads__advertiser_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_pinterest_ads__advertiser_report_advertiser_id', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'not_null_pinterest_ads__advertiser_report_advertiser_id.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.not_null_pinterest_ads__advertiser_report_advertiser_id.13380f0672', 'fqn': ['pinterest', 'not_null_pinterest_ads__advertiser_report_advertiser_id'], 'alias': 'not_null_pinterest_ads__advertiser_report_advertiser_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.5542634, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['pinterest_ads__advertiser_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'advertiser_id', 'file_key_name': 'models.pinterest_ads__advertiser_report'}, 'test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__advertiser_report_advertiser_id__date_day.990badbc11': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['advertiser_id', 'date_day'], 'model': "{{ get_where_subquery(ref('pinterest_ads__advertiser_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_pinterest_ads__advertiser_report_advertiser_id__date_day', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'dbt_utils_unique_combination_o_262423074d5ab98a7cfbb922eecfa81f.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__advertiser_report_advertiser_id__date_day.990badbc11', 'fqn': ['pinterest', 'dbt_utils_unique_combination_of_columns_pinterest_ads__advertiser_report_advertiser_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_262423074d5ab98a7cfbb922eecfa81f', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_262423074d5ab98a7cfbb922eecfa81f', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_262423074d5ab98a7cfbb922eecfa81f'}, 'created_at': 1694433486.5552645, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_262423074d5ab98a7cfbb922eecfa81f'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_262423074d5ab98a7cfbb922eecfa81f") }}', 'language': 'sql', 'refs': [['pinterest_ads__advertiser_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.pinterest_ads__advertiser_report'}, 'test.pinterest.not_null_pinterest_ads__keyword_report_date_day.23130e9fba': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('pinterest_ads__keyword_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_pinterest_ads__keyword_report_date_day', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'not_null_pinterest_ads__keyword_report_date_day.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.not_null_pinterest_ads__keyword_report_date_day.23130e9fba', 'fqn': ['pinterest', 'not_null_pinterest_ads__keyword_report_date_day'], 'alias': 'not_null_pinterest_ads__keyword_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.5602422, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['pinterest_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.pinterest_ads__keyword_report'}, 'test.pinterest.not_null_pinterest_ads__keyword_report_keyword_id.0d73460198': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'keyword_id', 'model': "{{ get_where_subquery(ref('pinterest_ads__keyword_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_pinterest_ads__keyword_report_keyword_id', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'not_null_pinterest_ads__keyword_report_keyword_id.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.not_null_pinterest_ads__keyword_report_keyword_id.0d73460198', 'fqn': ['pinterest', 'not_null_pinterest_ads__keyword_report_keyword_id'], 'alias': 'not_null_pinterest_ads__keyword_report_keyword_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.561249, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['pinterest_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'keyword_id', 'file_key_name': 'models.pinterest_ads__keyword_report'}, 'test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__keyword_report_keyword_id__ad_group_id__campaign_id__advertiser_id__date_day.b7517b039d': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['keyword_id', 'ad_group_id', 'campaign_id', 'advertiser_id', 'date_day'], 'model': "{{ get_where_subquery(ref('pinterest_ads__keyword_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_pinterest_ads__keyword_report_keyword_id__ad_group_id__campaign_id__advertiser_id__date_day', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'dbt_utils_unique_combination_o_5ffb6b9c10d3e5615e425ea53e66643f.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__keyword_report_keyword_id__ad_group_id__campaign_id__advertiser_id__date_day.b7517b039d', 'fqn': ['pinterest', 'dbt_utils_unique_combination_of_columns_pinterest_ads__keyword_report_keyword_id__ad_group_id__campaign_id__advertiser_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_5ffb6b9c10d3e5615e425ea53e66643f', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_5ffb6b9c10d3e5615e425ea53e66643f', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_5ffb6b9c10d3e5615e425ea53e66643f'}, 'created_at': 1694433486.563254, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_5ffb6b9c10d3e5615e425ea53e66643f'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_5ffb6b9c10d3e5615e425ea53e66643f") }}', 'language': 'sql', 'refs': [['pinterest_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.pinterest_ads__keyword_report'}, 'test.pinterest.not_null_pinterest_ads__pin_promotion_report_date_day.3128d28cfd': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('pinterest_ads__pin_promotion_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_pinterest_ads__pin_promotion_report_date_day', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'not_null_pinterest_ads__pin_promotion_report_date_day.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.not_null_pinterest_ads__pin_promotion_report_date_day.3128d28cfd', 'fqn': ['pinterest', 'not_null_pinterest_ads__pin_promotion_report_date_day'], 'alias': 'not_null_pinterest_ads__pin_promotion_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.5694134, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['pinterest_ads__pin_promotion_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.pinterest_ads__pin_promotion_report'}, 'test.pinterest.not_null_pinterest_ads__pin_promotion_report_pin_promotion_id.2540e0a561': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'pin_promotion_id', 'model': "{{ get_where_subquery(ref('pinterest_ads__pin_promotion_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_pinterest_ads__pin_promotion_report_pin_promotion_id', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'not_null_pinterest_ads__pin_promotion_report_pin_promotion_id.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.not_null_pinterest_ads__pin_promotion_report_pin_promotion_id.2540e0a561', 'fqn': ['pinterest', 'not_null_pinterest_ads__pin_promotion_report_pin_promotion_id'], 'alias': 'not_null_pinterest_ads__pin_promotion_report_pin_promotion_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.57083, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['pinterest_ads__pin_promotion_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'pin_promotion_id', 'file_key_name': 'models.pinterest_ads__pin_promotion_report'}, 'test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__pin_promotion_report_pin_promotion_id__ad_group_id__campaign_id__advertiser_id__date_day.1db3ffb1b3': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['pin_promotion_id', 'ad_group_id', 'campaign_id', 'advertiser_id', 'date_day'], 'model': "{{ get_where_subquery(ref('pinterest_ads__pin_promotion_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_pinterest_ads__pin_promotion_report_pin_promotion_id__ad_group_id__campaign_id__advertiser_id__date_day', 'resource_type': 'test', 'package_name': 'pinterest', 'path': 'dbt_utils_unique_combination_o_2f4efa18af7508110970522dca80a52c.sql', 'original_file_path': 'models\\pinterest.yml', 'unique_id': 'test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__pin_promotion_report_pin_promotion_id__ad_group_id__campaign_id__advertiser_id__date_day.1db3ffb1b3', 'fqn': ['pinterest', 'dbt_utils_unique_combination_of_columns_pinterest_ads__pin_promotion_report_pin_promotion_id__ad_group_id__campaign_id__advertiser_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_2f4efa18af7508110970522dca80a52c', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_2f4efa18af7508110970522dca80a52c', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_2f4efa18af7508110970522dca80a52c'}, 'created_at': 1694433486.572347, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_2f4efa18af7508110970522dca80a52c'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_2f4efa18af7508110970522dca80a52c") }}', 'language': 'sql', 'refs': [['pinterest_ads__pin_promotion_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.pinterest_ads__pin_promotion_report'}, 'test.pinterest_source.not_null_stg_pinterest_ads__ad_group_history_ad_group_id.220c6220be': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__ad_group_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_pinterest_ads__ad_group_history_ad_group_id', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'not_null_stg_pinterest_ads__ad_group_history_ad_group_id.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.not_null_stg_pinterest_ads__ad_group_history_ad_group_id.220c6220be', 'fqn': ['pinterest_source', 'not_null_stg_pinterest_ads__ad_group_history_ad_group_id'], 'alias': 'not_null_stg_pinterest_ads__ad_group_history_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.72025, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__ad_group_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.stg_pinterest_ads__ad_group_history'}, 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__ad_group_history_ad_group_id___fivetran_synced.1132e1f339': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_group_id', '_fivetran_synced'], 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__ad_group_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__ad_group_history_ad_group_id___fivetran_synced', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'dbt_utils_unique_combination_o_14ec492421aa290adbd40aba9f38efa7.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__ad_group_history_ad_group_id___fivetran_synced.1132e1f339', 'fqn': ['pinterest_source', 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__ad_group_history_ad_group_id___fivetran_synced'], 'alias': 'dbt_utils_unique_combination_o_14ec492421aa290adbd40aba9f38efa7', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_14ec492421aa290adbd40aba9f38efa7', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_14ec492421aa290adbd40aba9f38efa7'}, 'created_at': 1694433486.7222602, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_14ec492421aa290adbd40aba9f38efa7'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_14ec492421aa290adbd40aba9f38efa7") }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__ad_group_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_pinterest_ads__ad_group_history'}, 'test.pinterest_source.not_null_stg_pinterest_ads__campaign_history_campaign_id.60cb10d341': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__campaign_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_pinterest_ads__campaign_history_campaign_id', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'not_null_stg_pinterest_ads__campaign_history_campaign_id.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.not_null_stg_pinterest_ads__campaign_history_campaign_id.60cb10d341', 'fqn': ['pinterest_source', 'not_null_stg_pinterest_ads__campaign_history_campaign_id'], 'alias': 'not_null_stg_pinterest_ads__campaign_history_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.7271793, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_pinterest_ads__campaign_history'}, 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__campaign_history_campaign_id___fivetran_synced.eff7196b87': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', '_fivetran_synced'], 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__campaign_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__campaign_history_campaign_id___fivetran_synced', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'dbt_utils_unique_combination_o_0f71f27ed6b0ce2d4940b4361559871b.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__campaign_history_campaign_id___fivetran_synced.eff7196b87', 'fqn': ['pinterest_source', 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__campaign_history_campaign_id___fivetran_synced'], 'alias': 'dbt_utils_unique_combination_o_0f71f27ed6b0ce2d4940b4361559871b', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_0f71f27ed6b0ce2d4940b4361559871b', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_0f71f27ed6b0ce2d4940b4361559871b'}, 'created_at': 1694433486.7277694, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_0f71f27ed6b0ce2d4940b4361559871b'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_0f71f27ed6b0ce2d4940b4361559871b") }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_pinterest_ads__campaign_history'}, 'test.pinterest_source.not_null_stg_pinterest_ads__pin_promotion_history_pin_promotion_id.171995cd34': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'pin_promotion_id', 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__pin_promotion_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_pinterest_ads__pin_promotion_history_pin_promotion_id', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'not_null_stg_pinterest_ads__pi_5cf03dfc3d2615f9d68ae62d55aa2b8f.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.not_null_stg_pinterest_ads__pin_promotion_history_pin_promotion_id.171995cd34', 'fqn': ['pinterest_source', 'not_null_stg_pinterest_ads__pin_promotion_history_pin_promotion_id'], 'alias': 'not_null_stg_pinterest_ads__pi_5cf03dfc3d2615f9d68ae62d55aa2b8f', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'not_null_stg_pinterest_ads__pi_5cf03dfc3d2615f9d68ae62d55aa2b8f', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'not_null_stg_pinterest_ads__pi_5cf03dfc3d2615f9d68ae62d55aa2b8f'}, 'created_at': 1694433486.7328541, 'config_call_dict': {'alias': 'not_null_stg_pinterest_ads__pi_5cf03dfc3d2615f9d68ae62d55aa2b8f'}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias="not_null_stg_pinterest_ads__pi_5cf03dfc3d2615f9d68ae62d55aa2b8f") }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__pin_promotion_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'pin_promotion_id', 'file_key_name': 'models.stg_pinterest_ads__pin_promotion_history'}, 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__pin_promotion_history__fivetran_synced__pin_promotion_id.8e9ab31ea9': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['_fivetran_synced', 'pin_promotion_id'], 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__pin_promotion_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__pin_promotion_history__fivetran_synced__pin_promotion_id', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'dbt_utils_unique_combination_o_e0501de9c3316348957b42725bcba175.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__pin_promotion_history__fivetran_synced__pin_promotion_id.8e9ab31ea9', 'fqn': ['pinterest_source', 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__pin_promotion_history__fivetran_synced__pin_promotion_id'], 'alias': 'dbt_utils_unique_combination_o_e0501de9c3316348957b42725bcba175', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_e0501de9c3316348957b42725bcba175', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_e0501de9c3316348957b42725bcba175'}, 'created_at': 1694433486.7338562, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_e0501de9c3316348957b42725bcba175'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_e0501de9c3316348957b42725bcba175") }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__pin_promotion_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_pinterest_ads__pin_promotion_history'}, 'test.pinterest_source.not_null_stg_pinterest_ads__pin_promotion_report_date_day.ed272212a1': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__pin_promotion_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_pinterest_ads__pin_promotion_report_date_day', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'not_null_stg_pinterest_ads__pin_promotion_report_date_day.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.not_null_stg_pinterest_ads__pin_promotion_report_date_day.ed272212a1', 'fqn': ['pinterest_source', 'not_null_stg_pinterest_ads__pin_promotion_report_date_day'], 'alias': 'not_null_stg_pinterest_ads__pin_promotion_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.7382202, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__pin_promotion_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_pinterest_ads__pin_promotion_report'}, 'test.pinterest_source.not_null_stg_pinterest_ads__pin_promotion_report_pin_promotion_id.9c3c9f71ab': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'pin_promotion_id', 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__pin_promotion_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_pinterest_ads__pin_promotion_report_pin_promotion_id', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'not_null_stg_pinterest_ads__pi_d0985f4b7b2bc6d5ec7f384cc03d6f4b.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.not_null_stg_pinterest_ads__pin_promotion_report_pin_promotion_id.9c3c9f71ab', 'fqn': ['pinterest_source', 'not_null_stg_pinterest_ads__pin_promotion_report_pin_promotion_id'], 'alias': 'not_null_stg_pinterest_ads__pi_d0985f4b7b2bc6d5ec7f384cc03d6f4b', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'not_null_stg_pinterest_ads__pi_d0985f4b7b2bc6d5ec7f384cc03d6f4b', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'not_null_stg_pinterest_ads__pi_d0985f4b7b2bc6d5ec7f384cc03d6f4b'}, 'created_at': 1694433486.7412648, 'config_call_dict': {'alias': 'not_null_stg_pinterest_ads__pi_d0985f4b7b2bc6d5ec7f384cc03d6f4b'}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias="not_null_stg_pinterest_ads__pi_d0985f4b7b2bc6d5ec7f384cc03d6f4b") }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__pin_promotion_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'pin_promotion_id', 'file_key_name': 'models.stg_pinterest_ads__pin_promotion_report'}, 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__pin_promotion_report_date_day__pin_promotion_id__ad_group_id__campaign_id__advertiser_id.7ea04e6024': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'pin_promotion_id', 'ad_group_id', 'campaign_id', 'advertiser_id'], 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__pin_promotion_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__pin_promotion_report_date_day__pin_promotion_id__ad_group_id__campaign_id__advertiser_id', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'dbt_utils_unique_combination_o_b200b80456022485be650ebe0c64fc19.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__pin_promotion_report_date_day__pin_promotion_id__ad_group_id__campaign_id__advertiser_id.7ea04e6024', 'fqn': ['pinterest_source', 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__pin_promotion_report_date_day__pin_promotion_id__ad_group_id__campaign_id__advertiser_id'], 'alias': 'dbt_utils_unique_combination_o_b200b80456022485be650ebe0c64fc19', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_b200b80456022485be650ebe0c64fc19', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_b200b80456022485be650ebe0c64fc19'}, 'created_at': 1694433486.7422605, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_b200b80456022485be650ebe0c64fc19'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_b200b80456022485be650ebe0c64fc19") }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__pin_promotion_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_pinterest_ads__pin_promotion_report'}, 'test.pinterest_source.not_null_stg_pinterest_ads__ad_group_report_date_day.80e8904c4c': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__ad_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_pinterest_ads__ad_group_report_date_day', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'not_null_stg_pinterest_ads__ad_group_report_date_day.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.not_null_stg_pinterest_ads__ad_group_report_date_day.80e8904c4c', 'fqn': ['pinterest_source', 'not_null_stg_pinterest_ads__ad_group_report_date_day'], 'alias': 'not_null_stg_pinterest_ads__ad_group_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.7472475, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_pinterest_ads__ad_group_report'}, 'test.pinterest_source.not_null_stg_pinterest_ads__ad_group_report_ad_group_id.bb8cf3c471': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__ad_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_pinterest_ads__ad_group_report_ad_group_id', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'not_null_stg_pinterest_ads__ad_group_report_ad_group_id.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.not_null_stg_pinterest_ads__ad_group_report_ad_group_id.bb8cf3c471', 'fqn': ['pinterest_source', 'not_null_stg_pinterest_ads__ad_group_report_ad_group_id'], 'alias': 'not_null_stg_pinterest_ads__ad_group_report_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.7485933, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.stg_pinterest_ads__ad_group_report'}, 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__ad_group_report_date_day__ad_group_id__campaign_id__advertiser_id.3800c02b0e': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'ad_group_id', 'campaign_id', 'advertiser_id'], 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__ad_group_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__ad_group_report_date_day__ad_group_id__campaign_id__advertiser_id', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'dbt_utils_unique_combination_o_e8f9cd4890106f736fbaf772885876c8.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__ad_group_report_date_day__ad_group_id__campaign_id__advertiser_id.3800c02b0e', 'fqn': ['pinterest_source', 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__ad_group_report_date_day__ad_group_id__campaign_id__advertiser_id'], 'alias': 'dbt_utils_unique_combination_o_e8f9cd4890106f736fbaf772885876c8', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_e8f9cd4890106f736fbaf772885876c8', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_e8f9cd4890106f736fbaf772885876c8'}, 'created_at': 1694433486.7506566, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_e8f9cd4890106f736fbaf772885876c8'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_e8f9cd4890106f736fbaf772885876c8") }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_pinterest_ads__ad_group_report'}, 'test.pinterest_source.not_null_stg_pinterest_ads__advertiser_history_advertiser_id.7d24f665fb': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'advertiser_id', 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__advertiser_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_pinterest_ads__advertiser_history_advertiser_id', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'not_null_stg_pinterest_ads__advertiser_history_advertiser_id.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.not_null_stg_pinterest_ads__advertiser_history_advertiser_id.7d24f665fb', 'fqn': ['pinterest_source', 'not_null_stg_pinterest_ads__advertiser_history_advertiser_id'], 'alias': 'not_null_stg_pinterest_ads__advertiser_history_advertiser_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.7555885, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__advertiser_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'advertiser_id', 'file_key_name': 'models.stg_pinterest_ads__advertiser_history'}, 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__advertiser_history_updated_at__advertiser_id.94e8f4de4b': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['updated_at', 'advertiser_id'], 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__advertiser_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__advertiser_history_updated_at__advertiser_id', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'dbt_utils_unique_combination_o_ac571a135eb9bbe6db1401c33b830733.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__advertiser_history_updated_at__advertiser_id.94e8f4de4b', 'fqn': ['pinterest_source', 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__advertiser_history_updated_at__advertiser_id'], 'alias': 'dbt_utils_unique_combination_o_ac571a135eb9bbe6db1401c33b830733', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_ac571a135eb9bbe6db1401c33b830733', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_ac571a135eb9bbe6db1401c33b830733'}, 'created_at': 1694433486.7582507, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_ac571a135eb9bbe6db1401c33b830733'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_ac571a135eb9bbe6db1401c33b830733") }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__advertiser_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_pinterest_ads__advertiser_history'}, 'test.pinterest_source.not_null_stg_pinterest_ads__advertiser_report_date_day.153bd03c95': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__advertiser_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_pinterest_ads__advertiser_report_date_day', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'not_null_stg_pinterest_ads__advertiser_report_date_day.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.not_null_stg_pinterest_ads__advertiser_report_date_day.153bd03c95', 'fqn': ['pinterest_source', 'not_null_stg_pinterest_ads__advertiser_report_date_day'], 'alias': 'not_null_stg_pinterest_ads__advertiser_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.7623332, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__advertiser_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_pinterest_ads__advertiser_report'}, 'test.pinterest_source.not_null_stg_pinterest_ads__advertiser_report_advertiser_id.1b16ed73ff': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'advertiser_id', 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__advertiser_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_pinterest_ads__advertiser_report_advertiser_id', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'not_null_stg_pinterest_ads__advertiser_report_advertiser_id.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.not_null_stg_pinterest_ads__advertiser_report_advertiser_id.1b16ed73ff', 'fqn': ['pinterest_source', 'not_null_stg_pinterest_ads__advertiser_report_advertiser_id'], 'alias': 'not_null_stg_pinterest_ads__advertiser_report_advertiser_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.7643225, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__advertiser_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'advertiser_id', 'file_key_name': 'models.stg_pinterest_ads__advertiser_report'}, 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__advertiser_report_date_day__advertiser_id.e92ce8a9c0': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'advertiser_id'], 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__advertiser_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__advertiser_report_date_day__advertiser_id', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'dbt_utils_unique_combination_o_7440d10d36ca9b555b1bb533d442c6de.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__advertiser_report_date_day__advertiser_id.e92ce8a9c0', 'fqn': ['pinterest_source', 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__advertiser_report_date_day__advertiser_id'], 'alias': 'dbt_utils_unique_combination_o_7440d10d36ca9b555b1bb533d442c6de', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_7440d10d36ca9b555b1bb533d442c6de', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_7440d10d36ca9b555b1bb533d442c6de'}, 'created_at': 1694433486.7653236, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_7440d10d36ca9b555b1bb533d442c6de'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_7440d10d36ca9b555b1bb533d442c6de") }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__advertiser_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_pinterest_ads__advertiser_report'}, 'test.pinterest_source.not_null_stg_pinterest_ads__campaign_report_date_day.7ef5fb1238': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_pinterest_ads__campaign_report_date_day', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'not_null_stg_pinterest_ads__campaign_report_date_day.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.not_null_stg_pinterest_ads__campaign_report_date_day.7ef5fb1238', 'fqn': ['pinterest_source', 'not_null_stg_pinterest_ads__campaign_report_date_day'], 'alias': 'not_null_stg_pinterest_ads__campaign_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.7709963, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_pinterest_ads__campaign_report'}, 'test.pinterest_source.not_null_stg_pinterest_ads__campaign_report_campaign_id.a287eba0fc': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_pinterest_ads__campaign_report_campaign_id', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'not_null_stg_pinterest_ads__campaign_report_campaign_id.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.not_null_stg_pinterest_ads__campaign_report_campaign_id.a287eba0fc', 'fqn': ['pinterest_source', 'not_null_stg_pinterest_ads__campaign_report_campaign_id'], 'alias': 'not_null_stg_pinterest_ads__campaign_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.771995, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_pinterest_ads__campaign_report'}, 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__campaign_report_date_day__campaign_id__advertiser_id.ff47cb8abc': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'campaign_id', 'advertiser_id'], 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__campaign_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__campaign_report_date_day__campaign_id__advertiser_id', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'dbt_utils_unique_combination_o_ea5276bb765474198ad51f22f75fccbf.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__campaign_report_date_day__campaign_id__advertiser_id.ff47cb8abc', 'fqn': ['pinterest_source', 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__campaign_report_date_day__campaign_id__advertiser_id'], 'alias': 'dbt_utils_unique_combination_o_ea5276bb765474198ad51f22f75fccbf', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_ea5276bb765474198ad51f22f75fccbf', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_ea5276bb765474198ad51f22f75fccbf'}, 'created_at': 1694433486.7740092, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_ea5276bb765474198ad51f22f75fccbf'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_ea5276bb765474198ad51f22f75fccbf") }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_pinterest_ads__campaign_report'}, 'test.pinterest_source.not_null_stg_pinterest_ads__keyword_history_keyword_id.246889377a': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'keyword_id', 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__keyword_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_pinterest_ads__keyword_history_keyword_id', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'not_null_stg_pinterest_ads__keyword_history_keyword_id.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.not_null_stg_pinterest_ads__keyword_history_keyword_id.246889377a', 'fqn': ['pinterest_source', 'not_null_stg_pinterest_ads__keyword_history_keyword_id'], 'alias': 'not_null_stg_pinterest_ads__keyword_history_keyword_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.7786937, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__keyword_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'keyword_id', 'file_key_name': 'models.stg_pinterest_ads__keyword_history'}, 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__keyword_history_keyword_id__ad_group_id___fivetran_synced.d122faa877': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['keyword_id', 'ad_group_id', '_fivetran_synced'], 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__keyword_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__keyword_history_keyword_id__ad_group_id___fivetran_synced', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'dbt_utils_unique_combination_o_ed0c009a9ff1bbb46e1ea2a210b25628.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__keyword_history_keyword_id__ad_group_id___fivetran_synced.d122faa877', 'fqn': ['pinterest_source', 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__keyword_history_keyword_id__ad_group_id___fivetran_synced'], 'alias': 'dbt_utils_unique_combination_o_ed0c009a9ff1bbb46e1ea2a210b25628', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_ed0c009a9ff1bbb46e1ea2a210b25628', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_ed0c009a9ff1bbb46e1ea2a210b25628'}, 'created_at': 1694433486.7796829, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_ed0c009a9ff1bbb46e1ea2a210b25628'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_ed0c009a9ff1bbb46e1ea2a210b25628") }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__keyword_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_pinterest_ads__keyword_history'}, 'test.pinterest_source.not_null_stg_pinterest_ads__keyword_report_date_day.9937216300': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__keyword_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_pinterest_ads__keyword_report_date_day', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'not_null_stg_pinterest_ads__keyword_report_date_day.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.not_null_stg_pinterest_ads__keyword_report_date_day.9937216300', 'fqn': ['pinterest_source', 'not_null_stg_pinterest_ads__keyword_report_date_day'], 'alias': 'not_null_stg_pinterest_ads__keyword_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.7855237, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_pinterest_ads__keyword_report'}, 'test.pinterest_source.not_null_stg_pinterest_ads__keyword_report_keyword_id.5f00679c48': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'keyword_id', 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__keyword_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_pinterest_ads__keyword_report_keyword_id', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'not_null_stg_pinterest_ads__keyword_report_keyword_id.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.not_null_stg_pinterest_ads__keyword_report_keyword_id.5f00679c48', 'fqn': ['pinterest_source', 'not_null_stg_pinterest_ads__keyword_report_keyword_id'], 'alias': 'not_null_stg_pinterest_ads__keyword_report_keyword_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.7870357, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'keyword_id', 'file_key_name': 'models.stg_pinterest_ads__keyword_report'}, 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__keyword_report_date_day__keyword_id__pin_promotion_id__ad_group_id__campaign_id__advertiser_id.9504d17df6': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'keyword_id', 'pin_promotion_id', 'ad_group_id', 'campaign_id', 'advertiser_id'], 'model': "{{ get_where_subquery(ref('stg_pinterest_ads__keyword_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__keyword_report_date_day__keyword_id__pin_promotion_id__ad_group_id__campaign_id__advertiser_id', 'resource_type': 'test', 'package_name': 'pinterest_source', 'path': 'dbt_utils_unique_combination_o_b825b00d7629c7441a3daa35cf249236.sql', 'original_file_path': 'models\\stg_pinterest_ads.yml', 'unique_id': 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__keyword_report_date_day__keyword_id__pin_promotion_id__ad_group_id__campaign_id__advertiser_id.9504d17df6', 'fqn': ['pinterest_source', 'dbt_utils_unique_combination_of_columns_stg_pinterest_ads__keyword_report_date_day__keyword_id__pin_promotion_id__ad_group_id__campaign_id__advertiser_id'], 'alias': 'dbt_utils_unique_combination_o_b825b00d7629c7441a3daa35cf249236', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_b825b00d7629c7441a3daa35cf249236', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_b825b00d7629c7441a3daa35cf249236'}, 'created_at': 1694433486.7890537, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_b825b00d7629c7441a3daa35cf249236'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_b825b00d7629c7441a3daa35cf249236") }}', 'language': 'sql', 'refs': [['stg_pinterest_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_pinterest_ads__keyword_report'}, 'test.reddit_ads.not_null_reddit_ads__account_report_date_day.7b43e6cb90': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('reddit_ads__account_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_reddit_ads__account_report_date_day', 'resource_type': 'test', 'package_name': 'reddit_ads', 'path': 'not_null_reddit_ads__account_report_date_day.sql', 'original_file_path': 'models\\reddit_ads.yml', 'unique_id': 'test.reddit_ads.not_null_reddit_ads__account_report_date_day.7b43e6cb90', 'fqn': ['reddit_ads', 'not_null_reddit_ads__account_report_date_day'], 'alias': 'not_null_reddit_ads__account_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.8199008, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['reddit_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.reddit_ads__account_report'}, 'test.reddit_ads.not_null_reddit_ads__account_report_account_id.16f11188c5': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('reddit_ads__account_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_reddit_ads__account_report_account_id', 'resource_type': 'test', 'package_name': 'reddit_ads', 'path': 'not_null_reddit_ads__account_report_account_id.sql', 'original_file_path': 'models\\reddit_ads.yml', 'unique_id': 'test.reddit_ads.not_null_reddit_ads__account_report_account_id.16f11188c5', 'fqn': ['reddit_ads', 'not_null_reddit_ads__account_report_account_id'], 'alias': 'not_null_reddit_ads__account_report_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.8228905, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['reddit_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.reddit_ads__account_report'}, 'test.reddit_ads.dbt_utils_unique_combination_of_columns_reddit_ads__account_report_date_day__account_id__attribution_type__currency__status__time_zone_id.3cf3359ef6': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'attribution_type', 'currency', 'status', 'time_zone_id'], 'model': "{{ get_where_subquery(ref('reddit_ads__account_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_reddit_ads__account_report_date_day__account_id__attribution_type__currency__status__time_zone_id', 'resource_type': 'test', 'package_name': 'reddit_ads', 'path': 'dbt_utils_unique_combination_o_3d8bb3cd9b494e634cbe651b87c95c5c.sql', 'original_file_path': 'models\\reddit_ads.yml', 'unique_id': 'test.reddit_ads.dbt_utils_unique_combination_of_columns_reddit_ads__account_report_date_day__account_id__attribution_type__currency__status__time_zone_id.3cf3359ef6', 'fqn': ['reddit_ads', 'dbt_utils_unique_combination_of_columns_reddit_ads__account_report_date_day__account_id__attribution_type__currency__status__time_zone_id'], 'alias': 'dbt_utils_unique_combination_o_3d8bb3cd9b494e634cbe651b87c95c5c', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_3d8bb3cd9b494e634cbe651b87c95c5c', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_3d8bb3cd9b494e634cbe651b87c95c5c'}, 'created_at': 1694433486.8238919, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_3d8bb3cd9b494e634cbe651b87c95c5c'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_3d8bb3cd9b494e634cbe651b87c95c5c") }}', 'language': 'sql', 'refs': [['reddit_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.reddit_ads__account_report'}, 'test.reddit_ads.not_null_reddit_ads__ad_group_report_date_day.6463e6f6f7': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('reddit_ads__ad_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_reddit_ads__ad_group_report_date_day', 'resource_type': 'test', 'package_name': 'reddit_ads', 'path': 'not_null_reddit_ads__ad_group_report_date_day.sql', 'original_file_path': 'models\\reddit_ads.yml', 'unique_id': 'test.reddit_ads.not_null_reddit_ads__ad_group_report_date_day.6463e6f6f7', 'fqn': ['reddit_ads', 'not_null_reddit_ads__ad_group_report_date_day'], 'alias': 'not_null_reddit_ads__ad_group_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.8290505, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['reddit_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.reddit_ads__ad_group_report'}, 'test.reddit_ads.not_null_reddit_ads__ad_group_report_ad_group_id.057bd60604': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('reddit_ads__ad_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_reddit_ads__ad_group_report_ad_group_id', 'resource_type': 'test', 'package_name': 'reddit_ads', 'path': 'not_null_reddit_ads__ad_group_report_ad_group_id.sql', 'original_file_path': 'models\\reddit_ads.yml', 'unique_id': 'test.reddit_ads.not_null_reddit_ads__ad_group_report_ad_group_id.057bd60604', 'fqn': ['reddit_ads', 'not_null_reddit_ads__ad_group_report_ad_group_id'], 'alias': 'not_null_reddit_ads__ad_group_report_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.8311331, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['reddit_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.reddit_ads__ad_group_report'}, 'test.reddit_ads.dbt_utils_unique_combination_of_columns_reddit_ads__ad_group_report_date_day__account_id__ad_group_id__campaign_id__currency.dfbea50191': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'ad_group_id', 'campaign_id', 'currency'], 'model': "{{ get_where_subquery(ref('reddit_ads__ad_group_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_reddit_ads__ad_group_report_date_day__account_id__ad_group_id__campaign_id__currency', 'resource_type': 'test', 'package_name': 'reddit_ads', 'path': 'dbt_utils_unique_combination_o_26ca3532f8a33d2fce6b4615a82a8a85.sql', 'original_file_path': 'models\\reddit_ads.yml', 'unique_id': 'test.reddit_ads.dbt_utils_unique_combination_of_columns_reddit_ads__ad_group_report_date_day__account_id__ad_group_id__campaign_id__currency.dfbea50191', 'fqn': ['reddit_ads', 'dbt_utils_unique_combination_of_columns_reddit_ads__ad_group_report_date_day__account_id__ad_group_id__campaign_id__currency'], 'alias': 'dbt_utils_unique_combination_o_26ca3532f8a33d2fce6b4615a82a8a85', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_26ca3532f8a33d2fce6b4615a82a8a85', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_26ca3532f8a33d2fce6b4615a82a8a85'}, 'created_at': 1694433486.8321354, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_26ca3532f8a33d2fce6b4615a82a8a85'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_26ca3532f8a33d2fce6b4615a82a8a85") }}', 'language': 'sql', 'refs': [['reddit_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.reddit_ads__ad_group_report'}, 'test.reddit_ads.not_null_reddit_ads__ad_report_date_day.608b21c69a': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('reddit_ads__ad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_reddit_ads__ad_report_date_day', 'resource_type': 'test', 'package_name': 'reddit_ads', 'path': 'not_null_reddit_ads__ad_report_date_day.sql', 'original_file_path': 'models\\reddit_ads.yml', 'unique_id': 'test.reddit_ads.not_null_reddit_ads__ad_report_date_day.608b21c69a', 'fqn': ['reddit_ads', 'not_null_reddit_ads__ad_report_date_day'], 'alias': 'not_null_reddit_ads__ad_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.838718, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['reddit_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.reddit_ads__ad_report'}, 'test.reddit_ads.not_null_reddit_ads__ad_report_ad_id.1da054a14e': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('reddit_ads__ad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_reddit_ads__ad_report_ad_id', 'resource_type': 'test', 'package_name': 'reddit_ads', 'path': 'not_null_reddit_ads__ad_report_ad_id.sql', 'original_file_path': 'models\\reddit_ads.yml', 'unique_id': 'test.reddit_ads.not_null_reddit_ads__ad_report_ad_id.1da054a14e', 'fqn': ['reddit_ads', 'not_null_reddit_ads__ad_report_ad_id'], 'alias': 'not_null_reddit_ads__ad_report_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.8397472, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['reddit_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.reddit_ads__ad_report'}, 'test.reddit_ads.dbt_utils_unique_combination_of_columns_reddit_ads__ad_report_date_day__ad_id__post_id__account_id__ad_group_id__campaign_id__currency.a428678f1d': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'ad_id', 'post_id', 'account_id', 'ad_group_id', 'campaign_id', 'currency'], 'model': "{{ get_where_subquery(ref('reddit_ads__ad_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_reddit_ads__ad_report_date_day__ad_id__post_id__account_id__ad_group_id__campaign_id__currency', 'resource_type': 'test', 'package_name': 'reddit_ads', 'path': 'dbt_utils_unique_combination_o_4eab5cc4f2139517296d6ffd11d624ff.sql', 'original_file_path': 'models\\reddit_ads.yml', 'unique_id': 'test.reddit_ads.dbt_utils_unique_combination_of_columns_reddit_ads__ad_report_date_day__ad_id__post_id__account_id__ad_group_id__campaign_id__currency.a428678f1d', 'fqn': ['reddit_ads', 'dbt_utils_unique_combination_of_columns_reddit_ads__ad_report_date_day__ad_id__post_id__account_id__ad_group_id__campaign_id__currency'], 'alias': 'dbt_utils_unique_combination_o_4eab5cc4f2139517296d6ffd11d624ff', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_4eab5cc4f2139517296d6ffd11d624ff', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_4eab5cc4f2139517296d6ffd11d624ff'}, 'created_at': 1694433486.840748, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_4eab5cc4f2139517296d6ffd11d624ff'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_4eab5cc4f2139517296d6ffd11d624ff") }}', 'language': 'sql', 'refs': [['reddit_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.reddit_ads__ad_report'}, 'test.reddit_ads.not_null_reddit_ads__campaign_report_date_day.f79cca4131': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('reddit_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_reddit_ads__campaign_report_date_day', 'resource_type': 'test', 'package_name': 'reddit_ads', 'path': 'not_null_reddit_ads__campaign_report_date_day.sql', 'original_file_path': 'models\\reddit_ads.yml', 'unique_id': 'test.reddit_ads.not_null_reddit_ads__campaign_report_date_day.f79cca4131', 'fqn': ['reddit_ads', 'not_null_reddit_ads__campaign_report_date_day'], 'alias': 'not_null_reddit_ads__campaign_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.8473184, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['reddit_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.reddit_ads__campaign_report'}, 'test.reddit_ads.not_null_reddit_ads__campaign_report_campaign_id.f5491a0b49': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('reddit_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_reddit_ads__campaign_report_campaign_id', 'resource_type': 'test', 'package_name': 'reddit_ads', 'path': 'not_null_reddit_ads__campaign_report_campaign_id.sql', 'original_file_path': 'models\\reddit_ads.yml', 'unique_id': 'test.reddit_ads.not_null_reddit_ads__campaign_report_campaign_id.f5491a0b49', 'fqn': ['reddit_ads', 'not_null_reddit_ads__campaign_report_campaign_id'], 'alias': 'not_null_reddit_ads__campaign_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.849324, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['reddit_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.reddit_ads__campaign_report'}, 'test.reddit_ads.dbt_utils_unique_combination_of_columns_reddit_ads__campaign_report_date_day__account_id__campaign_id__currency.aec7cd25af': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'campaign_id', 'currency'], 'model': "{{ get_where_subquery(ref('reddit_ads__campaign_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_reddit_ads__campaign_report_date_day__account_id__campaign_id__currency', 'resource_type': 'test', 'package_name': 'reddit_ads', 'path': 'dbt_utils_unique_combination_o_0738174addeafd145c0eef0d3f4e9f8e.sql', 'original_file_path': 'models\\reddit_ads.yml', 'unique_id': 'test.reddit_ads.dbt_utils_unique_combination_of_columns_reddit_ads__campaign_report_date_day__account_id__campaign_id__currency.aec7cd25af', 'fqn': ['reddit_ads', 'dbt_utils_unique_combination_of_columns_reddit_ads__campaign_report_date_day__account_id__campaign_id__currency'], 'alias': 'dbt_utils_unique_combination_o_0738174addeafd145c0eef0d3f4e9f8e', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_0738174addeafd145c0eef0d3f4e9f8e', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_0738174addeafd145c0eef0d3f4e9f8e'}, 'created_at': 1694433486.8503966, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_0738174addeafd145c0eef0d3f4e9f8e'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_0738174addeafd145c0eef0d3f4e9f8e") }}', 'language': 'sql', 'refs': [['reddit_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.reddit_ads__campaign_report'}, 'test.reddit_ads.not_null_reddit_ads__url_report_date_day.4b0f6363da': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('reddit_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_reddit_ads__url_report_date_day', 'resource_type': 'test', 'package_name': 'reddit_ads', 'path': 'not_null_reddit_ads__url_report_date_day.sql', 'original_file_path': 'models\\reddit_ads.yml', 'unique_id': 'test.reddit_ads.not_null_reddit_ads__url_report_date_day.4b0f6363da', 'fqn': ['reddit_ads', 'not_null_reddit_ads__url_report_date_day'], 'alias': 'not_null_reddit_ads__url_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.8553946, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['reddit_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.reddit_ads__url_report'}, 'test.reddit_ads.not_null_reddit_ads__url_report_ad_id.8ff83da2b0': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('reddit_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_reddit_ads__url_report_ad_id', 'resource_type': 'test', 'package_name': 'reddit_ads', 'path': 'not_null_reddit_ads__url_report_ad_id.sql', 'original_file_path': 'models\\reddit_ads.yml', 'unique_id': 'test.reddit_ads.not_null_reddit_ads__url_report_ad_id.8ff83da2b0', 'fqn': ['reddit_ads', 'not_null_reddit_ads__url_report_ad_id'], 'alias': 'not_null_reddit_ads__url_report_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.857074, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['reddit_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.reddit_ads__url_report'}, 'test.reddit_ads.not_null_reddit_ads__url_report_base_url.2f585bebcb': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'base_url', 'model': "{{ get_where_subquery(ref('reddit_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_reddit_ads__url_report_base_url', 'resource_type': 'test', 'package_name': 'reddit_ads', 'path': 'not_null_reddit_ads__url_report_base_url.sql', 'original_file_path': 'models\\reddit_ads.yml', 'unique_id': 'test.reddit_ads.not_null_reddit_ads__url_report_base_url.2f585bebcb', 'fqn': ['reddit_ads', 'not_null_reddit_ads__url_report_base_url'], 'alias': 'not_null_reddit_ads__url_report_base_url', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True}, 'created_at': 1694433486.8591516, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(enabled=True) }}', 'language': 'sql', 'refs': [['reddit_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'base_url', 'file_key_name': 'models.reddit_ads__url_report'}, 'test.reddit_ads.dbt_utils_unique_combination_of_columns_reddit_ads__url_report_date_day__click_url__ad_id__account_id__ad_group_id__campaign_id__post_id__currency.b14eb4e958': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'click_url', 'ad_id', 'account_id', 'ad_group_id', 'campaign_id', 'post_id', 'currency'], 'model': "{{ get_where_subquery(ref('reddit_ads__url_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_reddit_ads__url_report_date_day__click_url__ad_id__account_id__ad_group_id__campaign_id__post_id__currency', 'resource_type': 'test', 'package_name': 'reddit_ads', 'path': 'dbt_utils_unique_combination_o_7c37e73689ac90ae73618b69a9503d2f.sql', 'original_file_path': 'models\\reddit_ads.yml', 'unique_id': 'test.reddit_ads.dbt_utils_unique_combination_of_columns_reddit_ads__url_report_date_day__click_url__ad_id__account_id__ad_group_id__campaign_id__post_id__currency.b14eb4e958', 'fqn': ['reddit_ads', 'dbt_utils_unique_combination_of_columns_reddit_ads__url_report_date_day__click_url__ad_id__account_id__ad_group_id__campaign_id__post_id__currency'], 'alias': 'dbt_utils_unique_combination_o_7c37e73689ac90ae73618b69a9503d2f', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_7c37e73689ac90ae73618b69a9503d2f', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_7c37e73689ac90ae73618b69a9503d2f'}, 'created_at': 1694433486.8611445, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_7c37e73689ac90ae73618b69a9503d2f'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_7c37e73689ac90ae73618b69a9503d2f") }}', 'language': 'sql', 'refs': [['reddit_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.reddit_ads__url_report'}, 'test.reddit_ads_source.unique_stg_reddit_ads__account_account_id.0c6fcb698e': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('stg_reddit_ads__account')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'unique_stg_reddit_ads__account_account_id', 'resource_type': 'test', 'package_name': 'reddit_ads_source', 'path': 'unique_stg_reddit_ads__account_account_id.sql', 'original_file_path': 'models\\stg_reddit_ads.yml', 'unique_id': 'test.reddit_ads_source.unique_stg_reddit_ads__account_account_id.0c6fcb698e', 'fqn': ['reddit_ads_source', 'unique_stg_reddit_ads__account_account_id'], 'alias': 'unique_stg_reddit_ads__account_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.9381304, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_reddit_ads__account']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': []}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.stg_reddit_ads__account'}, 'test.reddit_ads_source.not_null_stg_reddit_ads__account_account_id.512f0b8078': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('stg_reddit_ads__account')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_reddit_ads__account_account_id', 'resource_type': 'test', 'package_name': 'reddit_ads_source', 'path': 'not_null_stg_reddit_ads__account_account_id.sql', 'original_file_path': 'models\\stg_reddit_ads.yml', 'unique_id': 'test.reddit_ads_source.not_null_stg_reddit_ads__account_account_id.512f0b8078', 'fqn': ['reddit_ads_source', 'not_null_stg_reddit_ads__account_account_id'], 'alias': 'not_null_stg_reddit_ads__account_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.9402132, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_reddit_ads__account']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.stg_reddit_ads__account'}, 'test.reddit_ads_source.not_null_stg_reddit_ads__account_report_account_id.1f2a0195de': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('stg_reddit_ads__account_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_reddit_ads__account_report_account_id', 'resource_type': 'test', 'package_name': 'reddit_ads_source', 'path': 'not_null_stg_reddit_ads__account_report_account_id.sql', 'original_file_path': 'models\\stg_reddit_ads.yml', 'unique_id': 'test.reddit_ads_source.not_null_stg_reddit_ads__account_report_account_id.1f2a0195de', 'fqn': ['reddit_ads_source', 'not_null_stg_reddit_ads__account_report_account_id'], 'alias': 'not_null_stg_reddit_ads__account_report_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.9421308, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_reddit_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.stg_reddit_ads__account_report'}, 'test.reddit_ads_source.dbt_utils_unique_combination_of_columns_stg_reddit_ads__account_report_account_id__date_day.74570496be': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['account_id', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_reddit_ads__account_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_reddit_ads__account_report_account_id__date_day', 'resource_type': 'test', 'package_name': 'reddit_ads_source', 'path': 'dbt_utils_unique_combination_o_ce15e0a86725614888661e5d48ff93d8.sql', 'original_file_path': 'models\\stg_reddit_ads.yml', 'unique_id': 'test.reddit_ads_source.dbt_utils_unique_combination_of_columns_stg_reddit_ads__account_report_account_id__date_day.74570496be', 'fqn': ['reddit_ads_source', 'dbt_utils_unique_combination_of_columns_stg_reddit_ads__account_report_account_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_ce15e0a86725614888661e5d48ff93d8', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_ce15e0a86725614888661e5d48ff93d8', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_ce15e0a86725614888661e5d48ff93d8'}, 'created_at': 1694433486.9432094, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_ce15e0a86725614888661e5d48ff93d8'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_ce15e0a86725614888661e5d48ff93d8") }}', 'language': 'sql', 'refs': [['stg_reddit_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_reddit_ads__account_report'}, 'test.reddit_ads_source.unique_stg_reddit_ads__ad_ad_id.3d62901652': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('stg_reddit_ads__ad')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'unique_stg_reddit_ads__ad_ad_id', 'resource_type': 'test', 'package_name': 'reddit_ads_source', 'path': 'unique_stg_reddit_ads__ad_ad_id.sql', 'original_file_path': 'models\\stg_reddit_ads.yml', 'unique_id': 'test.reddit_ads_source.unique_stg_reddit_ads__ad_ad_id.3d62901652', 'fqn': ['reddit_ads_source', 'unique_stg_reddit_ads__ad_ad_id'], 'alias': 'unique_stg_reddit_ads__ad_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.948367, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_reddit_ads__ad']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.stg_reddit_ads__ad'}, 'test.reddit_ads_source.not_null_stg_reddit_ads__ad_ad_id.40188b63dd': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('stg_reddit_ads__ad')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_reddit_ads__ad_ad_id', 'resource_type': 'test', 'package_name': 'reddit_ads_source', 'path': 'not_null_stg_reddit_ads__ad_ad_id.sql', 'original_file_path': 'models\\stg_reddit_ads.yml', 'unique_id': 'test.reddit_ads_source.not_null_stg_reddit_ads__ad_ad_id.40188b63dd', 'fqn': ['reddit_ads_source', 'not_null_stg_reddit_ads__ad_ad_id'], 'alias': 'not_null_stg_reddit_ads__ad_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.9494395, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_reddit_ads__ad']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.stg_reddit_ads__ad'}, 'test.reddit_ads_source.not_null_stg_reddit_ads__ad_report_ad_id.c4af84b857': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('stg_reddit_ads__ad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_reddit_ads__ad_report_ad_id', 'resource_type': 'test', 'package_name': 'reddit_ads_source', 'path': 'not_null_stg_reddit_ads__ad_report_ad_id.sql', 'original_file_path': 'models\\stg_reddit_ads.yml', 'unique_id': 'test.reddit_ads_source.not_null_stg_reddit_ads__ad_report_ad_id.c4af84b857', 'fqn': ['reddit_ads_source', 'not_null_stg_reddit_ads__ad_report_ad_id'], 'alias': 'not_null_stg_reddit_ads__ad_report_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.95143, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_reddit_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.stg_reddit_ads__ad_report'}, 'test.reddit_ads_source.dbt_utils_unique_combination_of_columns_stg_reddit_ads__ad_report_ad_id__date_day.ce868b0b1a': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_reddit_ads__ad_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_reddit_ads__ad_report_ad_id__date_day', 'resource_type': 'test', 'package_name': 'reddit_ads_source', 'path': 'dbt_utils_unique_combination_o_d08f30f7cadd776325492b45b5ac30ff.sql', 'original_file_path': 'models\\stg_reddit_ads.yml', 'unique_id': 'test.reddit_ads_source.dbt_utils_unique_combination_of_columns_stg_reddit_ads__ad_report_ad_id__date_day.ce868b0b1a', 'fqn': ['reddit_ads_source', 'dbt_utils_unique_combination_of_columns_stg_reddit_ads__ad_report_ad_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_d08f30f7cadd776325492b45b5ac30ff', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_d08f30f7cadd776325492b45b5ac30ff', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_d08f30f7cadd776325492b45b5ac30ff'}, 'created_at': 1694433486.953435, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_d08f30f7cadd776325492b45b5ac30ff'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_d08f30f7cadd776325492b45b5ac30ff") }}', 'language': 'sql', 'refs': [['stg_reddit_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_reddit_ads__ad_report'}, 'test.reddit_ads_source.unique_stg_reddit_ads__ad_group_ad_group_id.d3dc0d7503': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('stg_reddit_ads__ad_group')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'unique_stg_reddit_ads__ad_group_ad_group_id', 'resource_type': 'test', 'package_name': 'reddit_ads_source', 'path': 'unique_stg_reddit_ads__ad_group_ad_group_id.sql', 'original_file_path': 'models\\stg_reddit_ads.yml', 'unique_id': 'test.reddit_ads_source.unique_stg_reddit_ads__ad_group_ad_group_id.d3dc0d7503', 'fqn': ['reddit_ads_source', 'unique_stg_reddit_ads__ad_group_ad_group_id'], 'alias': 'unique_stg_reddit_ads__ad_group_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.9570923, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_reddit_ads__ad_group']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.stg_reddit_ads__ad_group'}, 'test.reddit_ads_source.not_null_stg_reddit_ads__ad_group_ad_group_id.65795d8dc2': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('stg_reddit_ads__ad_group')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_reddit_ads__ad_group_ad_group_id', 'resource_type': 'test', 'package_name': 'reddit_ads_source', 'path': 'not_null_stg_reddit_ads__ad_group_ad_group_id.sql', 'original_file_path': 'models\\stg_reddit_ads.yml', 'unique_id': 'test.reddit_ads_source.not_null_stg_reddit_ads__ad_group_ad_group_id.65795d8dc2', 'fqn': ['reddit_ads_source', 'not_null_stg_reddit_ads__ad_group_ad_group_id'], 'alias': 'not_null_stg_reddit_ads__ad_group_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.9591708, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_reddit_ads__ad_group']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.stg_reddit_ads__ad_group'}, 'test.reddit_ads_source.not_null_stg_reddit_ads__ad_group_report_ad_group_id.9836cd084d': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('stg_reddit_ads__ad_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_reddit_ads__ad_group_report_ad_group_id', 'resource_type': 'test', 'package_name': 'reddit_ads_source', 'path': 'not_null_stg_reddit_ads__ad_group_report_ad_group_id.sql', 'original_file_path': 'models\\stg_reddit_ads.yml', 'unique_id': 'test.reddit_ads_source.not_null_stg_reddit_ads__ad_group_report_ad_group_id.9836cd084d', 'fqn': ['reddit_ads_source', 'not_null_stg_reddit_ads__ad_group_report_ad_group_id'], 'alias': 'not_null_stg_reddit_ads__ad_group_report_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.9611666, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_reddit_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.stg_reddit_ads__ad_group_report'}, 'test.reddit_ads_source.dbt_utils_unique_combination_of_columns_stg_reddit_ads__ad_group_report_ad_group_id__date_day.19b8b9b788': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_group_id', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_reddit_ads__ad_group_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_reddit_ads__ad_group_report_ad_group_id__date_day', 'resource_type': 'test', 'package_name': 'reddit_ads_source', 'path': 'dbt_utils_unique_combination_o_e81a8a636bdf4c2d4a757b798e0b86ac.sql', 'original_file_path': 'models\\stg_reddit_ads.yml', 'unique_id': 'test.reddit_ads_source.dbt_utils_unique_combination_of_columns_stg_reddit_ads__ad_group_report_ad_group_id__date_day.19b8b9b788', 'fqn': ['reddit_ads_source', 'dbt_utils_unique_combination_of_columns_stg_reddit_ads__ad_group_report_ad_group_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_e81a8a636bdf4c2d4a757b798e0b86ac', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_e81a8a636bdf4c2d4a757b798e0b86ac', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_e81a8a636bdf4c2d4a757b798e0b86ac'}, 'created_at': 1694433486.962167, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_e81a8a636bdf4c2d4a757b798e0b86ac'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_e81a8a636bdf4c2d4a757b798e0b86ac") }}', 'language': 'sql', 'refs': [['stg_reddit_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_reddit_ads__ad_group_report'}, 'test.reddit_ads_source.unique_stg_reddit_ads__campaign_campaign_id.3c4fccf1e4': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_reddit_ads__campaign')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'unique_stg_reddit_ads__campaign_campaign_id', 'resource_type': 'test', 'package_name': 'reddit_ads_source', 'path': 'unique_stg_reddit_ads__campaign_campaign_id.sql', 'original_file_path': 'models\\stg_reddit_ads.yml', 'unique_id': 'test.reddit_ads_source.unique_stg_reddit_ads__campaign_campaign_id.3c4fccf1e4', 'fqn': ['reddit_ads_source', 'unique_stg_reddit_ads__campaign_campaign_id'], 'alias': 'unique_stg_reddit_ads__campaign_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.9670954, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_reddit_ads__campaign']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_reddit_ads__campaign'}, 'test.reddit_ads_source.not_null_stg_reddit_ads__campaign_campaign_id.f3f24e4682': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_reddit_ads__campaign')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_reddit_ads__campaign_campaign_id', 'resource_type': 'test', 'package_name': 'reddit_ads_source', 'path': 'not_null_stg_reddit_ads__campaign_campaign_id.sql', 'original_file_path': 'models\\stg_reddit_ads.yml', 'unique_id': 'test.reddit_ads_source.not_null_stg_reddit_ads__campaign_campaign_id.f3f24e4682', 'fqn': ['reddit_ads_source', 'not_null_stg_reddit_ads__campaign_campaign_id'], 'alias': 'not_null_stg_reddit_ads__campaign_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.968175, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_reddit_ads__campaign']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_reddit_ads__campaign'}, 'test.reddit_ads_source.not_null_stg_reddit_ads__campaign_report_campaign_id.c717612b4f': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_reddit_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_reddit_ads__campaign_report_campaign_id', 'resource_type': 'test', 'package_name': 'reddit_ads_source', 'path': 'not_null_stg_reddit_ads__campaign_report_campaign_id.sql', 'original_file_path': 'models\\stg_reddit_ads.yml', 'unique_id': 'test.reddit_ads_source.not_null_stg_reddit_ads__campaign_report_campaign_id.c717612b4f', 'fqn': ['reddit_ads_source', 'not_null_stg_reddit_ads__campaign_report_campaign_id'], 'alias': 'not_null_stg_reddit_ads__campaign_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.9702477, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_reddit_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': []}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_reddit_ads__campaign_report'}, 'test.reddit_ads_source.dbt_utils_unique_combination_of_columns_stg_reddit_ads__campaign_report_campaign_id__date_day.9b02fea13d': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', 'date_day'], 'model': "{{ get_where_subquery(ref('stg_reddit_ads__campaign_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_reddit_ads__campaign_report_campaign_id__date_day', 'resource_type': 'test', 'package_name': 'reddit_ads_source', 'path': 'dbt_utils_unique_combination_o_8cc4902d24c7376a8ef501eb589e12a1.sql', 'original_file_path': 'models\\stg_reddit_ads.yml', 'unique_id': 'test.reddit_ads_source.dbt_utils_unique_combination_of_columns_stg_reddit_ads__campaign_report_campaign_id__date_day.9b02fea13d', 'fqn': ['reddit_ads_source', 'dbt_utils_unique_combination_of_columns_stg_reddit_ads__campaign_report_campaign_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_8cc4902d24c7376a8ef501eb589e12a1', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': False, 'alias': 'dbt_utils_unique_combination_o_8cc4902d24c7376a8ef501eb589e12a1', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_8cc4902d24c7376a8ef501eb589e12a1'}, 'created_at': 1694433486.9712493, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_8cc4902d24c7376a8ef501eb589e12a1'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_8cc4902d24c7376a8ef501eb589e12a1") }}', 'language': 'sql', 'refs': [['stg_reddit_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': []}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_reddit_ads__campaign_report'}, 'test.snapchat_ads.not_null_snapchat_ads__account_report_date_day.688d7ed260': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('snapchat_ads__account_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_snapchat_ads__account_report_date_day', 'resource_type': 'test', 'package_name': 'snapchat_ads', 'path': 'not_null_snapchat_ads__account_report_date_day.sql', 'original_file_path': 'models\\snapchat.yml', 'unique_id': 'test.snapchat_ads.not_null_snapchat_ads__account_report_date_day.688d7ed260', 'fqn': ['snapchat_ads', 'not_null_snapchat_ads__account_report_date_day'], 'alias': 'not_null_snapchat_ads__account_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433486.9999506, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['snapchat_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads.snapchat_ads__account_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.snapchat_ads__account_report'}, 'test.snapchat_ads.not_null_snapchat_ads__account_report_ad_account_id.589c81966b': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_account_id', 'model': "{{ get_where_subquery(ref('snapchat_ads__account_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_snapchat_ads__account_report_ad_account_id', 'resource_type': 'test', 'package_name': 'snapchat_ads', 'path': 'not_null_snapchat_ads__account_report_ad_account_id.sql', 'original_file_path': 'models\\snapchat.yml', 'unique_id': 'test.snapchat_ads.not_null_snapchat_ads__account_report_ad_account_id.589c81966b', 'fqn': ['snapchat_ads', 'not_null_snapchat_ads__account_report_ad_account_id'], 'alias': 'not_null_snapchat_ads__account_report_ad_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.0009503, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['snapchat_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads.snapchat_ads__account_report']}, 'compiled_path': None, 'column_name': 'ad_account_id', 'file_key_name': 'models.snapchat_ads__account_report'}, 'test.snapchat_ads.dbt_utils_unique_combination_of_columns_snapchat_ads__account_report_ad_account_id__date_day.da5545b8e6': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_account_id', 'date_day'], 'model': "{{ get_where_subquery(ref('snapchat_ads__account_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_snapchat_ads__account_report_ad_account_id__date_day', 'resource_type': 'test', 'package_name': 'snapchat_ads', 'path': 'dbt_utils_unique_combination_o_524356cb3f1f45c140605a4e4e3e3292.sql', 'original_file_path': 'models\\snapchat.yml', 'unique_id': 'test.snapchat_ads.dbt_utils_unique_combination_of_columns_snapchat_ads__account_report_ad_account_id__date_day.da5545b8e6', 'fqn': ['snapchat_ads', 'dbt_utils_unique_combination_of_columns_snapchat_ads__account_report_ad_account_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_524356cb3f1f45c140605a4e4e3e3292', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_524356cb3f1f45c140605a4e4e3e3292', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_524356cb3f1f45c140605a4e4e3e3292'}, 'created_at': 1694433487.0029504, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_524356cb3f1f45c140605a4e4e3e3292'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_524356cb3f1f45c140605a4e4e3e3292") }}', 'language': 'sql', 'refs': [['snapchat_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.snapchat_ads.snapchat_ads__account_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.snapchat_ads__account_report'}, 'test.snapchat_ads.not_null_snapchat_ads__ad_report_date_day.7c5350c8fe': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('snapchat_ads__ad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_snapchat_ads__ad_report_date_day', 'resource_type': 'test', 'package_name': 'snapchat_ads', 'path': 'not_null_snapchat_ads__ad_report_date_day.sql', 'original_file_path': 'models\\snapchat.yml', 'unique_id': 'test.snapchat_ads.not_null_snapchat_ads__ad_report_date_day.7c5350c8fe', 'fqn': ['snapchat_ads', 'not_null_snapchat_ads__ad_report_date_day'], 'alias': 'not_null_snapchat_ads__ad_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.007456, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['snapchat_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads.snapchat_ads__ad_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.snapchat_ads__ad_report'}, 'test.snapchat_ads.not_null_snapchat_ads__ad_report_ad_id.9000850744': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('snapchat_ads__ad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_snapchat_ads__ad_report_ad_id', 'resource_type': 'test', 'package_name': 'snapchat_ads', 'path': 'not_null_snapchat_ads__ad_report_ad_id.sql', 'original_file_path': 'models\\snapchat.yml', 'unique_id': 'test.snapchat_ads.not_null_snapchat_ads__ad_report_ad_id.9000850744', 'fqn': ['snapchat_ads', 'not_null_snapchat_ads__ad_report_ad_id'], 'alias': 'not_null_snapchat_ads__ad_report_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.009461, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['snapchat_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads.snapchat_ads__ad_report']}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.snapchat_ads__ad_report'}, 'test.snapchat_ads.dbt_utils_unique_combination_of_columns_snapchat_ads__ad_report_ad_id__date_day.68c2c0de57': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'date_day'], 'model': "{{ get_where_subquery(ref('snapchat_ads__ad_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_snapchat_ads__ad_report_ad_id__date_day', 'resource_type': 'test', 'package_name': 'snapchat_ads', 'path': 'dbt_utils_unique_combination_o_d89cc6fe00f1619f552cd79cf8e1cf2b.sql', 'original_file_path': 'models\\snapchat.yml', 'unique_id': 'test.snapchat_ads.dbt_utils_unique_combination_of_columns_snapchat_ads__ad_report_ad_id__date_day.68c2c0de57', 'fqn': ['snapchat_ads', 'dbt_utils_unique_combination_of_columns_snapchat_ads__ad_report_ad_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_d89cc6fe00f1619f552cd79cf8e1cf2b', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_d89cc6fe00f1619f552cd79cf8e1cf2b', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_d89cc6fe00f1619f552cd79cf8e1cf2b'}, 'created_at': 1694433487.011461, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_d89cc6fe00f1619f552cd79cf8e1cf2b'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_d89cc6fe00f1619f552cd79cf8e1cf2b") }}', 'language': 'sql', 'refs': [['snapchat_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.snapchat_ads.snapchat_ads__ad_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.snapchat_ads__ad_report'}, 'test.snapchat_ads.not_null_snapchat_ads__campaign_report_date_day.4e4e31223b': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('snapchat_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_snapchat_ads__campaign_report_date_day', 'resource_type': 'test', 'package_name': 'snapchat_ads', 'path': 'not_null_snapchat_ads__campaign_report_date_day.sql', 'original_file_path': 'models\\snapchat.yml', 'unique_id': 'test.snapchat_ads.not_null_snapchat_ads__campaign_report_date_day.4e4e31223b', 'fqn': ['snapchat_ads', 'not_null_snapchat_ads__campaign_report_date_day'], 'alias': 'not_null_snapchat_ads__campaign_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.0169692, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['snapchat_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads.snapchat_ads__campaign_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.snapchat_ads__campaign_report'}, 'test.snapchat_ads.not_null_snapchat_ads__campaign_report_campaign_id.19fd7135ac': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('snapchat_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_snapchat_ads__campaign_report_campaign_id', 'resource_type': 'test', 'package_name': 'snapchat_ads', 'path': 'not_null_snapchat_ads__campaign_report_campaign_id.sql', 'original_file_path': 'models\\snapchat.yml', 'unique_id': 'test.snapchat_ads.not_null_snapchat_ads__campaign_report_campaign_id.19fd7135ac', 'fqn': ['snapchat_ads', 'not_null_snapchat_ads__campaign_report_campaign_id'], 'alias': 'not_null_snapchat_ads__campaign_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.0180209, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['snapchat_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads.snapchat_ads__campaign_report']}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.snapchat_ads__campaign_report'}, 'test.snapchat_ads.dbt_utils_unique_combination_of_columns_snapchat_ads__campaign_report_campaign_id__date_day.dfc5f7da4e': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', 'date_day'], 'model': "{{ get_where_subquery(ref('snapchat_ads__campaign_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_snapchat_ads__campaign_report_campaign_id__date_day', 'resource_type': 'test', 'package_name': 'snapchat_ads', 'path': 'dbt_utils_unique_combination_o_113e94adc3e9beee92a4d84c51a5a72e.sql', 'original_file_path': 'models\\snapchat.yml', 'unique_id': 'test.snapchat_ads.dbt_utils_unique_combination_of_columns_snapchat_ads__campaign_report_campaign_id__date_day.dfc5f7da4e', 'fqn': ['snapchat_ads', 'dbt_utils_unique_combination_of_columns_snapchat_ads__campaign_report_campaign_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_113e94adc3e9beee92a4d84c51a5a72e', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_113e94adc3e9beee92a4d84c51a5a72e', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_113e94adc3e9beee92a4d84c51a5a72e'}, 'created_at': 1694433487.0201833, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_113e94adc3e9beee92a4d84c51a5a72e'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_113e94adc3e9beee92a4d84c51a5a72e") }}', 'language': 'sql', 'refs': [['snapchat_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.snapchat_ads.snapchat_ads__campaign_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.snapchat_ads__campaign_report'}, 'test.snapchat_ads.not_null_snapchat_ads__ad_squad_report_date_day.39118ca639': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('snapchat_ads__ad_squad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_snapchat_ads__ad_squad_report_date_day', 'resource_type': 'test', 'package_name': 'snapchat_ads', 'path': 'not_null_snapchat_ads__ad_squad_report_date_day.sql', 'original_file_path': 'models\\snapchat.yml', 'unique_id': 'test.snapchat_ads.not_null_snapchat_ads__ad_squad_report_date_day.39118ca639', 'fqn': ['snapchat_ads', 'not_null_snapchat_ads__ad_squad_report_date_day'], 'alias': 'not_null_snapchat_ads__ad_squad_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.02422, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['snapchat_ads__ad_squad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads.snapchat_ads__ad_squad_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.snapchat_ads__ad_squad_report'}, 'test.snapchat_ads.not_null_snapchat_ads__ad_squad_report_ad_squad_id.424c0bbffe': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_squad_id', 'model': "{{ get_where_subquery(ref('snapchat_ads__ad_squad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_snapchat_ads__ad_squad_report_ad_squad_id', 'resource_type': 'test', 'package_name': 'snapchat_ads', 'path': 'not_null_snapchat_ads__ad_squad_report_ad_squad_id.sql', 'original_file_path': 'models\\snapchat.yml', 'unique_id': 'test.snapchat_ads.not_null_snapchat_ads__ad_squad_report_ad_squad_id.424c0bbffe', 'fqn': ['snapchat_ads', 'not_null_snapchat_ads__ad_squad_report_ad_squad_id'], 'alias': 'not_null_snapchat_ads__ad_squad_report_ad_squad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.026234, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['snapchat_ads__ad_squad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads.snapchat_ads__ad_squad_report']}, 'compiled_path': None, 'column_name': 'ad_squad_id', 'file_key_name': 'models.snapchat_ads__ad_squad_report'}, 'test.snapchat_ads.dbt_utils_unique_combination_of_columns_snapchat_ads__ad_squad_report_ad_squad_id__date_day.027a518f3c': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_squad_id', 'date_day'], 'model': "{{ get_where_subquery(ref('snapchat_ads__ad_squad_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_snapchat_ads__ad_squad_report_ad_squad_id__date_day', 'resource_type': 'test', 'package_name': 'snapchat_ads', 'path': 'dbt_utils_unique_combination_o_75177eef68a3eb0454e7209b1fcecc7f.sql', 'original_file_path': 'models\\snapchat.yml', 'unique_id': 'test.snapchat_ads.dbt_utils_unique_combination_of_columns_snapchat_ads__ad_squad_report_ad_squad_id__date_day.027a518f3c', 'fqn': ['snapchat_ads', 'dbt_utils_unique_combination_of_columns_snapchat_ads__ad_squad_report_ad_squad_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_75177eef68a3eb0454e7209b1fcecc7f', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_75177eef68a3eb0454e7209b1fcecc7f', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_75177eef68a3eb0454e7209b1fcecc7f'}, 'created_at': 1694433487.0277421, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_75177eef68a3eb0454e7209b1fcecc7f'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_75177eef68a3eb0454e7209b1fcecc7f") }}', 'language': 'sql', 'refs': [['snapchat_ads__ad_squad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.snapchat_ads.snapchat_ads__ad_squad_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.snapchat_ads__ad_squad_report'}, 'test.snapchat_ads.not_null_snapchat_ads__url_report_date_day.bcbe87a7f6': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('snapchat_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_snapchat_ads__url_report_date_day', 'resource_type': 'test', 'package_name': 'snapchat_ads', 'path': 'not_null_snapchat_ads__url_report_date_day.sql', 'original_file_path': 'models\\snapchat.yml', 'unique_id': 'test.snapchat_ads.not_null_snapchat_ads__url_report_date_day.bcbe87a7f6', 'fqn': ['snapchat_ads', 'not_null_snapchat_ads__url_report_date_day'], 'alias': 'not_null_snapchat_ads__url_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.0317683, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['snapchat_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads.snapchat_ads__url_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.snapchat_ads__url_report'}, 'test.snapchat_ads.not_null_snapchat_ads__url_report_ad_id.ecbdfc0d78': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('snapchat_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_snapchat_ads__url_report_ad_id', 'resource_type': 'test', 'package_name': 'snapchat_ads', 'path': 'not_null_snapchat_ads__url_report_ad_id.sql', 'original_file_path': 'models\\snapchat.yml', 'unique_id': 'test.snapchat_ads.not_null_snapchat_ads__url_report_ad_id.ecbdfc0d78', 'fqn': ['snapchat_ads', 'not_null_snapchat_ads__url_report_ad_id'], 'alias': 'not_null_snapchat_ads__url_report_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.033782, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['snapchat_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads.snapchat_ads__url_report']}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.snapchat_ads__url_report'}, 'test.snapchat_ads.not_null_snapchat_ads__url_report_base_url.15676dc1de': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'base_url', 'model': "{{ get_where_subquery(ref('snapchat_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_snapchat_ads__url_report_base_url', 'resource_type': 'test', 'package_name': 'snapchat_ads', 'path': 'not_null_snapchat_ads__url_report_base_url.sql', 'original_file_path': 'models\\snapchat.yml', 'unique_id': 'test.snapchat_ads.not_null_snapchat_ads__url_report_base_url.15676dc1de', 'fqn': ['snapchat_ads', 'not_null_snapchat_ads__url_report_base_url'], 'alias': 'not_null_snapchat_ads__url_report_base_url', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True}, 'created_at': 1694433487.0357885, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(enabled=True) }}', 'language': 'sql', 'refs': [['snapchat_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads.snapchat_ads__url_report']}, 'compiled_path': None, 'column_name': 'base_url', 'file_key_name': 'models.snapchat_ads__url_report'}, 'test.snapchat_ads.dbt_utils_unique_combination_of_columns_snapchat_ads__url_report_ad_id__date_day.54edc1b2be': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'date_day'], 'model': "{{ get_where_subquery(ref('snapchat_ads__url_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_snapchat_ads__url_report_ad_id__date_day', 'resource_type': 'test', 'package_name': 'snapchat_ads', 'path': 'dbt_utils_unique_combination_o_bbe78d99026ed63397aa69997ed2d6a7.sql', 'original_file_path': 'models\\snapchat.yml', 'unique_id': 'test.snapchat_ads.dbt_utils_unique_combination_of_columns_snapchat_ads__url_report_ad_id__date_day.54edc1b2be', 'fqn': ['snapchat_ads', 'dbt_utils_unique_combination_of_columns_snapchat_ads__url_report_ad_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_bbe78d99026ed63397aa69997ed2d6a7', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_bbe78d99026ed63397aa69997ed2d6a7', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_bbe78d99026ed63397aa69997ed2d6a7'}, 'created_at': 1694433487.038297, 'config_call_dict': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_bbe78d99026ed63397aa69997ed2d6a7'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(enabled=True,alias="dbt_utils_unique_combination_o_bbe78d99026ed63397aa69997ed2d6a7") }}', 'language': 'sql', 'refs': [['snapchat_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.snapchat_ads.snapchat_ads__url_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.snapchat_ads__url_report'}, 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_account_history__fivetran_synced.2d5dd77824': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': '_fivetran_synced', 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__ad_account_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_snapchat_ads__ad_account_history__fivetran_synced', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'not_null_stg_snapchat_ads__ad_account_history__fivetran_synced.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_account_history__fivetran_synced.2d5dd77824', 'fqn': ['snapchat_ads_source', 'not_null_stg_snapchat_ads__ad_account_history__fivetran_synced'], 'alias': 'not_null_stg_snapchat_ads__ad_account_history__fivetran_synced', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.1150315, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_account_history']}, 'compiled_path': None, 'column_name': '_fivetran_synced', 'file_key_name': 'models.stg_snapchat_ads__ad_account_history'}, 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_account_history_ad_account_id.426d71d605': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_account_id', 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__ad_account_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_snapchat_ads__ad_account_history_ad_account_id', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'not_null_stg_snapchat_ads__ad_account_history_ad_account_id.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_account_history_ad_account_id.426d71d605', 'fqn': ['snapchat_ads_source', 'not_null_stg_snapchat_ads__ad_account_history_ad_account_id'], 'alias': 'not_null_stg_snapchat_ads__ad_account_history_ad_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.1175392, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_account_history']}, 'compiled_path': None, 'column_name': 'ad_account_id', 'file_key_name': 'models.stg_snapchat_ads__ad_account_history'}, 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_account_history_ad_account_id___fivetran_synced.cd4fd6b0be': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_account_id', '_fivetran_synced'], 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__ad_account_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_account_history_ad_account_id___fivetran_synced', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'dbt_utils_unique_combination_o_3852df57bdc45c0c215b1863f3f9075d.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_account_history_ad_account_id___fivetran_synced.cd4fd6b0be', 'fqn': ['snapchat_ads_source', 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_account_history_ad_account_id___fivetran_synced'], 'alias': 'dbt_utils_unique_combination_o_3852df57bdc45c0c215b1863f3f9075d', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_3852df57bdc45c0c215b1863f3f9075d', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_3852df57bdc45c0c215b1863f3f9075d'}, 'created_at': 1694433487.118543, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_3852df57bdc45c0c215b1863f3f9075d'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_3852df57bdc45c0c215b1863f3f9075d") }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_account_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_snapchat_ads__ad_account_history'}, 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_history__fivetran_synced.1607c70fda': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': '_fivetran_synced', 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__ad_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_snapchat_ads__ad_history__fivetran_synced', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'not_null_stg_snapchat_ads__ad_history__fivetran_synced.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_history__fivetran_synced.1607c70fda', 'fqn': ['snapchat_ads_source', 'not_null_stg_snapchat_ads__ad_history__fivetran_synced'], 'alias': 'not_null_stg_snapchat_ads__ad_history__fivetran_synced', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.1235428, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_history']}, 'compiled_path': None, 'column_name': '_fivetran_synced', 'file_key_name': 'models.stg_snapchat_ads__ad_history'}, 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_history_ad_id.e9d367fd15': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__ad_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_snapchat_ads__ad_history_ad_id', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'not_null_stg_snapchat_ads__ad_history_ad_id.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_history_ad_id.e9d367fd15', 'fqn': ['snapchat_ads_source', 'not_null_stg_snapchat_ads__ad_history_ad_id'], 'alias': 'not_null_stg_snapchat_ads__ad_history_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.1255426, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_history']}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.stg_snapchat_ads__ad_history'}, 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_history_ad_id___fivetran_synced.f84924f13b': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', '_fivetran_synced'], 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__ad_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_history_ad_id___fivetran_synced', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'dbt_utils_unique_combination_o_f4293c0007c439c8e914dcbf1296b060.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_history_ad_id___fivetran_synced.f84924f13b', 'fqn': ['snapchat_ads_source', 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_history_ad_id___fivetran_synced'], 'alias': 'dbt_utils_unique_combination_o_f4293c0007c439c8e914dcbf1296b060', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_f4293c0007c439c8e914dcbf1296b060', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_f4293c0007c439c8e914dcbf1296b060'}, 'created_at': 1694433487.127123, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_f4293c0007c439c8e914dcbf1296b060'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_f4293c0007c439c8e914dcbf1296b060") }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_snapchat_ads__ad_history'}, 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_hourly_report_ad_id.7e763de19d': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__ad_hourly_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_snapchat_ads__ad_hourly_report_ad_id', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'not_null_stg_snapchat_ads__ad_hourly_report_ad_id.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_hourly_report_ad_id.7e763de19d', 'fqn': ['snapchat_ads_source', 'not_null_stg_snapchat_ads__ad_hourly_report_ad_id'], 'alias': 'not_null_stg_snapchat_ads__ad_hourly_report_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.132129, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_hourly_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report']}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.stg_snapchat_ads__ad_hourly_report'}, 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_hourly_report_date_hour.666cda1cd7': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_hour', 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__ad_hourly_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_snapchat_ads__ad_hourly_report_date_hour', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'not_null_stg_snapchat_ads__ad_hourly_report_date_hour.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_hourly_report_date_hour.666cda1cd7', 'fqn': ['snapchat_ads_source', 'not_null_stg_snapchat_ads__ad_hourly_report_date_hour'], 'alias': 'not_null_stg_snapchat_ads__ad_hourly_report_date_hour', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.1331284, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_hourly_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report']}, 'compiled_path': None, 'column_name': 'date_hour', 'file_key_name': 'models.stg_snapchat_ads__ad_hourly_report'}, 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_hourly_report_ad_id__date_hour.1a4ef6182a': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'date_hour'], 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__ad_hourly_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_hourly_report_ad_id__date_hour', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'dbt_utils_unique_combination_o_51be039d7f287e51c6f47e98ae48f8ea.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_hourly_report_ad_id__date_hour.1a4ef6182a', 'fqn': ['snapchat_ads_source', 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_hourly_report_ad_id__date_hour'], 'alias': 'dbt_utils_unique_combination_o_51be039d7f287e51c6f47e98ae48f8ea', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_51be039d7f287e51c6f47e98ae48f8ea', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_51be039d7f287e51c6f47e98ae48f8ea'}, 'created_at': 1694433487.135128, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_51be039d7f287e51c6f47e98ae48f8ea'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_51be039d7f287e51c6f47e98ae48f8ea") }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_hourly_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_snapchat_ads__ad_hourly_report'}, 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_squad_history__fivetran_synced.7ed7d105ae': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': '_fivetran_synced', 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__ad_squad_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_snapchat_ads__ad_squad_history__fivetran_synced', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'not_null_stg_snapchat_ads__ad_squad_history__fivetran_synced.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_squad_history__fivetran_synced.7ed7d105ae', 'fqn': ['snapchat_ads_source', 'not_null_stg_snapchat_ads__ad_squad_history__fivetran_synced'], 'alias': 'not_null_stg_snapchat_ads__ad_squad_history__fivetran_synced', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.1396391, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_squad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history']}, 'compiled_path': None, 'column_name': '_fivetran_synced', 'file_key_name': 'models.stg_snapchat_ads__ad_squad_history'}, 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_squad_history_ad_squad_id.71c7122278': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_squad_id', 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__ad_squad_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_snapchat_ads__ad_squad_history_ad_squad_id', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'not_null_stg_snapchat_ads__ad_squad_history_ad_squad_id.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_squad_history_ad_squad_id.71c7122278', 'fqn': ['snapchat_ads_source', 'not_null_stg_snapchat_ads__ad_squad_history_ad_squad_id'], 'alias': 'not_null_stg_snapchat_ads__ad_squad_history_ad_squad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.140639, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_squad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history']}, 'compiled_path': None, 'column_name': 'ad_squad_id', 'file_key_name': 'models.stg_snapchat_ads__ad_squad_history'}, 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_squad_history_ad_squad_id___fivetran_synced.200b225a27': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_squad_id', '_fivetran_synced'], 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__ad_squad_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_squad_history_ad_squad_id___fivetran_synced', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'dbt_utils_unique_combination_o_e1915f47a6425292156cafe7be652128.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_squad_history_ad_squad_id___fivetran_synced.200b225a27', 'fqn': ['snapchat_ads_source', 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_squad_history_ad_squad_id___fivetran_synced'], 'alias': 'dbt_utils_unique_combination_o_e1915f47a6425292156cafe7be652128', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_e1915f47a6425292156cafe7be652128', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_e1915f47a6425292156cafe7be652128'}, 'created_at': 1694433487.142639, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_e1915f47a6425292156cafe7be652128'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_e1915f47a6425292156cafe7be652128") }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_squad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_snapchat_ads__ad_squad_history'}, 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_squad_hourly_report_ad_squad_id.ab16aa72c9': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_squad_id', 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__ad_squad_hourly_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_snapchat_ads__ad_squad_hourly_report_ad_squad_id', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'not_null_stg_snapchat_ads__ad_squad_hourly_report_ad_squad_id.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_squad_hourly_report_ad_squad_id.ab16aa72c9', 'fqn': ['snapchat_ads_source', 'not_null_stg_snapchat_ads__ad_squad_hourly_report_ad_squad_id'], 'alias': 'not_null_stg_snapchat_ads__ad_squad_hourly_report_ad_squad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.1471622, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_squad_hourly_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report']}, 'compiled_path': None, 'column_name': 'ad_squad_id', 'file_key_name': 'models.stg_snapchat_ads__ad_squad_hourly_report'}, 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_squad_hourly_report_date_hour.6f0b63a9cb': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_hour', 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__ad_squad_hourly_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_snapchat_ads__ad_squad_hourly_report_date_hour', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'not_null_stg_snapchat_ads__ad_squad_hourly_report_date_hour.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.not_null_stg_snapchat_ads__ad_squad_hourly_report_date_hour.6f0b63a9cb', 'fqn': ['snapchat_ads_source', 'not_null_stg_snapchat_ads__ad_squad_hourly_report_date_hour'], 'alias': 'not_null_stg_snapchat_ads__ad_squad_hourly_report_date_hour', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.1491985, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_squad_hourly_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report']}, 'compiled_path': None, 'column_name': 'date_hour', 'file_key_name': 'models.stg_snapchat_ads__ad_squad_hourly_report'}, 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_squad_hourly_report_ad_squad_id__date_hour.774a407e69': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_squad_id', 'date_hour'], 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__ad_squad_hourly_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_squad_hourly_report_ad_squad_id__date_hour', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'dbt_utils_unique_combination_o_f511cc57cc2f37ea815924cccff18bc3.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_squad_hourly_report_ad_squad_id__date_hour.774a407e69', 'fqn': ['snapchat_ads_source', 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__ad_squad_hourly_report_ad_squad_id__date_hour'], 'alias': 'dbt_utils_unique_combination_o_f511cc57cc2f37ea815924cccff18bc3', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_f511cc57cc2f37ea815924cccff18bc3', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_f511cc57cc2f37ea815924cccff18bc3'}, 'created_at': 1694433487.1502023, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_f511cc57cc2f37ea815924cccff18bc3'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_f511cc57cc2f37ea815924cccff18bc3") }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__ad_squad_hourly_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_snapchat_ads__ad_squad_hourly_report'}, 'test.snapchat_ads_source.not_null_stg_snapchat_ads__campaign_history__fivetran_synced.55bc48b3ec': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': '_fivetran_synced', 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__campaign_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_snapchat_ads__campaign_history__fivetran_synced', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'not_null_stg_snapchat_ads__campaign_history__fivetran_synced.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.not_null_stg_snapchat_ads__campaign_history__fivetran_synced.55bc48b3ec', 'fqn': ['snapchat_ads_source', 'not_null_stg_snapchat_ads__campaign_history__fivetran_synced'], 'alias': 'not_null_stg_snapchat_ads__campaign_history__fivetran_synced', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.1552024, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__campaign_history']}, 'compiled_path': None, 'column_name': '_fivetran_synced', 'file_key_name': 'models.stg_snapchat_ads__campaign_history'}, 'test.snapchat_ads_source.not_null_stg_snapchat_ads__campaign_history_campaign_id.f74a0fb8c0': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__campaign_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_snapchat_ads__campaign_history_campaign_id', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'not_null_stg_snapchat_ads__campaign_history_campaign_id.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.not_null_stg_snapchat_ads__campaign_history_campaign_id.f74a0fb8c0', 'fqn': ['snapchat_ads_source', 'not_null_stg_snapchat_ads__campaign_history_campaign_id'], 'alias': 'not_null_stg_snapchat_ads__campaign_history_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.1562026, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__campaign_history']}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_snapchat_ads__campaign_history'}, 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__campaign_history_campaign_id___fivetran_synced.31b9fb6777': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', '_fivetran_synced'], 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__campaign_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__campaign_history_campaign_id___fivetran_synced', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'dbt_utils_unique_combination_o_57987eae5ec7cafd860959dc1cd2003b.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__campaign_history_campaign_id___fivetran_synced.31b9fb6777', 'fqn': ['snapchat_ads_source', 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__campaign_history_campaign_id___fivetran_synced'], 'alias': 'dbt_utils_unique_combination_o_57987eae5ec7cafd860959dc1cd2003b', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_57987eae5ec7cafd860959dc1cd2003b', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_57987eae5ec7cafd860959dc1cd2003b'}, 'created_at': 1694433487.157718, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_57987eae5ec7cafd860959dc1cd2003b'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_57987eae5ec7cafd860959dc1cd2003b") }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__campaign_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_snapchat_ads__campaign_history'}, 'test.snapchat_ads_source.not_null_stg_snapchat_ads__campaign_hourly_report_campaign_id.f255c38a3e': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__campaign_hourly_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_snapchat_ads__campaign_hourly_report_campaign_id', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'not_null_stg_snapchat_ads__campaign_hourly_report_campaign_id.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.not_null_stg_snapchat_ads__campaign_hourly_report_campaign_id.f255c38a3e', 'fqn': ['snapchat_ads_source', 'not_null_stg_snapchat_ads__campaign_hourly_report_campaign_id'], 'alias': 'not_null_stg_snapchat_ads__campaign_hourly_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.162721, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__campaign_hourly_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report']}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_snapchat_ads__campaign_hourly_report'}, 'test.snapchat_ads_source.not_null_stg_snapchat_ads__campaign_hourly_report_date_hour.0bc4218ac8': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_hour', 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__campaign_hourly_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_snapchat_ads__campaign_hourly_report_date_hour', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'not_null_stg_snapchat_ads__campaign_hourly_report_date_hour.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.not_null_stg_snapchat_ads__campaign_hourly_report_date_hour.0bc4218ac8', 'fqn': ['snapchat_ads_source', 'not_null_stg_snapchat_ads__campaign_hourly_report_date_hour'], 'alias': 'not_null_stg_snapchat_ads__campaign_hourly_report_date_hour', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.1647205, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__campaign_hourly_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report']}, 'compiled_path': None, 'column_name': 'date_hour', 'file_key_name': 'models.stg_snapchat_ads__campaign_hourly_report'}, 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__campaign_hourly_report_campaign_id__date_hour.64293afa9c': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', 'date_hour'], 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__campaign_hourly_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__campaign_hourly_report_campaign_id__date_hour', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'dbt_utils_unique_combination_o_0cd5a718b668452c6086029c1d653cd2.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__campaign_hourly_report_campaign_id__date_hour.64293afa9c', 'fqn': ['snapchat_ads_source', 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__campaign_hourly_report_campaign_id__date_hour'], 'alias': 'dbt_utils_unique_combination_o_0cd5a718b668452c6086029c1d653cd2', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_0cd5a718b668452c6086029c1d653cd2', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_0cd5a718b668452c6086029c1d653cd2'}, 'created_at': 1694433487.165721, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_0cd5a718b668452c6086029c1d653cd2'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_0cd5a718b668452c6086029c1d653cd2") }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__campaign_hourly_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_snapchat_ads__campaign_hourly_report'}, 'test.snapchat_ads_source.not_null_stg_snapchat_ads__creative_history__fivetran_synced.b9c95b4380': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': '_fivetran_synced', 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__creative_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_snapchat_ads__creative_history__fivetran_synced', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'not_null_stg_snapchat_ads__creative_history__fivetran_synced.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.not_null_stg_snapchat_ads__creative_history__fivetran_synced.b9c95b4380', 'fqn': ['snapchat_ads_source', 'not_null_stg_snapchat_ads__creative_history__fivetran_synced'], 'alias': 'not_null_stg_snapchat_ads__creative_history__fivetran_synced', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.170322, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__creative_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__creative_history']}, 'compiled_path': None, 'column_name': '_fivetran_synced', 'file_key_name': 'models.stg_snapchat_ads__creative_history'}, 'test.snapchat_ads_source.not_null_stg_snapchat_ads__creative_history_creative_id.09c83690f4': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'creative_id', 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__creative_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_snapchat_ads__creative_history_creative_id', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'not_null_stg_snapchat_ads__creative_history_creative_id.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.not_null_stg_snapchat_ads__creative_history_creative_id.09c83690f4', 'fqn': ['snapchat_ads_source', 'not_null_stg_snapchat_ads__creative_history_creative_id'], 'alias': 'not_null_stg_snapchat_ads__creative_history_creative_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.1723218, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__creative_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__creative_history']}, 'compiled_path': None, 'column_name': 'creative_id', 'file_key_name': 'models.stg_snapchat_ads__creative_history'}, 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__creative_history_creative_id___fivetran_synced.c6f6c78b99': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['creative_id', '_fivetran_synced'], 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__creative_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__creative_history_creative_id___fivetran_synced', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'dbt_utils_unique_combination_o_6b9615128ce9ee3b9b92bc0b5f9bc33d.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__creative_history_creative_id___fivetran_synced.c6f6c78b99', 'fqn': ['snapchat_ads_source', 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__creative_history_creative_id___fivetran_synced'], 'alias': 'dbt_utils_unique_combination_o_6b9615128ce9ee3b9b92bc0b5f9bc33d', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_6b9615128ce9ee3b9b92bc0b5f9bc33d', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_6b9615128ce9ee3b9b92bc0b5f9bc33d'}, 'created_at': 1694433487.1733217, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_6b9615128ce9ee3b9b92bc0b5f9bc33d'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_6b9615128ce9ee3b9b92bc0b5f9bc33d") }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__creative_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__creative_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_snapchat_ads__creative_history'}, 'test.snapchat_ads_source.not_null_stg_snapchat_ads__creative_url_tag_history_creative_id.7ff6bb9c1b': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'creative_id', 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__creative_url_tag_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_snapchat_ads__creative_url_tag_history_creative_id', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'not_null_stg_snapchat_ads__creative_url_tag_history_creative_id.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.not_null_stg_snapchat_ads__creative_url_tag_history_creative_id.7ff6bb9c1b', 'fqn': ['snapchat_ads_source', 'not_null_stg_snapchat_ads__creative_url_tag_history_creative_id'], 'alias': 'not_null_stg_snapchat_ads__creative_url_tag_history_creative_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.1779244, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__creative_url_tag_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history']}, 'compiled_path': None, 'column_name': 'creative_id', 'file_key_name': 'models.stg_snapchat_ads__creative_url_tag_history'}, 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__creative_url_tag_history_creative_id__param_key__updated_at.cc3fa6acbe': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['creative_id', 'param_key', 'updated_at'], 'model': "{{ get_where_subquery(ref('stg_snapchat_ads__creative_url_tag_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__creative_url_tag_history_creative_id__param_key__updated_at', 'resource_type': 'test', 'package_name': 'snapchat_ads_source', 'path': 'dbt_utils_unique_combination_o_bf5f1fe7986f7917e2a647b5f7b1f985.sql', 'original_file_path': 'models\\stg_snapchat.yml', 'unique_id': 'test.snapchat_ads_source.dbt_utils_unique_combination_of_columns_stg_snapchat_ads__creative_url_tag_history_creative_id__param_key__updated_at.cc3fa6acbe', 'fqn': ['snapchat_ads_source', 'dbt_utils_unique_combination_of_columns_stg_snapchat_ads__creative_url_tag_history_creative_id__param_key__updated_at'], 'alias': 'dbt_utils_unique_combination_o_bf5f1fe7986f7917e2a647b5f7b1f985', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_bf5f1fe7986f7917e2a647b5f7b1f985', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_bf5f1fe7986f7917e2a647b5f7b1f985'}, 'created_at': 1694433487.178924, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_bf5f1fe7986f7917e2a647b5f7b1f985'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_bf5f1fe7986f7917e2a647b5f7b1f985") }}', 'language': 'sql', 'refs': [['stg_snapchat_ads__creative_url_tag_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_snapchat_ads__creative_url_tag_history'}, 'test.tiktok_ads.not_null_tiktok_ads__advertiser_report_date_day.1276998c99': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('tiktok_ads__advertiser_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_tiktok_ads__advertiser_report_date_day', 'resource_type': 'test', 'package_name': 'tiktok_ads', 'path': 'not_null_tiktok_ads__advertiser_report_date_day.sql', 'original_file_path': 'models\\tiktok_ads.yml', 'unique_id': 'test.tiktok_ads.not_null_tiktok_ads__advertiser_report_date_day.1276998c99', 'fqn': ['tiktok_ads', 'not_null_tiktok_ads__advertiser_report_date_day'], 'alias': 'not_null_tiktok_ads__advertiser_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.2314043, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['tiktok_ads__advertiser_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads.tiktok_ads__advertiser_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.tiktok_ads__advertiser_report'}, 'test.tiktok_ads.not_null_tiktok_ads__advertiser_report_advertiser_id.f956c568ce': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'advertiser_id', 'model': "{{ get_where_subquery(ref('tiktok_ads__advertiser_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_tiktok_ads__advertiser_report_advertiser_id', 'resource_type': 'test', 'package_name': 'tiktok_ads', 'path': 'not_null_tiktok_ads__advertiser_report_advertiser_id.sql', 'original_file_path': 'models\\tiktok_ads.yml', 'unique_id': 'test.tiktok_ads.not_null_tiktok_ads__advertiser_report_advertiser_id.f956c568ce', 'fqn': ['tiktok_ads', 'not_null_tiktok_ads__advertiser_report_advertiser_id'], 'alias': 'not_null_tiktok_ads__advertiser_report_advertiser_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.2324042, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['tiktok_ads__advertiser_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads.tiktok_ads__advertiser_report']}, 'compiled_path': None, 'column_name': 'advertiser_id', 'file_key_name': 'models.tiktok_ads__advertiser_report'}, 'test.tiktok_ads.dbt_utils_unique_combination_of_columns_tiktok_ads__advertiser_report_advertiser_id__date_day.d298bb3cf9': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['advertiser_id', 'date_day'], 'model': "{{ get_where_subquery(ref('tiktok_ads__advertiser_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_tiktok_ads__advertiser_report_advertiser_id__date_day', 'resource_type': 'test', 'package_name': 'tiktok_ads', 'path': 'dbt_utils_unique_combination_o_64e56e18897a7d7395bde426b0634f89.sql', 'original_file_path': 'models\\tiktok_ads.yml', 'unique_id': 'test.tiktok_ads.dbt_utils_unique_combination_of_columns_tiktok_ads__advertiser_report_advertiser_id__date_day.d298bb3cf9', 'fqn': ['tiktok_ads', 'dbt_utils_unique_combination_of_columns_tiktok_ads__advertiser_report_advertiser_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_64e56e18897a7d7395bde426b0634f89', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_64e56e18897a7d7395bde426b0634f89', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_64e56e18897a7d7395bde426b0634f89'}, 'created_at': 1694433487.2344038, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_64e56e18897a7d7395bde426b0634f89'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_64e56e18897a7d7395bde426b0634f89") }}', 'language': 'sql', 'refs': [['tiktok_ads__advertiser_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.tiktok_ads.tiktok_ads__advertiser_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.tiktok_ads__advertiser_report'}, 'test.tiktok_ads.not_null_tiktok_ads__ad_report_date_day.d61ee4a5ed': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('tiktok_ads__ad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_tiktok_ads__ad_report_date_day', 'resource_type': 'test', 'package_name': 'tiktok_ads', 'path': 'not_null_tiktok_ads__ad_report_date_day.sql', 'original_file_path': 'models\\tiktok_ads.yml', 'unique_id': 'test.tiktok_ads.not_null_tiktok_ads__ad_report_date_day.d61ee4a5ed', 'fqn': ['tiktok_ads', 'not_null_tiktok_ads__ad_report_date_day'], 'alias': 'not_null_tiktok_ads__ad_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.2390342, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['tiktok_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads.tiktok_ads__ad_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.tiktok_ads__ad_report'}, 'test.tiktok_ads.not_null_tiktok_ads__ad_report_ad_id.2d8166e707': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('tiktok_ads__ad_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_tiktok_ads__ad_report_ad_id', 'resource_type': 'test', 'package_name': 'tiktok_ads', 'path': 'not_null_tiktok_ads__ad_report_ad_id.sql', 'original_file_path': 'models\\tiktok_ads.yml', 'unique_id': 'test.tiktok_ads.not_null_tiktok_ads__ad_report_ad_id.2d8166e707', 'fqn': ['tiktok_ads', 'not_null_tiktok_ads__ad_report_ad_id'], 'alias': 'not_null_tiktok_ads__ad_report_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.241036, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['tiktok_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads.tiktok_ads__ad_report']}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.tiktok_ads__ad_report'}, 'test.tiktok_ads.dbt_utils_unique_combination_of_columns_tiktok_ads__ad_report_ad_id__ad_group_id__campaign_id__advertiser_id__date_day.3a887710fb': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'ad_group_id', 'campaign_id', 'advertiser_id', 'date_day'], 'model': "{{ get_where_subquery(ref('tiktok_ads__ad_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_tiktok_ads__ad_report_ad_id__ad_group_id__campaign_id__advertiser_id__date_day', 'resource_type': 'test', 'package_name': 'tiktok_ads', 'path': 'dbt_utils_unique_combination_o_ef4585527dd6080f5f2e4d7aa8408c85.sql', 'original_file_path': 'models\\tiktok_ads.yml', 'unique_id': 'test.tiktok_ads.dbt_utils_unique_combination_of_columns_tiktok_ads__ad_report_ad_id__ad_group_id__campaign_id__advertiser_id__date_day.3a887710fb', 'fqn': ['tiktok_ads', 'dbt_utils_unique_combination_of_columns_tiktok_ads__ad_report_ad_id__ad_group_id__campaign_id__advertiser_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_ef4585527dd6080f5f2e4d7aa8408c85', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_ef4585527dd6080f5f2e4d7aa8408c85', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_ef4585527dd6080f5f2e4d7aa8408c85'}, 'created_at': 1694433487.2420359, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_ef4585527dd6080f5f2e4d7aa8408c85'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_ef4585527dd6080f5f2e4d7aa8408c85") }}', 'language': 'sql', 'refs': [['tiktok_ads__ad_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.tiktok_ads.tiktok_ads__ad_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.tiktok_ads__ad_report'}, 'test.tiktok_ads.not_null_tiktok_ads__ad_group_report_date_day.e39164964e': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('tiktok_ads__ad_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_tiktok_ads__ad_group_report_date_day', 'resource_type': 'test', 'package_name': 'tiktok_ads', 'path': 'not_null_tiktok_ads__ad_group_report_date_day.sql', 'original_file_path': 'models\\tiktok_ads.yml', 'unique_id': 'test.tiktok_ads.not_null_tiktok_ads__ad_group_report_date_day.e39164964e', 'fqn': ['tiktok_ads', 'not_null_tiktok_ads__ad_group_report_date_day'], 'alias': 'not_null_tiktok_ads__ad_group_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.2475424, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['tiktok_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads.tiktok_ads__ad_group_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.tiktok_ads__ad_group_report'}, 'test.tiktok_ads.not_null_tiktok_ads__ad_group_report_ad_group_id.17fb8710f4': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('tiktok_ads__ad_group_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_tiktok_ads__ad_group_report_ad_group_id', 'resource_type': 'test', 'package_name': 'tiktok_ads', 'path': 'not_null_tiktok_ads__ad_group_report_ad_group_id.sql', 'original_file_path': 'models\\tiktok_ads.yml', 'unique_id': 'test.tiktok_ads.not_null_tiktok_ads__ad_group_report_ad_group_id.17fb8710f4', 'fqn': ['tiktok_ads', 'not_null_tiktok_ads__ad_group_report_ad_group_id'], 'alias': 'not_null_tiktok_ads__ad_group_report_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.2485445, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['tiktok_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads.tiktok_ads__ad_group_report']}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.tiktok_ads__ad_group_report'}, 'test.tiktok_ads.dbt_utils_unique_combination_of_columns_tiktok_ads__ad_group_report_ad_group_id__campaign_id__advertiser_id__date_day.ecd611f27e': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_group_id', 'campaign_id', 'advertiser_id', 'date_day'], 'model': "{{ get_where_subquery(ref('tiktok_ads__ad_group_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_tiktok_ads__ad_group_report_ad_group_id__campaign_id__advertiser_id__date_day', 'resource_type': 'test', 'package_name': 'tiktok_ads', 'path': 'dbt_utils_unique_combination_o_61fb67766378fce3f732a5c7a2a8cec0.sql', 'original_file_path': 'models\\tiktok_ads.yml', 'unique_id': 'test.tiktok_ads.dbt_utils_unique_combination_of_columns_tiktok_ads__ad_group_report_ad_group_id__campaign_id__advertiser_id__date_day.ecd611f27e', 'fqn': ['tiktok_ads', 'dbt_utils_unique_combination_of_columns_tiktok_ads__ad_group_report_ad_group_id__campaign_id__advertiser_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_61fb67766378fce3f732a5c7a2a8cec0', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_61fb67766378fce3f732a5c7a2a8cec0', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_61fb67766378fce3f732a5c7a2a8cec0'}, 'created_at': 1694433487.2505465, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_61fb67766378fce3f732a5c7a2a8cec0'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_61fb67766378fce3f732a5c7a2a8cec0") }}', 'language': 'sql', 'refs': [['tiktok_ads__ad_group_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.tiktok_ads.tiktok_ads__ad_group_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.tiktok_ads__ad_group_report'}, 'test.tiktok_ads.not_null_tiktok_ads__campaign_report_date_day.3807b0e836': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('tiktok_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_tiktok_ads__campaign_report_date_day', 'resource_type': 'test', 'package_name': 'tiktok_ads', 'path': 'not_null_tiktok_ads__campaign_report_date_day.sql', 'original_file_path': 'models\\tiktok_ads.yml', 'unique_id': 'test.tiktok_ads.not_null_tiktok_ads__campaign_report_date_day.3807b0e836', 'fqn': ['tiktok_ads', 'not_null_tiktok_ads__campaign_report_date_day'], 'alias': 'not_null_tiktok_ads__campaign_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.2555568, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['tiktok_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads.tiktok_ads__campaign_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.tiktok_ads__campaign_report'}, 'test.tiktok_ads.not_null_tiktok_ads__campaign_report_campaign_id.8a2b0c8ef8': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('tiktok_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_tiktok_ads__campaign_report_campaign_id', 'resource_type': 'test', 'package_name': 'tiktok_ads', 'path': 'not_null_tiktok_ads__campaign_report_campaign_id.sql', 'original_file_path': 'models\\tiktok_ads.yml', 'unique_id': 'test.tiktok_ads.not_null_tiktok_ads__campaign_report_campaign_id.8a2b0c8ef8', 'fqn': ['tiktok_ads', 'not_null_tiktok_ads__campaign_report_campaign_id'], 'alias': 'not_null_tiktok_ads__campaign_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.2571166, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['tiktok_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads.tiktok_ads__campaign_report']}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.tiktok_ads__campaign_report'}, 'test.tiktok_ads.dbt_utils_unique_combination_of_columns_tiktok_ads__campaign_report_campaign_id__advertiser_id__date_day.03c4f86b19': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', 'advertiser_id', 'date_day'], 'model': "{{ get_where_subquery(ref('tiktok_ads__campaign_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_tiktok_ads__campaign_report_campaign_id__advertiser_id__date_day', 'resource_type': 'test', 'package_name': 'tiktok_ads', 'path': 'dbt_utils_unique_combination_o_65ff4fe3d3440b03aa9c35fc3e4bc645.sql', 'original_file_path': 'models\\tiktok_ads.yml', 'unique_id': 'test.tiktok_ads.dbt_utils_unique_combination_of_columns_tiktok_ads__campaign_report_campaign_id__advertiser_id__date_day.03c4f86b19', 'fqn': ['tiktok_ads', 'dbt_utils_unique_combination_of_columns_tiktok_ads__campaign_report_campaign_id__advertiser_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_65ff4fe3d3440b03aa9c35fc3e4bc645', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_65ff4fe3d3440b03aa9c35fc3e4bc645', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_65ff4fe3d3440b03aa9c35fc3e4bc645'}, 'created_at': 1694433487.259119, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_65ff4fe3d3440b03aa9c35fc3e4bc645'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_65ff4fe3d3440b03aa9c35fc3e4bc645") }}', 'language': 'sql', 'refs': [['tiktok_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.tiktok_ads.tiktok_ads__campaign_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.tiktok_ads__campaign_report'}, 'test.tiktok_ads.not_null_tiktok_ads__url_report_date_day.d593573eff': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('tiktok_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_tiktok_ads__url_report_date_day', 'resource_type': 'test', 'package_name': 'tiktok_ads', 'path': 'not_null_tiktok_ads__url_report_date_day.sql', 'original_file_path': 'models\\tiktok_ads.yml', 'unique_id': 'test.tiktok_ads.not_null_tiktok_ads__url_report_date_day.d593573eff', 'fqn': ['tiktok_ads', 'not_null_tiktok_ads__url_report_date_day'], 'alias': 'not_null_tiktok_ads__url_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.2641215, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['tiktok_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads.tiktok_ads__url_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.tiktok_ads__url_report'}, 'test.tiktok_ads.not_null_tiktok_ads__url_report_ad_id.6c41067bd0': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('tiktok_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_tiktok_ads__url_report_ad_id', 'resource_type': 'test', 'package_name': 'tiktok_ads', 'path': 'not_null_tiktok_ads__url_report_ad_id.sql', 'original_file_path': 'models\\tiktok_ads.yml', 'unique_id': 'test.tiktok_ads.not_null_tiktok_ads__url_report_ad_id.6c41067bd0', 'fqn': ['tiktok_ads', 'not_null_tiktok_ads__url_report_ad_id'], 'alias': 'not_null_tiktok_ads__url_report_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.2651207, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['tiktok_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads.tiktok_ads__url_report']}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.tiktok_ads__url_report'}, 'test.tiktok_ads.not_null_tiktok_ads__url_report_base_url.37afef2e1b': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'base_url', 'model': "{{ get_where_subquery(ref('tiktok_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_tiktok_ads__url_report_base_url', 'resource_type': 'test', 'package_name': 'tiktok_ads', 'path': 'not_null_tiktok_ads__url_report_base_url.sql', 'original_file_path': 'models\\tiktok_ads.yml', 'unique_id': 'test.tiktok_ads.not_null_tiktok_ads__url_report_base_url.37afef2e1b', 'fqn': ['tiktok_ads', 'not_null_tiktok_ads__url_report_base_url'], 'alias': 'not_null_tiktok_ads__url_report_base_url', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True}, 'created_at': 1694433487.2676268, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(enabled=True) }}', 'language': 'sql', 'refs': [['tiktok_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads.tiktok_ads__url_report']}, 'compiled_path': None, 'column_name': 'base_url', 'file_key_name': 'models.tiktok_ads__url_report'}, 'test.tiktok_ads.dbt_utils_unique_combination_of_columns_tiktok_ads__url_report_ad_id__ad_group_id__campaign_id__advertiser_id__date_day.cf95489e47': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'ad_group_id', 'campaign_id', 'advertiser_id', 'date_day'], 'model': "{{ get_where_subquery(ref('tiktok_ads__url_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_tiktok_ads__url_report_ad_id__ad_group_id__campaign_id__advertiser_id__date_day', 'resource_type': 'test', 'package_name': 'tiktok_ads', 'path': 'dbt_utils_unique_combination_o_1cddc99c1bc045b4142e991924c5fa50.sql', 'original_file_path': 'models\\tiktok_ads.yml', 'unique_id': 'test.tiktok_ads.dbt_utils_unique_combination_of_columns_tiktok_ads__url_report_ad_id__ad_group_id__campaign_id__advertiser_id__date_day.cf95489e47', 'fqn': ['tiktok_ads', 'dbt_utils_unique_combination_of_columns_tiktok_ads__url_report_ad_id__ad_group_id__campaign_id__advertiser_id__date_day'], 'alias': 'dbt_utils_unique_combination_o_1cddc99c1bc045b4142e991924c5fa50', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_1cddc99c1bc045b4142e991924c5fa50', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_1cddc99c1bc045b4142e991924c5fa50'}, 'created_at': 1694433487.270631, 'config_call_dict': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_1cddc99c1bc045b4142e991924c5fa50'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(enabled=True,alias="dbt_utils_unique_combination_o_1cddc99c1bc045b4142e991924c5fa50") }}', 'language': 'sql', 'refs': [['tiktok_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.tiktok_ads.tiktok_ads__url_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.tiktok_ads__url_report'}, 'test.tiktok_ads_source.unique_stg_tiktok_ads__advertiser_advertiser_id.078391ba66': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'advertiser_id', 'model': "{{ get_where_subquery(ref('stg_tiktok_ads__advertiser')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'unique_stg_tiktok_ads__advertiser_advertiser_id', 'resource_type': 'test', 'package_name': 'tiktok_ads_source', 'path': 'unique_stg_tiktok_ads__advertiser_advertiser_id.sql', 'original_file_path': 'models\\stg_tiktok_ads.yml', 'unique_id': 'test.tiktok_ads_source.unique_stg_tiktok_ads__advertiser_advertiser_id.078391ba66', 'fqn': ['tiktok_ads_source', 'unique_stg_tiktok_ads__advertiser_advertiser_id'], 'alias': 'unique_stg_tiktok_ads__advertiser_advertiser_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.3931904, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_tiktok_ads__advertiser']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__advertiser']}, 'compiled_path': None, 'column_name': 'advertiser_id', 'file_key_name': 'models.stg_tiktok_ads__advertiser'}, 'test.tiktok_ads_source.not_null_stg_tiktok_ads__advertiser_advertiser_id.5deab92def': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'advertiser_id', 'model': "{{ get_where_subquery(ref('stg_tiktok_ads__advertiser')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_tiktok_ads__advertiser_advertiser_id', 'resource_type': 'test', 'package_name': 'tiktok_ads_source', 'path': 'not_null_stg_tiktok_ads__advertiser_advertiser_id.sql', 'original_file_path': 'models\\stg_tiktok_ads.yml', 'unique_id': 'test.tiktok_ads_source.not_null_stg_tiktok_ads__advertiser_advertiser_id.5deab92def', 'fqn': ['tiktok_ads_source', 'not_null_stg_tiktok_ads__advertiser_advertiser_id'], 'alias': 'not_null_stg_tiktok_ads__advertiser_advertiser_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.3961916, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_tiktok_ads__advertiser']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__advertiser']}, 'compiled_path': None, 'column_name': 'advertiser_id', 'file_key_name': 'models.stg_tiktok_ads__advertiser'}, 'test.tiktok_ads_source.not_null_stg_tiktok_ads__ad_group_history_ad_group_id.04778d7fad': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('stg_tiktok_ads__ad_group_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_tiktok_ads__ad_group_history_ad_group_id', 'resource_type': 'test', 'package_name': 'tiktok_ads_source', 'path': 'not_null_stg_tiktok_ads__ad_group_history_ad_group_id.sql', 'original_file_path': 'models\\stg_tiktok_ads.yml', 'unique_id': 'test.tiktok_ads_source.not_null_stg_tiktok_ads__ad_group_history_ad_group_id.04778d7fad', 'fqn': ['tiktok_ads_source', 'not_null_stg_tiktok_ads__ad_group_history_ad_group_id'], 'alias': 'not_null_stg_tiktok_ads__ad_group_history_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.3986988, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_group_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_group_history']}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.stg_tiktok_ads__ad_group_history'}, 'test.tiktok_ads_source.dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_group_history_ad_group_id__updated_at.cec78c01de': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_group_id', 'updated_at'], 'model': "{{ get_where_subquery(ref('stg_tiktok_ads__ad_group_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_group_history_ad_group_id__updated_at', 'resource_type': 'test', 'package_name': 'tiktok_ads_source', 'path': 'dbt_utils_unique_combination_o_353c130a41ba5d6aab13dbda36b226c8.sql', 'original_file_path': 'models\\stg_tiktok_ads.yml', 'unique_id': 'test.tiktok_ads_source.dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_group_history_ad_group_id__updated_at.cec78c01de', 'fqn': ['tiktok_ads_source', 'dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_group_history_ad_group_id__updated_at'], 'alias': 'dbt_utils_unique_combination_o_353c130a41ba5d6aab13dbda36b226c8', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_353c130a41ba5d6aab13dbda36b226c8', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_353c130a41ba5d6aab13dbda36b226c8'}, 'created_at': 1694433487.399702, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_353c130a41ba5d6aab13dbda36b226c8'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_353c130a41ba5d6aab13dbda36b226c8") }}', 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_group_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_group_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_tiktok_ads__ad_group_history'}, 'test.tiktok_ads_source.not_null_stg_tiktok_ads__ad_history_ad_id.4ffd05b23a': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('stg_tiktok_ads__ad_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_tiktok_ads__ad_history_ad_id', 'resource_type': 'test', 'package_name': 'tiktok_ads_source', 'path': 'not_null_stg_tiktok_ads__ad_history_ad_id.sql', 'original_file_path': 'models\\stg_tiktok_ads.yml', 'unique_id': 'test.tiktok_ads_source.not_null_stg_tiktok_ads__ad_history_ad_id.4ffd05b23a', 'fqn': ['tiktok_ads_source', 'not_null_stg_tiktok_ads__ad_history_ad_id'], 'alias': 'not_null_stg_tiktok_ads__ad_history_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.404702, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_history']}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.stg_tiktok_ads__ad_history'}, 'test.tiktok_ads_source.dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_history_ad_id__updated_at.66b86b4dd1': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'updated_at'], 'model': "{{ get_where_subquery(ref('stg_tiktok_ads__ad_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_history_ad_id__updated_at', 'resource_type': 'test', 'package_name': 'tiktok_ads_source', 'path': 'dbt_utils_unique_combination_o_fe2e43690b07f6a6cbd499af54b7738f.sql', 'original_file_path': 'models\\stg_tiktok_ads.yml', 'unique_id': 'test.tiktok_ads_source.dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_history_ad_id__updated_at.66b86b4dd1', 'fqn': ['tiktok_ads_source', 'dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_history_ad_id__updated_at'], 'alias': 'dbt_utils_unique_combination_o_fe2e43690b07f6a6cbd499af54b7738f', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_fe2e43690b07f6a6cbd499af54b7738f', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_fe2e43690b07f6a6cbd499af54b7738f'}, 'created_at': 1694433487.4057016, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_fe2e43690b07f6a6cbd499af54b7738f'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_fe2e43690b07f6a6cbd499af54b7738f") }}', 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_tiktok_ads__ad_history'}, 'test.tiktok_ads_source.not_null_stg_tiktok_ads__campaign_history_campaign_id.7f9147d1e1': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_tiktok_ads__campaign_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_tiktok_ads__campaign_history_campaign_id', 'resource_type': 'test', 'package_name': 'tiktok_ads_source', 'path': 'not_null_stg_tiktok_ads__campaign_history_campaign_id.sql', 'original_file_path': 'models\\stg_tiktok_ads.yml', 'unique_id': 'test.tiktok_ads_source.not_null_stg_tiktok_ads__campaign_history_campaign_id.7f9147d1e1', 'fqn': ['tiktok_ads_source', 'not_null_stg_tiktok_ads__campaign_history_campaign_id'], 'alias': 'not_null_stg_tiktok_ads__campaign_history_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.4102435, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_tiktok_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__campaign_history']}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_tiktok_ads__campaign_history'}, 'test.tiktok_ads_source.dbt_utils_unique_combination_of_columns_stg_tiktok_ads__campaign_history_campaign_id__updated_at.72bf07011b': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', 'updated_at'], 'model': "{{ get_where_subquery(ref('stg_tiktok_ads__campaign_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_tiktok_ads__campaign_history_campaign_id__updated_at', 'resource_type': 'test', 'package_name': 'tiktok_ads_source', 'path': 'dbt_utils_unique_combination_o_843ebfc08785d00a296625f469aa2000.sql', 'original_file_path': 'models\\stg_tiktok_ads.yml', 'unique_id': 'test.tiktok_ads_source.dbt_utils_unique_combination_of_columns_stg_tiktok_ads__campaign_history_campaign_id__updated_at.72bf07011b', 'fqn': ['tiktok_ads_source', 'dbt_utils_unique_combination_of_columns_stg_tiktok_ads__campaign_history_campaign_id__updated_at'], 'alias': 'dbt_utils_unique_combination_o_843ebfc08785d00a296625f469aa2000', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_843ebfc08785d00a296625f469aa2000', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_843ebfc08785d00a296625f469aa2000'}, 'created_at': 1694433487.41226, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_843ebfc08785d00a296625f469aa2000'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_843ebfc08785d00a296625f469aa2000") }}', 'language': 'sql', 'refs': [['stg_tiktok_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__campaign_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_tiktok_ads__campaign_history'}, 'test.tiktok_ads_source.not_null_stg_tiktok_ads__ad_report_hourly_ad_id.ee84d783ed': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_id', 'model': "{{ get_where_subquery(ref('stg_tiktok_ads__ad_report_hourly')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_tiktok_ads__ad_report_hourly_ad_id', 'resource_type': 'test', 'package_name': 'tiktok_ads_source', 'path': 'not_null_stg_tiktok_ads__ad_report_hourly_ad_id.sql', 'original_file_path': 'models\\stg_tiktok_ads.yml', 'unique_id': 'test.tiktok_ads_source.not_null_stg_tiktok_ads__ad_report_hourly_ad_id.ee84d783ed', 'fqn': ['tiktok_ads_source', 'not_null_stg_tiktok_ads__ad_report_hourly_ad_id'], 'alias': 'not_null_stg_tiktok_ads__ad_report_hourly_ad_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.417249, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_report_hourly']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly']}, 'compiled_path': None, 'column_name': 'ad_id', 'file_key_name': 'models.stg_tiktok_ads__ad_report_hourly'}, 'test.tiktok_ads_source.not_null_stg_tiktok_ads__ad_report_hourly_stat_time_hour.9e2a2dca81': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'stat_time_hour', 'model': "{{ get_where_subquery(ref('stg_tiktok_ads__ad_report_hourly')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_tiktok_ads__ad_report_hourly_stat_time_hour', 'resource_type': 'test', 'package_name': 'tiktok_ads_source', 'path': 'not_null_stg_tiktok_ads__ad_report_hourly_stat_time_hour.sql', 'original_file_path': 'models\\stg_tiktok_ads.yml', 'unique_id': 'test.tiktok_ads_source.not_null_stg_tiktok_ads__ad_report_hourly_stat_time_hour.9e2a2dca81', 'fqn': ['tiktok_ads_source', 'not_null_stg_tiktok_ads__ad_report_hourly_stat_time_hour'], 'alias': 'not_null_stg_tiktok_ads__ad_report_hourly_stat_time_hour', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.418756, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_report_hourly']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly']}, 'compiled_path': None, 'column_name': 'stat_time_hour', 'file_key_name': 'models.stg_tiktok_ads__ad_report_hourly'}, 'test.tiktok_ads_source.dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_report_hourly_ad_id__stat_time_hour.e70f8cef6d': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_id', 'stat_time_hour'], 'model': "{{ get_where_subquery(ref('stg_tiktok_ads__ad_report_hourly')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_report_hourly_ad_id__stat_time_hour', 'resource_type': 'test', 'package_name': 'tiktok_ads_source', 'path': 'dbt_utils_unique_combination_o_e6913172297a173fb855f92cf72b08dc.sql', 'original_file_path': 'models\\stg_tiktok_ads.yml', 'unique_id': 'test.tiktok_ads_source.dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_report_hourly_ad_id__stat_time_hour.e70f8cef6d', 'fqn': ['tiktok_ads_source', 'dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_report_hourly_ad_id__stat_time_hour'], 'alias': 'dbt_utils_unique_combination_o_e6913172297a173fb855f92cf72b08dc', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_e6913172297a173fb855f92cf72b08dc', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_e6913172297a173fb855f92cf72b08dc'}, 'created_at': 1694433487.420758, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_e6913172297a173fb855f92cf72b08dc'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_e6913172297a173fb855f92cf72b08dc") }}', 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_report_hourly']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_tiktok_ads__ad_report_hourly'}, 'test.tiktok_ads_source.not_null_stg_tiktok_ads__ad_group_report_hourly_ad_group_id.8da17119f1': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'ad_group_id', 'model': "{{ get_where_subquery(ref('stg_tiktok_ads__ad_group_report_hourly')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_tiktok_ads__ad_group_report_hourly_ad_group_id', 'resource_type': 'test', 'package_name': 'tiktok_ads_source', 'path': 'not_null_stg_tiktok_ads__ad_group_report_hourly_ad_group_id.sql', 'original_file_path': 'models\\stg_tiktok_ads.yml', 'unique_id': 'test.tiktok_ads_source.not_null_stg_tiktok_ads__ad_group_report_hourly_ad_group_id.8da17119f1', 'fqn': ['tiktok_ads_source', 'not_null_stg_tiktok_ads__ad_group_report_hourly_ad_group_id'], 'alias': 'not_null_stg_tiktok_ads__ad_group_report_hourly_ad_group_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.4247584, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_group_report_hourly']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly']}, 'compiled_path': None, 'column_name': 'ad_group_id', 'file_key_name': 'models.stg_tiktok_ads__ad_group_report_hourly'}, 'test.tiktok_ads_source.not_null_stg_tiktok_ads__ad_group_report_hourly_stat_time_hour.ca4b495127': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'stat_time_hour', 'model': "{{ get_where_subquery(ref('stg_tiktok_ads__ad_group_report_hourly')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_tiktok_ads__ad_group_report_hourly_stat_time_hour', 'resource_type': 'test', 'package_name': 'tiktok_ads_source', 'path': 'not_null_stg_tiktok_ads__ad_group_report_hourly_stat_time_hour.sql', 'original_file_path': 'models\\stg_tiktok_ads.yml', 'unique_id': 'test.tiktok_ads_source.not_null_stg_tiktok_ads__ad_group_report_hourly_stat_time_hour.ca4b495127', 'fqn': ['tiktok_ads_source', 'not_null_stg_tiktok_ads__ad_group_report_hourly_stat_time_hour'], 'alias': 'not_null_stg_tiktok_ads__ad_group_report_hourly_stat_time_hour', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.4257581, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_group_report_hourly']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly']}, 'compiled_path': None, 'column_name': 'stat_time_hour', 'file_key_name': 'models.stg_tiktok_ads__ad_group_report_hourly'}, 'test.tiktok_ads_source.dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_group_report_hourly_ad_group_id__stat_time_hour.1aeaeb71ad': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['ad_group_id', 'stat_time_hour'], 'model': "{{ get_where_subquery(ref('stg_tiktok_ads__ad_group_report_hourly')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_group_report_hourly_ad_group_id__stat_time_hour', 'resource_type': 'test', 'package_name': 'tiktok_ads_source', 'path': 'dbt_utils_unique_combination_o_b8146651452c0bd776f5ad7184463e60.sql', 'original_file_path': 'models\\stg_tiktok_ads.yml', 'unique_id': 'test.tiktok_ads_source.dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_group_report_hourly_ad_group_id__stat_time_hour.1aeaeb71ad', 'fqn': ['tiktok_ads_source', 'dbt_utils_unique_combination_of_columns_stg_tiktok_ads__ad_group_report_hourly_ad_group_id__stat_time_hour'], 'alias': 'dbt_utils_unique_combination_o_b8146651452c0bd776f5ad7184463e60', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_b8146651452c0bd776f5ad7184463e60', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_b8146651452c0bd776f5ad7184463e60'}, 'created_at': 1694433487.4283385, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_b8146651452c0bd776f5ad7184463e60'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_b8146651452c0bd776f5ad7184463e60") }}', 'language': 'sql', 'refs': [['stg_tiktok_ads__ad_group_report_hourly']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_tiktok_ads__ad_group_report_hourly'}, 'test.tiktok_ads_source.not_null_stg_tiktok_ads__campaign_report_hourly_campaign_id.ef898379fb': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_tiktok_ads__campaign_report_hourly')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_tiktok_ads__campaign_report_hourly_campaign_id', 'resource_type': 'test', 'package_name': 'tiktok_ads_source', 'path': 'not_null_stg_tiktok_ads__campaign_report_hourly_campaign_id.sql', 'original_file_path': 'models\\stg_tiktok_ads.yml', 'unique_id': 'test.tiktok_ads_source.not_null_stg_tiktok_ads__campaign_report_hourly_campaign_id.ef898379fb', 'fqn': ['tiktok_ads_source', 'not_null_stg_tiktok_ads__campaign_report_hourly_campaign_id'], 'alias': 'not_null_stg_tiktok_ads__campaign_report_hourly_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.4323416, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_tiktok_ads__campaign_report_hourly']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly']}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_tiktok_ads__campaign_report_hourly'}, 'test.tiktok_ads_source.not_null_stg_tiktok_ads__campaign_report_hourly_stat_time_hour.e75e13184c': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'stat_time_hour', 'model': "{{ get_where_subquery(ref('stg_tiktok_ads__campaign_report_hourly')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_tiktok_ads__campaign_report_hourly_stat_time_hour', 'resource_type': 'test', 'package_name': 'tiktok_ads_source', 'path': 'not_null_stg_tiktok_ads__campaign_report_hourly_stat_time_hour.sql', 'original_file_path': 'models\\stg_tiktok_ads.yml', 'unique_id': 'test.tiktok_ads_source.not_null_stg_tiktok_ads__campaign_report_hourly_stat_time_hour.e75e13184c', 'fqn': ['tiktok_ads_source', 'not_null_stg_tiktok_ads__campaign_report_hourly_stat_time_hour'], 'alias': 'not_null_stg_tiktok_ads__campaign_report_hourly_stat_time_hour', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.4343412, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_tiktok_ads__campaign_report_hourly']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly']}, 'compiled_path': None, 'column_name': 'stat_time_hour', 'file_key_name': 'models.stg_tiktok_ads__campaign_report_hourly'}, 'test.tiktok_ads_source.dbt_utils_unique_combination_of_columns_stg_tiktok_ads__campaign_report_hourly_campaign_id__stat_time_hour.8e4a1e4b34': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', 'stat_time_hour'], 'model': "{{ get_where_subquery(ref('stg_tiktok_ads__campaign_report_hourly')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_tiktok_ads__campaign_report_hourly_campaign_id__stat_time_hour', 'resource_type': 'test', 'package_name': 'tiktok_ads_source', 'path': 'dbt_utils_unique_combination_o_28d20c1f14a23926a21e229d68eb6b16.sql', 'original_file_path': 'models\\stg_tiktok_ads.yml', 'unique_id': 'test.tiktok_ads_source.dbt_utils_unique_combination_of_columns_stg_tiktok_ads__campaign_report_hourly_campaign_id__stat_time_hour.8e4a1e4b34', 'fqn': ['tiktok_ads_source', 'dbt_utils_unique_combination_of_columns_stg_tiktok_ads__campaign_report_hourly_campaign_id__stat_time_hour'], 'alias': 'dbt_utils_unique_combination_o_28d20c1f14a23926a21e229d68eb6b16', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_28d20c1f14a23926a21e229d68eb6b16', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_28d20c1f14a23926a21e229d68eb6b16'}, 'created_at': 1694433487.4353411, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_28d20c1f14a23926a21e229d68eb6b16'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_28d20c1f14a23926a21e229d68eb6b16") }}', 'language': 'sql', 'refs': [['stg_tiktok_ads__campaign_report_hourly']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_tiktok_ads__campaign_report_hourly'}, 'test.twitter_ads.not_null_twitter_ads__campaign_report_campaign_id.03b1c451b8': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('twitter_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_twitter_ads__campaign_report_campaign_id', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'not_null_twitter_ads__campaign_report_campaign_id.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.not_null_twitter_ads__campaign_report_campaign_id.03b1c451b8', 'fqn': ['twitter_ads', 'not_null_twitter_ads__campaign_report_campaign_id'], 'alias': 'not_null_twitter_ads__campaign_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.5587184, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['twitter_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads.twitter_ads__campaign_report']}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.twitter_ads__campaign_report'}, 'test.twitter_ads.not_null_twitter_ads__campaign_report_date_day.2b30b279b0': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('twitter_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_twitter_ads__campaign_report_date_day', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'not_null_twitter_ads__campaign_report_date_day.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.not_null_twitter_ads__campaign_report_date_day.2b30b279b0', 'fqn': ['twitter_ads', 'not_null_twitter_ads__campaign_report_date_day'], 'alias': 'not_null_twitter_ads__campaign_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.5597985, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['twitter_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads.twitter_ads__campaign_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.twitter_ads__campaign_report'}, 'test.twitter_ads.not_null_twitter_ads__campaign_report_placement.c66d252e82': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'placement', 'model': "{{ get_where_subquery(ref('twitter_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_twitter_ads__campaign_report_placement', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'not_null_twitter_ads__campaign_report_placement.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.not_null_twitter_ads__campaign_report_placement.c66d252e82', 'fqn': ['twitter_ads', 'not_null_twitter_ads__campaign_report_placement'], 'alias': 'not_null_twitter_ads__campaign_report_placement', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.561883, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['twitter_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads.twitter_ads__campaign_report']}, 'compiled_path': None, 'column_name': 'placement', 'file_key_name': 'models.twitter_ads__campaign_report'}, 'test.twitter_ads.dbt_utils_unique_combination_of_columns_twitter_ads__campaign_report_date_day__campaign_id__placement__account_id.2b09fa5421': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'campaign_id', 'placement', 'account_id'], 'model': "{{ get_where_subquery(ref('twitter_ads__campaign_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_twitter_ads__campaign_report_date_day__campaign_id__placement__account_id', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'dbt_utils_unique_combination_o_f0c2d7aacdea4290554fab175e962a63.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.dbt_utils_unique_combination_of_columns_twitter_ads__campaign_report_date_day__campaign_id__placement__account_id.2b09fa5421', 'fqn': ['twitter_ads', 'dbt_utils_unique_combination_of_columns_twitter_ads__campaign_report_date_day__campaign_id__placement__account_id'], 'alias': 'dbt_utils_unique_combination_o_f0c2d7aacdea4290554fab175e962a63', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_f0c2d7aacdea4290554fab175e962a63', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_f0c2d7aacdea4290554fab175e962a63'}, 'created_at': 1694433487.5628881, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_f0c2d7aacdea4290554fab175e962a63'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_f0c2d7aacdea4290554fab175e962a63") }}', 'language': 'sql', 'refs': [['twitter_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.twitter_ads.twitter_ads__campaign_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.twitter_ads__campaign_report'}, 'test.twitter_ads.not_null_twitter_ads__line_item_report_date_day.86c934e8ce': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('twitter_ads__line_item_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_twitter_ads__line_item_report_date_day', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'not_null_twitter_ads__line_item_report_date_day.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.not_null_twitter_ads__line_item_report_date_day.86c934e8ce', 'fqn': ['twitter_ads', 'not_null_twitter_ads__line_item_report_date_day'], 'alias': 'not_null_twitter_ads__line_item_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.5689535, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['twitter_ads__line_item_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads.twitter_ads__line_item_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.twitter_ads__line_item_report'}, 'test.twitter_ads.not_null_twitter_ads__line_item_report_line_item_id.0462d58211': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'line_item_id', 'model': "{{ get_where_subquery(ref('twitter_ads__line_item_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_twitter_ads__line_item_report_line_item_id', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'not_null_twitter_ads__line_item_report_line_item_id.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.not_null_twitter_ads__line_item_report_line_item_id.0462d58211', 'fqn': ['twitter_ads', 'not_null_twitter_ads__line_item_report_line_item_id'], 'alias': 'not_null_twitter_ads__line_item_report_line_item_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.5710442, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['twitter_ads__line_item_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads.twitter_ads__line_item_report']}, 'compiled_path': None, 'column_name': 'line_item_id', 'file_key_name': 'models.twitter_ads__line_item_report'}, 'test.twitter_ads.not_null_twitter_ads__line_item_report_placement.f103369312': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'placement', 'model': "{{ get_where_subquery(ref('twitter_ads__line_item_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_twitter_ads__line_item_report_placement', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'not_null_twitter_ads__line_item_report_placement.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.not_null_twitter_ads__line_item_report_placement.f103369312', 'fqn': ['twitter_ads', 'not_null_twitter_ads__line_item_report_placement'], 'alias': 'not_null_twitter_ads__line_item_report_placement', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.5729668, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['twitter_ads__line_item_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads.twitter_ads__line_item_report']}, 'compiled_path': None, 'column_name': 'placement', 'file_key_name': 'models.twitter_ads__line_item_report'}, 'test.twitter_ads.dbt_utils_unique_combination_of_columns_twitter_ads__line_item_report_date_day__line_item_id__placement__campaign_id__account_id.0e972e010a': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'line_item_id', 'placement', 'campaign_id', 'account_id'], 'model': "{{ get_where_subquery(ref('twitter_ads__line_item_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_twitter_ads__line_item_report_date_day__line_item_id__placement__campaign_id__account_id', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'dbt_utils_unique_combination_o_fe15946b61e393e614a50ba3e361c168.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.dbt_utils_unique_combination_of_columns_twitter_ads__line_item_report_date_day__line_item_id__placement__campaign_id__account_id.0e972e010a', 'fqn': ['twitter_ads', 'dbt_utils_unique_combination_of_columns_twitter_ads__line_item_report_date_day__line_item_id__placement__campaign_id__account_id'], 'alias': 'dbt_utils_unique_combination_o_fe15946b61e393e614a50ba3e361c168', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_fe15946b61e393e614a50ba3e361c168', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_fe15946b61e393e614a50ba3e361c168'}, 'created_at': 1694433487.5739658, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_fe15946b61e393e614a50ba3e361c168'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_fe15946b61e393e614a50ba3e361c168") }}', 'language': 'sql', 'refs': [['twitter_ads__line_item_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.twitter_ads.twitter_ads__line_item_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.twitter_ads__line_item_report'}, 'test.twitter_ads.not_null_twitter_ads__account_report_date_day.84896c5846': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('twitter_ads__account_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_twitter_ads__account_report_date_day', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'not_null_twitter_ads__account_report_date_day.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.not_null_twitter_ads__account_report_date_day.84896c5846', 'fqn': ['twitter_ads', 'not_null_twitter_ads__account_report_date_day'], 'alias': 'not_null_twitter_ads__account_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.579711, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['twitter_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads.twitter_ads__account_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.twitter_ads__account_report'}, 'test.twitter_ads.not_null_twitter_ads__account_report_placement.157dcb6194': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'placement', 'model': "{{ get_where_subquery(ref('twitter_ads__account_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_twitter_ads__account_report_placement', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'not_null_twitter_ads__account_report_placement.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.not_null_twitter_ads__account_report_placement.157dcb6194', 'fqn': ['twitter_ads', 'not_null_twitter_ads__account_report_placement'], 'alias': 'not_null_twitter_ads__account_report_placement', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.580709, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['twitter_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads.twitter_ads__account_report']}, 'compiled_path': None, 'column_name': 'placement', 'file_key_name': 'models.twitter_ads__account_report'}, 'test.twitter_ads.not_null_twitter_ads__account_report_account_id.90d5808908': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('twitter_ads__account_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_twitter_ads__account_report_account_id', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'not_null_twitter_ads__account_report_account_id.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.not_null_twitter_ads__account_report_account_id.90d5808908', 'fqn': ['twitter_ads', 'not_null_twitter_ads__account_report_account_id'], 'alias': 'not_null_twitter_ads__account_report_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.58247, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['twitter_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads.twitter_ads__account_report']}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.twitter_ads__account_report'}, 'test.twitter_ads.dbt_utils_unique_combination_of_columns_twitter_ads__account_report_date_day__account_id__placement.a29cf85a4f': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'account_id', 'placement'], 'model': "{{ get_where_subquery(ref('twitter_ads__account_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_twitter_ads__account_report_date_day__account_id__placement', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'dbt_utils_unique_combination_o_75283810b353bfd3176c68c506c1da2f.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.dbt_utils_unique_combination_of_columns_twitter_ads__account_report_date_day__account_id__placement.a29cf85a4f', 'fqn': ['twitter_ads', 'dbt_utils_unique_combination_of_columns_twitter_ads__account_report_date_day__account_id__placement'], 'alias': 'dbt_utils_unique_combination_o_75283810b353bfd3176c68c506c1da2f', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_75283810b353bfd3176c68c506c1da2f', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_75283810b353bfd3176c68c506c1da2f'}, 'created_at': 1694433487.5845408, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_75283810b353bfd3176c68c506c1da2f'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_75283810b353bfd3176c68c506c1da2f") }}', 'language': 'sql', 'refs': [['twitter_ads__account_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.twitter_ads.twitter_ads__account_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.twitter_ads__account_report'}, 'test.twitter_ads.not_null_twitter_ads__keyword_report_date_day.e0ce90c1ec': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('twitter_ads__keyword_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_twitter_ads__keyword_report_date_day', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'not_null_twitter_ads__keyword_report_date_day.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.not_null_twitter_ads__keyword_report_date_day.e0ce90c1ec', 'fqn': ['twitter_ads', 'not_null_twitter_ads__keyword_report_date_day'], 'alias': 'not_null_twitter_ads__keyword_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.590091, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['twitter_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads.twitter_ads__keyword_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.twitter_ads__keyword_report'}, 'test.twitter_ads.not_null_twitter_ads__keyword_report_keyword_id.91efa0a538': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'keyword_id', 'model': "{{ get_where_subquery(ref('twitter_ads__keyword_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_twitter_ads__keyword_report_keyword_id', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'not_null_twitter_ads__keyword_report_keyword_id.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.not_null_twitter_ads__keyword_report_keyword_id.91efa0a538', 'fqn': ['twitter_ads', 'not_null_twitter_ads__keyword_report_keyword_id'], 'alias': 'not_null_twitter_ads__keyword_report_keyword_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.5910907, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['twitter_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads.twitter_ads__keyword_report']}, 'compiled_path': None, 'column_name': 'keyword_id', 'file_key_name': 'models.twitter_ads__keyword_report'}, 'test.twitter_ads.dbt_utils_unique_combination_of_columns_twitter_ads__keyword_report_date_day__keyword_id__campaign_id.bb43190c39': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'keyword_id', 'campaign_id'], 'model': "{{ get_where_subquery(ref('twitter_ads__keyword_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_twitter_ads__keyword_report_date_day__keyword_id__campaign_id', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'dbt_utils_unique_combination_o_5dd02ea4aea03fbc902c8987427642b1.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.dbt_utils_unique_combination_of_columns_twitter_ads__keyword_report_date_day__keyword_id__campaign_id.bb43190c39', 'fqn': ['twitter_ads', 'dbt_utils_unique_combination_of_columns_twitter_ads__keyword_report_date_day__keyword_id__campaign_id'], 'alias': 'dbt_utils_unique_combination_o_5dd02ea4aea03fbc902c8987427642b1', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_5dd02ea4aea03fbc902c8987427642b1', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_5dd02ea4aea03fbc902c8987427642b1'}, 'created_at': 1694433487.5930908, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_5dd02ea4aea03fbc902c8987427642b1'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_5dd02ea4aea03fbc902c8987427642b1") }}', 'language': 'sql', 'refs': [['twitter_ads__keyword_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.twitter_ads.twitter_ads__keyword_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.twitter_ads__keyword_report'}, 'test.twitter_ads.not_null_twitter_ads__promoted_tweet_report_placement.d89c9b27e5': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'placement', 'model': "{{ get_where_subquery(ref('twitter_ads__promoted_tweet_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_twitter_ads__promoted_tweet_report_placement', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'not_null_twitter_ads__promoted_tweet_report_placement.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.not_null_twitter_ads__promoted_tweet_report_placement.d89c9b27e5', 'fqn': ['twitter_ads', 'not_null_twitter_ads__promoted_tweet_report_placement'], 'alias': 'not_null_twitter_ads__promoted_tweet_report_placement', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.5975962, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['twitter_ads__promoted_tweet_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads.twitter_ads__promoted_tweet_report']}, 'compiled_path': None, 'column_name': 'placement', 'file_key_name': 'models.twitter_ads__promoted_tweet_report'}, 'test.twitter_ads.not_null_twitter_ads__promoted_tweet_report_promoted_tweet_id.5df08e154e': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'promoted_tweet_id', 'model': "{{ get_where_subquery(ref('twitter_ads__promoted_tweet_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_twitter_ads__promoted_tweet_report_promoted_tweet_id', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'not_null_twitter_ads__promoted_tweet_report_promoted_tweet_id.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.not_null_twitter_ads__promoted_tweet_report_promoted_tweet_id.5df08e154e', 'fqn': ['twitter_ads', 'not_null_twitter_ads__promoted_tweet_report_promoted_tweet_id'], 'alias': 'not_null_twitter_ads__promoted_tweet_report_promoted_tweet_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.5996, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['twitter_ads__promoted_tweet_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads.twitter_ads__promoted_tweet_report']}, 'compiled_path': None, 'column_name': 'promoted_tweet_id', 'file_key_name': 'models.twitter_ads__promoted_tweet_report'}, 'test.twitter_ads.dbt_utils_unique_combination_of_columns_twitter_ads__promoted_tweet_report_date_day__promoted_tweet_id__placement__line_item_id__campaign_id__account_id.a46b1b4082': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'promoted_tweet_id', 'placement', 'line_item_id', 'campaign_id', 'account_id'], 'model': "{{ get_where_subquery(ref('twitter_ads__promoted_tweet_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_twitter_ads__promoted_tweet_report_date_day__promoted_tweet_id__placement__line_item_id__campaign_id__account_id', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'dbt_utils_unique_combination_o_b6b8c6a3d568e7fb95f74b1851950fe1.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.dbt_utils_unique_combination_of_columns_twitter_ads__promoted_tweet_report_date_day__promoted_tweet_id__placement__line_item_id__campaign_id__account_id.a46b1b4082', 'fqn': ['twitter_ads', 'dbt_utils_unique_combination_of_columns_twitter_ads__promoted_tweet_report_date_day__promoted_tweet_id__placement__line_item_id__campaign_id__account_id'], 'alias': 'dbt_utils_unique_combination_o_b6b8c6a3d568e7fb95f74b1851950fe1', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_b6b8c6a3d568e7fb95f74b1851950fe1', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_b6b8c6a3d568e7fb95f74b1851950fe1'}, 'created_at': 1694433487.6006002, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_b6b8c6a3d568e7fb95f74b1851950fe1'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_b6b8c6a3d568e7fb95f74b1851950fe1") }}', 'language': 'sql', 'refs': [['twitter_ads__promoted_tweet_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.twitter_ads.twitter_ads__promoted_tweet_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.twitter_ads__promoted_tweet_report'}, 'test.twitter_ads.not_null_twitter_ads__url_report_date_day.33fcb7e04b': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('twitter_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_twitter_ads__url_report_date_day', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'not_null_twitter_ads__url_report_date_day.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.not_null_twitter_ads__url_report_date_day.33fcb7e04b', 'fqn': ['twitter_ads', 'not_null_twitter_ads__url_report_date_day'], 'alias': 'not_null_twitter_ads__url_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.6056004, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['twitter_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads.twitter_ads__url_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.twitter_ads__url_report'}, 'test.twitter_ads.not_null_twitter_ads__url_report_placement.92ca3b192e': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'placement', 'model': "{{ get_where_subquery(ref('twitter_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_twitter_ads__url_report_placement', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'not_null_twitter_ads__url_report_placement.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.not_null_twitter_ads__url_report_placement.92ca3b192e', 'fqn': ['twitter_ads', 'not_null_twitter_ads__url_report_placement'], 'alias': 'not_null_twitter_ads__url_report_placement', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.60818, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['twitter_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads.twitter_ads__url_report']}, 'compiled_path': None, 'column_name': 'placement', 'file_key_name': 'models.twitter_ads__url_report'}, 'test.twitter_ads.not_null_twitter_ads__url_report_promoted_tweet_id.d690f99143': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'promoted_tweet_id', 'model': "{{ get_where_subquery(ref('twitter_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_twitter_ads__url_report_promoted_tweet_id', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'not_null_twitter_ads__url_report_promoted_tweet_id.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.not_null_twitter_ads__url_report_promoted_tweet_id.d690f99143', 'fqn': ['twitter_ads', 'not_null_twitter_ads__url_report_promoted_tweet_id'], 'alias': 'not_null_twitter_ads__url_report_promoted_tweet_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.60918, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['twitter_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads.twitter_ads__url_report']}, 'compiled_path': None, 'column_name': 'promoted_tweet_id', 'file_key_name': 'models.twitter_ads__url_report'}, 'test.twitter_ads.not_null_twitter_ads__url_report_base_url.dfd7ab549e': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'base_url', 'model': "{{ get_where_subquery(ref('twitter_ads__url_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_twitter_ads__url_report_base_url', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'not_null_twitter_ads__url_report_base_url.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.not_null_twitter_ads__url_report_base_url.dfd7ab549e', 'fqn': ['twitter_ads', 'not_null_twitter_ads__url_report_base_url'], 'alias': 'not_null_twitter_ads__url_report_base_url', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True}, 'created_at': 1694433487.612182, 'config_call_dict': {'enabled': True}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(enabled=True) }}', 'language': 'sql', 'refs': [['twitter_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads.twitter_ads__url_report']}, 'compiled_path': None, 'column_name': 'base_url', 'file_key_name': 'models.twitter_ads__url_report'}, 'test.twitter_ads.dbt_utils_unique_combination_of_columns_twitter_ads__url_report_date_day__promoted_tweet_id__placement__line_item_id__campaign_id__account_id.30b826d8ff': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'promoted_tweet_id', 'placement', 'line_item_id', 'campaign_id', 'account_id'], 'model': "{{ get_where_subquery(ref('twitter_ads__url_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_twitter_ads__url_report_date_day__promoted_tweet_id__placement__line_item_id__campaign_id__account_id', 'resource_type': 'test', 'package_name': 'twitter_ads', 'path': 'dbt_utils_unique_combination_o_1e39c518397cb3ec9468966307298ff7.sql', 'original_file_path': 'models\\twitter.yml', 'unique_id': 'test.twitter_ads.dbt_utils_unique_combination_of_columns_twitter_ads__url_report_date_day__promoted_tweet_id__placement__line_item_id__campaign_id__account_id.30b826d8ff', 'fqn': ['twitter_ads', 'dbt_utils_unique_combination_of_columns_twitter_ads__url_report_date_day__promoted_tweet_id__placement__line_item_id__campaign_id__account_id'], 'alias': 'dbt_utils_unique_combination_o_1e39c518397cb3ec9468966307298ff7', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_1e39c518397cb3ec9468966307298ff7', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_1e39c518397cb3ec9468966307298ff7'}, 'created_at': 1694433487.6141822, 'config_call_dict': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_1e39c518397cb3ec9468966307298ff7'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(enabled=True,alias="dbt_utils_unique_combination_o_1e39c518397cb3ec9468966307298ff7") }}', 'language': 'sql', 'refs': [['twitter_ads__url_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.twitter_ads.twitter_ads__url_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.twitter_ads__url_report'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__account_history_account_id.66fb3601e2': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'account_id', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__account_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__account_history_account_id', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__account_history_account_id.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__account_history_account_id.66fb3601e2', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__account_history_account_id'], 'alias': 'not_null_stg_twitter_ads__account_history_account_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.7039413, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_twitter_ads__account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__account_history']}, 'compiled_path': None, 'column_name': 'account_id', 'file_key_name': 'models.stg_twitter_ads__account_history'}, 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__account_history_account_id__updated_timestamp.2725b1ff40': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['account_id', 'updated_timestamp'], 'model': "{{ get_where_subquery(ref('stg_twitter_ads__account_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__account_history_account_id__updated_timestamp', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'dbt_utils_unique_combination_o_568d1f63aee1f98c5b03795b1c7ce6e0.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__account_history_account_id__updated_timestamp.2725b1ff40', 'fqn': ['twitter_ads_source', 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__account_history_account_id__updated_timestamp'], 'alias': 'dbt_utils_unique_combination_o_568d1f63aee1f98c5b03795b1c7ce6e0', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_568d1f63aee1f98c5b03795b1c7ce6e0', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_568d1f63aee1f98c5b03795b1c7ce6e0'}, 'created_at': 1694433487.70593, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_568d1f63aee1f98c5b03795b1c7ce6e0'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_568d1f63aee1f98c5b03795b1c7ce6e0") }}', 'language': 'sql', 'refs': [['stg_twitter_ads__account_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__account_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_twitter_ads__account_history'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__campaign_history_campaign_id.51218487ce': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__campaign_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__campaign_history_campaign_id', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__campaign_history_campaign_id.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__campaign_history_campaign_id.51218487ce', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__campaign_history_campaign_id'], 'alias': 'not_null_stg_twitter_ads__campaign_history_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.7111511, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_twitter_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__campaign_history']}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_twitter_ads__campaign_history'}, 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__campaign_history_campaign_id__updated_timestamp.c7054e5b55': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['campaign_id', 'updated_timestamp'], 'model': "{{ get_where_subquery(ref('stg_twitter_ads__campaign_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__campaign_history_campaign_id__updated_timestamp', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'dbt_utils_unique_combination_o_3a2db0bbb04188c2d34d0a3918a671e2.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__campaign_history_campaign_id__updated_timestamp.c7054e5b55', 'fqn': ['twitter_ads_source', 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__campaign_history_campaign_id__updated_timestamp'], 'alias': 'dbt_utils_unique_combination_o_3a2db0bbb04188c2d34d0a3918a671e2', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_3a2db0bbb04188c2d34d0a3918a671e2', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_3a2db0bbb04188c2d34d0a3918a671e2'}, 'created_at': 1694433487.7131512, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_3a2db0bbb04188c2d34d0a3918a671e2'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_3a2db0bbb04188c2d34d0a3918a671e2") }}', 'language': 'sql', 'refs': [['stg_twitter_ads__campaign_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__campaign_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_twitter_ads__campaign_history'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__line_item_history_line_item_id.2cef040809': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'line_item_id', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__line_item_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__line_item_history_line_item_id', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__line_item_history_line_item_id.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__line_item_history_line_item_id.2cef040809', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__line_item_history_line_item_id'], 'alias': 'not_null_stg_twitter_ads__line_item_history_line_item_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.7186592, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_twitter_ads__line_item_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__line_item_history']}, 'compiled_path': None, 'column_name': 'line_item_id', 'file_key_name': 'models.stg_twitter_ads__line_item_history'}, 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__line_item_history_line_item_id__updated_timestamp.b12672e022': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['line_item_id', 'updated_timestamp'], 'model': "{{ get_where_subquery(ref('stg_twitter_ads__line_item_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__line_item_history_line_item_id__updated_timestamp', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'dbt_utils_unique_combination_o_46813227544cee5d3f0e709e692abea3.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__line_item_history_line_item_id__updated_timestamp.b12672e022', 'fqn': ['twitter_ads_source', 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__line_item_history_line_item_id__updated_timestamp'], 'alias': 'dbt_utils_unique_combination_o_46813227544cee5d3f0e709e692abea3', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_46813227544cee5d3f0e709e692abea3', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_46813227544cee5d3f0e709e692abea3'}, 'created_at': 1694433487.719661, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_46813227544cee5d3f0e709e692abea3'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_46813227544cee5d3f0e709e692abea3") }}', 'language': 'sql', 'refs': [['stg_twitter_ads__line_item_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__line_item_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_twitter_ads__line_item_history'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__promoted_tweet_history_promoted_tweet_id.f447a1cd09': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'promoted_tweet_id', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__promoted_tweet_history')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__promoted_tweet_history_promoted_tweet_id', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__prom_b9fd075f90e22952cf35b8a246a98976.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__promoted_tweet_history_promoted_tweet_id.f447a1cd09', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__promoted_tweet_history_promoted_tweet_id'], 'alias': 'not_null_stg_twitter_ads__prom_b9fd075f90e22952cf35b8a246a98976', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'not_null_stg_twitter_ads__prom_b9fd075f90e22952cf35b8a246a98976', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'not_null_stg_twitter_ads__prom_b9fd075f90e22952cf35b8a246a98976'}, 'created_at': 1694433487.7246614, 'config_call_dict': {'alias': 'not_null_stg_twitter_ads__prom_b9fd075f90e22952cf35b8a246a98976'}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias="not_null_stg_twitter_ads__prom_b9fd075f90e22952cf35b8a246a98976") }}', 'language': 'sql', 'refs': [['stg_twitter_ads__promoted_tweet_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history']}, 'compiled_path': None, 'column_name': 'promoted_tweet_id', 'file_key_name': 'models.stg_twitter_ads__promoted_tweet_history'}, 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__promoted_tweet_history_promoted_tweet_id__updated_timestamp.dddc4a21ef': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['promoted_tweet_id', 'updated_timestamp'], 'model': "{{ get_where_subquery(ref('stg_twitter_ads__promoted_tweet_history')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__promoted_tweet_history_promoted_tweet_id__updated_timestamp', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'dbt_utils_unique_combination_o_d9257bc7a9cdb33491e1f7fe6f42bbca.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__promoted_tweet_history_promoted_tweet_id__updated_timestamp.dddc4a21ef', 'fqn': ['twitter_ads_source', 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__promoted_tweet_history_promoted_tweet_id__updated_timestamp'], 'alias': 'dbt_utils_unique_combination_o_d9257bc7a9cdb33491e1f7fe6f42bbca', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_d9257bc7a9cdb33491e1f7fe6f42bbca', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_d9257bc7a9cdb33491e1f7fe6f42bbca'}, 'created_at': 1694433487.725661, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_d9257bc7a9cdb33491e1f7fe6f42bbca'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_d9257bc7a9cdb33491e1f7fe6f42bbca") }}', 'language': 'sql', 'refs': [['stg_twitter_ads__promoted_tweet_history']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_twitter_ads__promoted_tweet_history'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__promoted_tweet_report_date_day.c4c46a5894': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__promoted_tweet_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__promoted_tweet_report_date_day', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__promoted_tweet_report_date_day.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__promoted_tweet_report_date_day.c4c46a5894', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__promoted_tweet_report_date_day'], 'alias': 'not_null_stg_twitter_ads__promoted_tweet_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.7312274, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_twitter_ads__promoted_tweet_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_twitter_ads__promoted_tweet_report'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__promoted_tweet_report_promoted_tweet_id.6028694598': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'promoted_tweet_id', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__promoted_tweet_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__promoted_tweet_report_promoted_tweet_id', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__prom_46616b936836e80f58bf2b489d5247aa.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__promoted_tweet_report_promoted_tweet_id.6028694598', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__promoted_tweet_report_promoted_tweet_id'], 'alias': 'not_null_stg_twitter_ads__prom_46616b936836e80f58bf2b489d5247aa', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'not_null_stg_twitter_ads__prom_46616b936836e80f58bf2b489d5247aa', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'not_null_stg_twitter_ads__prom_46616b936836e80f58bf2b489d5247aa'}, 'created_at': 1694433487.7322273, 'config_call_dict': {'alias': 'not_null_stg_twitter_ads__prom_46616b936836e80f58bf2b489d5247aa'}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias="not_null_stg_twitter_ads__prom_46616b936836e80f58bf2b489d5247aa") }}', 'language': 'sql', 'refs': [['stg_twitter_ads__promoted_tweet_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report']}, 'compiled_path': None, 'column_name': 'promoted_tweet_id', 'file_key_name': 'models.stg_twitter_ads__promoted_tweet_report'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__promoted_tweet_report_placement.c1b1f648b3': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'placement', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__promoted_tweet_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__promoted_tweet_report_placement', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__promoted_tweet_report_placement.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__promoted_tweet_report_placement.c1b1f648b3', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__promoted_tweet_report_placement'], 'alias': 'not_null_stg_twitter_ads__promoted_tweet_report_placement', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.7342272, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_twitter_ads__promoted_tweet_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report']}, 'compiled_path': None, 'column_name': 'placement', 'file_key_name': 'models.stg_twitter_ads__promoted_tweet_report'}, 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__promoted_tweet_report_date_day__promoted_tweet_id__placement.7028206273': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'promoted_tweet_id', 'placement'], 'model': "{{ get_where_subquery(ref('stg_twitter_ads__promoted_tweet_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__promoted_tweet_report_date_day__promoted_tweet_id__placement', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'dbt_utils_unique_combination_o_3d583fe3c6abbb0e930d21030936ced9.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__promoted_tweet_report_date_day__promoted_tweet_id__placement.7028206273', 'fqn': ['twitter_ads_source', 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__promoted_tweet_report_date_day__promoted_tweet_id__placement'], 'alias': 'dbt_utils_unique_combination_o_3d583fe3c6abbb0e930d21030936ced9', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_3d583fe3c6abbb0e930d21030936ced9', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_3d583fe3c6abbb0e930d21030936ced9'}, 'created_at': 1694433487.7352273, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_3d583fe3c6abbb0e930d21030936ced9'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_3d583fe3c6abbb0e930d21030936ced9") }}', 'language': 'sql', 'refs': [['stg_twitter_ads__promoted_tweet_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_twitter_ads__promoted_tweet_report'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__tweet_url_index.e998fb67be': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'index', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__tweet_url')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__tweet_url_index', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__tweet_url_index.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__tweet_url_index.e998fb67be', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__tweet_url_index'], 'alias': 'not_null_stg_twitter_ads__tweet_url_index', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.73974, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_twitter_ads__tweet_url']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__tweet_url']}, 'compiled_path': None, 'column_name': 'index', 'file_key_name': 'models.stg_twitter_ads__tweet_url'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__tweet_url_tweet_id.f7e1670218': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'tweet_id', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__tweet_url')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__tweet_url_tweet_id', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__tweet_url_tweet_id.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__tweet_url_tweet_id.f7e1670218', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__tweet_url_tweet_id'], 'alias': 'not_null_stg_twitter_ads__tweet_url_tweet_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.7417395, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_twitter_ads__tweet_url']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__tweet_url']}, 'compiled_path': None, 'column_name': 'tweet_id', 'file_key_name': 'models.stg_twitter_ads__tweet_url'}, 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__tweet_url_index__tweet_id.eab5b85d74': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['index', 'tweet_id'], 'model': "{{ get_where_subquery(ref('stg_twitter_ads__tweet_url')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__tweet_url_index__tweet_id', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'dbt_utils_unique_combination_o_67f262d96b6883ebf74236649dcc0540.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__tweet_url_index__tweet_id.eab5b85d74', 'fqn': ['twitter_ads_source', 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__tweet_url_index__tweet_id'], 'alias': 'dbt_utils_unique_combination_o_67f262d96b6883ebf74236649dcc0540', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_67f262d96b6883ebf74236649dcc0540', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_67f262d96b6883ebf74236649dcc0540'}, 'created_at': 1694433487.7437382, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_67f262d96b6883ebf74236649dcc0540'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_67f262d96b6883ebf74236649dcc0540") }}', 'language': 'sql', 'refs': [['stg_twitter_ads__tweet_url']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__tweet_url']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_twitter_ads__tweet_url'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__campaign_report_date_day.053c09786c': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__campaign_report_date_day', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__campaign_report_date_day.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__campaign_report_date_day.053c09786c', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__campaign_report_date_day'], 'alias': 'not_null_stg_twitter_ads__campaign_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.7482858, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_twitter_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__campaign_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_twitter_ads__campaign_report'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__campaign_report_campaign_id.a63b62981f': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'campaign_id', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__campaign_report_campaign_id', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__campaign_report_campaign_id.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__campaign_report_campaign_id.a63b62981f', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__campaign_report_campaign_id'], 'alias': 'not_null_stg_twitter_ads__campaign_report_campaign_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.7502875, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_twitter_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__campaign_report']}, 'compiled_path': None, 'column_name': 'campaign_id', 'file_key_name': 'models.stg_twitter_ads__campaign_report'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__campaign_report_placement.5067d8c4f4': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'placement', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__campaign_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__campaign_report_placement', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__campaign_report_placement.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__campaign_report_placement.5067d8c4f4', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__campaign_report_placement'], 'alias': 'not_null_stg_twitter_ads__campaign_report_placement', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.7512877, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_twitter_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__campaign_report']}, 'compiled_path': None, 'column_name': 'placement', 'file_key_name': 'models.stg_twitter_ads__campaign_report'}, 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__campaign_report_date_day__campaign_id__placement.71102d8fdb': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'campaign_id', 'placement'], 'model': "{{ get_where_subquery(ref('stg_twitter_ads__campaign_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__campaign_report_date_day__campaign_id__placement', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'dbt_utils_unique_combination_o_8ea2fb330c061f42c1639904f6bdc5f0.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__campaign_report_date_day__campaign_id__placement.71102d8fdb', 'fqn': ['twitter_ads_source', 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__campaign_report_date_day__campaign_id__placement'], 'alias': 'dbt_utils_unique_combination_o_8ea2fb330c061f42c1639904f6bdc5f0', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_8ea2fb330c061f42c1639904f6bdc5f0', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_8ea2fb330c061f42c1639904f6bdc5f0'}, 'created_at': 1694433487.753288, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_8ea2fb330c061f42c1639904f6bdc5f0'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_8ea2fb330c061f42c1639904f6bdc5f0") }}', 'language': 'sql', 'refs': [['stg_twitter_ads__campaign_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__campaign_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_twitter_ads__campaign_report'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__line_item_report_date_day.0f4d8cc8fe': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__line_item_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__line_item_report_date_day', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__line_item_report_date_day.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__line_item_report_date_day.0f4d8cc8fe', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__line_item_report_date_day'], 'alias': 'not_null_stg_twitter_ads__line_item_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.757794, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_twitter_ads__line_item_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__line_item_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_twitter_ads__line_item_report'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__line_item_report_line_item_id.9f5a4860b7': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'line_item_id', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__line_item_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__line_item_report_line_item_id', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__line_item_report_line_item_id.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__line_item_report_line_item_id.9f5a4860b7', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__line_item_report_line_item_id'], 'alias': 'not_null_stg_twitter_ads__line_item_report_line_item_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.7598004, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_twitter_ads__line_item_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__line_item_report']}, 'compiled_path': None, 'column_name': 'line_item_id', 'file_key_name': 'models.stg_twitter_ads__line_item_report'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__line_item_report_placement.cd7e77e0eb': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'placement', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__line_item_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__line_item_report_placement', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__line_item_report_placement.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__line_item_report_placement.cd7e77e0eb', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__line_item_report_placement'], 'alias': 'not_null_stg_twitter_ads__line_item_report_placement', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.7608, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_twitter_ads__line_item_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__line_item_report']}, 'compiled_path': None, 'column_name': 'placement', 'file_key_name': 'models.stg_twitter_ads__line_item_report'}, 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__line_item_report_date_day__line_item_id__placement.251e077e6b': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'line_item_id', 'placement'], 'model': "{{ get_where_subquery(ref('stg_twitter_ads__line_item_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__line_item_report_date_day__line_item_id__placement', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'dbt_utils_unique_combination_o_aaeab9295a1b92ec034614169e5444cb.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__line_item_report_date_day__line_item_id__placement.251e077e6b', 'fqn': ['twitter_ads_source', 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__line_item_report_date_day__line_item_id__placement'], 'alias': 'dbt_utils_unique_combination_o_aaeab9295a1b92ec034614169e5444cb', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_aaeab9295a1b92ec034614169e5444cb', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_aaeab9295a1b92ec034614169e5444cb'}, 'created_at': 1694433487.7628, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_aaeab9295a1b92ec034614169e5444cb'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_aaeab9295a1b92ec034614169e5444cb") }}', 'language': 'sql', 'refs': [['stg_twitter_ads__line_item_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__line_item_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_twitter_ads__line_item_report'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__line_item_keywords_report_keyword_id.e5f015e9ec': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'keyword_id', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__line_item_keywords_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__line_item_keywords_report_keyword_id', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__line_item_keywords_report_keyword_id.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__line_item_keywords_report_keyword_id.e5f015e9ec', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__line_item_keywords_report_keyword_id'], 'alias': 'not_null_stg_twitter_ads__line_item_keywords_report_keyword_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.7673805, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_twitter_ads__line_item_keywords_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report']}, 'compiled_path': None, 'column_name': 'keyword_id', 'file_key_name': 'models.stg_twitter_ads__line_item_keywords_report'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__line_item_keywords_report_date_day.c7e7155b13': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'date_day', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__line_item_keywords_report')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__line_item_keywords_report_date_day', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__line_item_keywords_report_date_day.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__line_item_keywords_report_date_day.c7e7155b13', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__line_item_keywords_report_date_day'], 'alias': 'not_null_stg_twitter_ads__line_item_keywords_report_date_day', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.769385, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_twitter_ads__line_item_keywords_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report']}, 'compiled_path': None, 'column_name': 'date_day', 'file_key_name': 'models.stg_twitter_ads__line_item_keywords_report'}, 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__line_item_keywords_report_date_day__keyword_id.fbb70cacf6': {'test_metadata': {'name': 'unique_combination_of_columns', 'kwargs': {'combination_of_columns': ['date_day', 'keyword_id'], 'model': "{{ get_where_subquery(ref('stg_twitter_ads__line_item_keywords_report')) }}"}, 'namespace': 'dbt_utils'}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__line_item_keywords_report_date_day__keyword_id', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'dbt_utils_unique_combination_o_e6d80438f6069924aabc58f58480a4b9.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.dbt_utils_unique_combination_of_columns_stg_twitter_ads__line_item_keywords_report_date_day__keyword_id.fbb70cacf6', 'fqn': ['twitter_ads_source', 'dbt_utils_unique_combination_of_columns_stg_twitter_ads__line_item_keywords_report_date_day__keyword_id'], 'alias': 'dbt_utils_unique_combination_o_e6d80438f6069924aabc58f58480a4b9', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'dbt_utils_unique_combination_o_e6d80438f6069924aabc58f58480a4b9', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'dbt_utils_unique_combination_o_e6d80438f6069924aabc58f58480a4b9'}, 'created_at': 1694433487.7703848, 'config_call_dict': {'alias': 'dbt_utils_unique_combination_o_e6d80438f6069924aabc58f58480a4b9'}, 'relation_name': None, 'raw_code': '{{ dbt_utils.test_unique_combination_of_columns(**_dbt_generic_test_kwargs) }}{{ config(alias="dbt_utils_unique_combination_o_e6d80438f6069924aabc58f58480a4b9") }}', 'language': 'sql', 'refs': [['stg_twitter_ads__line_item_keywords_report']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.test_unique_combination_of_columns', 'macro.dbt.get_where_subquery'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report']}, 'compiled_path': None, 'column_name': None, 'file_key_name': 'models.stg_twitter_ads__line_item_keywords_report'}, 'test.twitter_ads_source.not_null_stg_twitter_ads__tweet_tweet_id.a0427f37cd': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'tweet_id', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__tweet')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'not_null_stg_twitter_ads__tweet_tweet_id', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'not_null_stg_twitter_ads__tweet_tweet_id.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.not_null_stg_twitter_ads__tweet_tweet_id.a0427f37cd', 'fqn': ['twitter_ads_source', 'not_null_stg_twitter_ads__tweet_tweet_id'], 'alias': 'not_null_stg_twitter_ads__tweet_tweet_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.7745817, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_twitter_ads__tweet']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__tweet']}, 'compiled_path': None, 'column_name': 'tweet_id', 'file_key_name': 'models.stg_twitter_ads__tweet'}, 'test.twitter_ads_source.unique_stg_twitter_ads__tweet_tweet_id.7e44536c95': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'tweet_id', 'model': "{{ get_where_subquery(ref('stg_twitter_ads__tweet')) }}"}, 'namespace': None}, 'database': 'drops-bi', 'schema': 'marketing_full_dbt_test__audit', 'name': 'unique_stg_twitter_ads__tweet_tweet_id', 'resource_type': 'test', 'package_name': 'twitter_ads_source', 'path': 'unique_stg_twitter_ads__tweet_tweet_id.sql', 'original_file_path': 'models\\stg_twitter_ads.yml', 'unique_id': 'test.twitter_ads_source.unique_stg_twitter_ads__tweet_tweet_id.7e44536c95', 'fqn': ['twitter_ads_source', 'unique_stg_twitter_ads__tweet_tweet_id'], 'alias': 'unique_stg_twitter_ads__tweet_tweet_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1694433487.7755878, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [['stg_twitter_ads__tweet']], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['model.twitter_ads_source.stg_twitter_ads__tweet']}, 'compiled_path': None, 'column_name': 'tweet_id', 'file_key_name': 'models.stg_twitter_ads__tweet'}}
[0m19:39:01.372795 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd134de2370>]}
[0m19:39:32.227715 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads_source.not_null_stg_microsoft_ads__account_history_account_id.cc273ee54e' (models/stg_microsoft_ads.yml) depends on a node named 'stg_microsoft_ads__account_history' which is disabled
[0m19:39:32.228895 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__account_history_account_id__modified_at.5975327479' (models/stg_microsoft_ads.yml) depends on a node named 'stg_microsoft_ads__account_history' which is disabled
[0m19:39:32.229535 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads_source.not_null_stg_microsoft_ads__account_daily_report_account_id.b17f45fe79' (models/stg_microsoft_ads.yml) depends on a node named 'stg_microsoft_ads__account_daily_report' which is disabled
[0m19:39:32.230126 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__account_daily_report_date_day__account_id__device_os__device_type__network__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other.85ae65d69a' (models/stg_microsoft_ads.yml) depends on a node named 'stg_microsoft_ads__account_daily_report' which is disabled
[0m19:39:32.231153 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads_source.not_null_stg_microsoft_ads__ad_group_history_ad_group_id.c8353342b7' (models/stg_microsoft_ads.yml) depends on a node named 'stg_microsoft_ads__ad_group_history' which is disabled
[0m19:39:32.232105 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_group_history_ad_group_id__modified_at.12004c9de0' (models/stg_microsoft_ads.yml) depends on a node named 'stg_microsoft_ads__ad_group_history' which is disabled
[0m19:39:32.233050 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads_source.not_null_stg_microsoft_ads__ad_group_daily_report_ad_group_id.3e03e6eff7' (models/stg_microsoft_ads.yml) depends on a node named 'stg_microsoft_ads__ad_group_daily_report' which is disabled
[0m19:39:32.234023 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_group_daily_report_date_day__account_id__campaign_id__ad_group_id__device_os__device_type__network__language__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other.8792b4adf4' (models/stg_microsoft_ads.yml) depends on a node named 'stg_microsoft_ads__ad_group_daily_report' which is disabled
[0m19:39:32.235096 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads_source.not_null_stg_microsoft_ads__ad_history_ad_id.6d02c26574' (models/stg_microsoft_ads.yml) depends on a node named 'stg_microsoft_ads__ad_history' which is disabled
[0m19:39:32.236110 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_history_ad_id__modified_at.1f05b4ee6f' (models/stg_microsoft_ads.yml) depends on a node named 'stg_microsoft_ads__ad_history' which is disabled
[0m19:39:32.236998 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads_source.not_null_stg_microsoft_ads__ad_daily_report_ad_id.1ed6689aa8' (models/stg_microsoft_ads.yml) depends on a node named 'stg_microsoft_ads__ad_daily_report' which is disabled
[0m19:39:32.237960 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__ad_daily_report_date_day__account_id__campaign_id__ad_group_id__ad_id__device_os__device_type__network__language__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other.80e8146841' (models/stg_microsoft_ads.yml) depends on a node named 'stg_microsoft_ads__ad_daily_report' which is disabled
[0m19:39:32.238965 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads_source.not_null_stg_microsoft_ads__campaign_history_campaign_id.ee080a2122' (models/stg_microsoft_ads.yml) depends on a node named 'stg_microsoft_ads__campaign_history' which is disabled
[0m19:39:32.239929 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__campaign_history_campaign_id__modified_at.d2a9279427' (models/stg_microsoft_ads.yml) depends on a node named 'stg_microsoft_ads__campaign_history' which is disabled
[0m19:39:32.240863 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads_source.not_null_stg_microsoft_ads__campaign_daily_report_campaign_id.8ac0418e84' (models/stg_microsoft_ads.yml) depends on a node named 'stg_microsoft_ads__campaign_daily_report' which is disabled
[0m19:39:32.241845 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__campaign_daily_report_date_day__account_id__campaign_id__device_os__device_type__network__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other__budget_association_status.6f2312e762' (models/stg_microsoft_ads.yml) depends on a node named 'stg_microsoft_ads__campaign_daily_report' which is disabled
[0m19:39:32.242910 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads_source.not_null_stg_microsoft_ads__keyword_history_keyword_id.19164a6209' (models/stg_microsoft_ads.yml) depends on a node named 'stg_microsoft_ads__keyword_history' which is disabled
[0m19:39:32.243888 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__keyword_history_keyword_id__modified_at.e1c525286c' (models/stg_microsoft_ads.yml) depends on a node named 'stg_microsoft_ads__keyword_history' which is disabled
[0m19:39:32.244820 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads_source.not_null_stg_microsoft_ads__keyword_daily_report_keyword_id.e16b8c5047' (models/stg_microsoft_ads.yml) depends on a node named 'stg_microsoft_ads__keyword_daily_report' which is disabled
[0m19:39:32.245762 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__keyword_daily_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__device_os__device_type__network__language__currency_code__ad_distribution__bid_match_type__delivered_match_type__top_vs_other.c6f46d202a' (models/stg_microsoft_ads.yml) depends on a node named 'stg_microsoft_ads__keyword_daily_report' which is disabled
[0m19:39:32.246712 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads_source.not_null_stg_microsoft_ads__search_daily_report_search_query.57f687adcc' (models/stg_microsoft_ads.yml) depends on a node named 'stg_microsoft_ads__search_daily_report' which is disabled
[0m19:39:32.247623 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads_source.dbt_utils_unique_combination_of_columns_stg_microsoft_ads__search_daily_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__search_query__device_os__device_type__network__language__bid_match_type__delivered_match_type__top_vs_other.03cf031d0c' (models/stg_microsoft_ads.yml) depends on a node named 'stg_microsoft_ads__search_daily_report' which is disabled
[0m19:39:32.249363 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.reddit_ads.not_null_reddit_ads__account_report_date_day.7b43e6cb90' (models/reddit_ads.yml) depends on a node named 'reddit_ads__account_report' which is disabled
[0m19:39:32.250561 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.reddit_ads.not_null_reddit_ads__account_report_account_id.16f11188c5' (models/reddit_ads.yml) depends on a node named 'reddit_ads__account_report' which is disabled
[0m19:39:32.251739 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.reddit_ads.dbt_utils_unique_combination_of_columns_reddit_ads__account_report_date_day__account_id__attribution_type__currency__status__time_zone_id.3cf3359ef6' (models/reddit_ads.yml) depends on a node named 'reddit_ads__account_report' which is disabled
[0m19:39:32.252841 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.reddit_ads.not_null_reddit_ads__ad_group_report_date_day.6463e6f6f7' (models/reddit_ads.yml) depends on a node named 'reddit_ads__ad_group_report' which is disabled
[0m19:39:32.253826 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.reddit_ads.not_null_reddit_ads__ad_group_report_ad_group_id.057bd60604' (models/reddit_ads.yml) depends on a node named 'reddit_ads__ad_group_report' which is disabled
[0m19:39:32.254845 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.reddit_ads.dbt_utils_unique_combination_of_columns_reddit_ads__ad_group_report_date_day__account_id__ad_group_id__campaign_id__currency.dfbea50191' (models/reddit_ads.yml) depends on a node named 'reddit_ads__ad_group_report' which is disabled
[0m19:39:32.255780 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.reddit_ads.not_null_reddit_ads__ad_report_date_day.608b21c69a' (models/reddit_ads.yml) depends on a node named 'reddit_ads__ad_report' which is disabled
[0m19:39:32.256698 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.reddit_ads.not_null_reddit_ads__ad_report_ad_id.1da054a14e' (models/reddit_ads.yml) depends on a node named 'reddit_ads__ad_report' which is disabled
[0m19:39:32.257416 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.reddit_ads.dbt_utils_unique_combination_of_columns_reddit_ads__ad_report_date_day__ad_id__post_id__account_id__ad_group_id__campaign_id__currency.a428678f1d' (models/reddit_ads.yml) depends on a node named 'reddit_ads__ad_report' which is disabled
[0m19:39:32.258004 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.reddit_ads.not_null_reddit_ads__campaign_report_date_day.f79cca4131' (models/reddit_ads.yml) depends on a node named 'reddit_ads__campaign_report' which is disabled
[0m19:39:32.258560 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.reddit_ads.not_null_reddit_ads__campaign_report_campaign_id.f5491a0b49' (models/reddit_ads.yml) depends on a node named 'reddit_ads__campaign_report' which is disabled
[0m19:39:32.259339 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.reddit_ads.dbt_utils_unique_combination_of_columns_reddit_ads__campaign_report_date_day__account_id__campaign_id__currency.aec7cd25af' (models/reddit_ads.yml) depends on a node named 'reddit_ads__campaign_report' which is disabled
[0m19:39:32.260241 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.reddit_ads.not_null_reddit_ads__url_report_date_day.4b0f6363da' (models/reddit_ads.yml) depends on a node named 'reddit_ads__url_report' which is disabled
[0m19:39:32.261270 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.reddit_ads.not_null_reddit_ads__url_report_ad_id.8ff83da2b0' (models/reddit_ads.yml) depends on a node named 'reddit_ads__url_report' which is disabled
[0m19:39:32.262258 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.reddit_ads.not_null_reddit_ads__url_report_base_url.2f585bebcb' (models/reddit_ads.yml) depends on a node named 'reddit_ads__url_report' which is disabled
[0m19:39:32.263199 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.reddit_ads.dbt_utils_unique_combination_of_columns_reddit_ads__url_report_date_day__click_url__ad_id__account_id__ad_group_id__campaign_id__post_id__currency.b14eb4e958' (models/reddit_ads.yml) depends on a node named 'reddit_ads__url_report' which is disabled
[0m19:39:32.264135 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest.not_null_pinterest_ads__url_report_date_day.b09048037e' (models/pinterest.yml) depends on a node named 'pinterest_ads__url_report' which is disabled
[0m19:39:32.265035 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest.not_null_pinterest_ads__url_report_destination_url.0bb7f30502' (models/pinterest.yml) depends on a node named 'pinterest_ads__url_report' which is disabled
[0m19:39:32.265941 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest.not_null_pinterest_ads__url_report_pin_promotion_id.0da711ad6a' (models/pinterest.yml) depends on a node named 'pinterest_ads__url_report' which is disabled
[0m19:39:32.266862 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__url_report_pin_promotion_id__ad_group_id__campaign_id__advertiser_id__date_day.bd87b032c8' (models/pinterest.yml) depends on a node named 'pinterest_ads__url_report' which is disabled
[0m19:39:32.267762 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest.not_null_pinterest_ads__ad_group_report_date_day.ed7c27b8a7' (models/pinterest.yml) depends on a node named 'pinterest_ads__ad_group_report' which is disabled
[0m19:39:32.268674 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest.not_null_pinterest_ads__ad_group_report_ad_group_id.134f9ac6c2' (models/pinterest.yml) depends on a node named 'pinterest_ads__ad_group_report' which is disabled
[0m19:39:32.269639 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__ad_group_report_ad_group_id__advertiser_id__campaign_id__date_day.d207b7d69d' (models/pinterest.yml) depends on a node named 'pinterest_ads__ad_group_report' which is disabled
[0m19:39:32.270671 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest.not_null_pinterest_ads__campaign_report_date_day.10ac8272bf' (models/pinterest.yml) depends on a node named 'pinterest_ads__campaign_report' which is disabled
[0m19:39:32.271693 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest.not_null_pinterest_ads__campaign_report_campaign_id.8001ea60f2' (models/pinterest.yml) depends on a node named 'pinterest_ads__campaign_report' which is disabled
[0m19:39:32.273147 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__campaign_report_campaign_id__advertiser_id__date_day.b5752d5279' (models/pinterest.yml) depends on a node named 'pinterest_ads__campaign_report' which is disabled
[0m19:39:32.274182 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest.not_null_pinterest_ads__advertiser_report_date_day.aedeceeeca' (models/pinterest.yml) depends on a node named 'pinterest_ads__advertiser_report' which is disabled
[0m19:39:32.275194 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest.not_null_pinterest_ads__advertiser_report_advertiser_id.13380f0672' (models/pinterest.yml) depends on a node named 'pinterest_ads__advertiser_report' which is disabled
[0m19:39:32.276133 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__advertiser_report_advertiser_id__date_day.990badbc11' (models/pinterest.yml) depends on a node named 'pinterest_ads__advertiser_report' which is disabled
[0m19:39:32.277028 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest.not_null_pinterest_ads__keyword_report_date_day.23130e9fba' (models/pinterest.yml) depends on a node named 'pinterest_ads__keyword_report' which is disabled
[0m19:39:32.277931 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest.not_null_pinterest_ads__keyword_report_keyword_id.0d73460198' (models/pinterest.yml) depends on a node named 'pinterest_ads__keyword_report' which is disabled
[0m19:39:32.278843 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__keyword_report_keyword_id__ad_group_id__campaign_id__advertiser_id__date_day.b7517b039d' (models/pinterest.yml) depends on a node named 'pinterest_ads__keyword_report' which is disabled
[0m19:39:32.279507 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest.not_null_pinterest_ads__pin_promotion_report_date_day.3128d28cfd' (models/pinterest.yml) depends on a node named 'pinterest_ads__pin_promotion_report' which is disabled
[0m19:39:32.280075 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest.not_null_pinterest_ads__pin_promotion_report_pin_promotion_id.2540e0a561' (models/pinterest.yml) depends on a node named 'pinterest_ads__pin_promotion_report' which is disabled
[0m19:39:32.280638 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest.dbt_utils_unique_combination_of_columns_pinterest_ads__pin_promotion_report_pin_promotion_id__ad_group_id__campaign_id__advertiser_id__date_day.1db3ffb1b3' (models/pinterest.yml) depends on a node named 'pinterest_ads__pin_promotion_report' which is disabled
[0m19:39:32.281198 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.reddit_ads_source.unique_stg_reddit_ads__account_account_id.0c6fcb698e' (models/stg_reddit_ads.yml) depends on a node named 'stg_reddit_ads__account' which is disabled
[0m19:39:32.281751 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.reddit_ads_source.not_null_stg_reddit_ads__account_account_id.512f0b8078' (models/stg_reddit_ads.yml) depends on a node named 'stg_reddit_ads__account' which is disabled
[0m19:39:32.282414 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.reddit_ads_source.not_null_stg_reddit_ads__account_report_account_id.1f2a0195de' (models/stg_reddit_ads.yml) depends on a node named 'stg_reddit_ads__account_report' which is disabled
[0m19:39:32.282980 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.reddit_ads_source.dbt_utils_unique_combination_of_columns_stg_reddit_ads__account_report_account_id__date_day.74570496be' (models/stg_reddit_ads.yml) depends on a node named 'stg_reddit_ads__account_report' which is disabled
[0m19:39:32.283643 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.reddit_ads_source.unique_stg_reddit_ads__ad_ad_id.3d62901652' (models/stg_reddit_ads.yml) depends on a node named 'stg_reddit_ads__ad' which is disabled
[0m19:39:32.284203 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.reddit_ads_source.not_null_stg_reddit_ads__ad_ad_id.40188b63dd' (models/stg_reddit_ads.yml) depends on a node named 'stg_reddit_ads__ad' which is disabled
[0m19:39:32.284761 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.reddit_ads_source.not_null_stg_reddit_ads__ad_report_ad_id.c4af84b857' (models/stg_reddit_ads.yml) depends on a node named 'stg_reddit_ads__ad_report' which is disabled
[0m19:39:32.285320 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.reddit_ads_source.dbt_utils_unique_combination_of_columns_stg_reddit_ads__ad_report_ad_id__date_day.ce868b0b1a' (models/stg_reddit_ads.yml) depends on a node named 'stg_reddit_ads__ad_report' which is disabled
[0m19:39:32.285878 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.reddit_ads_source.unique_stg_reddit_ads__ad_group_ad_group_id.d3dc0d7503' (models/stg_reddit_ads.yml) depends on a node named 'stg_reddit_ads__ad_group' which is disabled
[0m19:39:32.286434 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.reddit_ads_source.not_null_stg_reddit_ads__ad_group_ad_group_id.65795d8dc2' (models/stg_reddit_ads.yml) depends on a node named 'stg_reddit_ads__ad_group' which is disabled
[0m19:39:32.286987 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.reddit_ads_source.not_null_stg_reddit_ads__ad_group_report_ad_group_id.9836cd084d' (models/stg_reddit_ads.yml) depends on a node named 'stg_reddit_ads__ad_group_report' which is disabled
[0m19:39:32.287545 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.reddit_ads_source.dbt_utils_unique_combination_of_columns_stg_reddit_ads__ad_group_report_ad_group_id__date_day.19b8b9b788' (models/stg_reddit_ads.yml) depends on a node named 'stg_reddit_ads__ad_group_report' which is disabled
[0m19:39:32.288110 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.reddit_ads_source.unique_stg_reddit_ads__campaign_campaign_id.3c4fccf1e4' (models/stg_reddit_ads.yml) depends on a node named 'stg_reddit_ads__campaign' which is disabled
[0m19:39:32.288667 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.reddit_ads_source.not_null_stg_reddit_ads__campaign_campaign_id.f3f24e4682' (models/stg_reddit_ads.yml) depends on a node named 'stg_reddit_ads__campaign' which is disabled
[0m19:39:32.289226 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.reddit_ads_source.not_null_stg_reddit_ads__campaign_report_campaign_id.c717612b4f' (models/stg_reddit_ads.yml) depends on a node named 'stg_reddit_ads__campaign_report' which is disabled
[0m19:39:32.289793 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.reddit_ads_source.dbt_utils_unique_combination_of_columns_stg_reddit_ads__campaign_report_campaign_id__date_day.9b02fea13d' (models/stg_reddit_ads.yml) depends on a node named 'stg_reddit_ads__campaign_report' which is disabled
[0m19:39:32.290502 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads_source.not_null_stg_amazon_ads__ad_group_history_ad_group_id.6b524b990b' (models/stg_amazon_ads.yml) depends on a node named 'stg_amazon_ads__ad_group_history' which is disabled
[0m19:39:32.291072 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__ad_group_history_ad_group_id__last_updated_date.9d2ad05ee9' (models/stg_amazon_ads.yml) depends on a node named 'stg_amazon_ads__ad_group_history' which is disabled
[0m19:39:32.291642 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads_source.not_null_stg_amazon_ads__ad_group_level_report_ad_group_id.ee4ef641c3' (models/stg_amazon_ads.yml) depends on a node named 'stg_amazon_ads__ad_group_level_report' which is disabled
[0m19:39:32.292423 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__ad_group_level_report_ad_group_id__date_day.f014d2ad94' (models/stg_amazon_ads.yml) depends on a node named 'stg_amazon_ads__ad_group_level_report' which is disabled
[0m19:39:32.293453 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads_source.not_null_stg_amazon_ads__advertised_product_report_ad_id.307c6bc8d4' (models/stg_amazon_ads.yml) depends on a node named 'stg_amazon_ads__advertised_product_report' which is disabled
[0m19:39:32.294421 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__advertised_product_report_ad_id__date_day.866a51d99d' (models/stg_amazon_ads.yml) depends on a node named 'stg_amazon_ads__advertised_product_report' which is disabled
[0m19:39:32.295398 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads_source.not_null_stg_amazon_ads__campaign_history_campaign_id.49e395897c' (models/stg_amazon_ads.yml) depends on a node named 'stg_amazon_ads__campaign_history' which is disabled
[0m19:39:32.296404 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__campaign_history_campaign_id__last_updated_date.3a70468382' (models/stg_amazon_ads.yml) depends on a node named 'stg_amazon_ads__campaign_history' which is disabled
[0m19:39:32.297392 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads_source.not_null_stg_amazon_ads__campaign_level_report_campaign_id.1efec68194' (models/stg_amazon_ads.yml) depends on a node named 'stg_amazon_ads__campaign_level_report' which is disabled
[0m19:39:32.298413 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__campaign_level_report_campaign_id__date_day.8e5392b313' (models/stg_amazon_ads.yml) depends on a node named 'stg_amazon_ads__campaign_level_report' which is disabled
[0m19:39:32.299302 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads_source.not_null_stg_amazon_ads__keyword_history_keyword_id.f21f6add6e' (models/stg_amazon_ads.yml) depends on a node named 'stg_amazon_ads__keyword_history' which is disabled
[0m19:39:32.300257 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__keyword_history_keyword_id__last_updated_date.fcd76c3197' (models/stg_amazon_ads.yml) depends on a node named 'stg_amazon_ads__keyword_history' which is disabled
[0m19:39:32.301146 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads_source.not_null_stg_amazon_ads__portfolio_history_portfolio_id.e22bb2ba02' (models/stg_amazon_ads.yml) depends on a node named 'stg_amazon_ads__portfolio_history' which is disabled
[0m19:39:32.302151 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__portfolio_history_portfolio_id__last_updated_date.72b1221050' (models/stg_amazon_ads.yml) depends on a node named 'stg_amazon_ads__portfolio_history' which is disabled
[0m19:39:32.303192 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads_source.not_null_stg_amazon_ads__product_ad_history_ad_id.8744ab1cd8' (models/stg_amazon_ads.yml) depends on a node named 'stg_amazon_ads__product_ad_history' which is disabled
[0m19:39:32.304297 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__product_ad_history_ad_id__last_updated_date.b0106257b4' (models/stg_amazon_ads.yml) depends on a node named 'stg_amazon_ads__product_ad_history' which is disabled
[0m19:39:32.305290 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads_source.not_null_stg_amazon_ads__profile_profile_id.bd192c102b' (models/stg_amazon_ads.yml) depends on a node named 'stg_amazon_ads__profile' which is disabled
[0m19:39:32.306336 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads_source.not_null_stg_amazon_ads__targeting_keyword_report_keyword_id.101a3299d7' (models/stg_amazon_ads.yml) depends on a node named 'stg_amazon_ads__targeting_keyword_report' which is disabled
[0m19:39:32.307450 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__targeting_keyword_report_keyword_id__date_day.cc516f7bcb' (models/stg_amazon_ads.yml) depends on a node named 'stg_amazon_ads__targeting_keyword_report' which is disabled
[0m19:39:32.308496 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads_source.not_null_stg_amazon_ads__search_term_ad_keyword_report_search_term.ef04af3b06' (models/stg_amazon_ads.yml) depends on a node named 'stg_amazon_ads__search_term_ad_keyword_report' which is disabled
[0m19:39:32.309548 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads_source.dbt_utils_unique_combination_of_columns_stg_amazon_ads__search_term_ad_keyword_report_search_term__keyword_id__date_day.fb8ba99693' (models/stg_amazon_ads.yml) depends on a node named 'stg_amazon_ads__search_term_ad_keyword_report' which is disabled
[0m19:39:32.310589 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_creative_creative_id.062abfe14b' (models/stg_linkedin.yml) depends on a node named 'stg_linkedin_ads__ad_analytics_by_creative' which is disabled
[0m19:39:32.311610 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_creative_date_day.cb81bc4766' (models/stg_linkedin.yml) depends on a node named 'stg_linkedin_ads__ad_analytics_by_creative' which is disabled
[0m19:39:32.312683 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__ad_analytics_by_creative_date_day__creative_id.973a01e410' (models/stg_linkedin.yml) depends on a node named 'stg_linkedin_ads__ad_analytics_by_creative' which is disabled
[0m19:39:32.313701 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_campaign_campaign_id.d6ae242f1a' (models/stg_linkedin.yml) depends on a node named 'stg_linkedin_ads__ad_analytics_by_campaign' which is disabled
[0m19:39:32.314792 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.linkedin_source.not_null_stg_linkedin_ads__ad_analytics_by_campaign_date_day.ef97bed766' (models/stg_linkedin.yml) depends on a node named 'stg_linkedin_ads__ad_analytics_by_campaign' which is disabled
[0m19:39:32.315881 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__ad_analytics_by_campaign_date_day__campaign_id.b03f3dc81d' (models/stg_linkedin.yml) depends on a node named 'stg_linkedin_ads__ad_analytics_by_campaign' which is disabled
[0m19:39:32.316915 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.linkedin_source.not_null_stg_linkedin_ads__creative_history_creative_id.4d51d55474' (models/stg_linkedin.yml) depends on a node named 'stg_linkedin_ads__creative_history' which is disabled
[0m19:39:32.317944 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.linkedin_source.not_null_stg_linkedin_ads__campaign_history_campaign_id.b026971ca2' (models/stg_linkedin.yml) depends on a node named 'stg_linkedin_ads__campaign_history' which is disabled
[0m19:39:32.318959 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.linkedin_source.not_null_stg_linkedin_ads__campaign_history_version_tag.64954cc469' (models/stg_linkedin.yml) depends on a node named 'stg_linkedin_ads__campaign_history' which is disabled
[0m19:39:32.320037 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__campaign_history_version_tag__campaign_id.2d20780793' (models/stg_linkedin.yml) depends on a node named 'stg_linkedin_ads__campaign_history' which is disabled
[0m19:39:32.321115 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.linkedin_source.not_null_stg_linkedin_ads__campaign_group_history_campaign_group_id.3888f3777d' (models/stg_linkedin.yml) depends on a node named 'stg_linkedin_ads__campaign_group_history' which is disabled
[0m19:39:32.322343 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.linkedin_source.not_null_stg_linkedin_ads__campaign_group_history_last_modified_at.a716e2a7ea' (models/stg_linkedin.yml) depends on a node named 'stg_linkedin_ads__campaign_group_history' which is disabled
[0m19:39:32.323364 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__campaign_group_history_last_modified_at__campaign_group_id.e761ddb4da' (models/stg_linkedin.yml) depends on a node named 'stg_linkedin_ads__campaign_group_history' which is disabled
[0m19:39:32.324389 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.linkedin_source.not_null_stg_linkedin_ads__account_history_account_id.a9fa7f93c0' (models/stg_linkedin.yml) depends on a node named 'stg_linkedin_ads__account_history' which is disabled
[0m19:39:32.325391 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.linkedin_source.not_null_stg_linkedin_ads__account_history_version_tag.58c46c5d81' (models/stg_linkedin.yml) depends on a node named 'stg_linkedin_ads__account_history' which is disabled
[0m19:39:32.326292 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.linkedin_source.dbt_utils_unique_combination_of_columns_stg_linkedin_ads__account_history_account_id__version_tag.9a655993ce' (models/stg_linkedin.yml) depends on a node named 'stg_linkedin_ads__account_history' which is disabled
[0m19:39:32.327344 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads.not_null_amazon_ads__account_report_profile_id.87fb8dbe66' (models/amazon_ads.yml) depends on a node named 'amazon_ads__account_report' which is disabled
[0m19:39:32.328461 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads.not_null_amazon_ads__account_report_account_id.83adef7061' (models/amazon_ads.yml) depends on a node named 'amazon_ads__account_report' which is disabled
[0m19:39:32.329467 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__account_report_date_day__profile_id.3d2673ade2' (models/amazon_ads.yml) depends on a node named 'amazon_ads__account_report' which is disabled
[0m19:39:32.330513 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads.not_null_amazon_ads__ad_group_report_ad_group_id.8a23dc123a' (models/amazon_ads.yml) depends on a node named 'amazon_ads__ad_group_report' which is disabled
[0m19:39:32.331697 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__ad_group_report_date_day__ad_group_id.e2963c59e1' (models/amazon_ads.yml) depends on a node named 'amazon_ads__ad_group_report' which is disabled
[0m19:39:32.332767 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads.not_null_amazon_ads__ad_report_ad_id.93728159b3' (models/amazon_ads.yml) depends on a node named 'amazon_ads__ad_report' which is disabled
[0m19:39:32.333989 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__ad_report_date_day__ad_id.cb64b8d0f7' (models/amazon_ads.yml) depends on a node named 'amazon_ads__ad_report' which is disabled
[0m19:39:32.335030 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads.not_null_amazon_ads__campaign_report_campaign_id.a9cabadd7c' (models/amazon_ads.yml) depends on a node named 'amazon_ads__campaign_report' which is disabled
[0m19:39:32.336065 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__campaign_report_date_day__campaign_id.32a2e699e0' (models/amazon_ads.yml) depends on a node named 'amazon_ads__campaign_report' which is disabled
[0m19:39:32.336998 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads.not_null_amazon_ads__portfolio_report_profile_id.1a910441c6' (models/amazon_ads.yml) depends on a node named 'amazon_ads__portfolio_report' which is disabled
[0m19:39:32.338083 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__portfolio_report_date_day__portfolio_id.1a53f40fd6' (models/amazon_ads.yml) depends on a node named 'amazon_ads__portfolio_report' which is disabled
[0m19:39:32.339008 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads.not_null_amazon_ads__keyword_report_keyword_id.303f680e4a' (models/amazon_ads.yml) depends on a node named 'amazon_ads__keyword_report' which is disabled
[0m19:39:32.339905 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__keyword_report_date_day__keyword_id.2f70b31a80' (models/amazon_ads.yml) depends on a node named 'amazon_ads__keyword_report' which is disabled
[0m19:39:32.340814 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads.not_null_amazon_ads__search_report_search_term.3c23d4658a' (models/amazon_ads.yml) depends on a node named 'amazon_ads__search_report' which is disabled
[0m19:39:32.341804 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.amazon_ads.dbt_utils_unique_combination_of_columns_amazon_ads__search_report_date_day__search_term__keyword_id.be92659f9f' (models/amazon_ads.yml) depends on a node named 'amazon_ads__search_report' which is disabled
[0m19:39:32.342830 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.facebook_ads.not_null_facebook_ads__url_report_base_url.b7757e50be' (models/facebook.yml) depends on a node named 'facebook_ads__url_report' which is disabled
[0m19:39:32.343854 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__url_report_date_day__account_id__campaign_id__ad_set_id__ad_id.03a7e82eb7' (models/facebook.yml) depends on a node named 'facebook_ads__url_report' which is disabled
[0m19:39:32.344787 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.facebook_ads.not_null_facebook_ads__ad_report_ad_id.3811d9c238' (models/facebook.yml) depends on a node named 'facebook_ads__ad_report' which is disabled
[0m19:39:32.345729 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__ad_report_date_day__account_id__campaign_id__ad_set_id__ad_id.0a25b64738' (models/facebook.yml) depends on a node named 'facebook_ads__ad_report' which is disabled
[0m19:39:32.346691 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.facebook_ads.not_null_facebook_ads__ad_set_report_ad_set_id.1ac870f5e4' (models/facebook.yml) depends on a node named 'facebook_ads__ad_set_report' which is disabled
[0m19:39:32.347626 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__ad_set_report_date_day__account_id__campaign_id__ad_set_id.3dd4da872f' (models/facebook.yml) depends on a node named 'facebook_ads__ad_set_report' which is disabled
[0m19:39:32.348581 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.facebook_ads.not_null_facebook_ads__campaign_report_campaign_id.d4f96d8d21' (models/facebook.yml) depends on a node named 'facebook_ads__campaign_report' which is disabled
[0m19:39:32.349620 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__campaign_report_date_day__account_id__campaign_id.7cd75107e6' (models/facebook.yml) depends on a node named 'facebook_ads__campaign_report' which is disabled
[0m19:39:32.350689 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.facebook_ads.not_null_facebook_ads__account_report_account_id.9be02b4024' (models/facebook.yml) depends on a node named 'facebook_ads__account_report' which is disabled
[0m19:39:32.351751 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__account_report_date_day__account_id.5a94423e40' (models/facebook.yml) depends on a node named 'facebook_ads__account_report' which is disabled
[0m19:39:32.352858 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.facebook_ads.not_null_facebook_ads__url_tags__fivetran_id.151d9515f3' (models/facebook.yml) depends on a node named 'facebook_ads__url_tags' which is disabled
[0m19:39:32.354079 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__url_tags__fivetran_id__key__type.ba044777d3' (models/facebook.yml) depends on a node named 'facebook_ads__url_tags' which is disabled
[0m19:39:32.356839 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest_source.not_null_stg_pinterest_ads__ad_group_history_ad_group_id.220c6220be' (models/stg_pinterest_ads.yml) depends on a node named 'stg_pinterest_ads__ad_group_history' which is disabled
[0m19:39:32.357951 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__ad_group_history_ad_group_id___fivetran_synced.1132e1f339' (models/stg_pinterest_ads.yml) depends on a node named 'stg_pinterest_ads__ad_group_history' which is disabled
[0m19:39:32.359102 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest_source.not_null_stg_pinterest_ads__campaign_history_campaign_id.60cb10d341' (models/stg_pinterest_ads.yml) depends on a node named 'stg_pinterest_ads__campaign_history' which is disabled
[0m19:39:32.360254 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__campaign_history_campaign_id___fivetran_synced.eff7196b87' (models/stg_pinterest_ads.yml) depends on a node named 'stg_pinterest_ads__campaign_history' which is disabled
[0m19:39:32.361336 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest_source.not_null_stg_pinterest_ads__pin_promotion_history_pin_promotion_id.171995cd34' (models/stg_pinterest_ads.yml) depends on a node named 'stg_pinterest_ads__pin_promotion_history' which is disabled
[0m19:39:32.362713 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__pin_promotion_history__fivetran_synced__pin_promotion_id.8e9ab31ea9' (models/stg_pinterest_ads.yml) depends on a node named 'stg_pinterest_ads__pin_promotion_history' which is disabled
[0m19:39:32.363718 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest_source.not_null_stg_pinterest_ads__pin_promotion_report_date_day.ed272212a1' (models/stg_pinterest_ads.yml) depends on a node named 'stg_pinterest_ads__pin_promotion_report' which is disabled
[0m19:39:32.364950 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest_source.not_null_stg_pinterest_ads__pin_promotion_report_pin_promotion_id.9c3c9f71ab' (models/stg_pinterest_ads.yml) depends on a node named 'stg_pinterest_ads__pin_promotion_report' which is disabled
[0m19:39:32.366289 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__pin_promotion_report_date_day__pin_promotion_id__ad_group_id__campaign_id__advertiser_id.7ea04e6024' (models/stg_pinterest_ads.yml) depends on a node named 'stg_pinterest_ads__pin_promotion_report' which is disabled
[0m19:39:32.367418 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest_source.not_null_stg_pinterest_ads__ad_group_report_date_day.80e8904c4c' (models/stg_pinterest_ads.yml) depends on a node named 'stg_pinterest_ads__ad_group_report' which is disabled
[0m19:39:32.368466 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest_source.not_null_stg_pinterest_ads__ad_group_report_ad_group_id.bb8cf3c471' (models/stg_pinterest_ads.yml) depends on a node named 'stg_pinterest_ads__ad_group_report' which is disabled
[0m19:39:32.369422 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__ad_group_report_date_day__ad_group_id__campaign_id__advertiser_id.3800c02b0e' (models/stg_pinterest_ads.yml) depends on a node named 'stg_pinterest_ads__ad_group_report' which is disabled
[0m19:39:32.370333 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest_source.not_null_stg_pinterest_ads__advertiser_history_advertiser_id.7d24f665fb' (models/stg_pinterest_ads.yml) depends on a node named 'stg_pinterest_ads__advertiser_history' which is disabled
[0m19:39:32.371281 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__advertiser_history_updated_at__advertiser_id.94e8f4de4b' (models/stg_pinterest_ads.yml) depends on a node named 'stg_pinterest_ads__advertiser_history' which is disabled
[0m19:39:32.372351 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest_source.not_null_stg_pinterest_ads__advertiser_report_date_day.153bd03c95' (models/stg_pinterest_ads.yml) depends on a node named 'stg_pinterest_ads__advertiser_report' which is disabled
[0m19:39:32.373417 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest_source.not_null_stg_pinterest_ads__advertiser_report_advertiser_id.1b16ed73ff' (models/stg_pinterest_ads.yml) depends on a node named 'stg_pinterest_ads__advertiser_report' which is disabled
[0m19:39:32.374383 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__advertiser_report_date_day__advertiser_id.e92ce8a9c0' (models/stg_pinterest_ads.yml) depends on a node named 'stg_pinterest_ads__advertiser_report' which is disabled
[0m19:39:32.375544 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest_source.not_null_stg_pinterest_ads__campaign_report_date_day.7ef5fb1238' (models/stg_pinterest_ads.yml) depends on a node named 'stg_pinterest_ads__campaign_report' which is disabled
[0m19:39:32.376536 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest_source.not_null_stg_pinterest_ads__campaign_report_campaign_id.a287eba0fc' (models/stg_pinterest_ads.yml) depends on a node named 'stg_pinterest_ads__campaign_report' which is disabled
[0m19:39:32.377462 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__campaign_report_date_day__campaign_id__advertiser_id.ff47cb8abc' (models/stg_pinterest_ads.yml) depends on a node named 'stg_pinterest_ads__campaign_report' which is disabled
[0m19:39:32.378306 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest_source.not_null_stg_pinterest_ads__keyword_history_keyword_id.246889377a' (models/stg_pinterest_ads.yml) depends on a node named 'stg_pinterest_ads__keyword_history' which is disabled
[0m19:39:32.379155 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__keyword_history_keyword_id__ad_group_id___fivetran_synced.d122faa877' (models/stg_pinterest_ads.yml) depends on a node named 'stg_pinterest_ads__keyword_history' which is disabled
[0m19:39:32.380123 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest_source.not_null_stg_pinterest_ads__keyword_report_date_day.9937216300' (models/stg_pinterest_ads.yml) depends on a node named 'stg_pinterest_ads__keyword_report' which is disabled
[0m19:39:32.381042 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest_source.not_null_stg_pinterest_ads__keyword_report_keyword_id.5f00679c48' (models/stg_pinterest_ads.yml) depends on a node named 'stg_pinterest_ads__keyword_report' which is disabled
[0m19:39:32.381964 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.pinterest_source.dbt_utils_unique_combination_of_columns_stg_pinterest_ads__keyword_report_date_day__keyword_id__pin_promotion_id__ad_group_id__campaign_id__advertiser_id.9504d17df6' (models/stg_pinterest_ads.yml) depends on a node named 'stg_pinterest_ads__keyword_report' which is disabled
[0m19:39:32.383193 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.facebook_ads_source.not_null_stg_facebook_ads__account_history_account_id.f1cf38c40f' (models/stg_facebook_ads.yml) depends on a node named 'stg_facebook_ads__account_history' which is disabled
[0m19:39:32.384245 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.facebook_ads_source.not_null_stg_facebook_ads__account_history__fivetran_synced.0570e35e1f' (models/stg_facebook_ads.yml) depends on a node named 'stg_facebook_ads__account_history' which is disabled
[0m19:39:32.385394 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__account_history_account_id___fivetran_synced.f9b4d28fa2' (models/stg_facebook_ads.yml) depends on a node named 'stg_facebook_ads__account_history' which is disabled
[0m19:39:32.386461 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.facebook_ads_source.not_null_stg_facebook_ads__ad_history_ad_id.11429d3064' (models/stg_facebook_ads.yml) depends on a node named 'stg_facebook_ads__ad_history' which is disabled
[0m19:39:32.387473 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.facebook_ads_source.not_null_stg_facebook_ads__ad_history_updated_at.250a5a84e4' (models/stg_facebook_ads.yml) depends on a node named 'stg_facebook_ads__ad_history' which is disabled
[0m19:39:32.388493 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__ad_history_ad_id__updated_at.2922c18b58' (models/stg_facebook_ads.yml) depends on a node named 'stg_facebook_ads__ad_history' which is disabled
[0m19:39:32.389417 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.facebook_ads_source.not_null_stg_facebook_ads__ad_set_history_ad_set_id.e19a1df1bb' (models/stg_facebook_ads.yml) depends on a node named 'stg_facebook_ads__ad_set_history' which is disabled
[0m19:39:32.390448 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.facebook_ads_source.not_null_stg_facebook_ads__ad_set_history_updated_at.ef7fafe0fa' (models/stg_facebook_ads.yml) depends on a node named 'stg_facebook_ads__ad_set_history' which is disabled
[0m19:39:32.391446 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__ad_set_history_ad_set_id__updated_at.0a60ad0fef' (models/stg_facebook_ads.yml) depends on a node named 'stg_facebook_ads__ad_set_history' which is disabled
[0m19:39:32.392406 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.facebook_ads_source.not_null_stg_facebook_ads__campaign_history_campaign_id.1ca7a83852' (models/stg_facebook_ads.yml) depends on a node named 'stg_facebook_ads__campaign_history' which is disabled
[0m19:39:32.393254 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.facebook_ads_source.not_null_stg_facebook_ads__campaign_history_updated_at.9e59f99270' (models/stg_facebook_ads.yml) depends on a node named 'stg_facebook_ads__campaign_history' which is disabled
[0m19:39:32.394182 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__campaign_history_campaign_id__updated_at.7437b392c2' (models/stg_facebook_ads.yml) depends on a node named 'stg_facebook_ads__campaign_history' which is disabled
[0m19:39:32.395139 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.facebook_ads_source.not_null_stg_facebook_ads__creative_history__fivetran_synced.3b0593cb4f' (models/stg_facebook_ads.yml) depends on a node named 'stg_facebook_ads__creative_history' which is disabled
[0m19:39:32.396080 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.facebook_ads_source.not_null_stg_facebook_ads__creative_history_creative_id.eb4d804261' (models/stg_facebook_ads.yml) depends on a node named 'stg_facebook_ads__creative_history' which is disabled
[0m19:39:32.396958 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__creative_history_creative_id___fivetran_synced.69ddc26562' (models/stg_facebook_ads.yml) depends on a node named 'stg_facebook_ads__creative_history' which is disabled
[0m19:39:32.397954 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.facebook_ads_source.not_null_stg_facebook_ads__basic_ad_ad_id.2611b250fc' (models/stg_facebook_ads.yml) depends on a node named 'stg_facebook_ads__basic_ad' which is disabled
[0m19:39:32.399072 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.facebook_ads_source.not_null_stg_facebook_ads__basic_ad_account_id.d06f6d861b' (models/stg_facebook_ads.yml) depends on a node named 'stg_facebook_ads__basic_ad' which is disabled
[0m19:39:32.400148 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__basic_ad_date_day__ad_id__account_id.bd909529e7' (models/stg_facebook_ads.yml) depends on a node named 'stg_facebook_ads__basic_ad' which is disabled
[0m19:39:32.401624 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads.not_null_microsoft_ads__account_report_account_id.f88e46157e' (models/microsoft_ads.yml) depends on a node named 'microsoft_ads__account_report' which is disabled
[0m19:39:32.402785 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__account_report_date_day__account_id__device_os__device_type__network__currency_code.2d5faac68f' (models/microsoft_ads.yml) depends on a node named 'microsoft_ads__account_report' which is disabled
[0m19:39:32.403761 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads.not_null_microsoft_ads__ad_group_report_ad_group_id.1974ec5ab9' (models/microsoft_ads.yml) depends on a node named 'microsoft_ads__ad_group_report' which is disabled
[0m19:39:32.404700 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__ad_group_report_date_day__account_id__campaign_id__ad_group_id__device_os__device_type__network__currency_code.87353ef6b3' (models/microsoft_ads.yml) depends on a node named 'microsoft_ads__ad_group_report' which is disabled
[0m19:39:32.405640 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads.not_null_microsoft_ads__ad_report_ad_id.b089709125' (models/microsoft_ads.yml) depends on a node named 'microsoft_ads__ad_report' which is disabled
[0m19:39:32.406557 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__ad_report_date_day__account_id__campaign_id__ad_group_id__ad_id__ad_type__device_os__device_type__network__currency_code.4b91f31686' (models/microsoft_ads.yml) depends on a node named 'microsoft_ads__ad_report' which is disabled
[0m19:39:32.407464 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads.not_null_microsoft_ads__campaign_report_campaign_id.67aa50e1f8' (models/microsoft_ads.yml) depends on a node named 'microsoft_ads__campaign_report' which is disabled
[0m19:39:32.408373 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__campaign_report_date_day__account_id__campaign_id__device_os__device_type__network__currency_code.d7e35aaa9b' (models/microsoft_ads.yml) depends on a node named 'microsoft_ads__campaign_report' which is disabled
[0m19:39:32.409282 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads.not_null_microsoft_ads__keyword_report_keyword_id.da1d648d3b' (models/microsoft_ads.yml) depends on a node named 'microsoft_ads__keyword_report' which is disabled
[0m19:39:32.410202 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__keyword_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__device_os__device_type__network__currency_code.9ddafdcbe9' (models/microsoft_ads.yml) depends on a node named 'microsoft_ads__keyword_report' which is disabled
[0m19:39:32.411184 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads.not_null_microsoft_ads__search_report_search_query.fa3625d66d' (models/microsoft_ads.yml) depends on a node named 'microsoft_ads__search_report' which is disabled
[0m19:39:32.412131 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__search_report_date_day__account_id__campaign_id__ad_group_id__ad_id__keyword_id__search_query__device_os__device_type__network__match_type.8b1ebd50a3' (models/microsoft_ads.yml) depends on a node named 'microsoft_ads__search_report' which is disabled
[0m19:39:32.413164 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads.not_null_microsoft_ads__url_report_base_url.c1af50307a' (models/microsoft_ads.yml) depends on a node named 'microsoft_ads__url_report' which is disabled
[0m19:39:32.414118 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.microsoft_ads.dbt_utils_unique_combination_of_columns_microsoft_ads__url_report_date_day__account_id__campaign_id__ad_group_id__ad_id__device_os__device_type__network__currency_code.070da99eb7' (models/microsoft_ads.yml) depends on a node named 'microsoft_ads__url_report' which is disabled
[0m19:39:32.415547 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.linkedin.not_null_linkedin_ads__account_report_account_id.0c34ea1842' (models/linkedin.yml) depends on a node named 'linkedin_ads__account_report' which is disabled
[0m19:39:32.416473 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.linkedin.not_null_linkedin_ads__account_report_date_day.c4b33f8f53' (models/linkedin.yml) depends on a node named 'linkedin_ads__account_report' which is disabled
[0m19:39:32.417391 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.linkedin.dbt_utils_unique_combination_of_columns_linkedin_ads__account_report_date_day__account_id.a2dcede91c' (models/linkedin.yml) depends on a node named 'linkedin_ads__account_report' which is disabled
[0m19:39:32.418368 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.linkedin.not_null_linkedin_ads__campaign_report_date_day.8d320b88b1' (models/linkedin.yml) depends on a node named 'linkedin_ads__campaign_report' which is disabled
[0m19:39:32.419316 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.linkedin.not_null_linkedin_ads__campaign_report_campaign_id.bf43964b15' (models/linkedin.yml) depends on a node named 'linkedin_ads__campaign_report' which is disabled
[0m19:39:32.420257 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.linkedin.dbt_utils_unique_combination_of_columns_linkedin_ads__campaign_report_date_day__campaign_id__account_id__campaign_group_id.0b09b4b3f3' (models/linkedin.yml) depends on a node named 'linkedin_ads__campaign_report' which is disabled
[0m19:39:32.421189 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.linkedin.not_null_linkedin_ads__campaign_group_report_date_day.2676a1f76b' (models/linkedin.yml) depends on a node named 'linkedin_ads__campaign_group_report' which is disabled
[0m19:39:32.422096 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.linkedin.not_null_linkedin_ads__campaign_group_report_campaign_group_id.39b448cdaf' (models/linkedin.yml) depends on a node named 'linkedin_ads__campaign_group_report' which is disabled
[0m19:39:32.422996 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.linkedin.dbt_utils_unique_combination_of_columns_linkedin_ads__campaign_group_report_date_day__campaign_group_id__account_id.f60989a7a6' (models/linkedin.yml) depends on a node named 'linkedin_ads__campaign_group_report' which is disabled
[0m19:39:32.423901 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.linkedin.not_null_linkedin_ads__creative_report_date_day.0c6338b020' (models/linkedin.yml) depends on a node named 'linkedin_ads__creative_report' which is disabled
[0m19:39:32.424818 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.linkedin.not_null_linkedin_ads__creative_report_creative_id.096d93f889' (models/linkedin.yml) depends on a node named 'linkedin_ads__creative_report' which is disabled
[0m19:39:32.425781 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.linkedin.dbt_utils_unique_combination_of_columns_linkedin_ads__creative_report_date_day__creative_id__campaign_id__campaign_group_id__account_id.5c000e925f' (models/linkedin.yml) depends on a node named 'linkedin_ads__creative_report' which is disabled
[0m19:39:32.426785 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.linkedin.not_null_linkedin_ads__url_report_date_day.48b540f315' (models/linkedin.yml) depends on a node named 'linkedin_ads__url_report' which is disabled
[0m19:39:32.427879 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.linkedin.not_null_linkedin_ads__url_report_creative_id.83967fe9d2' (models/linkedin.yml) depends on a node named 'linkedin_ads__url_report' which is disabled
[0m19:39:32.428905 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.linkedin.not_null_linkedin_ads__url_report_click_uri.81534087cb' (models/linkedin.yml) depends on a node named 'linkedin_ads__url_report' which is disabled
[0m19:39:32.429963 [debug] [MainThread]: [[33mWARNING[0m]: Test 'test.linkedin.dbt_utils_unique_combination_of_columns_linkedin_ads__url_report_date_day__creative_id__campaign_id__campaign_group_id__account_id.d00d4a104d' (models/linkedin.yml) depends on a node named 'linkedin_ads__url_report' which is disabled
[0m19:39:33.827332 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd132505820>]}
[0m19:39:34.658946 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd135582be0>]}
[0m19:39:34.659951 [info ] [MainThread]: Found 138 models, 230 tests, 46 sources, 0 exposures, 9 metrics, 947 macros, 0 groups, 1 semantic model
[0m19:39:34.661437 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd132485940>]}
[0m19:39:34.685204 [info ] [MainThread]: 
[0m19:39:34.686970 [debug] [MainThread]: Acquiring new bigquery connection 'master'
[0m19:39:34.699475 [debug] [ThreadPool]: Acquiring new bigquery connection 'list_drops-bi'
[0m19:39:34.700594 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m19:39:34.740722 [debug] [ThreadPool]: Acquiring new bigquery connection 'list_drops-bi'
[0m19:39:34.742454 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m19:39:34.752442 [debug] [ThreadPool]: Acquiring new bigquery connection 'list_drops-bi'
[0m19:39:34.753695 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m19:39:34.777286 [debug] [ThreadPool]: Acquiring new bigquery connection 'list_drops-bi'
[0m19:39:34.778637 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m19:39:34.780941 [debug] [ThreadPool]: Acquiring new bigquery connection 'list_drops-bi'
[0m19:39:34.788734 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m19:39:34.855234 [debug] [ThreadPool]: Acquiring new bigquery connection 'list_drops-bi'
[0m19:39:34.856242 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m19:39:34.869491 [debug] [ThreadPool]: Acquiring new bigquery connection 'list_drops-bi'
[0m19:39:34.870521 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m19:39:34.886359 [debug] [ThreadPool]: Acquiring new bigquery connection 'list_drops-bi'
[0m19:39:34.887315 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m19:39:34.891201 [debug] [ThreadPool]: Acquiring new bigquery connection 'list_drops-bi'
[0m19:39:34.892166 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m19:39:34.911398 [debug] [ThreadPool]: Acquiring new bigquery connection 'list_drops-bi'
[0m19:39:34.912403 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m19:39:34.919371 [debug] [ThreadPool]: Acquiring new bigquery connection 'list_drops-bi'
[0m19:39:34.920022 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m19:39:34.933447 [debug] [ThreadPool]: Acquiring new bigquery connection 'list_drops-bi'
[0m19:39:34.934448 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m19:39:42.793378 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_drops-bi, now create_drops-bi_marketing_full_v2_apple_search_ads_source)
[0m19:39:42.795084 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_drops-bi, now create_drops-bi_marketing_full_v2_stg_tiktok_ads)
[0m19:39:42.796687 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_drops-bi, now create_drops-bi_marketing_full_v2_snapchat_ads)
[0m19:39:42.798250 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_drops-bi, now create_drops-bi_marketing_full_v2_google_ads)
[0m19:39:42.799954 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_drops-bi, now create_drops-bi_marketing_full_v2_tiktok_ads)
[0m19:39:42.802173 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_drops-bi, now create_drops-bi_marketing_full_v2)
[0m19:39:42.804753 [debug] [ThreadPool]: Creating schema "database: "drops-bi"
schema: "marketing_full_v2_apple_search_ads_source"
"
[0m19:39:42.807542 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_drops-bi, now create_drops-bi_marketing_full_v2_google_ads_source)
[0m19:39:42.809545 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_drops-bi, now create_drops-bi_marketing_full_v2_twitter_ads)
[0m19:39:42.811122 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_drops-bi, now create_drops-bi_marketing_full_v2_snapchat_ads_source)
[0m19:39:42.814356 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_drops-bi, now create_drops-bi_marketing_full_v2_apple_search_ads)
[0m19:39:42.816107 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_drops-bi, now create_drops-bi_marketing_full_v2_ad_reporting)
[0m19:39:42.817895 [debug] [ThreadPool]: Creating schema "database: "drops-bi"
schema: "marketing_full_v2_stg_tiktok_ads"
"
[0m19:39:42.819498 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_drops-bi, now create_drops-bi_marketing_full_v2_twitter_ads_source)
[0m19:39:42.823273 [debug] [ThreadPool]: Creating schema "database: "drops-bi"
schema: "marketing_full_v2_snapchat_ads"
"
[0m19:39:42.825365 [debug] [ThreadPool]: Creating schema "database: "drops-bi"
schema: "marketing_full_v2_google_ads"
"
[0m19:39:42.827417 [debug] [ThreadPool]: Creating schema "database: "drops-bi"
schema: "marketing_full_v2_tiktok_ads"
"
[0m19:39:42.829690 [debug] [ThreadPool]: Creating schema "database: "drops-bi"
schema: "marketing_full_v2"
"
[0m19:39:42.845346 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m19:39:42.847334 [debug] [ThreadPool]: Creating schema "database: "drops-bi"
schema: "marketing_full_v2_google_ads_source"
"
[0m19:39:42.849264 [debug] [ThreadPool]: Creating schema "database: "drops-bi"
schema: "marketing_full_v2_twitter_ads"
"
[0m19:39:42.851195 [debug] [ThreadPool]: Creating schema "database: "drops-bi"
schema: "marketing_full_v2_snapchat_ads_source"
"
[0m19:39:42.853142 [debug] [ThreadPool]: Creating schema "database: "drops-bi"
schema: "marketing_full_v2_apple_search_ads"
"
[0m19:39:42.855356 [debug] [ThreadPool]: Creating schema "database: "drops-bi"
schema: "marketing_full_v2_ad_reporting"
"
[0m19:39:42.874882 [debug] [ThreadPool]: Creating schema "database: "drops-bi"
schema: "marketing_full_v2_twitter_ads_source"
"
[0m19:39:42.896228 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m19:39:42.920695 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m19:39:42.933953 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m19:39:42.952207 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m19:39:42.961287 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m19:39:42.974302 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m19:39:42.994848 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m19:39:43.002637 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m19:39:43.015653 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m19:39:43.033786 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m19:39:43.345215 [debug] [ThreadPool]: On create_drops-bi_marketing_full_v2_snapchat_ads_source: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "connection_name": "create_drops-bi_marketing_full_v2_snapchat_ads_source"} */
create schema if not exists `drops-bi`.`marketing_full_v2_snapchat_ads_source`
  
[0m19:39:43.346714 [debug] [ThreadPool]: On create_drops-bi_marketing_full_v2_apple_search_ads_source: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "connection_name": "create_drops-bi_marketing_full_v2_apple_search_ads_source"} */
create schema if not exists `drops-bi`.`marketing_full_v2_apple_search_ads_source`
  
[0m19:39:43.347745 [debug] [ThreadPool]: On create_drops-bi_marketing_full_v2_twitter_ads: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "connection_name": "create_drops-bi_marketing_full_v2_twitter_ads"} */
create schema if not exists `drops-bi`.`marketing_full_v2_twitter_ads`
  
[0m19:39:43.348869 [debug] [ThreadPool]: On create_drops-bi_marketing_full_v2_google_ads_source: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "connection_name": "create_drops-bi_marketing_full_v2_google_ads_source"} */
create schema if not exists `drops-bi`.`marketing_full_v2_google_ads_source`
  
[0m19:39:43.349860 [debug] [ThreadPool]: On create_drops-bi_marketing_full_v2_snapchat_ads: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "connection_name": "create_drops-bi_marketing_full_v2_snapchat_ads"} */
create schema if not exists `drops-bi`.`marketing_full_v2_snapchat_ads`
  
[0m19:39:43.354919 [debug] [ThreadPool]: On create_drops-bi_marketing_full_v2: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "connection_name": "create_drops-bi_marketing_full_v2"} */
create schema if not exists `drops-bi`.`marketing_full_v2`
  
[0m19:39:43.423000 [debug] [ThreadPool]: On create_drops-bi_marketing_full_v2_twitter_ads_source: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "connection_name": "create_drops-bi_marketing_full_v2_twitter_ads_source"} */
create schema if not exists `drops-bi`.`marketing_full_v2_twitter_ads_source`
  
[0m19:39:43.355891 [debug] [ThreadPool]: On create_drops-bi_marketing_full_v2_google_ads: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "connection_name": "create_drops-bi_marketing_full_v2_google_ads"} */
create schema if not exists `drops-bi`.`marketing_full_v2_google_ads`
  
[0m19:39:43.371650 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m19:39:43.356861 [debug] [ThreadPool]: On create_drops-bi_marketing_full_v2_tiktok_ads: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "connection_name": "create_drops-bi_marketing_full_v2_tiktok_ads"} */
create schema if not exists `drops-bi`.`marketing_full_v2_tiktok_ads`
  
[0m19:39:43.404763 [debug] [ThreadPool]: On create_drops-bi_marketing_full_v2_ad_reporting: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "connection_name": "create_drops-bi_marketing_full_v2_ad_reporting"} */
create schema if not exists `drops-bi`.`marketing_full_v2_ad_reporting`
  
[0m19:39:43.490905 [debug] [ThreadPool]: On create_drops-bi_marketing_full_v2_apple_search_ads: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "connection_name": "create_drops-bi_marketing_full_v2_apple_search_ads"} */
create schema if not exists `drops-bi`.`marketing_full_v2_apple_search_ads`
  
[0m19:39:43.732614 [debug] [ThreadPool]: On create_drops-bi_marketing_full_v2_stg_tiktok_ads: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "connection_name": "create_drops-bi_marketing_full_v2_stg_tiktok_ads"} */
create schema if not exists `drops-bi`.`marketing_full_v2_stg_tiktok_ads`
  
[0m19:39:45.441045 [debug] [ThreadPool]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:bf60c3d7-f8eb-4683-bfac-cb8d8cab1d7d&page=queryresults
[0m19:39:45.604544 [debug] [ThreadPool]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:cd91af59-b8f7-451c-9486-8818e71c7a98&page=queryresults
[0m19:39:45.862356 [debug] [ThreadPool]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:10abdb68-65f9-44db-b5af-261c4192a839&page=queryresults
[0m19:39:45.891374 [debug] [ThreadPool]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:72a30317-091a-4651-8048-7d9e0d1cf101&page=queryresults
[0m19:39:45.908027 [debug] [ThreadPool]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:33f927c0-d797-4999-b172-352533e65458&page=queryresults
[0m19:39:45.916971 [debug] [ThreadPool]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:75152cfa-7d81-449c-921d-8427a229b5c7&page=queryresults
[0m19:39:45.938379 [debug] [ThreadPool]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:7b4f8ba6-6b1c-470f-81c4-0723792dd2cf&page=queryresults
[0m19:39:46.030513 [debug] [ThreadPool]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:803d4b30-4063-482a-b80c-ae058d0b0f82&page=queryresults
[0m19:39:46.070211 [debug] [ThreadPool]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:bce2f7e8-c08b-4330-9fe9-e22d0a9820a5&page=queryresults
[0m19:39:46.091238 [debug] [ThreadPool]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:379e2862-0020-4d94-b939-3e710294bd95&page=queryresults
[0m19:39:46.092993 [debug] [ThreadPool]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:8b1fc519-6c7b-4364-b48b-26f05c49b7e7&page=queryresults
[0m19:39:46.128503 [debug] [ThreadPool]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:0360faba-c74c-4289-9cd1-0fa57b176d82&page=queryresults
[0m19:39:47.163622 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_drops-bi_marketing_full_v2_stg_tiktok_ads, now list_drops-bi_marketing_full_v2_apple_search_ads_source)
[0m19:39:47.164974 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m19:39:47.166638 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_drops-bi_marketing_full_v2_tiktok_ads, now list_drops-bi_marketing_full_v2_stg_tiktok_ads)
[0m19:39:47.168811 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_drops-bi_marketing_full_v2_apple_search_ads, now list_drops-bi_marketing_full_v2_snapchat_ads)
[0m19:39:47.170801 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_drops-bi_marketing_full_v2_twitter_ads, now list_drops-bi_marketing_full_v2_google_ads)
[0m19:39:47.172843 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_drops-bi_marketing_full_v2_twitter_ads_source, now list_drops-bi_marketing_full_v2_tiktok_ads)
[0m19:39:47.174779 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_drops-bi_marketing_full_v2_apple_search_ads_source, now list_drops-bi_marketing_full_v2)
[0m19:39:47.175730 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m19:39:47.179570 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_drops-bi_marketing_full_v2_snapchat_ads_source, now list_drops-bi_marketing_full_v2_google_ads_source)
[0m19:39:47.181707 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_drops-bi_marketing_full_v2_snapchat_ads, now list_drops-bi_marketing_full_v2_twitter_ads)
[0m19:39:47.182705 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m19:39:47.184753 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_drops-bi_marketing_full_v2_google_ads_source, now list_drops-bi_marketing_full_v2_snapchat_ads_source)
[0m19:39:47.197410 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m19:39:47.187822 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_drops-bi_marketing_full_v2_ad_reporting, now list_drops-bi_marketing_full_v2_apple_search_ads)
[0m19:39:47.207142 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m19:39:47.189019 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m19:39:47.192643 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_drops-bi_marketing_full_v2_google_ads, now list_drops-bi_marketing_full_v2_twitter_ads_source)
[0m19:39:47.190643 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_drops-bi_marketing_full_v2, now list_drops-bi_marketing_full_v2_ad_reporting)
[0m19:39:47.238333 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m19:39:47.195273 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m19:39:47.196200 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m19:39:47.227125 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m19:39:47.193767 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m19:39:47.185847 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m19:39:49.791781 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13250ba60>]}
[0m19:39:49.794127 [info ] [MainThread]: Concurrency: 15 threads (target='dev')
[0m19:39:49.795150 [info ] [MainThread]: 
[0m19:39:49.829780 [debug] [Thread-1  ]: Began running node model.ad_reporting.metricflow_time_spine
[0m19:39:49.830830 [debug] [Thread-2  ]: Began running node model.apple_search_ads_source.stg_apple_search_ads__ad_group_history_tmp
[0m19:39:49.832431 [debug] [Thread-3  ]: Began running node model.apple_search_ads_source.stg_apple_search_ads__ad_group_report_tmp
[0m19:39:49.835029 [debug] [Thread-4  ]: Began running node model.apple_search_ads_source.stg_apple_search_ads__ad_history_tmp
[0m19:39:49.859896 [info ] [Thread-4  ]: 4 of 130 START sql view model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__ad_history_tmp  [RUN]
[0m19:39:49.862703 [debug] [Thread-4  ]: Re-using an available connection from the pool (formerly list_drops-bi_marketing_full_v2_google_ads, now model.apple_search_ads_source.stg_apple_search_ads__ad_history_tmp)
[0m19:39:49.864471 [debug] [Thread-4  ]: Began compiling node model.apple_search_ads_source.stg_apple_search_ads__ad_history_tmp
[0m19:39:49.837843 [debug] [Thread-5  ]: Began running node model.apple_search_ads_source.stg_apple_search_ads__ad_report_tmp
[0m19:39:49.846189 [info ] [Thread-2  ]: 2 of 130 START sql view model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__ad_group_history_tmp  [RUN]
[0m19:39:49.849276 [info ] [Thread-3  ]: 3 of 130 START sql view model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__ad_group_report_tmp  [RUN]
[0m19:39:49.852898 [debug] [Thread-8  ]: Began running node model.apple_search_ads_source.stg_apple_search_ads__keyword_history_tmp
[0m19:39:49.855743 [debug] [Thread-9  ]: Began running node model.apple_search_ads_source.stg_apple_search_ads__keyword_report_tmp
[0m19:39:49.856869 [debug] [Thread-10 ]: Began running node model.apple_search_ads_source.stg_apple_search_ads__organization_tmp
[0m19:39:49.879809 [debug] [Thread-11 ]: Began running node model.apple_search_ads_source.stg_apple_search_ads__search_term_report_tmp
[0m19:39:49.840488 [debug] [Thread-6  ]: Began running node model.apple_search_ads_source.stg_apple_search_ads__campaign_history_tmp
[0m19:39:49.911164 [debug] [Thread-12 ]: Began running node model.dbt_ads_test.my_first_dbt_model
[0m19:39:49.955690 [info ] [Thread-12 ]: 12 of 130 START sql table model marketing_full_v2.my_first_dbt_model ........... [RUN]
[0m19:39:49.842198 [info ] [Thread-1  ]: 1 of 130 START sql table model marketing_full_v2_ad_reporting.metricflow_time_spine  [RUN]
[0m19:39:49.960569 [debug] [Thread-1  ]: Re-using an available connection from the pool (formerly list_drops-bi_marketing_full_v2_apple_search_ads_source, now model.ad_reporting.metricflow_time_spine)
[0m19:39:49.961382 [debug] [Thread-1  ]: Began compiling node model.ad_reporting.metricflow_time_spine
[0m19:39:49.843921 [debug] [Thread-7  ]: Began running node model.apple_search_ads_source.stg_apple_search_ads__campaign_report_tmp
[0m19:39:49.926933 [info ] [Thread-5  ]: 5 of 130 START sql view model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__ad_report_tmp  [RUN]
[0m19:39:49.938934 [debug] [Thread-2  ]: Re-using an available connection from the pool (formerly list_drops-bi_marketing_full_v2_stg_tiktok_ads, now model.apple_search_ads_source.stg_apple_search_ads__ad_group_history_tmp)
[0m19:39:49.942599 [debug] [Thread-3  ]: Re-using an available connection from the pool (formerly list_drops-bi_marketing_full_v2_snapchat_ads, now model.apple_search_ads_source.stg_apple_search_ads__ad_group_report_tmp)
[0m19:39:49.943746 [info ] [Thread-8  ]: 8 of 130 START sql view model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__keyword_history_tmp  [RUN]
[0m19:39:49.945183 [info ] [Thread-9  ]: 9 of 130 START sql view model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__keyword_report_tmp  [RUN]
[0m19:39:49.936019 [debug] [Thread-4  ]: Writing injected SQL for node "model.apple_search_ads_source.stg_apple_search_ads__ad_history_tmp"
[0m19:39:49.946414 [info ] [Thread-10 ]: 10 of 130 START sql view model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__organization_tmp  [RUN]
[0m19:39:49.949934 [info ] [Thread-11 ]: 11 of 130 START sql view model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__search_term_report_tmp  [RUN]
[0m19:39:49.953899 [info ] [Thread-6  ]: 6 of 130 START sql view model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__campaign_history_tmp  [RUN]
[0m19:39:49.958618 [debug] [Thread-12 ]: Re-using an available connection from the pool (formerly list_drops-bi_marketing_full_v2_twitter_ads_source, now model.dbt_ads_test.my_first_dbt_model)
[0m19:39:49.913178 [debug] [Thread-13 ]: Began running node model.google_ads_source.stg_google_ads__account_history_tmp
[0m19:39:49.925133 [debug] [Thread-14 ]: Began running node model.google_ads_source.stg_google_ads__account_stats_tmp
[0m19:39:49.927911 [debug] [Thread-15 ]: Began running node model.google_ads_source.stg_google_ads__ad_group_criterion_history_tmp
[0m19:39:49.977922 [info ] [Thread-7  ]: 7 of 130 START sql view model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__campaign_report_tmp  [RUN]
[0m19:39:49.991039 [debug] [Thread-5  ]: Re-using an available connection from the pool (formerly list_drops-bi_marketing_full_v2_tiktok_ads, now model.apple_search_ads_source.stg_apple_search_ads__ad_report_tmp)
[0m19:39:49.992703 [debug] [Thread-2  ]: Began compiling node model.apple_search_ads_source.stg_apple_search_ads__ad_group_history_tmp
[0m19:39:49.994147 [debug] [Thread-3  ]: Began compiling node model.apple_search_ads_source.stg_apple_search_ads__ad_group_report_tmp
[0m19:39:49.996132 [debug] [Thread-8  ]: Re-using an available connection from the pool (formerly list_drops-bi_marketing_full_v2_twitter_ads, now model.apple_search_ads_source.stg_apple_search_ads__keyword_history_tmp)
[0m19:39:50.008421 [debug] [Thread-9  ]: Re-using an available connection from the pool (formerly list_drops-bi_marketing_full_v2_snapchat_ads_source, now model.apple_search_ads_source.stg_apple_search_ads__keyword_report_tmp)
[0m19:39:50.010408 [debug] [Thread-10 ]: Re-using an available connection from the pool (formerly list_drops-bi_marketing_full_v2_apple_search_ads, now model.apple_search_ads_source.stg_apple_search_ads__organization_tmp)
[0m19:39:50.020057 [debug] [Thread-1  ]: Opening a new connection, currently in state closed
[0m19:39:50.021955 [debug] [Thread-11 ]: Re-using an available connection from the pool (formerly list_drops-bi_marketing_full_v2_ad_reporting, now model.apple_search_ads_source.stg_apple_search_ads__search_term_report_tmp)
[0m19:39:50.023838 [debug] [Thread-6  ]: Re-using an available connection from the pool (formerly list_drops-bi_marketing_full_v2, now model.apple_search_ads_source.stg_apple_search_ads__campaign_history_tmp)
[0m19:39:50.025726 [debug] [Thread-12 ]: Began compiling node model.dbt_ads_test.my_first_dbt_model
[0m19:39:50.028505 [debug] [Thread-4  ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__ad_history_tmp (compile): 19:39:49.865369 => 19:39:50.026487
[0m19:39:50.030064 [info ] [Thread-13 ]: 13 of 130 START sql view model marketing_full_v2_google_ads_source.stg_google_ads__account_history_tmp  [RUN]
[0m19:39:50.031709 [info ] [Thread-14 ]: 14 of 130 START sql view model marketing_full_v2_google_ads_source.stg_google_ads__account_stats_tmp  [RUN]
[0m19:39:50.033325 [info ] [Thread-15 ]: 15 of 130 START sql view model marketing_full_v2_google_ads_source.stg_google_ads__ad_group_criterion_history_tmp  [RUN]
[0m19:39:50.035567 [debug] [Thread-7  ]: Re-using an available connection from the pool (formerly list_drops-bi_marketing_full_v2_google_ads_source, now model.apple_search_ads_source.stg_apple_search_ads__campaign_report_tmp)
[0m19:39:50.036914 [debug] [Thread-5  ]: Began compiling node model.apple_search_ads_source.stg_apple_search_ads__ad_report_tmp
[0m19:39:50.074433 [debug] [Thread-8  ]: Began compiling node model.apple_search_ads_source.stg_apple_search_ads__keyword_history_tmp
[0m19:39:50.077351 [debug] [Thread-3  ]: Writing injected SQL for node "model.apple_search_ads_source.stg_apple_search_ads__ad_group_report_tmp"
[0m19:39:50.089602 [debug] [Thread-9  ]: Began compiling node model.apple_search_ads_source.stg_apple_search_ads__keyword_report_tmp
[0m19:39:50.102177 [debug] [Thread-10 ]: Began compiling node model.apple_search_ads_source.stg_apple_search_ads__organization_tmp
[0m19:39:50.144142 [debug] [Thread-2  ]: Writing injected SQL for node "model.apple_search_ads_source.stg_apple_search_ads__ad_group_history_tmp"
[0m19:39:50.145762 [debug] [Thread-11 ]: Began compiling node model.apple_search_ads_source.stg_apple_search_ads__search_term_report_tmp
[0m19:39:50.146939 [debug] [Thread-6  ]: Began compiling node model.apple_search_ads_source.stg_apple_search_ads__campaign_history_tmp
[0m19:39:50.156117 [debug] [Thread-12 ]: Writing injected SQL for node "model.dbt_ads_test.my_first_dbt_model"
[0m19:39:50.157277 [debug] [Thread-4  ]: Began executing node model.apple_search_ads_source.stg_apple_search_ads__ad_history_tmp
[0m19:39:50.159072 [debug] [Thread-13 ]: Acquiring new bigquery connection 'model.google_ads_source.stg_google_ads__account_history_tmp'
[0m19:39:50.160888 [debug] [Thread-14 ]: Acquiring new bigquery connection 'model.google_ads_source.stg_google_ads__account_stats_tmp'
[0m19:39:50.162759 [debug] [Thread-15 ]: Acquiring new bigquery connection 'model.google_ads_source.stg_google_ads__ad_group_criterion_history_tmp'
[0m19:39:50.163913 [debug] [Thread-7  ]: Began compiling node model.apple_search_ads_source.stg_apple_search_ads__campaign_report_tmp
[0m19:39:50.175295 [debug] [Thread-5  ]: Writing injected SQL for node "model.apple_search_ads_source.stg_apple_search_ads__ad_report_tmp"
[0m19:39:50.187004 [debug] [Thread-8  ]: Writing injected SQL for node "model.apple_search_ads_source.stg_apple_search_ads__keyword_history_tmp"
[0m19:39:50.201254 [debug] [Thread-9  ]: Writing injected SQL for node "model.apple_search_ads_source.stg_apple_search_ads__keyword_report_tmp"
[0m19:39:50.212591 [debug] [Thread-10 ]: Writing injected SQL for node "model.apple_search_ads_source.stg_apple_search_ads__organization_tmp"
[0m19:39:50.213932 [debug] [Thread-3  ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__ad_group_report_tmp (compile): 19:39:50.050061 => 19:39:50.213314
[0m19:39:50.234408 [debug] [Thread-2  ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__ad_group_history_tmp (compile): 19:39:50.037809 => 19:39:50.233641
[0m19:39:50.241356 [debug] [Thread-11 ]: Writing injected SQL for node "model.apple_search_ads_source.stg_apple_search_ads__search_term_report_tmp"
[0m19:39:50.240464 [debug] [Thread-6  ]: Writing injected SQL for node "model.apple_search_ads_source.stg_apple_search_ads__campaign_history_tmp"
[0m19:39:50.242940 [debug] [Thread-1  ]: On model.ad_reporting.metricflow_time_spine: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.ad_reporting.metricflow_time_spine"} */


        select 

    datetime_diff(
        cast(cast(

        datetime_add(
            cast( cast(timestamp(datetime(current_timestamp(), 'America/Los_Angeles')) as date) as datetime),
        interval 1 day
        )

 as date) as datetime),
        cast(

        datetime_add(
            cast( cast(timestamp(datetime(current_timestamp(), 'America/Los_Angeles')) as date) as datetime),
        interval -3650 day
        )

 as datetime),
        day
    )

  
[0m19:39:50.261139 [debug] [Thread-12 ]: Timing info for model.dbt_ads_test.my_first_dbt_model (compile): 19:39:50.147937 => 19:39:50.260477
[0m19:39:50.272685 [debug] [Thread-13 ]: Began compiling node model.google_ads_source.stg_google_ads__account_history_tmp
[0m19:39:50.295863 [debug] [Thread-14 ]: Began compiling node model.google_ads_source.stg_google_ads__account_stats_tmp
[0m19:39:50.307052 [debug] [Thread-4  ]: Writing runtime sql for node "model.apple_search_ads_source.stg_apple_search_ads__ad_history_tmp"
[0m19:39:50.308213 [debug] [Thread-15 ]: Began compiling node model.google_ads_source.stg_google_ads__ad_group_criterion_history_tmp
[0m19:39:50.318957 [debug] [Thread-7  ]: Writing injected SQL for node "model.apple_search_ads_source.stg_apple_search_ads__campaign_report_tmp"
[0m19:39:50.321272 [debug] [Thread-5  ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__ad_report_tmp (compile): 19:39:50.164731 => 19:39:50.320683
[0m19:39:50.322422 [debug] [Thread-8  ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__keyword_history_tmp (compile): 19:39:50.176207 => 19:39:50.321939
[0m19:39:50.323295 [debug] [Thread-9  ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__keyword_report_tmp (compile): 19:39:50.188151 => 19:39:50.322876
[0m19:39:50.324522 [debug] [Thread-3  ]: Began executing node model.apple_search_ads_source.stg_apple_search_ads__ad_group_report_tmp
[0m19:39:50.325870 [debug] [Thread-10 ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__organization_tmp (compile): 19:39:50.202148 => 19:39:50.325329
[0m19:39:50.326842 [debug] [Thread-2  ]: Began executing node model.apple_search_ads_source.stg_apple_search_ads__ad_group_history_tmp
[0m19:39:50.329031 [debug] [Thread-11 ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__search_term_report_tmp (compile): 19:39:50.214973 => 19:39:50.328449
[0m19:39:50.330878 [debug] [Thread-6  ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__campaign_history_tmp (compile): 19:39:50.221558 => 19:39:50.330361
[0m19:39:50.331836 [debug] [Thread-12 ]: Began executing node model.dbt_ads_test.my_first_dbt_model
[0m19:39:50.343422 [debug] [Thread-13 ]: Writing injected SQL for node "model.google_ads_source.stg_google_ads__account_history_tmp"
[0m19:39:50.358874 [debug] [Thread-14 ]: Writing injected SQL for node "model.google_ads_source.stg_google_ads__account_stats_tmp"
[0m19:39:50.369090 [debug] [Thread-15 ]: Writing injected SQL for node "model.google_ads_source.stg_google_ads__ad_group_criterion_history_tmp"
[0m19:39:50.370609 [debug] [Thread-4  ]: Opening a new connection, currently in state closed
[0m19:39:50.372946 [debug] [Thread-5  ]: Began executing node model.apple_search_ads_source.stg_apple_search_ads__ad_report_tmp
[0m19:39:50.374334 [debug] [Thread-7  ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__campaign_report_tmp (compile): 19:39:50.309040 => 19:39:50.373804
[0m19:39:50.375272 [debug] [Thread-8  ]: Began executing node model.apple_search_ads_source.stg_apple_search_ads__keyword_history_tmp
[0m19:39:50.376405 [debug] [Thread-9  ]: Began executing node model.apple_search_ads_source.stg_apple_search_ads__keyword_report_tmp
[0m19:39:50.387857 [debug] [Thread-3  ]: Writing runtime sql for node "model.apple_search_ads_source.stg_apple_search_ads__ad_group_report_tmp"
[0m19:39:50.388997 [debug] [Thread-10 ]: Began executing node model.apple_search_ads_source.stg_apple_search_ads__organization_tmp
[0m19:39:50.399920 [debug] [Thread-2  ]: Writing runtime sql for node "model.apple_search_ads_source.stg_apple_search_ads__ad_group_history_tmp"
[0m19:39:50.401201 [debug] [Thread-11 ]: Began executing node model.apple_search_ads_source.stg_apple_search_ads__search_term_report_tmp
[0m19:39:50.402881 [debug] [Thread-6  ]: Began executing node model.apple_search_ads_source.stg_apple_search_ads__campaign_history_tmp
[0m19:39:50.455091 [debug] [Thread-13 ]: Timing info for model.google_ads_source.stg_google_ads__account_history_tmp (compile): 19:39:50.332546 => 19:39:50.454400
[0m19:39:50.481615 [debug] [Thread-12 ]: Writing runtime sql for node "model.dbt_ads_test.my_first_dbt_model"
[0m19:39:50.482769 [debug] [Thread-14 ]: Timing info for model.google_ads_source.stg_google_ads__account_stats_tmp (compile): 19:39:50.344323 => 19:39:50.482297
[0m19:39:50.494103 [debug] [Thread-5  ]: Writing runtime sql for node "model.apple_search_ads_source.stg_apple_search_ads__ad_report_tmp"
[0m19:39:50.495366 [debug] [Thread-7  ]: Began executing node model.apple_search_ads_source.stg_apple_search_ads__campaign_report_tmp
[0m19:39:50.496851 [debug] [Thread-15 ]: Timing info for model.google_ads_source.stg_google_ads__ad_group_criterion_history_tmp (compile): 19:39:50.360649 => 19:39:50.496337
[0m19:39:50.677843 [debug] [Thread-15 ]: Began executing node model.google_ads_source.stg_google_ads__ad_group_criterion_history_tmp
[0m19:39:50.506163 [debug] [Thread-8  ]: Writing runtime sql for node "model.apple_search_ads_source.stg_apple_search_ads__keyword_history_tmp"
[0m19:39:50.520928 [debug] [Thread-9  ]: Writing runtime sql for node "model.apple_search_ads_source.stg_apple_search_ads__keyword_report_tmp"
[0m19:39:50.711225 [debug] [Thread-9  ]: Opening a new connection, currently in state closed
[0m19:39:50.547429 [debug] [Thread-11 ]: Writing runtime sql for node "model.apple_search_ads_source.stg_apple_search_ads__search_term_report_tmp"
[0m19:39:50.558123 [debug] [Thread-6  ]: Writing runtime sql for node "model.apple_search_ads_source.stg_apple_search_ads__campaign_history_tmp"
[0m19:39:50.559408 [debug] [Thread-2  ]: Opening a new connection, currently in state closed
[0m19:39:50.560400 [debug] [Thread-13 ]: Began executing node model.google_ads_source.stg_google_ads__account_history_tmp
[0m19:39:50.562187 [debug] [Thread-14 ]: Began executing node model.google_ads_source.stg_google_ads__account_stats_tmp
[0m19:39:50.563507 [debug] [Thread-12 ]: Opening a new connection, currently in state closed
[0m19:39:50.516160 [debug] [Thread-3  ]: Opening a new connection, currently in state closed
[0m19:39:50.687474 [debug] [Thread-15 ]: Writing runtime sql for node "model.google_ads_source.stg_google_ads__ad_group_criterion_history_tmp"
[0m19:39:50.688740 [debug] [Thread-4  ]: On model.apple_search_ads_source.stg_apple_search_ads__ad_history_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.apple_search_ads_source.stg_apple_search_ads__ad_history_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__ad_history_tmp`
  OPTIONS()
  as 

select * 
from `drops-bi`.`drops_apple_search_ads_full`.`ad_history`;


[0m19:39:50.699512 [debug] [Thread-5  ]: Opening a new connection, currently in state closed
[0m19:39:50.530867 [debug] [Thread-10 ]: Writing runtime sql for node "model.apple_search_ads_source.stg_apple_search_ads__organization_tmp"
[0m19:39:50.841707 [debug] [Thread-10 ]: Opening a new connection, currently in state closed
[0m19:39:50.741896 [debug] [Thread-8  ]: Opening a new connection, currently in state closed
[0m19:39:50.758528 [debug] [Thread-6  ]: Opening a new connection, currently in state closed
[0m19:39:50.765956 [debug] [Thread-11 ]: Opening a new connection, currently in state closed
[0m19:39:50.871887 [debug] [Thread-9  ]: On model.apple_search_ads_source.stg_apple_search_ads__keyword_report_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.apple_search_ads_source.stg_apple_search_ads__keyword_report_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__keyword_report_tmp`
  OPTIONS()
  as 

select * 
from `drops-bi`.`drops_apple_search_ads_full`.`keyword_report`;


[0m19:39:50.782269 [debug] [Thread-13 ]: Writing runtime sql for node "model.google_ads_source.stg_google_ads__account_history_tmp"
[0m19:39:50.797273 [debug] [Thread-14 ]: Writing runtime sql for node "model.google_ads_source.stg_google_ads__account_stats_tmp"
[0m19:39:50.812908 [debug] [Thread-15 ]: Opening a new connection, currently in state init
[0m19:39:50.892070 [debug] [Thread-13 ]: Opening a new connection, currently in state init
[0m19:39:50.912501 [debug] [Thread-14 ]: Opening a new connection, currently in state init
[0m19:39:50.786500 [debug] [Thread-7  ]: Writing runtime sql for node "model.apple_search_ads_source.stg_apple_search_ads__campaign_report_tmp"
[0m19:39:50.972394 [debug] [Thread-7  ]: Opening a new connection, currently in state closed
[0m19:39:51.105930 [debug] [Thread-12 ]: On model.dbt_ads_test.my_first_dbt_model: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.dbt_ads_test.my_first_dbt_model"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2`.`my_first_dbt_model`
      
    
    

    OPTIONS()
    as (
      /*
    Welcome to your first dbt model!
    Did you know that you can also configure models directly within SQL files?
    This will override configurations stated in dbt_project.yml

    Try changing "table" to "view" below
*/



with source_data as (

    select 1 as id
    union all
    select null as id

)

select *
from source_data

/*
    Uncomment the line below to remove records with null `id` values
*/

-- where id is not null
    );
  
[0m19:39:51.158011 [debug] [Thread-2  ]: On model.apple_search_ads_source.stg_apple_search_ads__ad_group_history_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.apple_search_ads_source.stg_apple_search_ads__ad_group_history_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__ad_group_history_tmp`
  OPTIONS()
  as 

select * 
from `drops-bi`.`drops_apple_search_ads_full`.`ad_group_history`;


[0m19:39:51.162223 [debug] [Thread-3  ]: On model.apple_search_ads_source.stg_apple_search_ads__ad_group_report_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.apple_search_ads_source.stg_apple_search_ads__ad_group_report_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__ad_group_report_tmp`
  OPTIONS()
  as 

select * 
from `drops-bi`.`drops_apple_search_ads_full`.`ad_group_report`;


[0m19:39:51.277307 [debug] [Thread-5  ]: On model.apple_search_ads_source.stg_apple_search_ads__ad_report_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.apple_search_ads_source.stg_apple_search_ads__ad_report_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__ad_report_tmp`
  OPTIONS()
  as 

select * 
from `drops-bi`.`drops_apple_search_ads_full`.`ad_level_report`;


[0m19:39:51.288587 [debug] [Thread-8  ]: On model.apple_search_ads_source.stg_apple_search_ads__keyword_history_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.apple_search_ads_source.stg_apple_search_ads__keyword_history_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__keyword_history_tmp`
  OPTIONS()
  as 

select * 
from `drops-bi`.`drops_apple_search_ads_full`.`keyword_history`;


[0m19:39:51.366944 [debug] [Thread-10 ]: On model.apple_search_ads_source.stg_apple_search_ads__organization_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.apple_search_ads_source.stg_apple_search_ads__organization_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__organization_tmp`
  OPTIONS()
  as 

select * 
from `drops-bi`.`drops_apple_search_ads_full`.`organization`;


[0m19:39:51.452607 [debug] [Thread-11 ]: On model.apple_search_ads_source.stg_apple_search_ads__search_term_report_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.apple_search_ads_source.stg_apple_search_ads__search_term_report_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__search_term_report_tmp`
  OPTIONS()
  as 

select * 
from `drops-bi`.`drops_apple_search_ads_full`.`search_term_report`;


[0m19:39:51.460043 [debug] [Thread-15 ]: On model.google_ads_source.stg_google_ads__ad_group_criterion_history_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.google_ads_source.stg_google_ads__ad_group_criterion_history_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__ad_group_criterion_history_tmp`
  OPTIONS()
  as 

select * 
from `drops-bi`.`drops_google_ads_full`.`ad_group_criterion_history`;


[0m19:39:51.461289 [debug] [Thread-14 ]: On model.google_ads_source.stg_google_ads__account_stats_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.google_ads_source.stg_google_ads__account_stats_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__account_stats_tmp`
  OPTIONS()
  as 

select * 
from `drops-bi`.`drops_google_ads_full`.`account_stats`;


[0m19:39:51.463739 [debug] [Thread-6  ]: On model.apple_search_ads_source.stg_apple_search_ads__campaign_history_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.apple_search_ads_source.stg_apple_search_ads__campaign_history_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__campaign_history_tmp`
  OPTIONS()
  as 

select * 
from `drops-bi`.`drops_apple_search_ads_full`.`campaign_history`;


[0m19:39:51.466528 [debug] [Thread-13 ]: On model.google_ads_source.stg_google_ads__account_history_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.google_ads_source.stg_google_ads__account_history_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__account_history_tmp`
  OPTIONS()
  as 

select * 
from `drops-bi`.`drops_google_ads_full`.`account_history`;


[0m19:39:51.533209 [debug] [Thread-7  ]: On model.apple_search_ads_source.stg_apple_search_ads__campaign_report_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.apple_search_ads_source.stg_apple_search_ads__campaign_report_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__campaign_report_tmp`
  OPTIONS()
  as 

select * 
from `drops-bi`.`drops_apple_search_ads_full`.`campaign_report`;


[0m19:39:52.318599 [debug] [Thread-1  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:656f9501-a581-4b0c-b49b-bafc1f2eb447&page=queryresults
[0m19:39:52.958020 [debug] [Thread-4  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:411c8ad9-adea-4de1-8a66-aa76603f615c&page=queryresults
[0m19:39:52.959948 [debug] [Thread-4  ]: BigQuery adapter: Unhandled error while running:
/* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.apple_search_ads_source.stg_apple_search_ads__ad_history_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__ad_history_tmp`
  OPTIONS()
  as 

select * 
from `drops-bi`.`drops_apple_search_ads_full`.`ad_history`;


[0m19:39:52.961279 [debug] [Thread-4  ]: BigQuery adapter: 404 Not found: Table drops-bi:drops_apple_search_ads_full.ad_history was not found in location US

Location: US
Job ID: 411c8ad9-adea-4de1-8a66-aa76603f615c

[0m19:39:52.962839 [debug] [Thread-4  ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__ad_history_tmp (execute): 19:39:50.243898 => 19:39:52.962302
[0m19:39:52.978160 [debug] [Thread-4  ]: Runtime Error in model stg_apple_search_ads__ad_history_tmp (models/tmp/stg_apple_search_ads__ad_history_tmp.sql)
  404 Not found: Table drops-bi:drops_apple_search_ads_full.ad_history was not found in location US
  
  Location: US
  Job ID: 411c8ad9-adea-4de1-8a66-aa76603f615c
  
[0m19:39:52.979140 [debug] [Thread-4  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd136ac1130>]}
[0m19:39:52.981023 [error] [Thread-4  ]: 4 of 130 ERROR creating sql view model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__ad_history_tmp  [[31mERROR[0m in 3.12s]
[0m19:39:52.982773 [debug] [Thread-4  ]: Finished running node model.apple_search_ads_source.stg_apple_search_ads__ad_history_tmp
[0m19:39:52.983983 [debug] [Thread-4  ]: Began running node model.google_ads_source.stg_google_ads__ad_group_history_tmp
[0m19:39:52.985656 [info ] [Thread-4  ]: 16 of 130 START sql view model marketing_full_v2_google_ads_source.stg_google_ads__ad_group_history_tmp  [RUN]
[0m19:39:52.987785 [debug] [Thread-4  ]: Re-using an available connection from the pool (formerly model.apple_search_ads_source.stg_apple_search_ads__ad_history_tmp, now model.google_ads_source.stg_google_ads__ad_group_history_tmp)
[0m19:39:52.988650 [debug] [Thread-4  ]: Began compiling node model.google_ads_source.stg_google_ads__ad_group_history_tmp
[0m19:39:53.001346 [debug] [Thread-4  ]: Writing injected SQL for node "model.google_ads_source.stg_google_ads__ad_group_history_tmp"
[0m19:39:53.003606 [debug] [Thread-4  ]: Timing info for model.google_ads_source.stg_google_ads__ad_group_history_tmp (compile): 19:39:52.989375 => 19:39:53.002995
[0m19:39:53.004789 [debug] [Thread-4  ]: Began executing node model.google_ads_source.stg_google_ads__ad_group_history_tmp
[0m19:39:53.024898 [debug] [Thread-4  ]: Writing runtime sql for node "model.google_ads_source.stg_google_ads__ad_group_history_tmp"
[0m19:39:53.028572 [debug] [Thread-4  ]: Opening a new connection, currently in state closed
[0m19:39:53.139168 [debug] [Thread-4  ]: On model.google_ads_source.stg_google_ads__ad_group_history_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.google_ads_source.stg_google_ads__ad_group_history_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__ad_group_history_tmp`
  OPTIONS()
  as 

select * 
from `drops-bi`.`drops_google_ads_full`.`ad_group_history`;


[0m19:39:53.235939 [debug] [Thread-3  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:998c0697-4dff-46ef-bf97-73511877e6fe&page=queryresults
[0m19:39:53.330057 [debug] [Thread-2  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:5af2494b-ab29-43ca-bc64-8008ad493b66&page=queryresults
[0m19:39:53.354475 [debug] [Thread-12 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:19b1fec5-4c06-47af-8d34-8bd56daef440&page=queryresults
[0m19:39:53.365330 [debug] [Thread-9  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:e89c898f-bb0d-4cdb-bbd7-1979351c966d&page=queryresults
[0m19:39:53.464777 [debug] [Thread-5  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:d9bdcf02-a987-4471-98f6-3909483de2be&page=queryresults
[0m19:39:53.531755 [debug] [Thread-8  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:20a43382-8f63-4f8d-967b-65b5594af9a4&page=queryresults
[0m19:39:53.714268 [debug] [Thread-1  ]: Writing injected SQL for node "model.ad_reporting.metricflow_time_spine"
[0m19:39:53.716499 [debug] [Thread-1  ]: Timing info for model.ad_reporting.metricflow_time_spine (compile): 19:39:49.961865 => 19:39:53.715896
[0m19:39:53.717670 [debug] [Thread-1  ]: Began executing node model.ad_reporting.metricflow_time_spine
[0m19:39:53.734847 [debug] [Thread-1  ]: Writing runtime sql for node "model.ad_reporting.metricflow_time_spine"
[0m19:39:53.737585 [debug] [Thread-15 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:65b170ec-d5c9-4d56-a0a9-1b7b07a0f0a6&page=queryresults
[0m19:39:53.744152 [debug] [Thread-1  ]: On model.ad_reporting.metricflow_time_spine: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.ad_reporting.metricflow_time_spine"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_ad_reporting`.`metricflow_time_spine`
      
    
    

    OPTIONS()
    as (
      
with 

days as (
    
    with date_spine as
(

    





with rawdata as (

    

    

    with p as (
        select 0 as generated_number union all select 1
    ), unioned as (

    select

    
    p0.generated_number * power(2, 0)
     + 
    
    p1.generated_number * power(2, 1)
     + 
    
    p2.generated_number * power(2, 2)
     + 
    
    p3.generated_number * power(2, 3)
     + 
    
    p4.generated_number * power(2, 4)
     + 
    
    p5.generated_number * power(2, 5)
     + 
    
    p6.generated_number * power(2, 6)
     + 
    
    p7.generated_number * power(2, 7)
     + 
    
    p8.generated_number * power(2, 8)
     + 
    
    p9.generated_number * power(2, 9)
     + 
    
    p10.generated_number * power(2, 10)
     + 
    
    p11.generated_number * power(2, 11)
    
    
    + 1
    as generated_number

    from

    
    p as p0
     cross join 
    
    p as p1
     cross join 
    
    p as p2
     cross join 
    
    p as p3
     cross join 
    
    p as p4
     cross join 
    
    p as p5
     cross join 
    
    p as p6
     cross join 
    
    p as p7
     cross join 
    
    p as p8
     cross join 
    
    p as p9
     cross join 
    
    p as p10
     cross join 
    
    p as p11
    
    

    )

    select *
    from unioned
    where generated_number <= 3651
    order by generated_number



),

all_periods as (

    select (
        

        datetime_add(
            cast( 

        datetime_add(
            cast( cast(timestamp(datetime(current_timestamp(), 'America/Los_Angeles')) as date) as datetime),
        interval -3650 day
        )

 as datetime),
        interval row_number() over (order by 1) - 1 day
        )


    ) as date_day
    from rawdata

),

filtered as (

    select *
    from all_periods
    where date_day <= cast(

        datetime_add(
            cast( cast(timestamp(datetime(current_timestamp(), 'America/Los_Angeles')) as date) as datetime),
        interval 1 day
        )

 as date)

)

select * from filtered



)
select
    cast(d.date_day as TIMESTAMP) as date_day
from
    date_spine d



),

cast_to_date as (

    select 
        cast(date_day as date) as date_day
    
    from days

)

select * from cast_to_date
    );
  
[0m19:39:53.749033 [debug] [Thread-13 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:6495c2ce-2e62-45dd-a810-7fd73cb93fb9&page=queryresults
[0m19:39:53.750622 [debug] [Thread-6  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:b5a654d5-1633-4a3c-9c10-7db6c4d560fd&page=queryresults
[0m19:39:53.769739 [debug] [Thread-14 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:0726b70f-578c-455d-b9e4-242d5202623c&page=queryresults
[0m19:39:53.849785 [debug] [Thread-7  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:605c5518-7fb9-44da-9c26-bc33edfa4e10&page=queryresults
[0m19:39:54.069310 [debug] [Thread-3  ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__ad_group_report_tmp (execute): 19:39:50.377184 => 19:39:54.068799
[0m19:39:54.071359 [debug] [Thread-3  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13686e340>]}
[0m19:39:54.073176 [info ] [Thread-3  ]: 3 of 130 OK created sql view model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__ad_group_report_tmp  [[32mCREATE VIEW (0 processed)[0m in 4.13s]
[0m19:39:54.076304 [debug] [Thread-3  ]: Finished running node model.apple_search_ads_source.stg_apple_search_ads__ad_group_report_tmp
[0m19:39:54.077905 [debug] [Thread-3  ]: Began running node model.google_ads_source.stg_google_ads__ad_group_stats_tmp
[0m19:39:54.079970 [info ] [Thread-3  ]: 17 of 130 START sql view model marketing_full_v2_google_ads_source.stg_google_ads__ad_group_stats_tmp  [RUN]
[0m19:39:54.083794 [debug] [Thread-3  ]: Re-using an available connection from the pool (formerly model.apple_search_ads_source.stg_apple_search_ads__ad_group_report_tmp, now model.google_ads_source.stg_google_ads__ad_group_stats_tmp)
[0m19:39:54.095095 [debug] [Thread-3  ]: Began compiling node model.google_ads_source.stg_google_ads__ad_group_stats_tmp
[0m19:39:54.123241 [debug] [Thread-3  ]: Writing injected SQL for node "model.google_ads_source.stg_google_ads__ad_group_stats_tmp"
[0m19:39:54.127516 [debug] [Thread-3  ]: Timing info for model.google_ads_source.stg_google_ads__ad_group_stats_tmp (compile): 19:39:54.096027 => 19:39:54.126844
[0m19:39:54.128729 [debug] [Thread-3  ]: Began executing node model.google_ads_source.stg_google_ads__ad_group_stats_tmp
[0m19:39:54.143443 [debug] [Thread-11 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:076f09b5-57bb-4ffd-9787-f21e424d892a&page=queryresults
[0m19:39:54.149715 [debug] [Thread-3  ]: Writing runtime sql for node "model.google_ads_source.stg_google_ads__ad_group_stats_tmp"
[0m19:39:54.153867 [debug] [Thread-3  ]: Opening a new connection, currently in state closed
[0m19:39:54.326993 [debug] [Thread-8  ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__keyword_history_tmp (execute): 19:39:50.497493 => 19:39:54.326377
[0m19:39:54.329069 [debug] [Thread-8  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd136266e50>]}
[0m19:39:54.331870 [info ] [Thread-8  ]: 8 of 130 OK created sql view model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__keyword_history_tmp  [[32mCREATE VIEW (0 processed)[0m in 4.33s]
[0m19:39:54.335136 [debug] [Thread-8  ]: Finished running node model.apple_search_ads_source.stg_apple_search_ads__keyword_history_tmp
[0m19:39:54.336544 [debug] [Thread-8  ]: Began running node model.google_ads_source.stg_google_ads__ad_history_tmp
[0m19:39:54.339795 [info ] [Thread-8  ]: 18 of 130 START sql view model marketing_full_v2_google_ads_source.stg_google_ads__ad_history_tmp  [RUN]
[0m19:39:54.342115 [debug] [Thread-8  ]: Re-using an available connection from the pool (formerly model.apple_search_ads_source.stg_apple_search_ads__keyword_history_tmp, now model.google_ads_source.stg_google_ads__ad_history_tmp)
[0m19:39:54.343352 [debug] [Thread-8  ]: Began compiling node model.google_ads_source.stg_google_ads__ad_history_tmp
[0m19:39:54.361544 [debug] [Thread-8  ]: Writing injected SQL for node "model.google_ads_source.stg_google_ads__ad_history_tmp"
[0m19:39:54.365455 [debug] [Thread-8  ]: Timing info for model.google_ads_source.stg_google_ads__ad_history_tmp (compile): 19:39:54.344248 => 19:39:54.364026
[0m19:39:54.367117 [debug] [Thread-8  ]: Began executing node model.google_ads_source.stg_google_ads__ad_history_tmp
[0m19:39:54.387304 [debug] [Thread-8  ]: Writing runtime sql for node "model.google_ads_source.stg_google_ads__ad_history_tmp"
[0m19:39:54.393018 [debug] [Thread-8  ]: Opening a new connection, currently in state closed
[0m19:39:54.412899 [debug] [Thread-3  ]: On model.google_ads_source.stg_google_ads__ad_group_stats_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.google_ads_source.stg_google_ads__ad_group_stats_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__ad_group_stats_tmp`
  OPTIONS()
  as 

select * 
from `drops-bi`.`drops_google_ads_full`.`ad_group_stats`;


[0m19:39:54.499399 [debug] [Thread-14 ]: Timing info for model.google_ads_source.stg_google_ads__account_stats_tmp (execute): 19:39:50.787344 => 19:39:54.498916
[0m19:39:54.501127 [debug] [Thread-14 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd135de84c0>]}
[0m19:39:54.502127 [info ] [Thread-14 ]: 14 of 130 OK created sql view model marketing_full_v2_google_ads_source.stg_google_ads__account_stats_tmp  [[32mCREATE VIEW (0 processed)[0m in 4.34s]
[0m19:39:54.503163 [debug] [Thread-14 ]: Finished running node model.google_ads_source.stg_google_ads__account_stats_tmp
[0m19:39:54.503897 [debug] [Thread-14 ]: Began running node model.google_ads_source.stg_google_ads__ad_stats_tmp
[0m19:39:54.505631 [info ] [Thread-14 ]: 19 of 130 START sql view model marketing_full_v2_google_ads_source.stg_google_ads__ad_stats_tmp  [RUN]
[0m19:39:54.507942 [debug] [Thread-14 ]: Re-using an available connection from the pool (formerly model.google_ads_source.stg_google_ads__account_stats_tmp, now model.google_ads_source.stg_google_ads__ad_stats_tmp)
[0m19:39:54.511524 [debug] [Thread-14 ]: Began compiling node model.google_ads_source.stg_google_ads__ad_stats_tmp
[0m19:39:54.522855 [debug] [Thread-14 ]: Writing injected SQL for node "model.google_ads_source.stg_google_ads__ad_stats_tmp"
[0m19:39:54.529141 [debug] [Thread-15 ]: Timing info for model.google_ads_source.stg_google_ads__ad_group_criterion_history_tmp (execute): 19:39:50.678402 => 19:39:54.528595
[0m19:39:54.537120 [debug] [Thread-13 ]: Timing info for model.google_ads_source.stg_google_ads__account_history_tmp (execute): 19:39:50.773283 => 19:39:54.536434
[0m19:39:54.539502 [debug] [Thread-15 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1325342b0>]}
[0m19:39:54.541816 [debug] [Thread-13 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd135de8100>]}
[0m19:39:54.544007 [info ] [Thread-15 ]: 15 of 130 OK created sql view model marketing_full_v2_google_ads_source.stg_google_ads__ad_group_criterion_history_tmp  [[32mCREATE VIEW (0 processed)[0m in 4.38s]
[0m19:39:54.545737 [info ] [Thread-13 ]: 13 of 130 OK created sql view model marketing_full_v2_google_ads_source.stg_google_ads__account_history_tmp  [[32mCREATE VIEW (0 processed)[0m in 4.38s]
[0m19:39:54.547256 [debug] [Thread-14 ]: Timing info for model.google_ads_source.stg_google_ads__ad_stats_tmp (compile): 19:39:54.512099 => 19:39:54.546674
[0m19:39:54.549595 [debug] [Thread-15 ]: Finished running node model.google_ads_source.stg_google_ads__ad_group_criterion_history_tmp
[0m19:39:54.552324 [debug] [Thread-13 ]: Finished running node model.google_ads_source.stg_google_ads__account_history_tmp
[0m19:39:54.554650 [debug] [Thread-14 ]: Began executing node model.google_ads_source.stg_google_ads__ad_stats_tmp
[0m19:39:54.558569 [debug] [Thread-1  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:6a642240-a867-40f5-bcba-e42bd32a2e40&page=queryresults
[0m19:39:54.559664 [debug] [Thread-8  ]: On model.google_ads_source.stg_google_ads__ad_history_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.google_ads_source.stg_google_ads__ad_history_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__ad_history_tmp`
  OPTIONS()
  as 

select * 
from `drops-bi`.`drops_google_ads_full`.`ad_history`;


[0m19:39:54.560871 [debug] [Thread-15 ]: Began running node model.google_ads_source.stg_google_ads__campaign_history_tmp
[0m19:39:54.562404 [debug] [Thread-13 ]: Began running node model.google_ads_source.stg_google_ads__campaign_stats_tmp
[0m19:39:54.582469 [debug] [Thread-14 ]: Writing runtime sql for node "model.google_ads_source.stg_google_ads__ad_stats_tmp"
[0m19:39:54.592453 [info ] [Thread-15 ]: 20 of 130 START sql view model marketing_full_v2_google_ads_source.stg_google_ads__campaign_history_tmp  [RUN]
[0m19:39:54.593928 [info ] [Thread-13 ]: 21 of 130 START sql view model marketing_full_v2_google_ads_source.stg_google_ads__campaign_stats_tmp  [RUN]
[0m19:39:54.600907 [debug] [Thread-15 ]: Re-using an available connection from the pool (formerly model.google_ads_source.stg_google_ads__ad_group_criterion_history_tmp, now model.google_ads_source.stg_google_ads__campaign_history_tmp)
[0m19:39:54.603009 [debug] [Thread-13 ]: Re-using an available connection from the pool (formerly model.google_ads_source.stg_google_ads__account_history_tmp, now model.google_ads_source.stg_google_ads__campaign_stats_tmp)
[0m19:39:54.604502 [debug] [Thread-15 ]: Began compiling node model.google_ads_source.stg_google_ads__campaign_history_tmp
[0m19:39:54.605865 [debug] [Thread-13 ]: Began compiling node model.google_ads_source.stg_google_ads__campaign_stats_tmp
[0m19:39:54.613692 [debug] [Thread-14 ]: Opening a new connection, currently in state closed
[0m19:39:54.627167 [debug] [Thread-15 ]: Writing injected SQL for node "model.google_ads_source.stg_google_ads__campaign_history_tmp"
[0m19:39:54.642005 [debug] [Thread-13 ]: Writing injected SQL for node "model.google_ads_source.stg_google_ads__campaign_stats_tmp"
[0m19:39:54.651603 [debug] [Thread-7  ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__campaign_report_tmp (execute): 19:39:50.564352 => 19:39:54.650757
[0m19:39:54.666186 [debug] [Thread-9  ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__keyword_report_tmp (execute): 19:39:50.506846 => 19:39:54.660320
[0m19:39:54.667609 [debug] [Thread-6  ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__campaign_history_tmp (execute): 19:39:50.548342 => 19:39:54.667061
[0m19:39:54.671593 [debug] [Thread-7  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1360424c0>]}
[0m19:39:54.672804 [debug] [Thread-15 ]: Timing info for model.google_ads_source.stg_google_ads__campaign_history_tmp (compile): 19:39:54.607032 => 19:39:54.672325
[0m19:39:54.675005 [debug] [Thread-9  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1359ac490>]}
[0m19:39:54.677237 [debug] [Thread-6  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13244ef70>]}
[0m19:39:54.680717 [info ] [Thread-7  ]: 7 of 130 OK created sql view model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__campaign_report_tmp  [[32mCREATE VIEW (0 processed)[0m in 4.64s]
[0m19:39:54.688211 [debug] [Thread-7  ]: Finished running node model.apple_search_ads_source.stg_apple_search_ads__campaign_report_tmp
[0m19:39:54.684207 [info ] [Thread-9  ]: 9 of 130 OK created sql view model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__keyword_report_tmp  [[32mCREATE VIEW (0 processed)[0m in 4.67s]
[0m19:39:54.685955 [info ] [Thread-6  ]: 6 of 130 OK created sql view model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__campaign_history_tmp  [[32mCREATE VIEW (0 processed)[0m in 4.65s]
[0m19:39:54.689099 [debug] [Thread-7  ]: Began running node model.google_ads_source.stg_google_ads__keyword_stats_tmp
[0m19:39:54.695002 [info ] [Thread-7  ]: 22 of 130 START sql view model marketing_full_v2_google_ads_source.stg_google_ads__keyword_stats_tmp  [RUN]
[0m19:39:54.690170 [debug] [Thread-13 ]: Timing info for model.google_ads_source.stg_google_ads__campaign_stats_tmp (compile): 19:39:54.628603 => 19:39:54.689650
[0m19:39:54.692352 [debug] [Thread-9  ]: Finished running node model.apple_search_ads_source.stg_apple_search_ads__keyword_report_tmp
[0m19:39:54.698636 [debug] [Thread-9  ]: Began running node model.snapchat_ads_source.stg_snapchat_ads__ad_account_history_tmp
[0m19:39:54.693983 [debug] [Thread-6  ]: Finished running node model.apple_search_ads_source.stg_apple_search_ads__campaign_history_tmp
[0m19:39:54.709717 [debug] [Thread-6  ]: Began running node model.snapchat_ads_source.stg_snapchat_ads__ad_history_tmp
[0m19:39:54.712588 [info ] [Thread-6  ]: 24 of 130 START sql view model marketing_full_v2_snapchat_ads_source.stg_snapchat_ads__ad_history_tmp  [RUN]
[0m19:39:54.713763 [debug] [Thread-6  ]: Re-using an available connection from the pool (formerly model.apple_search_ads_source.stg_apple_search_ads__campaign_history_tmp, now model.snapchat_ads_source.stg_snapchat_ads__ad_history_tmp)
[0m19:39:54.714465 [debug] [Thread-6  ]: Began compiling node model.snapchat_ads_source.stg_snapchat_ads__ad_history_tmp
[0m19:39:54.701107 [info ] [Thread-9  ]: 23 of 130 START sql view model marketing_full_v2_snapchat_ads_source.stg_snapchat_ads__ad_account_history_tmp  [RUN]
[0m19:39:54.797937 [debug] [Thread-5  ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__ad_report_tmp (execute): 19:39:50.483921 => 19:39:54.797598
[0m19:39:54.696203 [debug] [Thread-7  ]: Re-using an available connection from the pool (formerly model.apple_search_ads_source.stg_apple_search_ads__campaign_report_tmp, now model.google_ads_source.stg_google_ads__keyword_stats_tmp)
[0m19:39:54.682458 [debug] [Thread-15 ]: Began executing node model.google_ads_source.stg_google_ads__campaign_history_tmp
[0m19:39:54.802815 [debug] [Thread-6  ]: Writing injected SQL for node "model.snapchat_ads_source.stg_snapchat_ads__ad_history_tmp"
[0m19:39:54.805104 [debug] [Thread-9  ]: Re-using an available connection from the pool (formerly model.apple_search_ads_source.stg_apple_search_ads__keyword_report_tmp, now model.snapchat_ads_source.stg_snapchat_ads__ad_account_history_tmp)
[0m19:39:54.807455 [debug] [Thread-5  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1324b9c40>]}
[0m19:39:54.854279 [info ] [Thread-5  ]: 5 of 130 OK created sql view model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__ad_report_tmp  [[32mCREATE VIEW (0 processed)[0m in 4.82s]
[0m19:39:54.855478 [debug] [Thread-5  ]: Finished running node model.apple_search_ads_source.stg_apple_search_ads__ad_report_tmp
[0m19:39:54.857011 [debug] [Thread-5  ]: Began running node model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report_tmp
[0m19:39:54.850777 [debug] [Thread-9  ]: Began compiling node model.snapchat_ads_source.stg_snapchat_ads__ad_account_history_tmp
[0m19:39:54.858391 [info ] [Thread-5  ]: 25 of 130 START sql view model marketing_full_v2_snapchat_ads_source.stg_snapchat_ads__ad_hourly_report_tmp  [RUN]
[0m19:39:54.873031 [debug] [Thread-5  ]: Re-using an available connection from the pool (formerly model.apple_search_ads_source.stg_apple_search_ads__ad_report_tmp, now model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report_tmp)
[0m19:39:54.874170 [debug] [Thread-5  ]: Began compiling node model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report_tmp
[0m19:39:54.808846 [debug] [Thread-7  ]: Began compiling node model.google_ads_source.stg_google_ads__keyword_stats_tmp
[0m19:39:54.871174 [debug] [Thread-9  ]: Writing injected SQL for node "model.snapchat_ads_source.stg_snapchat_ads__ad_account_history_tmp"
[0m19:39:54.851846 [debug] [Thread-15 ]: Writing runtime sql for node "model.google_ads_source.stg_google_ads__campaign_history_tmp"
[0m19:39:54.886311 [debug] [Thread-5  ]: Writing injected SQL for node "model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report_tmp"
[0m19:39:54.697283 [debug] [Thread-13 ]: Began executing node model.google_ads_source.stg_google_ads__campaign_stats_tmp
[0m19:39:54.896074 [debug] [Thread-6  ]: Timing info for model.snapchat_ads_source.stg_snapchat_ads__ad_history_tmp (compile): 19:39:54.714935 => 19:39:54.895295
[0m19:39:54.901812 [debug] [Thread-7  ]: Writing injected SQL for node "model.google_ads_source.stg_google_ads__keyword_stats_tmp"
[0m19:39:54.904752 [debug] [Thread-9  ]: Timing info for model.snapchat_ads_source.stg_snapchat_ads__ad_account_history_tmp (compile): 19:39:54.859682 => 19:39:54.903647
[0m19:39:54.907065 [debug] [Thread-15 ]: Opening a new connection, currently in state closed
[0m19:39:54.924083 [debug] [Thread-6  ]: Began executing node model.snapchat_ads_source.stg_snapchat_ads__ad_history_tmp
[0m19:39:54.923400 [debug] [Thread-13 ]: Writing runtime sql for node "model.google_ads_source.stg_google_ads__campaign_stats_tmp"
[0m19:39:54.926631 [debug] [Thread-5  ]: Timing info for model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report_tmp (compile): 19:39:54.874967 => 19:39:54.926056
[0m19:39:54.947793 [debug] [Thread-5  ]: Began executing node model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report_tmp
[0m19:39:54.929257 [debug] [Thread-7  ]: Timing info for model.google_ads_source.stg_google_ads__keyword_stats_tmp (compile): 19:39:54.887613 => 19:39:54.928717
[0m19:39:54.942249 [debug] [Thread-10 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:5544ad65-42c1-48e7-84a8-199569def2ca&page=queryresults
[0m19:39:54.946588 [debug] [Thread-6  ]: Writing runtime sql for node "model.snapchat_ads_source.stg_snapchat_ads__ad_history_tmp"
[0m19:39:54.927802 [debug] [Thread-9  ]: Began executing node model.snapchat_ads_source.stg_snapchat_ads__ad_account_history_tmp
[0m19:39:54.955143 [debug] [Thread-7  ]: Began executing node model.google_ads_source.stg_google_ads__keyword_stats_tmp
[0m19:39:54.957588 [debug] [Thread-4  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:6cfd66f4-2479-4e14-9eba-c3f730ad0390&page=queryresults
[0m19:39:54.962195 [debug] [Thread-13 ]: Opening a new connection, currently in state closed
[0m19:39:54.964382 [debug] [Thread-6  ]: Opening a new connection, currently in state closed
[0m19:39:54.977269 [debug] [Thread-11 ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__search_term_report_tmp (execute): 19:39:50.537252 => 19:39:54.976720
[0m19:39:54.970314 [debug] [Thread-5  ]: Writing runtime sql for node "model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report_tmp"
[0m19:39:54.998688 [debug] [Thread-9  ]: Writing runtime sql for node "model.snapchat_ads_source.stg_snapchat_ads__ad_account_history_tmp"
[0m19:39:55.006149 [debug] [Thread-7  ]: Writing runtime sql for node "model.google_ads_source.stg_google_ads__keyword_stats_tmp"
[0m19:39:55.012245 [debug] [Thread-11 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd136374550>]}
[0m19:39:55.019115 [debug] [Thread-5  ]: Opening a new connection, currently in state closed
[0m19:39:55.020816 [debug] [Thread-9  ]: Opening a new connection, currently in state closed
[0m19:39:55.022629 [info ] [Thread-11 ]: 11 of 130 OK created sql view model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__search_term_report_tmp  [[32mCREATE VIEW (0 processed)[0m in 4.99s]
[0m19:39:55.024485 [debug] [Thread-7  ]: Opening a new connection, currently in state closed
[0m19:39:55.026342 [debug] [Thread-11 ]: Finished running node model.apple_search_ads_source.stg_apple_search_ads__search_term_report_tmp
[0m19:39:55.028062 [debug] [Thread-11 ]: Began running node model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history_tmp
[0m19:39:55.029754 [info ] [Thread-11 ]: 26 of 130 START sql view model marketing_full_v2_snapchat_ads_source.stg_snapchat_ads__ad_squad_history_tmp  [RUN]
[0m19:39:55.033563 [debug] [Thread-11 ]: Re-using an available connection from the pool (formerly model.apple_search_ads_source.stg_apple_search_ads__search_term_report_tmp, now model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history_tmp)
[0m19:39:55.034631 [debug] [Thread-11 ]: Began compiling node model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history_tmp
[0m19:39:55.064082 [debug] [Thread-11 ]: Writing injected SQL for node "model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history_tmp"
[0m19:39:55.065948 [debug] [Thread-11 ]: Timing info for model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history_tmp (compile): 19:39:55.035306 => 19:39:55.065459
[0m19:39:55.067101 [debug] [Thread-11 ]: Began executing node model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history_tmp
[0m19:39:55.180066 [debug] [Thread-11 ]: Writing runtime sql for node "model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history_tmp"
[0m19:39:55.181926 [debug] [Thread-11 ]: Opening a new connection, currently in state closed
[0m19:39:55.207631 [debug] [Thread-2  ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__ad_group_history_tmp (execute): 19:39:50.389872 => 19:39:55.207281
[0m19:39:55.209513 [debug] [Thread-2  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13686e4c0>]}
[0m19:39:55.211299 [info ] [Thread-2  ]: 2 of 130 OK created sql view model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__ad_group_history_tmp  [[32mCREATE VIEW (0 processed)[0m in 5.27s]
[0m19:39:55.213245 [debug] [Thread-2  ]: Finished running node model.apple_search_ads_source.stg_apple_search_ads__ad_group_history_tmp
[0m19:39:55.214753 [debug] [Thread-2  ]: Began running node model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report_tmp
[0m19:39:55.216439 [info ] [Thread-2  ]: 27 of 130 START sql view model marketing_full_v2_snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report_tmp  [RUN]
[0m19:39:55.220198 [debug] [Thread-2  ]: Re-using an available connection from the pool (formerly model.apple_search_ads_source.stg_apple_search_ads__ad_group_history_tmp, now model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report_tmp)
[0m19:39:55.221380 [debug] [Thread-2  ]: Began compiling node model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report_tmp
[0m19:39:55.237212 [debug] [Thread-2  ]: Writing injected SQL for node "model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report_tmp"
[0m19:39:55.239277 [debug] [Thread-2  ]: Timing info for model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report_tmp (compile): 19:39:55.222112 => 19:39:55.238688
[0m19:39:55.343909 [debug] [Thread-2  ]: Began executing node model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report_tmp
[0m19:39:55.390677 [debug] [Thread-2  ]: Writing runtime sql for node "model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report_tmp"
[0m19:39:55.392570 [debug] [Thread-2  ]: Opening a new connection, currently in state closed
[0m19:39:55.418778 [debug] [Thread-14 ]: On model.google_ads_source.stg_google_ads__ad_stats_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.google_ads_source.stg_google_ads__ad_stats_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__ad_stats_tmp`
  OPTIONS()
  as 

select * 
from `drops-bi`.`drops_google_ads_full`.`ad_stats`;


[0m19:39:55.484864 [debug] [Thread-6  ]: On model.snapchat_ads_source.stg_snapchat_ads__ad_history_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.snapchat_ads_source.stg_snapchat_ads__ad_history_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__ad_history_tmp`
  OPTIONS()
  as 

select *
from `drops-bi`.`drops_snapchat_ads_full`.`ad_history`;


[0m19:39:55.549047 [debug] [Thread-15 ]: On model.google_ads_source.stg_google_ads__campaign_history_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.google_ads_source.stg_google_ads__campaign_history_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__campaign_history_tmp`
  OPTIONS()
  as 

select * 
from `drops-bi`.`drops_google_ads_full`.`campaign_history`;


[0m19:39:55.554926 [debug] [Thread-13 ]: On model.google_ads_source.stg_google_ads__campaign_stats_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.google_ads_source.stg_google_ads__campaign_stats_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__campaign_stats_tmp`
  OPTIONS()
  as 

select * 
from `drops-bi`.`drops_google_ads_full`.`campaign_stats`;


[0m19:39:55.581877 [debug] [Thread-5  ]: On model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__ad_hourly_report_tmp`
  OPTIONS()
  as 

select *
from `drops-bi`.`drops_snapchat_ads_full`.`ad_hourly_report`;


[0m19:39:55.593145 [debug] [Thread-7  ]: On model.google_ads_source.stg_google_ads__keyword_stats_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.google_ads_source.stg_google_ads__keyword_stats_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__keyword_stats_tmp`
  OPTIONS()
  as 

select * 
from `drops-bi`.`drops_google_ads_full`.`keyword_stats`;


[0m19:39:55.621303 [debug] [Thread-9  ]: On model.snapchat_ads_source.stg_snapchat_ads__ad_account_history_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.snapchat_ads_source.stg_snapchat_ads__ad_account_history_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__ad_account_history_tmp`
  OPTIONS()
  as 

select *
from `drops-bi`.`drops_snapchat_ads_full`.`ad_account_history`;


[0m19:39:55.659868 [debug] [Thread-11 ]: On model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__ad_squad_history_tmp`
  OPTIONS()
  as 

select *
from `drops-bi`.`drops_snapchat_ads_full`.`ad_squad_history`;


[0m19:39:55.818402 [debug] [Thread-2  ]: On model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__ad_squad_hourly_report_tmp`
  OPTIONS()
  as 

select *
from `drops-bi`.`drops_snapchat_ads_full`.`ad_squad_hourly_report`;


[0m19:39:55.828771 [debug] [Thread-4  ]: Timing info for model.google_ads_source.stg_google_ads__ad_group_history_tmp (execute): 19:39:53.005596 => 19:39:55.828206
[0m19:39:55.834890 [debug] [Thread-10 ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__organization_tmp (execute): 19:39:50.521539 => 19:39:55.834342
[0m19:39:55.841099 [debug] [Thread-4  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd136373970>]}
[0m19:39:55.843045 [debug] [Thread-10 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd136a10880>]}
[0m19:39:55.844653 [info ] [Thread-4  ]: 16 of 130 OK created sql view model marketing_full_v2_google_ads_source.stg_google_ads__ad_group_history_tmp  [[32mCREATE VIEW (0 processed)[0m in 2.85s]
[0m19:39:55.846233 [info ] [Thread-10 ]: 10 of 130 OK created sql view model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__organization_tmp  [[32mCREATE VIEW (0 processed)[0m in 5.83s]
[0m19:39:55.848028 [debug] [Thread-4  ]: Finished running node model.google_ads_source.stg_google_ads__ad_group_history_tmp
[0m19:39:55.849643 [debug] [Thread-10 ]: Finished running node model.apple_search_ads_source.stg_apple_search_ads__organization_tmp
[0m19:39:55.850879 [debug] [Thread-4  ]: Began running node model.snapchat_ads_source.stg_snapchat_ads__campaign_history_tmp
[0m19:39:55.853295 [debug] [Thread-10 ]: Began running node model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report_tmp
[0m19:39:55.855484 [info ] [Thread-4  ]: 28 of 130 START sql view model marketing_full_v2_snapchat_ads_source.stg_snapchat_ads__campaign_history_tmp  [RUN]
[0m19:39:55.856903 [info ] [Thread-10 ]: 29 of 130 START sql view model marketing_full_v2_snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report_tmp  [RUN]
[0m19:39:55.858982 [debug] [Thread-4  ]: Re-using an available connection from the pool (formerly model.google_ads_source.stg_google_ads__ad_group_history_tmp, now model.snapchat_ads_source.stg_snapchat_ads__campaign_history_tmp)
[0m19:39:55.860971 [debug] [Thread-10 ]: Re-using an available connection from the pool (formerly model.apple_search_ads_source.stg_apple_search_ads__organization_tmp, now model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report_tmp)
[0m19:39:55.862368 [debug] [Thread-4  ]: Began compiling node model.snapchat_ads_source.stg_snapchat_ads__campaign_history_tmp
[0m19:39:55.863547 [debug] [Thread-10 ]: Began compiling node model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report_tmp
[0m19:39:55.875309 [debug] [Thread-4  ]: Writing injected SQL for node "model.snapchat_ads_source.stg_snapchat_ads__campaign_history_tmp"
[0m19:39:55.897779 [debug] [Thread-10 ]: Writing injected SQL for node "model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report_tmp"
[0m19:39:55.899747 [debug] [Thread-4  ]: Timing info for model.snapchat_ads_source.stg_snapchat_ads__campaign_history_tmp (compile): 19:39:55.864492 => 19:39:55.899179
[0m19:39:55.900869 [debug] [Thread-4  ]: Began executing node model.snapchat_ads_source.stg_snapchat_ads__campaign_history_tmp
[0m19:39:55.902003 [debug] [Thread-10 ]: Timing info for model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report_tmp (compile): 19:39:55.876080 => 19:39:55.901481
[0m19:39:55.919718 [debug] [Thread-10 ]: Began executing node model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report_tmp
[0m19:39:55.916244 [debug] [Thread-4  ]: Writing runtime sql for node "model.snapchat_ads_source.stg_snapchat_ads__campaign_history_tmp"
[0m19:39:55.963544 [debug] [Thread-4  ]: Opening a new connection, currently in state closed
[0m19:39:55.976265 [debug] [Thread-10 ]: Writing runtime sql for node "model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report_tmp"
[0m19:39:55.979016 [debug] [Thread-10 ]: Opening a new connection, currently in state closed
[0m19:39:56.017286 [debug] [Thread-12 ]: Timing info for model.dbt_ads_test.my_first_dbt_model (execute): 19:39:50.403828 => 19:39:56.016750
[0m19:39:56.019483 [debug] [Thread-12 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd136880700>]}
[0m19:39:56.021818 [info ] [Thread-12 ]: 12 of 130 OK created sql table model marketing_full_v2.my_first_dbt_model ...... [[32mCREATE TABLE (2.0 rows, 0 processed)[0m in 6.06s]
[0m19:39:56.024077 [debug] [Thread-12 ]: Finished running node model.dbt_ads_test.my_first_dbt_model
[0m19:39:56.025435 [debug] [Thread-12 ]: Began running node model.snapchat_ads_source.stg_snapchat_ads__creative_history_tmp
[0m19:39:56.027103 [info ] [Thread-12 ]: 30 of 130 START sql view model marketing_full_v2_snapchat_ads_source.stg_snapchat_ads__creative_history_tmp  [RUN]
[0m19:39:56.029946 [debug] [Thread-12 ]: Re-using an available connection from the pool (formerly model.dbt_ads_test.my_first_dbt_model, now model.snapchat_ads_source.stg_snapchat_ads__creative_history_tmp)
[0m19:39:56.030799 [debug] [Thread-12 ]: Began compiling node model.snapchat_ads_source.stg_snapchat_ads__creative_history_tmp
[0m19:39:56.054053 [debug] [Thread-12 ]: Writing injected SQL for node "model.snapchat_ads_source.stg_snapchat_ads__creative_history_tmp"
[0m19:39:56.057893 [debug] [Thread-12 ]: Timing info for model.snapchat_ads_source.stg_snapchat_ads__creative_history_tmp (compile): 19:39:56.031312 => 19:39:56.055190
[0m19:39:56.059318 [debug] [Thread-12 ]: Began executing node model.snapchat_ads_source.stg_snapchat_ads__creative_history_tmp
[0m19:39:56.146538 [debug] [Thread-12 ]: Writing runtime sql for node "model.snapchat_ads_source.stg_snapchat_ads__creative_history_tmp"
[0m19:39:56.166191 [debug] [Thread-12 ]: Opening a new connection, currently in state closed
[0m19:39:56.476849 [debug] [Thread-4  ]: On model.snapchat_ads_source.stg_snapchat_ads__campaign_history_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.snapchat_ads_source.stg_snapchat_ads__campaign_history_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__campaign_history_tmp`
  OPTIONS()
  as 

select *
from `drops-bi`.`drops_snapchat_ads_full`.`campaign_history`;


[0m19:39:56.541215 [debug] [Thread-10 ]: On model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__campaign_hourly_report_tmp`
  OPTIONS()
  as 

select *
from `drops-bi`.`drops_snapchat_ads_full`.`campaign_hourly_report`;


[0m19:39:56.590849 [debug] [Thread-12 ]: On model.snapchat_ads_source.stg_snapchat_ads__creative_history_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.snapchat_ads_source.stg_snapchat_ads__creative_history_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__creative_history_tmp`
  OPTIONS()
  as 

select *
from `drops-bi`.`drops_snapchat_ads_full`.`creative_history`;


[0m19:39:57.309922 [debug] [Thread-3  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:6f578fcf-2287-4c92-96d0-f9de30ffd97d&page=queryresults
[0m19:39:57.347835 [debug] [Thread-8  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:96f8cee9-8ccd-4982-a074-3d80bc1e38f5&page=queryresults
[0m19:39:57.634404 [debug] [Thread-14 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:40e6ef57-bbac-4724-972d-d0c9d70ee28c&page=queryresults
[0m19:39:58.141374 [debug] [Thread-8  ]: Timing info for model.google_ads_source.stg_google_ads__ad_history_tmp (execute): 19:39:54.368060 => 19:39:58.140801
[0m19:39:58.146638 [debug] [Thread-15 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:9feb3226-fba0-455f-a293-da0fc8972083&page=queryresults
[0m19:39:58.161539 [debug] [Thread-8  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1356a5f10>]}
[0m19:39:58.163342 [debug] [Thread-3  ]: Timing info for model.google_ads_source.stg_google_ads__ad_group_stats_tmp (execute): 19:39:54.129940 => 19:39:58.159109
[0m19:39:58.168276 [info ] [Thread-8  ]: 18 of 130 OK created sql view model marketing_full_v2_google_ads_source.stg_google_ads__ad_history_tmp  [[32mCREATE VIEW (0 processed)[0m in 3.82s]
[0m19:39:58.173049 [debug] [Thread-3  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1356e0a00>]}
[0m19:39:58.175289 [debug] [Thread-8  ]: Finished running node model.google_ads_source.stg_google_ads__ad_history_tmp
[0m19:39:58.180082 [info ] [Thread-3  ]: 17 of 130 OK created sql view model marketing_full_v2_google_ads_source.stg_google_ads__ad_group_stats_tmp  [[32mCREATE VIEW (0 processed)[0m in 4.09s]
[0m19:39:58.182599 [debug] [Thread-8  ]: Began running node model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history_tmp
[0m19:39:58.189305 [debug] [Thread-3  ]: Finished running node model.google_ads_source.stg_google_ads__ad_group_stats_tmp
[0m19:39:58.190925 [info ] [Thread-8  ]: 31 of 130 START sql view model marketing_full_v2_snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history_tmp  [RUN]
[0m19:39:58.192635 [debug] [Thread-3  ]: Began running node model.tiktok_ads_source.stg_tiktok_ads__ad_group_history_tmp
[0m19:39:58.195402 [debug] [Thread-8  ]: Re-using an available connection from the pool (formerly model.google_ads_source.stg_google_ads__ad_history_tmp, now model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history_tmp)
[0m19:39:58.197142 [info ] [Thread-3  ]: 32 of 130 START sql view model marketing_full_v2_stg_tiktok_ads.stg_tiktok_ads__ad_group_history_tmp  [RUN]
[0m19:39:58.199741 [debug] [Thread-8  ]: Began compiling node model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history_tmp
[0m19:39:58.202344 [debug] [Thread-3  ]: Re-using an available connection from the pool (formerly model.google_ads_source.stg_google_ads__ad_group_stats_tmp, now model.tiktok_ads_source.stg_tiktok_ads__ad_group_history_tmp)
[0m19:39:58.216650 [debug] [Thread-3  ]: Began compiling node model.tiktok_ads_source.stg_tiktok_ads__ad_group_history_tmp
[0m19:39:58.226578 [debug] [Thread-8  ]: Writing injected SQL for node "model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history_tmp"
[0m19:39:58.238478 [debug] [Thread-3  ]: Writing injected SQL for node "model.tiktok_ads_source.stg_tiktok_ads__ad_group_history_tmp"
[0m19:39:58.240157 [debug] [Thread-5  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:273e40f9-5c9a-459f-91ab-61b6dd7b284c&page=queryresults
[0m19:39:58.243919 [debug] [Thread-8  ]: Timing info for model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history_tmp (compile): 19:39:58.203587 => 19:39:58.243256
[0m19:39:58.245540 [debug] [Thread-3  ]: Timing info for model.tiktok_ads_source.stg_tiktok_ads__ad_group_history_tmp (compile): 19:39:58.217618 => 19:39:58.244940
[0m19:39:58.248894 [debug] [Thread-8  ]: Began executing node model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history_tmp
[0m19:39:58.249992 [debug] [Thread-3  ]: Began executing node model.tiktok_ads_source.stg_tiktok_ads__ad_group_history_tmp
[0m19:39:58.482196 [debug] [Thread-8  ]: Writing runtime sql for node "model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history_tmp"
[0m19:39:58.483913 [debug] [Thread-9  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:d22e1b21-7ab7-4d23-8918-a86bea00ff2d&page=queryresults
[0m19:39:58.485387 [debug] [Thread-2  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:697b26a1-9659-4a61-8b36-11aab52cdf52&page=queryresults
[0m19:39:58.486913 [debug] [Thread-7  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:f5f97542-e0d5-42c8-a084-218453344f63&page=queryresults
[0m19:39:58.495074 [debug] [Thread-14 ]: Timing info for model.google_ads_source.stg_google_ads__ad_stats_tmp (execute): 19:39:54.563518 => 19:39:58.494503
[0m19:39:58.507975 [debug] [Thread-8  ]: Opening a new connection, currently in state closed
[0m19:39:58.511973 [debug] [Thread-14 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd132534070>]}
[0m19:39:58.523271 [info ] [Thread-14 ]: 19 of 130 OK created sql view model marketing_full_v2_google_ads_source.stg_google_ads__ad_stats_tmp  [[32mCREATE VIEW (0 processed)[0m in 4.00s]
[0m19:39:58.526210 [debug] [Thread-14 ]: Finished running node model.google_ads_source.stg_google_ads__ad_stats_tmp
[0m19:39:58.527653 [debug] [Thread-14 ]: Began running node model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly_tmp
[0m19:39:58.531172 [debug] [Thread-10 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:bf7c30e6-549b-40d6-bd75-c47f33e7f225&page=queryresults
[0m19:39:58.529203 [info ] [Thread-14 ]: 33 of 130 START sql view model marketing_full_v2_stg_tiktok_ads.stg_tiktok_ads__ad_group_report_hourly_tmp  [RUN]
[0m19:39:58.553795 [debug] [Thread-14 ]: Re-using an available connection from the pool (formerly model.google_ads_source.stg_google_ads__ad_stats_tmp, now model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly_tmp)
[0m19:39:58.555183 [debug] [Thread-14 ]: Began compiling node model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly_tmp
[0m19:39:58.626985 [debug] [Thread-6  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:30e0a95b-6206-436e-b456-4610df4a7b93&page=queryresults
[0m19:39:58.635559 [debug] [Thread-11 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:120e3176-b20e-4b1b-83b7-b123f7c571a0&page=queryresults
[0m19:39:58.654973 [debug] [Thread-13 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:5f417245-e43d-4c4e-a792-24831e28d6fd&page=queryresults
[0m19:39:58.657971 [debug] [Thread-12 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:d7284320-eab0-49f2-9266-e763e1f61bb3&page=queryresults
[0m19:39:58.661264 [debug] [Thread-4  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:d8cecaa7-e49c-4744-ae73-f67a49078ba4&page=queryresults
[0m19:39:58.643248 [debug] [Thread-14 ]: Writing injected SQL for node "model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly_tmp"
[0m19:39:58.684931 [debug] [Thread-14 ]: Timing info for model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly_tmp (compile): 19:39:58.556316 => 19:39:58.684413
[0m19:39:58.686455 [debug] [Thread-14 ]: Began executing node model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly_tmp
[0m19:39:58.695433 [debug] [Thread-14 ]: Writing runtime sql for node "model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly_tmp"
[0m19:39:58.733357 [debug] [Thread-14 ]: Opening a new connection, currently in state closed
[0m19:39:59.031144 [debug] [Thread-1  ]: Timing info for model.ad_reporting.metricflow_time_spine (execute): 19:39:53.718613 => 19:39:59.030612
[0m19:39:59.039230 [debug] [Thread-1  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd136042c40>]}
[0m19:39:59.056405 [info ] [Thread-1  ]: 1 of 130 OK created sql table model marketing_full_v2_ad_reporting.metricflow_time_spine  [[32mCREATE TABLE (3.7k rows, 0 processed)[0m in 9.08s]
[0m19:39:59.069773 [debug] [Thread-15 ]: Timing info for model.google_ads_source.stg_google_ads__campaign_history_tmp (execute): 19:39:54.809825 => 19:39:59.069307
[0m19:39:59.063800 [debug] [Thread-5  ]: Timing info for model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report_tmp (execute): 19:39:54.948598 => 19:39:59.063465
[0m19:39:59.093665 [debug] [Thread-1  ]: Finished running node model.ad_reporting.metricflow_time_spine
[0m19:39:59.095456 [debug] [Thread-8  ]: On model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__creative_url_tag_history_tmp`
  OPTIONS()
  as 

select *
from `drops-bi`.`drops_snapchat_ads_full`.`creative_url_tag_history`;


[0m19:39:59.096817 [debug] [Thread-14 ]: On model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__ad_group_report_hourly_tmp`
  OPTIONS()
  as 

select *
from `drops-bi`.`drops_tiktok_ads_full`.`adgroup_report_hourly`;


[0m19:39:59.102707 [debug] [Thread-15 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1359a9d90>]}
[0m19:39:59.105313 [debug] [Thread-5  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd136f21ca0>]}
[0m19:39:59.106890 [debug] [Thread-1  ]: Began running node model.tiktok_ads_source.stg_tiktok_ads__ad_history_tmp
[0m19:39:59.144433 [info ] [Thread-15 ]: 20 of 130 OK created sql view model marketing_full_v2_google_ads_source.stg_google_ads__campaign_history_tmp  [[32mCREATE VIEW (0 processed)[0m in 4.50s]
[0m19:39:59.146084 [info ] [Thread-5  ]: 25 of 130 OK created sql view model marketing_full_v2_snapchat_ads_source.stg_snapchat_ads__ad_hourly_report_tmp  [[32mCREATE VIEW (0 processed)[0m in 4.23s]
[0m19:39:59.149493 [debug] [Thread-15 ]: Finished running node model.google_ads_source.stg_google_ads__campaign_history_tmp
[0m19:39:59.147488 [info ] [Thread-1  ]: 34 of 130 START sql view model marketing_full_v2_stg_tiktok_ads.stg_tiktok_ads__ad_history_tmp  [RUN]
[0m19:39:59.152898 [debug] [Thread-5  ]: Finished running node model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report_tmp
[0m19:39:59.155685 [debug] [Thread-15 ]: Began running node model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly_tmp
[0m19:39:59.161826 [debug] [Thread-1  ]: Re-using an available connection from the pool (formerly model.ad_reporting.metricflow_time_spine, now model.tiktok_ads_source.stg_tiktok_ads__ad_history_tmp)
[0m19:39:59.167198 [debug] [Thread-5  ]: Began running node model.tiktok_ads_source.stg_tiktok_ads__advertiser_tmp
[0m19:39:59.168938 [info ] [Thread-15 ]: 35 of 130 START sql view model marketing_full_v2_stg_tiktok_ads.stg_tiktok_ads__ad_report_hourly_tmp  [RUN]
[0m19:39:59.185315 [debug] [Thread-15 ]: Re-using an available connection from the pool (formerly model.google_ads_source.stg_google_ads__campaign_history_tmp, now model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly_tmp)
[0m19:39:59.186376 [debug] [Thread-15 ]: Began compiling node model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly_tmp
[0m19:39:59.174196 [debug] [Thread-1  ]: Began compiling node model.tiktok_ads_source.stg_tiktok_ads__ad_history_tmp
[0m19:39:59.182979 [info ] [Thread-5  ]: 36 of 130 START sql view model marketing_full_v2_stg_tiktok_ads.stg_tiktok_ads__advertiser_tmp  [RUN]
[0m19:39:59.200698 [debug] [Thread-15 ]: Writing injected SQL for node "model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly_tmp"
[0m19:39:59.214977 [debug] [Thread-1  ]: Writing injected SQL for node "model.tiktok_ads_source.stg_tiktok_ads__ad_history_tmp"
[0m19:39:59.216909 [debug] [Thread-5  ]: Re-using an available connection from the pool (formerly model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report_tmp, now model.tiktok_ads_source.stg_tiktok_ads__advertiser_tmp)
[0m19:39:59.224814 [debug] [Thread-1  ]: Timing info for model.tiktok_ads_source.stg_tiktok_ads__ad_history_tmp (compile): 19:39:59.202585 => 19:39:59.224225
[0m19:39:59.226453 [debug] [Thread-15 ]: Timing info for model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly_tmp (compile): 19:39:59.187082 => 19:39:59.225710
[0m19:39:59.227922 [debug] [Thread-5  ]: Began compiling node model.tiktok_ads_source.stg_tiktok_ads__advertiser_tmp
[0m19:39:59.240448 [debug] [Thread-1  ]: Began executing node model.tiktok_ads_source.stg_tiktok_ads__ad_history_tmp
[0m19:39:59.242173 [debug] [Thread-15 ]: Began executing node model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly_tmp
[0m19:39:59.275851 [debug] [Thread-5  ]: Writing injected SQL for node "model.tiktok_ads_source.stg_tiktok_ads__advertiser_tmp"
[0m19:39:59.289147 [debug] [Thread-1  ]: Writing runtime sql for node "model.tiktok_ads_source.stg_tiktok_ads__ad_history_tmp"
[0m19:39:59.303248 [debug] [Thread-15 ]: Writing runtime sql for node "model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly_tmp"
[0m19:39:59.305479 [debug] [Thread-5  ]: Timing info for model.tiktok_ads_source.stg_tiktok_ads__advertiser_tmp (compile): 19:39:59.263506 => 19:39:59.304749
[0m19:39:59.307200 [debug] [Thread-5  ]: Began executing node model.tiktok_ads_source.stg_tiktok_ads__advertiser_tmp
[0m19:39:59.315283 [debug] [Thread-1  ]: Opening a new connection, currently in state closed
[0m19:39:59.329397 [debug] [Thread-5  ]: Writing runtime sql for node "model.tiktok_ads_source.stg_tiktok_ads__advertiser_tmp"
[0m19:39:59.338104 [debug] [Thread-2  ]: Timing info for model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report_tmp (execute): 19:39:55.344789 => 19:39:59.337534
[0m19:39:59.339509 [debug] [Thread-15 ]: Opening a new connection, currently in state closed
[0m19:39:59.347264 [debug] [Thread-9  ]: Timing info for model.snapchat_ads_source.stg_snapchat_ads__ad_account_history_tmp (execute): 19:39:54.978328 => 19:39:59.346571
[0m19:39:59.349891 [debug] [Thread-2  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd137c21ee0>]}
[0m19:39:59.352610 [debug] [Thread-5  ]: Opening a new connection, currently in state closed
[0m19:39:59.358894 [debug] [Thread-9  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1362566d0>]}
[0m19:39:59.379103 [debug] [Thread-7  ]: Timing info for model.google_ads_source.stg_google_ads__keyword_stats_tmp (execute): 19:39:54.985101 => 19:39:59.378626
[0m19:39:59.380996 [debug] [Thread-7  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd137247070>]}
[0m19:39:59.470332 [debug] [Thread-4  ]: Timing info for model.snapchat_ads_source.stg_snapchat_ads__campaign_history_tmp (execute): 19:39:55.902983 => 19:39:59.469825
[0m19:39:59.472739 [debug] [Thread-4  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13797bc70>]}
[0m19:39:59.480382 [debug] [Thread-3  ]: Writing runtime sql for node "model.tiktok_ads_source.stg_tiktok_ads__ad_group_history_tmp"
[0m19:39:59.488595 [debug] [Thread-11 ]: Timing info for model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history_tmp (execute): 19:39:55.067784 => 19:39:59.487456
[0m19:39:59.500477 [debug] [Thread-6  ]: Timing info for model.snapchat_ads_source.stg_snapchat_ads__ad_history_tmp (execute): 19:39:54.932755 => 19:39:59.494313
[0m19:39:59.502937 [debug] [Thread-10 ]: Timing info for model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report_tmp (execute): 19:39:55.920737 => 19:39:59.500948
[0m19:39:59.507448 [debug] [Thread-11 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13724a1f0>]}
[0m19:39:59.509375 [debug] [Thread-6  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd137b33610>]}
[0m19:39:59.512784 [debug] [Thread-10 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13ab12940>]}
[0m19:39:59.526826 [debug] [Thread-3  ]: Opening a new connection, currently in state closed
[0m19:39:59.572881 [debug] [Thread-12 ]: Timing info for model.snapchat_ads_source.stg_snapchat_ads__creative_history_tmp (execute): 19:39:56.060238 => 19:39:59.572415
[0m19:39:59.574650 [debug] [Thread-12 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1379cef70>]}
[0m19:39:59.653550 [debug] [Thread-15 ]: On model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__ad_report_hourly_tmp`
  OPTIONS()
  as 

select *
from `drops-bi`.`drops_tiktok_ads_full`.`ad_report_hourly`;


[0m19:39:59.675765 [debug] [Thread-1  ]: On model.tiktok_ads_source.stg_tiktok_ads__ad_history_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.tiktok_ads_source.stg_tiktok_ads__ad_history_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__ad_history_tmp`
  OPTIONS()
  as 

select *
from `drops-bi`.`drops_tiktok_ads_full`.`ad_history`;


[0m19:39:59.682292 [debug] [Thread-5  ]: On model.tiktok_ads_source.stg_tiktok_ads__advertiser_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.tiktok_ads_source.stg_tiktok_ads__advertiser_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__advertiser_tmp`
  OPTIONS()
  as 

select *
from `drops-bi`.`drops_tiktok_ads_full`.`advertiser`;


[0m19:39:59.968945 [debug] [Thread-3  ]: On model.tiktok_ads_source.stg_tiktok_ads__ad_group_history_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.tiktok_ads_source.stg_tiktok_ads__ad_group_history_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__ad_group_history_tmp`
  OPTIONS()
  as 

select *
from `drops-bi`.`drops_tiktok_ads_full`.`adgroup_history`;


[0m19:40:00.030372 [debug] [Thread-13 ]: Timing info for model.google_ads_source.stg_google_ads__campaign_stats_tmp (execute): 19:39:54.909764 => 19:40:00.029773
[0m19:40:00.032562 [debug] [Thread-13 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13727b0a0>]}
[0m19:40:01.125809 [debug] [Thread-14 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:a4ebb9cb-9798-4870-ab5b-ba44f1a0f638&page=queryresults
[0m19:40:01.647635 [debug] [Thread-15 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:65614752-d5a8-40ae-9f25-595394abbf45&page=queryresults
[0m19:40:01.740067 [debug] [Thread-8  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:4e1c59d4-41e7-4155-ae61-b73ec5c248fe&page=queryresults
[0m19:40:01.743404 [debug] [Thread-8  ]: BigQuery adapter: Unhandled error while running:
/* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__creative_url_tag_history_tmp`
  OPTIONS()
  as 

select *
from `drops-bi`.`drops_snapchat_ads_full`.`creative_url_tag_history`;


[0m19:40:01.746053 [debug] [Thread-3  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:9aa44aec-7760-4121-9dce-28b016a67f9a&page=queryresults
[0m19:40:01.746953 [debug] [Thread-8  ]: BigQuery adapter: 404 Not found: Table drops-bi:drops_snapchat_ads_full.creative_url_tag_history was not found in location US

Location: US
Job ID: 4e1c59d4-41e7-4155-ae61-b73ec5c248fe

[0m19:40:01.753430 [debug] [Thread-8  ]: Timing info for model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history_tmp (execute): 19:39:58.251002 => 19:40:01.752933
[0m19:40:01.762080 [debug] [Thread-8  ]: Runtime Error in model stg_snapchat_ads__creative_url_tag_history_tmp (models/tmp/stg_snapchat_ads__creative_url_tag_history_tmp.sql)
  404 Not found: Table drops-bi:drops_snapchat_ads_full.creative_url_tag_history was not found in location US
  
  Location: US
  Job ID: 4e1c59d4-41e7-4155-ae61-b73ec5c248fe
  
[0m19:40:01.763190 [debug] [Thread-8  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd137cd5d90>]}
[0m19:40:01.854533 [debug] [Thread-5  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:27f93407-bba4-4daa-b684-29170ec2944c&page=queryresults
[0m19:40:01.933850 [debug] [Thread-14 ]: Timing info for model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly_tmp (execute): 19:39:58.687151 => 19:40:01.933077
[0m19:40:01.936843 [debug] [Thread-14 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd137c70af0>]}
[0m19:40:02.156070 [debug] [Thread-1  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:8ab504a3-8c2d-45f7-bbc7-ba6ca24ddd25&page=queryresults
[0m19:40:02.216077 [info ] [Thread-2  ]: 27 of 130 OK created sql view model marketing_full_v2_snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report_tmp  [[32mCREATE VIEW (0 processed)[0m in 4.13s]
[0m19:40:02.217305 [info ] [Thread-9  ]: 23 of 130 OK created sql view model marketing_full_v2_snapchat_ads_source.stg_snapchat_ads__ad_account_history_tmp  [[32mCREATE VIEW (0 processed)[0m in 4.55s]
[0m19:40:02.219146 [info ] [Thread-7  ]: 22 of 130 OK created sql view model marketing_full_v2_google_ads_source.stg_google_ads__keyword_stats_tmp  [[32mCREATE VIEW (0 processed)[0m in 4.69s]
[0m19:40:02.223319 [info ] [Thread-4  ]: 28 of 130 OK created sql view model marketing_full_v2_snapchat_ads_source.stg_snapchat_ads__campaign_history_tmp  [[32mCREATE VIEW (0 processed)[0m in 3.61s]
[0m19:40:02.224723 [info ] [Thread-11 ]: 26 of 130 OK created sql view model marketing_full_v2_snapchat_ads_source.stg_snapchat_ads__ad_squad_history_tmp  [[32mCREATE VIEW (0 processed)[0m in 4.47s]
[0m19:40:02.229378 [debug] [Thread-2  ]: Finished running node model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report_tmp
[0m19:40:02.226376 [info ] [Thread-6  ]: 24 of 130 OK created sql view model marketing_full_v2_snapchat_ads_source.stg_snapchat_ads__ad_history_tmp  [[32mCREATE VIEW (0 processed)[0m in 4.80s]
[0m19:40:02.228037 [info ] [Thread-10 ]: 29 of 130 OK created sql view model marketing_full_v2_snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report_tmp  [[32mCREATE VIEW (0 processed)[0m in 3.65s]
[0m19:40:02.230768 [info ] [Thread-12 ]: 30 of 130 OK created sql view model marketing_full_v2_snapchat_ads_source.stg_snapchat_ads__creative_history_tmp  [[32mCREATE VIEW (0 processed)[0m in 3.55s]
[0m19:40:02.238518 [debug] [Thread-9  ]: Finished running node model.snapchat_ads_source.stg_snapchat_ads__ad_account_history_tmp
[0m19:40:02.232460 [info ] [Thread-13 ]: 21 of 130 OK created sql view model marketing_full_v2_google_ads_source.stg_google_ads__campaign_stats_tmp  [[32mCREATE VIEW (0 processed)[0m in 5.43s]
[0m19:40:02.234774 [error] [Thread-8  ]: 31 of 130 ERROR creating sql view model marketing_full_v2_snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history_tmp  [[31mERROR[0m in 3.57s]
[0m19:40:02.236900 [info ] [Thread-14 ]: 33 of 130 OK created sql view model marketing_full_v2_stg_tiktok_ads.stg_tiktok_ads__ad_group_report_hourly_tmp  [[32mCREATE VIEW (0 processed)[0m in 3.38s]
[0m19:40:02.242293 [debug] [Thread-7  ]: Finished running node model.google_ads_source.stg_google_ads__keyword_stats_tmp
[0m19:40:02.244153 [debug] [Thread-4  ]: Finished running node model.snapchat_ads_source.stg_snapchat_ads__campaign_history_tmp
[0m19:40:02.245854 [debug] [Thread-11 ]: Finished running node model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history_tmp
[0m19:40:02.247226 [debug] [Thread-2  ]: Began running node model.tiktok_ads_source.stg_tiktok_ads__campaign_history_tmp
[0m19:40:02.249055 [debug] [Thread-6  ]: Finished running node model.snapchat_ads_source.stg_snapchat_ads__ad_history_tmp
[0m19:40:02.251742 [debug] [Thread-10 ]: Finished running node model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report_tmp
[0m19:40:02.253671 [debug] [Thread-12 ]: Finished running node model.snapchat_ads_source.stg_snapchat_ads__creative_history_tmp
[0m19:40:02.255101 [debug] [Thread-9  ]: Began running node model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly_tmp
[0m19:40:02.258086 [debug] [Thread-13 ]: Finished running node model.google_ads_source.stg_google_ads__campaign_stats_tmp
[0m19:40:02.260270 [debug] [Thread-8  ]: Finished running node model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history_tmp
[0m19:40:02.261930 [debug] [Thread-14 ]: Finished running node model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly_tmp
[0m19:40:02.263160 [debug] [Thread-7  ]: Began running node model.twitter_ads_source.stg_twitter_ads__account_history_tmp
[0m19:40:02.264611 [debug] [Thread-4  ]: Began running node model.twitter_ads_source.stg_twitter_ads__campaign_history_tmp
[0m19:40:02.266380 [debug] [Thread-11 ]: Began running node model.twitter_ads_source.stg_twitter_ads__campaign_report_tmp
[0m19:40:02.268616 [info ] [Thread-2  ]: 37 of 130 START sql view model marketing_full_v2_stg_tiktok_ads.stg_tiktok_ads__campaign_history_tmp  [RUN]
[0m19:40:02.270336 [debug] [Thread-6  ]: Began running node model.twitter_ads_source.stg_twitter_ads__line_item_history_tmp
[0m19:40:02.297256 [info ] [Thread-6  ]: 42 of 130 START sql view model marketing_full_v2_twitter_ads_source.stg_twitter_ads__line_item_history_tmp  [RUN]
[0m19:40:02.272680 [debug] [Thread-10 ]: Began running node model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report_tmp
[0m19:40:02.281097 [info ] [Thread-9  ]: 38 of 130 START sql view model marketing_full_v2_stg_tiktok_ads.stg_tiktok_ads__campaign_report_hourly_tmp  [RUN]
[0m19:40:02.282886 [debug] [Thread-13 ]: Began running node model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history_tmp
[0m19:40:02.284842 [debug] [Thread-8  ]: Began running node model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report_tmp
[0m19:40:02.288107 [debug] [Thread-14 ]: Began running node model.twitter_ads_source.stg_twitter_ads__tweet_tmp
[0m19:40:02.290292 [info ] [Thread-7  ]: 39 of 130 START sql view model marketing_full_v2_twitter_ads_source.stg_twitter_ads__account_history_tmp  [RUN]
[0m19:40:02.291945 [info ] [Thread-4  ]: 40 of 130 START sql view model marketing_full_v2_twitter_ads_source.stg_twitter_ads__campaign_history_tmp  [RUN]
[0m19:40:02.293801 [info ] [Thread-11 ]: 41 of 130 START sql view model marketing_full_v2_twitter_ads_source.stg_twitter_ads__campaign_report_tmp  [RUN]
[0m19:40:02.295891 [debug] [Thread-2  ]: Re-using an available connection from the pool (formerly model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report_tmp, now model.tiktok_ads_source.stg_tiktok_ads__campaign_history_tmp)
[0m19:40:02.298410 [debug] [Thread-6  ]: Re-using an available connection from the pool (formerly model.snapchat_ads_source.stg_snapchat_ads__ad_history_tmp, now model.twitter_ads_source.stg_twitter_ads__line_item_history_tmp)
[0m19:40:02.277746 [debug] [Thread-12 ]: Began running node model.twitter_ads_source.stg_twitter_ads__line_item_report_tmp
[0m19:40:02.299967 [info ] [Thread-10 ]: 43 of 130 START sql view model marketing_full_v2_twitter_ads_source.stg_twitter_ads__line_item_keywords_report_tmp  [RUN]
[0m19:40:02.301973 [debug] [Thread-9  ]: Re-using an available connection from the pool (formerly model.snapchat_ads_source.stg_snapchat_ads__ad_account_history_tmp, now model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly_tmp)
[0m19:40:02.303435 [info ] [Thread-13 ]: 45 of 130 START sql view model marketing_full_v2_twitter_ads_source.stg_twitter_ads__promoted_tweet_history_tmp  [RUN]
[0m19:40:02.305164 [info ] [Thread-8  ]: 46 of 130 START sql view model marketing_full_v2_twitter_ads_source.stg_twitter_ads__promoted_tweet_report_tmp  [RUN]
[0m19:40:02.306885 [info ] [Thread-14 ]: 47 of 130 START sql view model marketing_full_v2_twitter_ads_source.stg_twitter_ads__tweet_tmp  [RUN]
[0m19:40:02.311230 [debug] [Thread-7  ]: Re-using an available connection from the pool (formerly model.google_ads_source.stg_google_ads__keyword_stats_tmp, now model.twitter_ads_source.stg_twitter_ads__account_history_tmp)
[0m19:40:02.329069 [debug] [Thread-14 ]: Re-using an available connection from the pool (formerly model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly_tmp, now model.twitter_ads_source.stg_twitter_ads__tweet_tmp)
[0m19:40:02.314928 [debug] [Thread-11 ]: Re-using an available connection from the pool (formerly model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history_tmp, now model.twitter_ads_source.stg_twitter_ads__campaign_report_tmp)
[0m19:40:02.315925 [debug] [Thread-2  ]: Began compiling node model.tiktok_ads_source.stg_tiktok_ads__campaign_history_tmp
[0m19:40:02.317922 [debug] [Thread-6  ]: Began compiling node model.twitter_ads_source.stg_twitter_ads__line_item_history_tmp
[0m19:40:02.319275 [info ] [Thread-12 ]: 44 of 130 START sql view model marketing_full_v2_twitter_ads_source.stg_twitter_ads__line_item_report_tmp  [RUN]
[0m19:40:02.321367 [debug] [Thread-10 ]: Re-using an available connection from the pool (formerly model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report_tmp, now model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report_tmp)
[0m19:40:02.368034 [debug] [Thread-10 ]: Began compiling node model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report_tmp
[0m19:40:02.325795 [debug] [Thread-13 ]: Re-using an available connection from the pool (formerly model.google_ads_source.stg_google_ads__campaign_stats_tmp, now model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history_tmp)
[0m19:40:02.327409 [debug] [Thread-8  ]: Re-using an available connection from the pool (formerly model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history_tmp, now model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report_tmp)
[0m19:40:02.329957 [debug] [Thread-7  ]: Began compiling node model.twitter_ads_source.stg_twitter_ads__account_history_tmp
[0m19:40:02.313447 [debug] [Thread-4  ]: Re-using an available connection from the pool (formerly model.snapchat_ads_source.stg_snapchat_ads__campaign_history_tmp, now model.twitter_ads_source.stg_twitter_ads__campaign_history_tmp)
[0m19:40:02.331103 [debug] [Thread-14 ]: Began compiling node model.twitter_ads_source.stg_twitter_ads__tweet_tmp
[0m19:40:02.333002 [debug] [Thread-11 ]: Began compiling node model.twitter_ads_source.stg_twitter_ads__campaign_report_tmp
[0m19:40:02.354898 [debug] [Thread-2  ]: Writing injected SQL for node "model.tiktok_ads_source.stg_tiktok_ads__campaign_history_tmp"
[0m19:40:02.364794 [debug] [Thread-12 ]: Re-using an available connection from the pool (formerly model.snapchat_ads_source.stg_snapchat_ads__creative_history_tmp, now model.twitter_ads_source.stg_twitter_ads__line_item_report_tmp)
[0m19:40:02.366818 [debug] [Thread-6  ]: Writing injected SQL for node "model.twitter_ads_source.stg_twitter_ads__line_item_history_tmp"
[0m19:40:02.322891 [debug] [Thread-9  ]: Began compiling node model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly_tmp
[0m19:40:02.378853 [debug] [Thread-13 ]: Began compiling node model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history_tmp
[0m19:40:02.392529 [debug] [Thread-8  ]: Began compiling node model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report_tmp
[0m19:40:02.411476 [debug] [Thread-7  ]: Writing injected SQL for node "model.twitter_ads_source.stg_twitter_ads__account_history_tmp"
[0m19:40:02.417980 [debug] [Thread-4  ]: Began compiling node model.twitter_ads_source.stg_twitter_ads__campaign_history_tmp
[0m19:40:02.427151 [debug] [Thread-10 ]: Writing injected SQL for node "model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report_tmp"
[0m19:40:02.447974 [debug] [Thread-15 ]: Timing info for model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly_tmp (execute): 19:39:59.290164 => 19:40:02.447650
[0m19:40:02.449082 [debug] [Thread-14 ]: Writing injected SQL for node "model.twitter_ads_source.stg_twitter_ads__tweet_tmp"
[0m19:40:02.456612 [debug] [Thread-12 ]: Began compiling node model.twitter_ads_source.stg_twitter_ads__line_item_report_tmp
[0m19:40:02.467339 [debug] [Thread-11 ]: Writing injected SQL for node "model.twitter_ads_source.stg_twitter_ads__campaign_report_tmp"
[0m19:40:02.470910 [debug] [Thread-2  ]: Timing info for model.tiktok_ads_source.stg_tiktok_ads__campaign_history_tmp (compile): 19:40:02.334659 => 19:40:02.469123
[0m19:40:02.562828 [debug] [Thread-2  ]: Began executing node model.tiktok_ads_source.stg_tiktok_ads__campaign_history_tmp
[0m19:40:02.483610 [debug] [Thread-9  ]: Writing injected SQL for node "model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly_tmp"
[0m19:40:02.519423 [debug] [Thread-13 ]: Writing injected SQL for node "model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history_tmp"
[0m19:40:02.526228 [debug] [Thread-3  ]: Timing info for model.tiktok_ads_source.stg_tiktok_ads__ad_group_history_tmp (execute): 19:39:58.257237 => 19:40:02.525582
[0m19:40:02.528146 [debug] [Thread-7  ]: Timing info for model.twitter_ads_source.stg_twitter_ads__account_history_tmp (compile): 19:40:02.393669 => 19:40:02.527543
[0m19:40:02.540708 [debug] [Thread-4  ]: Writing injected SQL for node "model.twitter_ads_source.stg_twitter_ads__campaign_history_tmp"
[0m19:40:02.543329 [debug] [Thread-15 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd136ef98b0>]}
[0m19:40:02.544566 [debug] [Thread-6  ]: Timing info for model.twitter_ads_source.stg_twitter_ads__line_item_history_tmp (compile): 19:40:02.346747 => 19:40:02.544078
[0m19:40:02.586444 [debug] [Thread-6  ]: Began executing node model.twitter_ads_source.stg_twitter_ads__line_item_history_tmp
[0m19:40:02.558658 [debug] [Thread-12 ]: Writing injected SQL for node "model.twitter_ads_source.stg_twitter_ads__line_item_report_tmp"
[0m19:40:02.560713 [debug] [Thread-11 ]: Timing info for model.twitter_ads_source.stg_twitter_ads__campaign_report_tmp (compile): 19:40:02.449984 => 19:40:02.560174
[0m19:40:02.561779 [debug] [Thread-14 ]: Timing info for model.twitter_ads_source.stg_twitter_ads__tweet_tmp (compile): 19:40:02.428059 => 19:40:02.561325
[0m19:40:02.514085 [debug] [Thread-8  ]: Writing injected SQL for node "model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report_tmp"
[0m19:40:02.577724 [debug] [Thread-9  ]: Timing info for model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly_tmp (compile): 19:40:02.471746 => 19:40:02.577303
[0m19:40:02.606767 [debug] [Thread-9  ]: Began executing node model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly_tmp
[0m19:40:02.579412 [debug] [Thread-3  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd135d84760>]}
[0m19:40:02.581340 [debug] [Thread-7  ]: Began executing node model.twitter_ads_source.stg_twitter_ads__account_history_tmp
[0m19:40:02.581925 [debug] [Thread-2  ]: Writing runtime sql for node "model.tiktok_ads_source.stg_tiktok_ads__campaign_history_tmp"
[0m19:40:02.583748 [debug] [Thread-4  ]: Timing info for model.twitter_ads_source.stg_twitter_ads__campaign_history_tmp (compile): 19:40:02.529007 => 19:40:02.583231
[0m19:40:02.585214 [info ] [Thread-15 ]: 35 of 130 OK created sql view model marketing_full_v2_stg_tiktok_ads.stg_tiktok_ads__ad_report_hourly_tmp  [[32mCREATE VIEW (0 processed)[0m in 3.36s]
[0m19:40:02.546051 [debug] [Thread-10 ]: Timing info for model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report_tmp (compile): 19:40:02.368831 => 19:40:02.545353
[0m19:40:02.599704 [debug] [Thread-11 ]: Began executing node model.twitter_ads_source.stg_twitter_ads__campaign_report_tmp
[0m19:40:02.601593 [debug] [Thread-12 ]: Timing info for model.twitter_ads_source.stg_twitter_ads__line_item_report_tmp (compile): 19:40:02.547187 => 19:40:02.601011
[0m19:40:02.602503 [debug] [Thread-6  ]: Writing runtime sql for node "model.twitter_ads_source.stg_twitter_ads__line_item_history_tmp"
[0m19:40:02.603622 [debug] [Thread-14 ]: Began executing node model.twitter_ads_source.stg_twitter_ads__tweet_tmp
[0m19:40:02.605534 [debug] [Thread-8  ]: Timing info for model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report_tmp (compile): 19:40:02.491603 => 19:40:02.604943
[0m19:40:02.580726 [debug] [Thread-13 ]: Timing info for model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history_tmp (compile): 19:40:02.484475 => 19:40:02.580201
[0m19:40:02.685827 [debug] [Thread-13 ]: Began executing node model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history_tmp
[0m19:40:02.622814 [info ] [Thread-3  ]: 32 of 130 OK created sql view model marketing_full_v2_stg_tiktok_ads.stg_tiktok_ads__ad_group_history_tmp  [[32mCREATE VIEW (0 processed)[0m in 4.38s]
[0m19:40:02.694233 [debug] [Thread-3  ]: Finished running node model.tiktok_ads_source.stg_tiktok_ads__ad_group_history_tmp
[0m19:40:02.647526 [debug] [Thread-5  ]: Timing info for model.tiktok_ads_source.stg_tiktok_ads__advertiser_tmp (execute): 19:39:59.308043 => 19:40:02.646210
[0m19:40:02.649054 [debug] [Thread-4  ]: Began executing node model.twitter_ads_source.stg_twitter_ads__campaign_history_tmp
[0m19:40:02.650204 [debug] [Thread-2  ]: Opening a new connection, currently in state closed
[0m19:40:02.651913 [debug] [Thread-15 ]: Finished running node model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly_tmp
[0m19:40:02.653115 [debug] [Thread-10 ]: Began executing node model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report_tmp
[0m19:40:02.666499 [debug] [Thread-11 ]: Writing runtime sql for node "model.twitter_ads_source.stg_twitter_ads__campaign_report_tmp"
[0m19:40:02.667902 [debug] [Thread-12 ]: Began executing node model.twitter_ads_source.stg_twitter_ads__line_item_report_tmp
[0m19:40:02.669918 [debug] [Thread-6  ]: Opening a new connection, currently in state closed
[0m19:40:02.683187 [debug] [Thread-8  ]: Began executing node model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report_tmp
[0m19:40:02.684645 [debug] [Thread-14 ]: Writing runtime sql for node "model.twitter_ads_source.stg_twitter_ads__tweet_tmp"
[0m19:40:02.621201 [debug] [Thread-9  ]: Writing runtime sql for node "model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly_tmp"
[0m19:40:02.700476 [debug] [Thread-13 ]: Writing runtime sql for node "model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history_tmp"
[0m19:40:02.701588 [debug] [Thread-3  ]: Began running node model.twitter_ads_source.stg_twitter_ads__tweet_url_tmp
[0m19:40:02.640181 [debug] [Thread-7  ]: Writing runtime sql for node "model.twitter_ads_source.stg_twitter_ads__account_history_tmp"
[0m19:40:02.704636 [debug] [Thread-5  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd137c263a0>]}
[0m19:40:02.714588 [debug] [Thread-15 ]: Began running node model.apple_search_ads_source.stg_apple_search_ads__ad_history
[0m19:40:02.725531 [debug] [Thread-4  ]: Writing runtime sql for node "model.twitter_ads_source.stg_twitter_ads__campaign_history_tmp"
[0m19:40:02.739230 [debug] [Thread-10 ]: Writing runtime sql for node "model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report_tmp"
[0m19:40:02.761636 [debug] [Thread-12 ]: Writing runtime sql for node "model.twitter_ads_source.stg_twitter_ads__line_item_report_tmp"
[0m19:40:02.780774 [debug] [Thread-8  ]: Writing runtime sql for node "model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report_tmp"
[0m19:40:02.782325 [debug] [Thread-14 ]: Opening a new connection, currently in state closed
[0m19:40:02.783700 [debug] [Thread-11 ]: Opening a new connection, currently in state closed
[0m19:40:02.786177 [info ] [Thread-3  ]: 48 of 130 START sql view model marketing_full_v2_twitter_ads_source.stg_twitter_ads__tweet_url_tmp  [RUN]
[0m19:40:02.787724 [debug] [Thread-9  ]: Opening a new connection, currently in state closed
[0m19:40:02.789308 [info ] [Thread-15 ]: 49 of 130 SKIP relation marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__ad_history  [[33mSKIP[0m]
[0m19:40:02.790317 [info ] [Thread-5  ]: 36 of 130 OK created sql view model marketing_full_v2_stg_tiktok_ads.stg_tiktok_ads__advertiser_tmp  [[32mCREATE VIEW (0 processed)[0m in 3.49s]
[0m19:40:02.807459 [debug] [Thread-5  ]: Finished running node model.tiktok_ads_source.stg_tiktok_ads__advertiser_tmp
[0m19:40:02.794496 [debug] [Thread-7  ]: Opening a new connection, currently in state closed
[0m19:40:02.792987 [debug] [Thread-4  ]: Opening a new connection, currently in state closed
[0m19:40:02.796039 [debug] [Thread-10 ]: Opening a new connection, currently in state closed
[0m19:40:02.796958 [debug] [Thread-13 ]: Opening a new connection, currently in state closed
[0m19:40:02.798549 [debug] [Thread-12 ]: Opening a new connection, currently in state closed
[0m19:40:02.802889 [debug] [Thread-3  ]: Re-using an available connection from the pool (formerly model.tiktok_ads_source.stg_tiktok_ads__ad_group_history_tmp, now model.twitter_ads_source.stg_twitter_ads__tweet_url_tmp)
[0m19:40:02.805966 [debug] [Thread-15 ]: Finished running node model.apple_search_ads_source.stg_apple_search_ads__ad_history
[0m19:40:02.808558 [debug] [Thread-5  ]: Began running node model.apple_search_ads_source.stg_apple_search_ads__ad_group_report
[0m19:40:02.830832 [debug] [Thread-3  ]: Began compiling node model.twitter_ads_source.stg_twitter_ads__tweet_url_tmp
[0m19:40:02.834046 [debug] [Thread-15 ]: Began running node model.apple_search_ads_source.stg_apple_search_ads__keyword_history
[0m19:40:02.836077 [info ] [Thread-5  ]: 50 of 130 START sql table model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__ad_group_report  [RUN]
[0m19:40:02.800064 [debug] [Thread-8  ]: Opening a new connection, currently in state closed
[0m19:40:02.848137 [debug] [Thread-3  ]: Writing injected SQL for node "model.twitter_ads_source.stg_twitter_ads__tweet_url_tmp"
[0m19:40:02.849362 [info ] [Thread-15 ]: 51 of 130 START sql table model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__keyword_history  [RUN]
[0m19:40:02.852024 [debug] [Thread-5  ]: Re-using an available connection from the pool (formerly model.tiktok_ads_source.stg_tiktok_ads__advertiser_tmp, now model.apple_search_ads_source.stg_apple_search_ads__ad_group_report)
[0m19:40:02.859875 [debug] [Thread-5  ]: Began compiling node model.apple_search_ads_source.stg_apple_search_ads__ad_group_report
[0m19:40:02.854828 [debug] [Thread-3  ]: Timing info for model.twitter_ads_source.stg_twitter_ads__tweet_url_tmp (compile): 19:40:02.837099 => 19:40:02.854308
[0m19:40:02.869272 [debug] [Thread-3  ]: Began executing node model.twitter_ads_source.stg_twitter_ads__tweet_url_tmp
[0m19:40:02.881522 [debug] [Thread-5  ]: Opening a new connection, currently in state closed
[0m19:40:02.887125 [debug] [Thread-3  ]: Writing runtime sql for node "model.twitter_ads_source.stg_twitter_ads__tweet_url_tmp"
[0m19:40:02.858796 [debug] [Thread-15 ]: Re-using an available connection from the pool (formerly model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly_tmp, now model.apple_search_ads_source.stg_apple_search_ads__keyword_history)
[0m19:40:02.888774 [debug] [Thread-3  ]: Opening a new connection, currently in state closed
[0m19:40:02.889738 [debug] [Thread-15 ]: Began compiling node model.apple_search_ads_source.stg_apple_search_ads__keyword_history
[0m19:40:02.903430 [debug] [Thread-15 ]: Opening a new connection, currently in state closed
[0m19:40:03.159576 [debug] [Thread-9  ]: On model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__campaign_report_hourly_tmp`
  OPTIONS()
  as 

select *
from `drops-bi`.`drops_tiktok_ads_full`.`campaign_report_hourly`;


[0m19:40:03.160681 [debug] [Thread-11 ]: On model.twitter_ads_source.stg_twitter_ads__campaign_report_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.twitter_ads_source.stg_twitter_ads__campaign_report_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__campaign_report_tmp`
  OPTIONS()
  as 

select * 
from `drops-bi`.`drops_twitter_ads_full`.`campaign_report`;


[0m19:40:03.166415 [debug] [Thread-6  ]: On model.twitter_ads_source.stg_twitter_ads__line_item_history_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.twitter_ads_source.stg_twitter_ads__line_item_history_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__line_item_history_tmp`
  OPTIONS()
  as 

select *
from `drops-bi`.`drops_twitter_ads_full`.`line_item_history`;


[0m19:40:03.169989 [debug] [Thread-2  ]: On model.tiktok_ads_source.stg_tiktok_ads__campaign_history_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.tiktok_ads_source.stg_tiktok_ads__campaign_history_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__campaign_history_tmp`
  OPTIONS()
  as 

select *
from `drops-bi`.`drops_tiktok_ads_full`.`campaign_history`;


[0m19:40:03.334163 [debug] [Thread-8  ]: On model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__promoted_tweet_report_tmp`
  OPTIONS()
  as 

select *
from `drops-bi`.`drops_twitter_ads_full`.`promoted_tweet_report`;


[0m19:40:03.346098 [debug] [Thread-12 ]: On model.twitter_ads_source.stg_twitter_ads__line_item_report_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.twitter_ads_source.stg_twitter_ads__line_item_report_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__line_item_report_tmp`
  OPTIONS()
  as 

select * 
from `drops-bi`.`drops_twitter_ads_full`.`line_item_report`;


[0m19:40:03.383831 [debug] [Thread-14 ]: On model.twitter_ads_source.stg_twitter_ads__tweet_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.twitter_ads_source.stg_twitter_ads__tweet_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__tweet_tmp`
  OPTIONS()
  as 

select * 
from `drops-bi`.`drops_twitter_ads_full`.`tweet`;


[0m19:40:03.394856 [debug] [Thread-4  ]: On model.twitter_ads_source.stg_twitter_ads__campaign_history_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.twitter_ads_source.stg_twitter_ads__campaign_history_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__campaign_history_tmp`
  OPTIONS()
  as 

select *
from `drops-bi`.`drops_twitter_ads_full`.`campaign_history`;


[0m19:40:03.433233 [debug] [Thread-7  ]: On model.twitter_ads_source.stg_twitter_ads__account_history_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.twitter_ads_source.stg_twitter_ads__account_history_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__account_history_tmp`
  OPTIONS()
  as 

select *
from `drops-bi`.`drops_twitter_ads_full`.`account_history`;


[0m19:40:03.441749 [debug] [Thread-10 ]: On model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__line_item_keywords_report_tmp`
  OPTIONS()
  as 

select * 
from `drops-bi`.`drops_twitter_ads_full`.`line_item_keywords_report`;


[0m19:40:03.453991 [debug] [Thread-13 ]: On model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__promoted_tweet_history_tmp`
  OPTIONS()
  as 

select *
from `drops-bi`.`drops_twitter_ads_full`.`promoted_tweet_history`;


[0m19:40:03.455768 [debug] [Thread-3  ]: On model.twitter_ads_source.stg_twitter_ads__tweet_url_tmp: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.twitter_ads_source.stg_twitter_ads__tweet_url_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__tweet_url_tmp`
  OPTIONS()
  as 

select *
from `drops-bi`.`drops_twitter_ads_full`.`tweet_url`;


[0m19:40:03.685874 [debug] [Thread-1  ]: Timing info for model.tiktok_ads_source.stg_tiktok_ads__ad_history_tmp (execute): 19:39:59.277322 => 19:40:03.685278
[0m19:40:03.687974 [debug] [Thread-1  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13248fa90>]}
[0m19:40:03.689573 [info ] [Thread-1  ]: 34 of 130 OK created sql view model marketing_full_v2_stg_tiktok_ads.stg_tiktok_ads__ad_history_tmp  [[32mCREATE VIEW (0 processed)[0m in 4.53s]
[0m19:40:03.691444 [debug] [Thread-1  ]: Finished running node model.tiktok_ads_source.stg_tiktok_ads__ad_history_tmp
[0m19:40:03.692718 [debug] [Thread-1  ]: Began running node model.google_ads_source.stg_google_ads__account_stats
[0m19:40:03.694189 [info ] [Thread-1  ]: 52 of 130 START sql table model marketing_full_v2_google_ads_source.stg_google_ads__account_stats  [RUN]
[0m19:40:03.696076 [debug] [Thread-1  ]: Re-using an available connection from the pool (formerly model.tiktok_ads_source.stg_tiktok_ads__ad_history_tmp, now model.google_ads_source.stg_google_ads__account_stats)
[0m19:40:03.698162 [debug] [Thread-1  ]: Began compiling node model.google_ads_source.stg_google_ads__account_stats
[0m19:40:03.715730 [debug] [Thread-1  ]: Opening a new connection, currently in state closed
[0m19:40:05.250624 [debug] [Thread-2  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:3ad4146e-45e9-405d-8a75-36cde4954f38&page=queryresults
[0m19:40:05.440025 [debug] [Thread-6  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:6723c1fa-64a6-42d4-8a29-9d57de095887&page=queryresults
[0m19:40:05.629068 [debug] [Thread-9  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:22fc11d8-3ac6-46df-be56-0136c4f85d6b&page=queryresults
[0m19:40:05.648183 [debug] [Thread-11 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:79483bf6-ffe9-4898-9389-58b4948e2df9&page=queryresults
[0m19:40:05.735689 [debug] [Thread-15 ]: Writing injected SQL for node "model.apple_search_ads_source.stg_apple_search_ads__keyword_history"
[0m19:40:05.738806 [debug] [Thread-12 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:425a85d2-8341-479c-89b9-cfcc01bff439&page=queryresults
[0m19:40:05.744431 [debug] [Thread-15 ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__keyword_history (compile): 19:40:02.890687 => 19:40:05.743784
[0m19:40:05.746341 [debug] [Thread-15 ]: Began executing node model.apple_search_ads_source.stg_apple_search_ads__keyword_history
[0m19:40:05.759864 [debug] [Thread-15 ]: Writing runtime sql for node "model.apple_search_ads_source.stg_apple_search_ads__keyword_history"
[0m19:40:05.763126 [debug] [Thread-15 ]: On model.apple_search_ads_source.stg_apple_search_ads__keyword_history: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.apple_search_ads_source.stg_apple_search_ads__keyword_history"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__keyword_history`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select * 
    from `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__keyword_history_tmp`
),

fields as (

    select
        
    
    
    ad_group_id
    
 as 
    
    ad_group_id
    
, 
    
    
    bid_amount
    
 as 
    
    bid_amount
    
, 
    
    
    bid_currency
    
 as 
    
    bid_currency
    
, 
    
    
    campaign_id
    
 as 
    
    campaign_id
    
, 
    
    
    id
    
 as 
    
    id
    
, 
    
    
    match_type
    
 as 
    
    match_type
    
, 
    
    
    modification_time
    
 as 
    
    modification_time
    
, 
    
    
    status
    
 as 
    
    status
    
, 
    
    
    text
    
 as 
    
    text
    



        
    from base
),

final as (
    
    select 
        modification_time as modified_at,
        campaign_id,
        ad_group_id,
        id as keyword_id,
        bid_amount, 
        bid_currency,
        match_type,
        status as keyword_status,
        text as keyword_text,
        row_number() over (partition by id order by modification_time desc) = 1 as is_most_recent_record
    from fields
)

select * 
from final
    );
  
[0m19:40:05.826280 [debug] [Thread-5  ]: Writing injected SQL for node "model.apple_search_ads_source.stg_apple_search_ads__ad_group_report"
[0m19:40:05.828101 [debug] [Thread-5  ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__ad_group_report (compile): 19:40:02.860537 => 19:40:05.827346
[0m19:40:05.829302 [debug] [Thread-5  ]: Began executing node model.apple_search_ads_source.stg_apple_search_ads__ad_group_report
[0m19:40:05.840709 [debug] [Thread-5  ]: Writing runtime sql for node "model.apple_search_ads_source.stg_apple_search_ads__ad_group_report"
[0m19:40:05.843117 [debug] [Thread-5  ]: On model.apple_search_ads_source.stg_apple_search_ads__ad_group_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.apple_search_ads_source.stg_apple_search_ads__ad_group_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__ad_group_report`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select * 
    from `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__ad_group_report_tmp`
),

fields as (

    select
        
    
    
    ad_group_id
    
 as 
    
    ad_group_id
    
, 
    
    
    date
    
 as 
    
    date
    
, 
    
    
    impressions
    
 as 
    
    impressions
    
, 
    
    
    local_spend_amount
    
 as 
    
    local_spend_amount
    
, 
    
    
    local_spend_currency
    
 as 
    
    local_spend_currency
    
, 
    
    
    new_downloads
    
 as 
    
    new_downloads
    
, 
    
    
    redownloads
    
 as 
    
    redownloads
    
, 
    
    
    taps
    
 as 
    
    taps
    



    from base
),

final as (
    
    select
        date as date_day, 
        ad_group_id,
        impressions,
        local_spend_amount as spend,
        local_spend_currency as currency,
        new_downloads,
        redownloads,
        taps

        




    from fields
)

select * 
from final
    );
  
[0m19:40:05.852823 [debug] [Thread-13 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:6e645f00-4ad3-4e57-aaf5-0fe26defb564&page=queryresults
[0m19:40:05.918912 [debug] [Thread-1  ]: Writing injected SQL for node "model.google_ads_source.stg_google_ads__account_stats"
[0m19:40:05.921903 [debug] [Thread-1  ]: Timing info for model.google_ads_source.stg_google_ads__account_stats (compile): 19:40:03.699102 => 19:40:05.921242
[0m19:40:05.923226 [debug] [Thread-1  ]: Began executing node model.google_ads_source.stg_google_ads__account_stats
[0m19:40:05.939950 [debug] [Thread-1  ]: Writing runtime sql for node "model.google_ads_source.stg_google_ads__account_stats"
[0m19:40:05.942686 [debug] [Thread-14 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:a8eb2b68-92bd-4c42-80eb-31105c4bd570&page=queryresults
[0m19:40:05.944198 [debug] [Thread-7  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:85d4842d-2108-4433-bd5f-8c61ccc40a7d&page=queryresults
[0m19:40:05.951060 [debug] [Thread-4  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:81fbc169-ad5b-49dd-8708-05d5e5eb2ac2&page=queryresults
[0m19:40:05.953896 [debug] [Thread-1  ]: On model.google_ads_source.stg_google_ads__account_stats: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.google_ads_source.stg_google_ads__account_stats"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__account_stats`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select * 
    from `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__account_stats_tmp`
),

fields as (

    select
        
    
    
    _fivetran_id
    
 as 
    
    _fivetran_id
    
, 
    
    
    _fivetran_synced
    
 as 
    
    _fivetran_synced
    
, 
    
    
    ad_network_type
    
 as 
    
    ad_network_type
    
, 
    
    
    clicks
    
 as 
    
    clicks
    
, 
    
    
    cost_micros
    
 as 
    
    cost_micros
    
, 
    
    
    customer_id
    
 as 
    
    customer_id
    
, 
    
    
    date
    
 as 
    
    date
    
, 
    
    
    device
    
 as 
    
    device
    
, 
    
    
    impressions
    
 as 
    
    impressions
    



    from base
),

final as (
    
    select 
        customer_id as account_id, 
        date as date_day,
        ad_network_type,
        device,
        clicks, 
        cost_micros / 1000000.0 as spend, 
        impressions
        
        





    from fields
)

select *
from final
    );
  
[0m19:40:06.027460 [debug] [Thread-2  ]: Timing info for model.tiktok_ads_source.stg_tiktok_ads__campaign_history_tmp (execute): 19:40:02.563564 => 19:40:06.026921
[0m19:40:06.029441 [debug] [Thread-2  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13594d1f0>]}
[0m19:40:06.031159 [info ] [Thread-2  ]: 37 of 130 OK created sql view model marketing_full_v2_stg_tiktok_ads.stg_tiktok_ads__campaign_history_tmp  [[32mCREATE VIEW (0 processed)[0m in 3.73s]
[0m19:40:06.033374 [debug] [Thread-2  ]: Finished running node model.tiktok_ads_source.stg_tiktok_ads__campaign_history_tmp
[0m19:40:06.035080 [debug] [Thread-2  ]: Began running node model.google_ads_source.stg_google_ads__ad_group_criterion_history
[0m19:40:06.036996 [info ] [Thread-2  ]: 53 of 130 START sql table model marketing_full_v2_google_ads_source.stg_google_ads__ad_group_criterion_history  [RUN]
[0m19:40:06.040216 [debug] [Thread-2  ]: Re-using an available connection from the pool (formerly model.tiktok_ads_source.stg_tiktok_ads__campaign_history_tmp, now model.google_ads_source.stg_google_ads__ad_group_criterion_history)
[0m19:40:06.041911 [debug] [Thread-2  ]: Began compiling node model.google_ads_source.stg_google_ads__ad_group_criterion_history
[0m19:40:06.051161 [debug] [Thread-3  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:3f03dfb1-5509-43dc-a267-a5f285ca6c50&page=queryresults
[0m19:40:06.063322 [debug] [Thread-2  ]: Opening a new connection, currently in state closed
[0m19:40:06.249693 [debug] [Thread-6  ]: Timing info for model.twitter_ads_source.stg_twitter_ads__line_item_history_tmp (execute): 19:40:02.587252 => 19:40:06.249132
[0m19:40:06.252126 [debug] [Thread-6  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd137cd8880>]}
[0m19:40:06.254592 [info ] [Thread-6  ]: 42 of 130 OK created sql view model marketing_full_v2_twitter_ads_source.stg_twitter_ads__line_item_history_tmp  [[32mCREATE VIEW (0 processed)[0m in 3.95s]
[0m19:40:06.257272 [debug] [Thread-6  ]: Finished running node model.twitter_ads_source.stg_twitter_ads__line_item_history_tmp
[0m19:40:06.258668 [debug] [Thread-6  ]: Began running node model.google_ads_source.stg_google_ads__account_history
[0m19:40:06.260346 [info ] [Thread-6  ]: 54 of 130 START sql table model marketing_full_v2_google_ads_source.stg_google_ads__account_history  [RUN]
[0m19:40:06.263319 [debug] [Thread-6  ]: Re-using an available connection from the pool (formerly model.twitter_ads_source.stg_twitter_ads__line_item_history_tmp, now model.google_ads_source.stg_google_ads__account_history)
[0m19:40:06.264561 [debug] [Thread-6  ]: Began compiling node model.google_ads_source.stg_google_ads__account_history
[0m19:40:06.285036 [debug] [Thread-6  ]: Opening a new connection, currently in state closed
[0m19:40:06.437220 [debug] [Thread-10 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:7f4ea993-4559-4ba9-8450-f9e820f3dcd7&page=queryresults
[0m19:40:06.439046 [debug] [Thread-10 ]: BigQuery adapter: Unhandled error while running:
/* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report_tmp"} */


  create or replace view `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__line_item_keywords_report_tmp`
  OPTIONS()
  as 

select * 
from `drops-bi`.`drops_twitter_ads_full`.`line_item_keywords_report`;


[0m19:40:06.440718 [debug] [Thread-10 ]: BigQuery adapter: 404 Not found: Table drops-bi:drops_twitter_ads_full.line_item_keywords_report was not found in location US

Location: US
Job ID: 7f4ea993-4559-4ba9-8450-f9e820f3dcd7

[0m19:40:06.442488 [debug] [Thread-10 ]: Timing info for model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report_tmp (execute): 19:40:02.726263 => 19:40:06.441871
[0m19:40:06.446308 [debug] [Thread-10 ]: Runtime Error in model stg_twitter_ads__line_item_keywords_report_tmp (models/tmp/stg_twitter_ads__line_item_keywords_report_tmp.sql)
  404 Not found: Table drops-bi:drops_twitter_ads_full.line_item_keywords_report was not found in location US
  
  Location: US
  Job ID: 7f4ea993-4559-4ba9-8450-f9e820f3dcd7
  
[0m19:40:06.447662 [debug] [Thread-10 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd136d8a370>]}
[0m19:40:06.449377 [error] [Thread-10 ]: 43 of 130 ERROR creating sql view model marketing_full_v2_twitter_ads_source.stg_twitter_ads__line_item_keywords_report_tmp  [[31mERROR[0m in 4.13s]
[0m19:40:06.452322 [debug] [Thread-10 ]: Finished running node model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report_tmp
[0m19:40:06.453644 [debug] [Thread-10 ]: Began running node model.apple_search_ads_source.stg_apple_search_ads__campaign_report
[0m19:40:06.461059 [debug] [Thread-11 ]: Timing info for model.twitter_ads_source.stg_twitter_ads__campaign_report_tmp (execute): 19:40:02.653949 => 19:40:06.460209
[0m19:40:06.462449 [info ] [Thread-10 ]: 55 of 130 START sql table model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__campaign_report  [RUN]
[0m19:40:06.465807 [debug] [Thread-11 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd137cb9c40>]}
[0m19:40:06.471335 [debug] [Thread-9  ]: Timing info for model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly_tmp (execute): 19:40:02.607569 => 19:40:06.470997
[0m19:40:06.472668 [debug] [Thread-10 ]: Re-using an available connection from the pool (formerly model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report_tmp, now model.apple_search_ads_source.stg_apple_search_ads__campaign_report)
[0m19:40:06.473999 [info ] [Thread-11 ]: 41 of 130 OK created sql view model marketing_full_v2_twitter_ads_source.stg_twitter_ads__campaign_report_tmp  [[32mCREATE VIEW (0 processed)[0m in 4.15s]
[0m19:40:06.477598 [debug] [Thread-9  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1372777f0>]}
[0m19:40:06.479083 [debug] [Thread-10 ]: Began compiling node model.apple_search_ads_source.stg_apple_search_ads__campaign_report
[0m19:40:06.484227 [debug] [Thread-11 ]: Finished running node model.twitter_ads_source.stg_twitter_ads__campaign_report_tmp
[0m19:40:06.486671 [info ] [Thread-9  ]: 38 of 130 OK created sql view model marketing_full_v2_stg_tiktok_ads.stg_tiktok_ads__campaign_report_hourly_tmp  [[32mCREATE VIEW (0 processed)[0m in 4.18s]
[0m19:40:06.504353 [debug] [Thread-11 ]: Began running node model.apple_search_ads_source.stg_apple_search_ads__campaign_history
[0m19:40:06.517762 [debug] [Thread-9  ]: Finished running node model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly_tmp
[0m19:40:06.519704 [info ] [Thread-11 ]: 56 of 130 START sql table model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__campaign_history  [RUN]
[0m19:40:06.522391 [debug] [Thread-9  ]: Began running node model.apple_search_ads_source.stg_apple_search_ads__keyword_report
[0m19:40:06.530884 [debug] [Thread-10 ]: Opening a new connection, currently in state closed
[0m19:40:06.533235 [debug] [Thread-11 ]: Re-using an available connection from the pool (formerly model.twitter_ads_source.stg_twitter_ads__campaign_report_tmp, now model.apple_search_ads_source.stg_apple_search_ads__campaign_history)
[0m19:40:06.538181 [debug] [Thread-12 ]: Timing info for model.twitter_ads_source.stg_twitter_ads__line_item_report_tmp (execute): 19:40:02.741064 => 19:40:06.537653
[0m19:40:06.539980 [info ] [Thread-9  ]: 57 of 130 START sql table model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__keyword_report  [RUN]
[0m19:40:06.541876 [debug] [Thread-11 ]: Began compiling node model.apple_search_ads_source.stg_apple_search_ads__campaign_history
[0m19:40:06.544102 [debug] [Thread-12 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd137cd8040>]}
[0m19:40:06.546171 [debug] [Thread-9  ]: Re-using an available connection from the pool (formerly model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly_tmp, now model.apple_search_ads_source.stg_apple_search_ads__keyword_report)
[0m19:40:06.565367 [debug] [Thread-9  ]: Began compiling node model.apple_search_ads_source.stg_apple_search_ads__keyword_report
[0m19:40:06.563824 [debug] [Thread-11 ]: Opening a new connection, currently in state closed
[0m19:40:06.576377 [info ] [Thread-12 ]: 44 of 130 OK created sql view model marketing_full_v2_twitter_ads_source.stg_twitter_ads__line_item_report_tmp  [[32mCREATE VIEW (0 processed)[0m in 4.18s]
[0m19:40:06.578626 [debug] [Thread-15 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:6eeaccb4-b7a3-43f2-80ae-8d6f3f052b80&page=queryresults
[0m19:40:06.590060 [debug] [Thread-9  ]: Opening a new connection, currently in state closed
[0m19:40:06.592833 [debug] [Thread-12 ]: Finished running node model.twitter_ads_source.stg_twitter_ads__line_item_report_tmp
[0m19:40:06.599209 [debug] [Thread-12 ]: Began running node model.apple_search_ads_source.stg_apple_search_ads__ad_report
[0m19:40:06.600876 [info ] [Thread-12 ]: 58 of 130 START sql table model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__ad_report  [RUN]
[0m19:40:06.602809 [debug] [Thread-12 ]: Re-using an available connection from the pool (formerly model.twitter_ads_source.stg_twitter_ads__line_item_report_tmp, now model.apple_search_ads_source.stg_apple_search_ads__ad_report)
[0m19:40:06.604229 [debug] [Thread-12 ]: Began compiling node model.apple_search_ads_source.stg_apple_search_ads__ad_report
[0m19:40:06.621927 [debug] [Thread-12 ]: Opening a new connection, currently in state closed
[0m19:40:06.652275 [debug] [Thread-13 ]: Timing info for model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history_tmp (execute): 19:40:02.686652 => 19:40:06.651942
[0m19:40:06.653804 [debug] [Thread-13 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13ab12550>]}
[0m19:40:06.656359 [info ] [Thread-13 ]: 45 of 130 OK created sql view model marketing_full_v2_twitter_ads_source.stg_twitter_ads__promoted_tweet_history_tmp  [[32mCREATE VIEW (0 processed)[0m in 4.33s]
[0m19:40:06.658531 [debug] [Thread-13 ]: Finished running node model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history_tmp
[0m19:40:06.659904 [debug] [Thread-13 ]: Began running node model.apple_search_ads_source.stg_apple_search_ads__search_term_report
[0m19:40:06.662223 [info ] [Thread-13 ]: 59 of 130 START sql table model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__search_term_report  [RUN]
[0m19:40:06.665385 [debug] [Thread-13 ]: Re-using an available connection from the pool (formerly model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history_tmp, now model.apple_search_ads_source.stg_apple_search_ads__search_term_report)
[0m19:40:06.666457 [debug] [Thread-13 ]: Began compiling node model.apple_search_ads_source.stg_apple_search_ads__search_term_report
[0m19:40:06.981727 [debug] [Thread-14 ]: Timing info for model.twitter_ads_source.stg_twitter_ads__tweet_tmp (execute): 19:40:02.670856 => 19:40:06.981086
[0m19:40:06.983351 [debug] [Thread-1  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:b224e643-3ee0-4cdb-bd35-4238f438d731&page=queryresults
[0m19:40:06.996043 [debug] [Thread-5  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:a02a02a2-4ced-40c1-8392-47f51a07f15f&page=queryresults
[0m19:40:06.998596 [debug] [Thread-14 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1375346a0>]}
[0m19:40:07.005546 [debug] [Thread-7  ]: Timing info for model.twitter_ads_source.stg_twitter_ads__account_history_tmp (execute): 19:40:02.624436 => 19:40:07.005045
[0m19:40:07.013426 [debug] [Thread-4  ]: Timing info for model.twitter_ads_source.stg_twitter_ads__campaign_history_tmp (execute): 19:40:02.705768 => 19:40:07.012870
[0m19:40:07.030324 [info ] [Thread-14 ]: 47 of 130 OK created sql view model marketing_full_v2_twitter_ads_source.stg_twitter_ads__tweet_tmp  [[32mCREATE VIEW (0 processed)[0m in 4.67s]
[0m19:40:07.050104 [debug] [Thread-7  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd137247070>]}
[0m19:40:07.052564 [debug] [Thread-4  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13797efa0>]}
[0m19:40:07.054391 [debug] [Thread-14 ]: Finished running node model.twitter_ads_source.stg_twitter_ads__tweet_tmp
[0m19:40:07.057414 [info ] [Thread-7  ]: 39 of 130 OK created sql view model marketing_full_v2_twitter_ads_source.stg_twitter_ads__account_history_tmp  [[32mCREATE VIEW (0 processed)[0m in 4.74s]
[0m19:40:07.065280 [info ] [Thread-4  ]: 40 of 130 OK created sql view model marketing_full_v2_twitter_ads_source.stg_twitter_ads__campaign_history_tmp  [[32mCREATE VIEW (0 processed)[0m in 4.74s]
[0m19:40:07.067699 [debug] [Thread-14 ]: Began running node model.apple_search_ads_source.stg_apple_search_ads__ad_group_history
[0m19:40:07.078155 [debug] [Thread-7  ]: Finished running node model.twitter_ads_source.stg_twitter_ads__account_history_tmp
[0m19:40:07.082045 [debug] [Thread-4  ]: Finished running node model.twitter_ads_source.stg_twitter_ads__campaign_history_tmp
[0m19:40:07.086418 [info ] [Thread-14 ]: 60 of 130 START sql table model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__ad_group_history  [RUN]
[0m19:40:07.090671 [debug] [Thread-7  ]: Began running node model.google_ads_source.stg_google_ads__ad_group_history
[0m19:40:07.092698 [debug] [Thread-4  ]: Began running node model.apple_search_ads_source.stg_apple_search_ads__organization
[0m19:40:07.097126 [debug] [Thread-14 ]: Re-using an available connection from the pool (formerly model.twitter_ads_source.stg_twitter_ads__tweet_tmp, now model.apple_search_ads_source.stg_apple_search_ads__ad_group_history)
[0m19:40:07.100275 [info ] [Thread-7  ]: 61 of 130 START sql table model marketing_full_v2_google_ads_source.stg_google_ads__ad_group_history  [RUN]
[0m19:40:07.102537 [info ] [Thread-4  ]: 62 of 130 START sql table model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__organization  [RUN]
[0m19:40:07.111073 [debug] [Thread-14 ]: Began compiling node model.apple_search_ads_source.stg_apple_search_ads__ad_group_history
[0m19:40:07.115491 [debug] [Thread-7  ]: Re-using an available connection from the pool (formerly model.twitter_ads_source.stg_twitter_ads__account_history_tmp, now model.google_ads_source.stg_google_ads__ad_group_history)
[0m19:40:07.118323 [debug] [Thread-4  ]: Re-using an available connection from the pool (formerly model.twitter_ads_source.stg_twitter_ads__campaign_history_tmp, now model.apple_search_ads_source.stg_apple_search_ads__organization)
[0m19:40:07.143649 [debug] [Thread-7  ]: Began compiling node model.google_ads_source.stg_google_ads__ad_group_history
[0m19:40:07.145007 [debug] [Thread-4  ]: Began compiling node model.apple_search_ads_source.stg_apple_search_ads__organization
[0m19:40:07.154714 [debug] [Thread-14 ]: Opening a new connection, currently in state closed
[0m19:40:07.186492 [debug] [Thread-4  ]: Opening a new connection, currently in state closed
[0m19:40:07.195320 [debug] [Thread-7  ]: Opening a new connection, currently in state closed
[0m19:40:07.305734 [debug] [Thread-8  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:4ac63831-bfa3-4330-9e8d-1da8e95e24cc&page=queryresults
[0m19:40:07.453066 [debug] [Thread-3  ]: Timing info for model.twitter_ads_source.stg_twitter_ads__tweet_url_tmp (execute): 19:40:02.870061 => 19:40:07.452298
[0m19:40:07.455039 [debug] [Thread-3  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13696b730>]}
[0m19:40:07.457290 [info ] [Thread-3  ]: 48 of 130 OK created sql view model marketing_full_v2_twitter_ads_source.stg_twitter_ads__tweet_url_tmp  [[32mCREATE VIEW (0 processed)[0m in 4.65s]
[0m19:40:07.459595 [debug] [Thread-3  ]: Finished running node model.twitter_ads_source.stg_twitter_ads__tweet_url_tmp
[0m19:40:07.460863 [debug] [Thread-3  ]: Began running node model.dbt_ads_test.my_second_dbt_model
[0m19:40:07.463343 [info ] [Thread-3  ]: 63 of 130 START sql view model marketing_full_v2.my_second_dbt_model ........... [RUN]
[0m19:40:07.469232 [debug] [Thread-3  ]: Re-using an available connection from the pool (formerly model.twitter_ads_source.stg_twitter_ads__tweet_url_tmp, now model.dbt_ads_test.my_second_dbt_model)
[0m19:40:07.476558 [debug] [Thread-3  ]: Began compiling node model.dbt_ads_test.my_second_dbt_model
[0m19:40:07.496119 [debug] [Thread-3  ]: Writing injected SQL for node "model.dbt_ads_test.my_second_dbt_model"
[0m19:40:07.499056 [debug] [Thread-3  ]: Timing info for model.dbt_ads_test.my_second_dbt_model (compile): 19:40:07.481350 => 19:40:07.497888
[0m19:40:07.519030 [debug] [Thread-3  ]: Began executing node model.dbt_ads_test.my_second_dbt_model
[0m19:40:07.544767 [debug] [Thread-3  ]: Writing runtime sql for node "model.dbt_ads_test.my_second_dbt_model"
[0m19:40:07.596983 [debug] [Thread-3  ]: Opening a new connection, currently in state closed
[0m19:40:08.015220 [debug] [Thread-3  ]: On model.dbt_ads_test.my_second_dbt_model: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.dbt_ads_test.my_second_dbt_model"} */


  create or replace view `drops-bi`.`marketing_full_v2`.`my_second_dbt_model`
  OPTIONS()
  as -- Use the `ref` function to select from other models

select *
from `drops-bi`.`marketing_full_v2`.`my_first_dbt_model`
where id = 1;


[0m19:40:08.268151 [debug] [Thread-8  ]: Timing info for model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report_tmp (execute): 19:40:02.763460 => 19:40:08.267603
[0m19:40:08.318607 [debug] [Thread-13 ]: Opening a new connection, currently in state closed
[0m19:40:08.320819 [debug] [Thread-8  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1361385b0>]}
[0m19:40:08.323159 [info ] [Thread-8  ]: 46 of 130 OK created sql view model marketing_full_v2_twitter_ads_source.stg_twitter_ads__promoted_tweet_report_tmp  [[32mCREATE VIEW (0 processed)[0m in 5.99s]
[0m19:40:08.324960 [debug] [Thread-8  ]: Finished running node model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report_tmp
[0m19:40:08.326384 [debug] [Thread-8  ]: Began running node model.google_ads_source.stg_google_ads__ad_history
[0m19:40:08.328352 [info ] [Thread-8  ]: 64 of 130 START sql table model marketing_full_v2_google_ads_source.stg_google_ads__ad_history  [RUN]
[0m19:40:08.354341 [debug] [Thread-8  ]: Re-using an available connection from the pool (formerly model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report_tmp, now model.google_ads_source.stg_google_ads__ad_history)
[0m19:40:08.355718 [debug] [Thread-8  ]: Began compiling node model.google_ads_source.stg_google_ads__ad_history
[0m19:40:08.445022 [debug] [Thread-8  ]: Opening a new connection, currently in state closed
[0m19:40:08.735864 [debug] [Thread-2  ]: Writing injected SQL for node "model.google_ads_source.stg_google_ads__ad_group_criterion_history"
[0m19:40:08.738021 [debug] [Thread-2  ]: Timing info for model.google_ads_source.stg_google_ads__ad_group_criterion_history (compile): 19:40:06.042761 => 19:40:08.737433
[0m19:40:08.741117 [debug] [Thread-2  ]: Began executing node model.google_ads_source.stg_google_ads__ad_group_criterion_history
[0m19:40:08.756936 [debug] [Thread-2  ]: Writing runtime sql for node "model.google_ads_source.stg_google_ads__ad_group_criterion_history"
[0m19:40:08.758734 [debug] [Thread-2  ]: On model.google_ads_source.stg_google_ads__ad_group_criterion_history: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.google_ads_source.stg_google_ads__ad_group_criterion_history"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__ad_group_criterion_history`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select * 
    from `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__ad_group_criterion_history_tmp`
),

fields as (

    select
        
    
    
    id
    
 as 
    
    id
    
, 
    
    
    ad_group_id
    
 as 
    
    ad_group_id
    
, 
    cast(null as INT64) as 
    
    base_campaign_id
    
 , 
    
    
    _fivetran_synced
    
 as 
    
    _fivetran_synced
    
, 
    
    
    updated_at
    
 as 
    
    updated_at
    
, 
    
    
    type
    
 as 
    
    type
    
, 
    
    
    status
    
 as 
    
    status
    
, 
    
    
    keyword_match_type
    
 as 
    
    keyword_match_type
    
, 
    
    
    keyword_text
    
 as 
    
    keyword_text
    
, 
    
    
    _fivetran_active
    
 as 
    
    _fivetran_active
    



    from base
),

final as (
    
    select 
        id as criterion_id,
        cast(ad_group_id as STRING) as ad_group_id,
        base_campaign_id,
        updated_at,
        type,
        status,
        keyword_match_type,
        keyword_text,
        row_number() over (partition by id order by updated_at desc) = 1 as is_most_recent_record
    from fields
    where coalesce(_fivetran_active, true)
)

select *
from final
    );
  
[0m19:40:09.126715 [debug] [Thread-5  ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__ad_group_report (execute): 19:40:05.830107 => 19:40:09.126219
[0m19:40:09.131078 [debug] [Thread-12 ]: Writing injected SQL for node "model.apple_search_ads_source.stg_apple_search_ads__ad_report"
[0m19:40:09.136498 [debug] [Thread-1  ]: Timing info for model.google_ads_source.stg_google_ads__account_stats (execute): 19:40:05.924170 => 19:40:09.135958
[0m19:40:09.139592 [debug] [Thread-5  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd137965fd0>]}
[0m19:40:09.161251 [debug] [Thread-1  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13ab55cd0>]}
[0m19:40:09.162565 [debug] [Thread-12 ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__ad_report (compile): 19:40:06.604936 => 19:40:09.162024
[0m19:40:09.164318 [info ] [Thread-5  ]: 50 of 130 OK created sql table model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__ad_group_report  [[32mCREATE TABLE (1.6k rows, 136.7 KiB processed)[0m in 6.29s]
[0m19:40:09.171980 [debug] [Thread-5  ]: Finished running node model.apple_search_ads_source.stg_apple_search_ads__ad_group_report
[0m19:40:09.172938 [debug] [Thread-5  ]: Began running node model.google_ads_source.stg_google_ads__ad_group_stats
[0m19:40:09.173990 [info ] [Thread-5  ]: 65 of 130 START sql table model marketing_full_v2_google_ads_source.stg_google_ads__ad_group_stats  [RUN]
[0m19:40:09.168391 [info ] [Thread-1  ]: 52 of 130 OK created sql table model marketing_full_v2_google_ads_source.stg_google_ads__account_stats  [[32mCREATE TABLE (5.9k rows, 346.4 KiB processed)[0m in 5.47s]
[0m19:40:09.175235 [debug] [Thread-5  ]: Re-using an available connection from the pool (formerly model.apple_search_ads_source.stg_apple_search_ads__ad_group_report, now model.google_ads_source.stg_google_ads__ad_group_stats)
[0m19:40:09.169981 [debug] [Thread-12 ]: Began executing node model.apple_search_ads_source.stg_apple_search_ads__ad_report
[0m19:40:09.166822 [debug] [Thread-6  ]: Writing injected SQL for node "model.google_ads_source.stg_google_ads__account_history"
[0m19:40:09.176973 [debug] [Thread-1  ]: Finished running node model.google_ads_source.stg_google_ads__account_stats
[0m19:40:09.178291 [debug] [Thread-5  ]: Began compiling node model.google_ads_source.stg_google_ads__ad_group_stats
[0m19:40:09.192333 [debug] [Thread-12 ]: Writing runtime sql for node "model.apple_search_ads_source.stg_apple_search_ads__ad_report"
[0m19:40:09.195970 [debug] [Thread-1  ]: Began running node model.google_ads_source.stg_google_ads__ad_stats
[0m19:40:09.221146 [debug] [Thread-15 ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__keyword_history (execute): 19:40:05.747354 => 19:40:09.220543
[0m19:40:09.223305 [debug] [Thread-5  ]: Opening a new connection, currently in state closed
[0m19:40:09.227795 [info ] [Thread-1  ]: 66 of 130 START sql table model marketing_full_v2_google_ads_source.stg_google_ads__ad_stats  [RUN]
[0m19:40:09.229593 [debug] [Thread-6  ]: Timing info for model.google_ads_source.stg_google_ads__account_history (compile): 19:40:06.265412 => 19:40:09.228938
[0m19:40:09.232294 [debug] [Thread-15 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1325102b0>]}
[0m19:40:09.233610 [debug] [Thread-12 ]: On model.apple_search_ads_source.stg_apple_search_ads__ad_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.apple_search_ads_source.stg_apple_search_ads__ad_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__ad_report`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select * 
    from `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__ad_report_tmp`
),

fields as (

    select
        
    
    
    ad_group_id
    
 as 
    
    ad_group_id
    
, 
    
    
    ad_id
    
 as 
    
    ad_id
    
, 
    
    
    campaign_id
    
 as 
    
    campaign_id
    
, 
    
    
    date
    
 as 
    
    date
    
, 
    
    
    impressions
    
 as 
    
    impressions
    
, 
    
    
    local_spend_amount
    
 as 
    
    local_spend_amount
    
, 
    
    
    local_spend_currency
    
 as 
    
    local_spend_currency
    
, 
    
    
    new_downloads
    
 as 
    
    new_downloads
    
, 
    
    
    redownloads
    
 as 
    
    redownloads
    
, 
    
    
    taps
    
 as 
    
    taps
    



    from base
),

final as (
    
    select 
        date as date_day,
        campaign_id,
        ad_group_id,
        ad_id,
        impressions,
        local_spend_amount as spend,
        local_spend_currency as currency,
        new_downloads,
        redownloads,
        taps

        




    from fields
)

select *
from final
    );
  
[0m19:40:09.241208 [debug] [Thread-1  ]: Re-using an available connection from the pool (formerly model.google_ads_source.stg_google_ads__account_stats, now model.google_ads_source.stg_google_ads__ad_stats)
[0m19:40:09.253498 [debug] [Thread-1  ]: Began compiling node model.google_ads_source.stg_google_ads__ad_stats
[0m19:40:09.249220 [info ] [Thread-15 ]: 51 of 130 OK created sql table model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__keyword_history  [[32mCREATE TABLE (145.0 rows, 13.3 KiB processed)[0m in 6.37s]
[0m19:40:09.261492 [debug] [Thread-15 ]: Finished running node model.apple_search_ads_source.stg_apple_search_ads__keyword_history
[0m19:40:09.262335 [debug] [Thread-15 ]: Began running node model.google_ads_source.stg_google_ads__campaign_history
[0m19:40:09.264107 [info ] [Thread-15 ]: 67 of 130 START sql table model marketing_full_v2_google_ads_source.stg_google_ads__campaign_history  [RUN]
[0m19:40:09.265720 [debug] [Thread-15 ]: Re-using an available connection from the pool (formerly model.apple_search_ads_source.stg_apple_search_ads__keyword_history, now model.google_ads_source.stg_google_ads__campaign_history)
[0m19:40:09.266755 [debug] [Thread-15 ]: Began compiling node model.google_ads_source.stg_google_ads__campaign_history
[0m19:40:09.245532 [debug] [Thread-6  ]: Began executing node model.google_ads_source.stg_google_ads__account_history
[0m19:40:09.309337 [debug] [Thread-15 ]: Opening a new connection, currently in state closed
[0m19:40:09.313591 [debug] [Thread-1  ]: Opening a new connection, currently in state closed
[0m19:40:09.323670 [debug] [Thread-6  ]: Writing runtime sql for node "model.google_ads_source.stg_google_ads__account_history"
[0m19:40:09.333354 [debug] [Thread-6  ]: On model.google_ads_source.stg_google_ads__account_history: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.google_ads_source.stg_google_ads__account_history"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__account_history`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select * 
    from `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__account_history_tmp`

),

fields as (

    select
        
    
    
    _fivetran_synced
    
 as 
    
    _fivetran_synced
    
, 
    
    
    auto_tagging_enabled
    
 as 
    
    auto_tagging_enabled
    
, 
    
    
    currency_code
    
 as 
    
    currency_code
    
, 
    
    
    descriptive_name
    
 as 
    
    descriptive_name
    
, 
    
    
    id
    
 as 
    
    id
    
, 
    
    
    time_zone
    
 as 
    
    time_zone
    
, 
    
    
    updated_at
    
 as 
    
    updated_at
    
, 
    
    
    _fivetran_active
    
 as 
    
    _fivetran_active
    



        
    from base
),

final as (
    
    select 
        id as account_id,
        updated_at,
        currency_code,
        auto_tagging_enabled,
        time_zone,
        descriptive_name as account_name,
        row_number() over (partition by id order by updated_at desc) = 1 as is_most_recent_record
    from fields
    where coalesce(_fivetran_active, true)
)

select * 
from final
    );
  
[0m19:40:09.344458 [debug] [Thread-10 ]: Writing injected SQL for node "model.apple_search_ads_source.stg_apple_search_ads__campaign_report"
[0m19:40:09.346525 [debug] [Thread-10 ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__campaign_report (compile): 19:40:06.489228 => 19:40:09.345920
[0m19:40:09.348039 [debug] [Thread-10 ]: Began executing node model.apple_search_ads_source.stg_apple_search_ads__campaign_report
[0m19:40:09.360301 [debug] [Thread-10 ]: Writing runtime sql for node "model.apple_search_ads_source.stg_apple_search_ads__campaign_report"
[0m19:40:09.363245 [debug] [Thread-10 ]: On model.apple_search_ads_source.stg_apple_search_ads__campaign_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.apple_search_ads_source.stg_apple_search_ads__campaign_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__campaign_report`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select * 
    from `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__campaign_report_tmp`
),

fields as (

    select
        
    
    
    date
    
 as 
    
    date
    
, 
    
    
    id
    
 as 
    
    id
    
, 
    
    
    impressions
    
 as 
    
    impressions
    
, 
    
    
    local_spend_amount
    
 as 
    
    local_spend_amount
    
, 
    
    
    local_spend_currency
    
 as 
    
    local_spend_currency
    
, 
    
    
    new_downloads
    
 as 
    
    new_downloads
    
, 
    
    
    redownloads
    
 as 
    
    redownloads
    
, 
    
    
    taps
    
 as 
    
    taps
    



    from base
),

final as (
    
    select 
        date as date_day,
        id as campaign_id,
        impressions,
        local_spend_amount as spend,
        local_spend_currency as currency,
        new_downloads,
        redownloads,
        taps

        




    from fields
)

select * 
from final
    );
  
[0m19:40:09.463170 [debug] [Thread-9  ]: Writing injected SQL for node "model.apple_search_ads_source.stg_apple_search_ads__keyword_report"
[0m19:40:09.466623 [debug] [Thread-9  ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__keyword_report (compile): 19:40:06.566191 => 19:40:09.464618
[0m19:40:09.470931 [debug] [Thread-9  ]: Began executing node model.apple_search_ads_source.stg_apple_search_ads__keyword_report
[0m19:40:09.483573 [debug] [Thread-9  ]: Writing runtime sql for node "model.apple_search_ads_source.stg_apple_search_ads__keyword_report"
[0m19:40:09.485783 [debug] [Thread-9  ]: On model.apple_search_ads_source.stg_apple_search_ads__keyword_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.apple_search_ads_source.stg_apple_search_ads__keyword_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__keyword_report`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select * 
    from `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__keyword_report_tmp`
),

fields as (

    select
        
    
    
    date
    
 as 
    
    date
    
, 
    
    
    id
    
 as 
    
    id
    
, 
    
    
    impressions
    
 as 
    
    impressions
    
, 
    
    
    local_spend_amount
    
 as 
    
    local_spend_amount
    
, 
    
    
    local_spend_currency
    
 as 
    
    local_spend_currency
    
, 
    
    
    new_downloads
    
 as 
    
    new_downloads
    
, 
    
    
    redownloads
    
 as 
    
    redownloads
    
, 
    
    
    taps
    
 as 
    
    taps
    


     
    from base
),

final as (
    
    select 
        date as date_day,
        id as keyword_id,
        impressions,
        local_spend_amount as spend,
        local_spend_currency as currency,
        new_downloads,
        redownloads,
        taps

        




    from fields
)

select * 
from final
    );
  
[0m19:40:09.515330 [debug] [Thread-14 ]: Writing injected SQL for node "model.apple_search_ads_source.stg_apple_search_ads__ad_group_history"
[0m19:40:09.517376 [debug] [Thread-14 ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__ad_group_history (compile): 19:40:07.119356 => 19:40:09.516806
[0m19:40:09.518510 [debug] [Thread-14 ]: Began executing node model.apple_search_ads_source.stg_apple_search_ads__ad_group_history
[0m19:40:09.532561 [debug] [Thread-14 ]: Writing runtime sql for node "model.apple_search_ads_source.stg_apple_search_ads__ad_group_history"
[0m19:40:09.541305 [debug] [Thread-14 ]: On model.apple_search_ads_source.stg_apple_search_ads__ad_group_history: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.apple_search_ads_source.stg_apple_search_ads__ad_group_history"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__ad_group_history`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select * 
    from `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__ad_group_history_tmp`
),

fields as (

    select
        
    
    
    campaign_id
    
 as 
    
    campaign_id
    
, 
    
    
    end_time
    
 as 
    
    end_time
    
, 
    
    
    id
    
 as 
    
    id
    
, 
    
    
    modification_time
    
 as 
    
    modification_time
    
, 
    
    
    name
    
 as 
    
    name
    
, 
    
    
    organization_id
    
 as 
    
    organization_id
    
, 
    
    
    start_time
    
 as 
    
    start_time
    
, 
    
    
    status
    
 as 
    
    status
    



        
    from base
),

final as (
    select 
        modification_time as modified_at,
        organization_id,
        campaign_id,
        name as ad_group_name,
        id as ad_group_id,
        status as ad_group_status,
        start_time as start_at,
        end_time as end_at,
        row_number() over (partition by id order by modification_time desc) = 1 as is_most_recent_record
    from fields
)

select * 
from final
    );
  
[0m19:40:09.566929 [debug] [Thread-2  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:6ef1b37e-aa2a-4cc4-991a-591ec83cf6b5&page=queryresults
[0m19:40:09.614629 [debug] [Thread-4  ]: Writing injected SQL for node "model.apple_search_ads_source.stg_apple_search_ads__organization"
[0m19:40:09.616842 [debug] [Thread-4  ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__organization (compile): 19:40:07.155769 => 19:40:09.616210
[0m19:40:09.618063 [debug] [Thread-4  ]: Began executing node model.apple_search_ads_source.stg_apple_search_ads__organization
[0m19:40:09.631449 [debug] [Thread-4  ]: Writing runtime sql for node "model.apple_search_ads_source.stg_apple_search_ads__organization"
[0m19:40:09.633959 [debug] [Thread-4  ]: On model.apple_search_ads_source.stg_apple_search_ads__organization: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.apple_search_ads_source.stg_apple_search_ads__organization"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__organization`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select * 
    from `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__organization_tmp`
),

fields as (

    select
        
    
    
    currency
    
 as 
    
    currency
    
, 
    
    
    id
    
 as 
    
    id
    
, 
    
    
    name
    
 as 
    
    name
    
, 
    
    
    payment_model
    
 as 
    
    payment_model
    
, 
    
    
    time_zone
    
 as 
    
    time_zone
    



        
    from base
),

final as (
    
    select 
        id as organization_id,
        currency,
        payment_model,
        name as organization_name,
        time_zone
    from fields
)

select * 
from final
    );
  
[0m19:40:09.726831 [debug] [Thread-7  ]: Writing injected SQL for node "model.google_ads_source.stg_google_ads__ad_group_history"
[0m19:40:09.728976 [debug] [Thread-7  ]: Timing info for model.google_ads_source.stg_google_ads__ad_group_history (compile): 19:40:07.145947 => 19:40:09.728390
[0m19:40:09.730164 [debug] [Thread-7  ]: Began executing node model.google_ads_source.stg_google_ads__ad_group_history
[0m19:40:09.745491 [debug] [Thread-7  ]: Writing runtime sql for node "model.google_ads_source.stg_google_ads__ad_group_history"
[0m19:40:09.748037 [debug] [Thread-7  ]: On model.google_ads_source.stg_google_ads__ad_group_history: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.google_ads_source.stg_google_ads__ad_group_history"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__ad_group_history`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select * 
    from `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__ad_group_history_tmp`

),

fields as (

    select
        
    
    
    campaign_id
    
 as 
    
    campaign_id
    
, 
    
    
    campaign_name
    
 as 
    
    campaign_name
    
, 
    
    
    id
    
 as 
    
    id
    
, 
    
    
    name
    
 as 
    
    name
    
, 
    
    
    status
    
 as 
    
    status
    
, 
    
    
    type
    
 as 
    
    type
    
, 
    
    
    updated_at
    
 as 
    
    updated_at
    
, 
    
    
    _fivetran_active
    
 as 
    
    _fivetran_active
    



        
    from base
),

final as (
    
    select 
        cast(id as STRING) as ad_group_id,
        updated_at,
        type as ad_group_type, 
        campaign_id, 
        campaign_name, 
        name as ad_group_name, 
        status as ad_group_status,
        row_number() over (partition by id order by updated_at desc) = 1 as is_most_recent_record
    from fields
    where coalesce(_fivetran_active, true)
)

select * 
from final
    );
  
[0m19:40:10.149450 [debug] [Thread-6  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:c48e9413-46d2-49df-a412-b248939e2fe2&page=queryresults
[0m19:40:10.163062 [debug] [Thread-12 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:32d5b920-6c62-4423-ae05-6e628aa83ae2&page=queryresults
[0m19:40:10.164477 [debug] [Thread-10 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:10e25088-6b0e-4c6d-b89b-01aad5872762&page=queryresults
[0m19:40:10.249550 [debug] [Thread-9  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:495a0b45-b728-47f3-8bc1-1399902e16ea&page=queryresults
[0m19:40:10.349731 [debug] [Thread-14 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:05c77369-8e8c-4f21-9999-91077bb95e7a&page=queryresults
[0m19:40:10.479668 [debug] [Thread-4  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:a10db01a-afe8-41e4-b113-1901aa0a7637&page=queryresults
[0m19:40:10.544107 [debug] [Thread-13 ]: Writing injected SQL for node "model.apple_search_ads_source.stg_apple_search_ads__search_term_report"
[0m19:40:10.546435 [debug] [Thread-13 ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__search_term_report (compile): 19:40:06.667125 => 19:40:10.545806
[0m19:40:10.549428 [debug] [Thread-13 ]: Began executing node model.apple_search_ads_source.stg_apple_search_ads__search_term_report
[0m19:40:10.561629 [debug] [Thread-13 ]: Writing runtime sql for node "model.apple_search_ads_source.stg_apple_search_ads__search_term_report"
[0m19:40:10.563576 [debug] [Thread-13 ]: On model.apple_search_ads_source.stg_apple_search_ads__search_term_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.apple_search_ads_source.stg_apple_search_ads__search_term_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__search_term_report`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select * 
    from `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__search_term_report_tmp`
),

fields as (

    select
        
    
    
    _fivetran_id
    
 as 
    
    _fivetran_id
    
, 
    
    
    ad_group_deleted
    
 as 
    
    ad_group_deleted
    
, 
    
    
    ad_group_id
    
 as 
    
    ad_group_id
    
, 
    
    
    ad_group_name
    
 as 
    
    ad_group_name
    
, 
    
    
    bid_amount_amount
    
 as 
    
    bid_amount_amount
    
, 
    
    
    bid_amount_currency
    
 as 
    
    bid_amount_currency
    
, 
    
    
    campaign_id
    
 as 
    
    campaign_id
    
, 
    
    
    date
    
 as 
    
    date
    
, 
    
    
    deleted
    
 as 
    
    deleted
    
, 
    
    
    impressions
    
 as 
    
    impressions
    
, 
    
    
    keyword
    
 as 
    
    keyword
    
, 
    
    
    keyword_display_status
    
 as 
    
    keyword_display_status
    
, 
    
    
    keyword_id
    
 as 
    
    keyword_id
    
, 
    
    
    local_spend_amount
    
 as 
    
    local_spend_amount
    
, 
    
    
    local_spend_currency
    
 as 
    
    local_spend_currency
    
, 
    
    
    match_type
    
 as 
    
    match_type
    
, 
    
    
    new_downloads
    
 as 
    
    new_downloads
    
, 
    
    
    redownloads
    
 as 
    
    redownloads
    
, 
    
    
    search_term_source
    
 as 
    
    search_term_source
    
, 
    
    
    search_term_text
    
 as 
    
    search_term_text
    
, 
    
    
    taps
    
 as 
    
    taps
    



    from base
),

final as (
    
    select 
        date as date_day,
        _fivetran_id,
        campaign_id,
        ad_group_id,
        ad_group_name,
        bid_amount_amount as bid_amount,
        bid_amount_currency as bid_currency,
        keyword as keyword_text,
        keyword_display_status,
        keyword_id,
        local_spend_amount as spend,
        local_spend_currency as currency,
        match_type,
        search_term_source,
        search_term_text,
        impressions,
        taps,
        new_downloads,
        redownloads

        




    from fields
)

select * 
from final
    );
  
[0m19:40:10.576348 [debug] [Thread-7  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:57d84326-a62a-454c-a916-599d078e10b4&page=queryresults
[0m19:40:10.752153 [debug] [Thread-11 ]: Writing injected SQL for node "model.apple_search_ads_source.stg_apple_search_ads__campaign_history"
[0m19:40:10.754438 [debug] [Thread-11 ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__campaign_history (compile): 19:40:06.547255 => 19:40:10.753776
[0m19:40:10.756887 [debug] [Thread-11 ]: Began executing node model.apple_search_ads_source.stg_apple_search_ads__campaign_history
[0m19:40:10.781126 [debug] [Thread-11 ]: Writing runtime sql for node "model.apple_search_ads_source.stg_apple_search_ads__campaign_history"
[0m19:40:10.786898 [debug] [Thread-11 ]: On model.apple_search_ads_source.stg_apple_search_ads__campaign_history: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.apple_search_ads_source.stg_apple_search_ads__campaign_history"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__campaign_history`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select * 
    from `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__campaign_history_tmp`
),

fields as (

    select
        
    
    
    end_time
    
 as 
    
    end_time
    
, 
    
    
    id
    
 as 
    
    id
    
, 
    
    
    modification_time
    
 as 
    
    modification_time
    
, 
    
    
    name
    
 as 
    
    name
    
, 
    
    
    organization_id
    
 as 
    
    organization_id
    
, 
    
    
    start_time
    
 as 
    
    start_time
    
, 
    
    
    status
    
 as 
    
    status
    



        
    from base
),

final as (
    
    select
        modification_time as modified_at,
        organization_id,
        name as campaign_name,
        id as campaign_id,
        status as campaign_status,
        start_time as start_at,
        end_time as end_at,
        row_number() over (partition by id order by modification_time desc) = 1 as is_most_recent_record
    from fields
)

select * 
from final
    );
  
[0m19:40:11.318851 [debug] [Thread-1  ]: Writing injected SQL for node "model.google_ads_source.stg_google_ads__ad_stats"
[0m19:40:11.339985 [debug] [Thread-5  ]: Writing injected SQL for node "model.google_ads_source.stg_google_ads__ad_group_stats"
[0m19:40:11.342216 [debug] [Thread-5  ]: Timing info for model.google_ads_source.stg_google_ads__ad_group_stats (compile): 19:40:09.197077 => 19:40:11.341579
[0m19:40:11.343622 [debug] [Thread-5  ]: Began executing node model.google_ads_source.stg_google_ads__ad_group_stats
[0m19:40:11.351965 [debug] [Thread-1  ]: Timing info for model.google_ads_source.stg_google_ads__ad_stats (compile): 19:40:09.254939 => 19:40:11.351367
[0m19:40:11.353111 [debug] [Thread-1  ]: Began executing node model.google_ads_source.stg_google_ads__ad_stats
[0m19:40:11.370519 [debug] [Thread-1  ]: Writing runtime sql for node "model.google_ads_source.stg_google_ads__ad_stats"
[0m19:40:11.364419 [debug] [Thread-5  ]: Writing runtime sql for node "model.google_ads_source.stg_google_ads__ad_group_stats"
[0m19:40:11.374500 [debug] [Thread-13 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:fce2cef6-91c0-4566-bcef-dfb7bf59087d&page=queryresults
[0m19:40:11.377839 [debug] [Thread-1  ]: On model.google_ads_source.stg_google_ads__ad_stats: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.google_ads_source.stg_google_ads__ad_stats"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__ad_stats`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select * 
    from `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__ad_stats_tmp`

),

fields as (

    select
        
    cast(null as STRING) as 
    
    ad_group
    
 , 
    
    
    ad_group_id
    
 as 
    
    ad_group_id
    
, 
    
    
    ad_id
    
 as 
    
    ad_id
    
, 
    
    
    ad_network_type
    
 as 
    
    ad_network_type
    
, 
    
    
    campaign_id
    
 as 
    
    campaign_id
    
, 
    
    
    clicks
    
 as 
    
    clicks
    
, 
    
    
    cost_micros
    
 as 
    
    cost_micros
    
, 
    
    
    customer_id
    
 as 
    
    customer_id
    
, 
    
    
    date
    
 as 
    
    date
    
, 
    
    
    device
    
 as 
    
    device
    
, 
    
    
    impressions
    
 as 
    
    impressions
    
, 
    cast(null as STRING) as 
    
    keyword_ad_group_criterion
    
 


        
    from base
),

final as (
    
    select 
        customer_id as account_id, 
        date as date_day, 
        
        coalesce(cast(ad_group_id as STRING), 

  
    split(
        ad_group,
        'adGroups/'
        )[safe_offset(1)]
  

) as ad_group_id,
        
        keyword_ad_group_criterion,
        ad_network_type,
        device,
        ad_id, 
        campaign_id, 
        clicks, 
        cost_micros / 1000000.0 as spend, 
        impressions
        
        





    from fields
)

select * from final
    );
  
[0m19:40:11.383284 [debug] [Thread-5  ]: On model.google_ads_source.stg_google_ads__ad_group_stats: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.google_ads_source.stg_google_ads__ad_group_stats"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__ad_group_stats`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select * 
    from `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__ad_group_stats_tmp`
),

fields as (

    select
        
    
    
    _fivetran_id
    
 as 
    
    _fivetran_id
    
, 
    
    
    _fivetran_synced
    
 as 
    
    _fivetran_synced
    
, 
    
    
    ad_network_type
    
 as 
    
    ad_network_type
    
, 
    
    
    campaign_id
    
 as 
    
    campaign_id
    
, 
    
    
    clicks
    
 as 
    
    clicks
    
, 
    
    
    cost_micros
    
 as 
    
    cost_micros
    
, 
    
    
    customer_id
    
 as 
    
    customer_id
    
, 
    
    
    date
    
 as 
    
    date
    
, 
    
    
    device
    
 as 
    
    device
    
, 
    
    
    id
    
 as 
    
    id
    
, 
    
    
    impressions
    
 as 
    
    impressions
    



    from base
),

final as (
    
    select
        customer_id as account_id, 
        date as date_day, 
        cast(id as STRING) as ad_group_id, 
        campaign_id, 
        device,
        ad_network_type,
        clicks, 
        cost_micros / 1000000.0 as spend, 
        impressions
        
        





    from fields
)

select *
from final
    );
  
[0m19:40:11.440723 [debug] [Thread-15 ]: Writing injected SQL for node "model.google_ads_source.stg_google_ads__campaign_history"
[0m19:40:11.442965 [debug] [Thread-15 ]: Timing info for model.google_ads_source.stg_google_ads__campaign_history (compile): 19:40:09.267525 => 19:40:11.442345
[0m19:40:11.444165 [debug] [Thread-15 ]: Began executing node model.google_ads_source.stg_google_ads__campaign_history
[0m19:40:11.457596 [debug] [Thread-15 ]: Writing runtime sql for node "model.google_ads_source.stg_google_ads__campaign_history"
[0m19:40:11.459550 [debug] [Thread-15 ]: On model.google_ads_source.stg_google_ads__campaign_history: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.google_ads_source.stg_google_ads__campaign_history"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__campaign_history`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select * 
    from `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__campaign_history_tmp`

),

fields as (

    select
        
    
    
    advertising_channel_subtype
    
 as 
    
    advertising_channel_subtype
    
, 
    
    
    advertising_channel_type
    
 as 
    
    advertising_channel_type
    
, 
    
    
    customer_id
    
 as 
    
    customer_id
    
, 
    
    
    end_date
    
 as 
    
    end_date
    
, 
    
    
    id
    
 as 
    
    id
    
, 
    
    
    name
    
 as 
    
    name
    
, 
    
    
    serving_status
    
 as 
    
    serving_status
    
, 
    
    
    start_date
    
 as 
    
    start_date
    
, 
    
    
    status
    
 as 
    
    status
    
, 
    
    
    tracking_url_template
    
 as 
    
    tracking_url_template
    
, 
    
    
    updated_at
    
 as 
    
    updated_at
    
, 
    
    
    _fivetran_active
    
 as 
    
    _fivetran_active
    



        
    from base
),

final as (
    
    select 
        id as campaign_id, 
        updated_at,
        name as campaign_name,
        customer_id as account_id,
        advertising_channel_type,
        advertising_channel_subtype,
        start_date,
        end_date,
        serving_status,
        status,
        tracking_url_template,
        row_number() over (partition by id order by updated_at desc) = 1 as is_most_recent_record
    from fields
    where coalesce(_fivetran_active, true)
)

select * 
from final
    );
  
[0m19:40:11.860479 [debug] [Thread-3  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:8f534013-650c-421f-879b-86b709337cea&page=queryresults
[0m19:40:12.184263 [debug] [Thread-1  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:a968bf8d-66a9-479a-b7ee-1dc9a685f3f4&page=queryresults
[0m19:40:12.367650 [debug] [Thread-5  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:ae2116cf-4909-4fe6-b509-5f5f60ef7bb8&page=queryresults
[0m19:40:12.385961 [debug] [Thread-15 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:8d0bd203-d9f1-45c6-b759-335875119cc6&page=queryresults
[0m19:40:12.430558 [debug] [Thread-2  ]: Timing info for model.google_ads_source.stg_google_ads__ad_group_criterion_history (execute): 19:40:08.742000 => 19:40:12.430023
[0m19:40:12.434826 [debug] [Thread-2  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd137b33670>]}
[0m19:40:12.625097 [debug] [Thread-3  ]: Timing info for model.dbt_ads_test.my_second_dbt_model (execute): 19:40:07.520710 => 19:40:12.624707
[0m19:40:12.626428 [debug] [Thread-3  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1356e0a00>]}
[0m19:40:12.794624 [debug] [Thread-6  ]: Timing info for model.google_ads_source.stg_google_ads__account_history (execute): 19:40:09.274844 => 19:40:12.794293
[0m19:40:12.800233 [debug] [Thread-6  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13ab1c7c0>]}
[0m19:40:12.798964 [debug] [Thread-12 ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__ad_report (execute): 19:40:09.179115 => 19:40:12.798636
[0m19:40:12.803783 [debug] [Thread-12 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13ac8fc70>]}
[0m19:40:12.822280 [debug] [Thread-9  ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__keyword_report (execute): 19:40:09.471557 => 19:40:12.821917
[0m19:40:12.824145 [debug] [Thread-9  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13696b820>]}
[0m19:40:12.905160 [debug] [Thread-10 ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__campaign_report (execute): 19:40:09.348797 => 19:40:12.904506
[0m19:40:12.907381 [debug] [Thread-10 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13ab12280>]}
[0m19:40:12.920465 [debug] [Thread-14 ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__ad_group_history (execute): 19:40:09.519285 => 19:40:12.919758
[0m19:40:12.928984 [debug] [Thread-14 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1356edb80>]}
[0m19:40:12.938322 [debug] [Thread-8  ]: Writing injected SQL for node "model.google_ads_source.stg_google_ads__ad_history"
[0m19:40:12.940866 [debug] [Thread-8  ]: Timing info for model.google_ads_source.stg_google_ads__ad_history (compile): 19:40:08.356812 => 19:40:12.940230
[0m19:40:12.942057 [debug] [Thread-8  ]: Began executing node model.google_ads_source.stg_google_ads__ad_history
[0m19:40:12.969414 [debug] [Thread-8  ]: Writing runtime sql for node "model.google_ads_source.stg_google_ads__ad_history"
[0m19:40:12.975370 [debug] [Thread-8  ]: On model.google_ads_source.stg_google_ads__ad_history: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.google_ads_source.stg_google_ads__ad_history"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__ad_history`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select * 
    from `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__ad_history_tmp`
),

fields as (

    select
        
    
    
    ad_group_id
    
 as 
    
    ad_group_id
    
, 
    
    
    display_url
    
 as 
    
    display_url
    
, 
    
    
    final_urls
    
 as 
    
    final_urls
    
, 
    
    
    id
    
 as 
    
    id
    
, 
    
    
    name
    
 as 
    
    name
    
, 
    
    
    status
    
 as 
    
    status
    
, 
    
    
    type
    
 as 
    
    type
    
, 
    
    
    updated_at
    
 as 
    
    updated_at
    
, 
    
    
    _fivetran_active
    
 as 
    
    _fivetran_active
    



        
    from base
),

final as (
    
    select 
        cast(ad_group_id as STRING) as ad_group_id, 
        id as ad_id,
        name as ad_name,
        updated_at,
        type as ad_type,
        status as ad_status,
        display_url,
        final_urls as source_final_urls,
        replace(replace(final_urls, '[', ''),']','') as final_urls,
        row_number() over (partition by id, ad_group_id order by updated_at desc) = 1 as is_most_recent_record
    from fields
    where coalesce(_fivetran_active, true)
),

final_urls as (

    select 
        *,
        --Extract the first url within the list of urls provided within the final_urls field
        

  
    split(
        final_urls,
        ','
        )[safe_offset(0)]
  

 as final_url

    from final

),

url_fields as (
    select 
        *,
        

  
    split(
        final_url,
        '?'
        )[safe_offset(0)]
  

 as base_url,
        
    safe_cast(

  
    split(
        

  
    split(
        

    replace(
        

    replace(
        

    replace(
        final_url,
        'android-app://',
        ''
    )


,
        'http://',
        ''
    )


,
        'https://',
        ''
    )


,
        '/'
        )[safe_offset(0)]
  

,
        '?'
        )[safe_offset(0)]
  

 as STRING)
 as url_host,
        '/' || 
    safe_cast(

  
    split(
        

    case when 

    length(
        

    replace(
        

    replace(
        final_url,
        'http://',
        ''
    )


,
        'https://',
        ''
    )



    )-coalesce(
            nullif(

    strpos(
        

    replace(
        

    replace(
        final_url,
        'http://',
        ''
    )


,
        'https://',
        ''
    )


,
        '/'

    ), 0),
            

    strpos(
        

    replace(
        

    replace(
        final_url,
        'http://',
        ''
    )


,
        'https://',
        ''
    )


,
        '?'

    ) - 1
            ) = 0
        then ''
    else
        substr(
            

    replace(
        

    replace(
        final_url,
        'http://',
        ''
    )


,
        'https://',
        ''
    )


,
            -1 * (

    length(
        

    replace(
        

    replace(
        final_url,
        'http://',
        ''
    )


,
        'https://',
        ''
    )



    )-coalesce(
            nullif(

    strpos(
        

    replace(
        

    replace(
        final_url,
        'http://',
        ''
    )


,
        'https://',
        ''
    )


,
        '/'

    ), 0),
            

    strpos(
        

    replace(
        

    replace(
        final_url,
        'http://',
        ''
    )


,
        'https://',
        ''
    )


,
        '?'

    ) - 1
            ))
        )
    end,
        '?'
        )[safe_offset(0)]
  

 as STRING)
 as url_path,
        nullif(

  
    split(
        

  
    split(
        final_url,
        'utm_source='
        )[safe_offset(1)]
  

,
        '&'
        )[safe_offset(0)]
  

,'') as utm_source,
        nullif(

  
    split(
        

  
    split(
        final_url,
        'utm_medium='
        )[safe_offset(1)]
  

,
        '&'
        )[safe_offset(0)]
  

,'') as utm_medium,
        nullif(

  
    split(
        

  
    split(
        final_url,
        'utm_campaign='
        )[safe_offset(1)]
  

,
        '&'
        )[safe_offset(0)]
  

,'') as utm_campaign,
        nullif(

  
    split(
        

  
    split(
        final_url,
        'utm_content='
        )[safe_offset(1)]
  

,
        '&'
        )[safe_offset(0)]
  

,'') as utm_content,
        nullif(

  
    split(
        

  
    split(
        final_url,
        'utm_term='
        )[safe_offset(1)]
  

,
        '&'
        )[safe_offset(0)]
  

,'') as utm_term
    from final_urls
)

select * 
from url_fields
    );
  
[0m19:40:13.018880 [debug] [Thread-4  ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__organization (execute): 19:40:09.618963 => 19:40:13.018363
[0m19:40:13.020906 [debug] [Thread-4  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd137b07c70>]}
[0m19:40:13.203740 [debug] [Thread-7  ]: Timing info for model.google_ads_source.stg_google_ads__ad_group_history (execute): 19:40:09.730990 => 19:40:13.203249
[0m19:40:13.205626 [debug] [Thread-7  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd137247070>]}
[0m19:40:13.379869 [debug] [Thread-11 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:ce2714c9-561d-4353-b57c-283deab819c0&page=queryresults
[0m19:40:14.016727 [debug] [Thread-8  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:42083729-d6ba-46bc-b08c-1cf4d60eda95&page=queryresults
[0m19:40:14.024242 [debug] [Thread-13 ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__search_term_report (execute): 19:40:10.550293 => 19:40:14.023757
[0m19:40:14.030927 [debug] [Thread-13 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd137cbc490>]}
[0m19:40:14.466874 [info ] [Thread-2  ]: 53 of 130 OK created sql table model marketing_full_v2_google_ads_source.stg_google_ads__ad_group_criterion_history  [[32mCREATE TABLE (7.1k rows, 333.6 KiB processed)[0m in 6.40s]
[0m19:40:14.468858 [debug] [Thread-2  ]: Finished running node model.google_ads_source.stg_google_ads__ad_group_criterion_history
[0m19:40:14.470161 [debug] [Thread-2  ]: Began running node model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report
[0m19:40:14.471436 [info ] [Thread-2  ]: 68 of 130 START sql table model marketing_full_v2_snapchat_ads_source.stg_snapchat_ads__ad_hourly_report  [RUN]
[0m19:40:14.473041 [debug] [Thread-2  ]: Re-using an available connection from the pool (formerly model.google_ads_source.stg_google_ads__ad_group_criterion_history, now model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report)
[0m19:40:14.473754 [debug] [Thread-2  ]: Began compiling node model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report
[0m19:40:14.480790 [info ] [Thread-3  ]: 63 of 130 OK created sql view model marketing_full_v2.my_second_dbt_model ...... [[32mCREATE VIEW (0 processed)[0m in 5.16s]
[0m19:40:14.491648 [debug] [Thread-2  ]: Opening a new connection, currently in state closed
[0m19:40:14.493266 [debug] [Thread-3  ]: Finished running node model.dbt_ads_test.my_second_dbt_model
[0m19:40:14.509930 [debug] [Thread-3  ]: Began running node model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report
[0m19:40:14.482116 [info ] [Thread-6  ]: 54 of 130 OK created sql table model marketing_full_v2_google_ads_source.stg_google_ads__account_history  [[32mCREATE TABLE (3.0 rows, 1.4 KiB processed)[0m in 6.54s]
[0m19:40:14.518032 [debug] [Thread-6  ]: Finished running node model.google_ads_source.stg_google_ads__account_history
[0m19:40:14.519015 [debug] [Thread-6  ]: Began running node model.snapchat_ads_source.stg_snapchat_ads__ad_account_history
[0m19:40:14.495521 [info ] [Thread-9  ]: 57 of 130 OK created sql table model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__keyword_report  [[32mCREATE TABLE (11.7k rows, 967.9 KiB processed)[0m in 6.28s]
[0m19:40:14.494216 [info ] [Thread-12 ]: 58 of 130 OK created sql table model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__ad_report  [[32mCREATE TABLE (1.6k rows, 157.8 KiB processed)[0m in 6.20s]
[0m19:40:14.507589 [info ] [Thread-4  ]: 62 of 130 OK created sql table model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__organization  [[32mCREATE TABLE (1.0 rows, 45.0 Bytes processed)[0m in 5.90s]
[0m19:40:14.524165 [debug] [Thread-9  ]: Finished running node model.apple_search_ads_source.stg_apple_search_ads__keyword_report
[0m19:40:14.501471 [info ] [Thread-10 ]: 55 of 130 OK created sql table model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__campaign_report  [[32mCREATE TABLE (1.3k rows, 108.2 KiB processed)[0m in 6.44s]
[0m19:40:14.506119 [info ] [Thread-14 ]: 60 of 130 OK created sql table model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__ad_group_history  [[32mCREATE TABLE (13.0 rows, 1.1 KiB processed)[0m in 5.83s]
[0m19:40:14.543060 [debug] [Thread-14 ]: Finished running node model.apple_search_ads_source.stg_apple_search_ads__ad_group_history
[0m19:40:14.544401 [debug] [Thread-14 ]: Began running node model.snapchat_ads_source.stg_snapchat_ads__campaign_history
[0m19:40:14.545872 [info ] [Thread-14 ]: 72 of 130 START sql table model marketing_full_v2_snapchat_ads_source.stg_snapchat_ads__campaign_history  [RUN]
[0m19:40:14.531834 [debug] [Thread-12 ]: Finished running node model.apple_search_ads_source.stg_apple_search_ads__ad_report
[0m19:40:14.521974 [info ] [Thread-13 ]: 59 of 130 OK created sql table model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__search_term_report  [[32mCREATE TABLE (18.5k rows, 4.5 MiB processed)[0m in 7.37s]
[0m19:40:14.534925 [debug] [Thread-4  ]: Finished running node model.apple_search_ads_source.stg_apple_search_ads__organization
[0m19:40:14.536940 [debug] [Thread-9  ]: Began running node model.google_ads_source.stg_google_ads__keyword_stats
[0m19:40:14.541609 [debug] [Thread-10 ]: Finished running node model.apple_search_ads_source.stg_apple_search_ads__campaign_report
[0m19:40:14.511345 [info ] [Thread-3  ]: 69 of 130 START sql table model marketing_full_v2_snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report  [RUN]
[0m19:40:14.515537 [info ] [Thread-7  ]: 61 of 130 OK created sql table model marketing_full_v2_google_ads_source.stg_google_ads__ad_group_history  [[32mCREATE TABLE (246.0 rows, 36.6 KiB processed)[0m in 6.09s]
[0m19:40:14.520324 [info ] [Thread-6  ]: 70 of 130 START sql table model marketing_full_v2_snapchat_ads_source.stg_snapchat_ads__ad_account_history  [RUN]
[0m19:40:14.549081 [debug] [Thread-14 ]: Re-using an available connection from the pool (formerly model.apple_search_ads_source.stg_apple_search_ads__ad_group_history, now model.snapchat_ads_source.stg_snapchat_ads__campaign_history)
[0m19:40:14.550518 [debug] [Thread-12 ]: Began running node model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history
[0m19:40:14.554694 [debug] [Thread-13 ]: Finished running node model.apple_search_ads_source.stg_apple_search_ads__search_term_report
[0m19:40:14.559158 [debug] [Thread-4  ]: Began running node model.snapchat_ads_source.stg_snapchat_ads__ad_history
[0m19:40:14.576093 [info ] [Thread-4  ]: 74 of 130 START sql table model marketing_full_v2_snapchat_ads_source.stg_snapchat_ads__ad_history  [RUN]
[0m19:40:14.561100 [info ] [Thread-9  ]: 71 of 130 START sql table model marketing_full_v2_google_ads_source.stg_google_ads__keyword_stats  [RUN]
[0m19:40:14.564644 [debug] [Thread-3  ]: Re-using an available connection from the pool (formerly model.dbt_ads_test.my_second_dbt_model, now model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report)
[0m19:40:14.566608 [debug] [Thread-7  ]: Finished running node model.google_ads_source.stg_google_ads__ad_group_history
[0m19:40:14.568795 [debug] [Thread-6  ]: Re-using an available connection from the pool (formerly model.google_ads_source.stg_google_ads__account_history, now model.snapchat_ads_source.stg_snapchat_ads__ad_account_history)
[0m19:40:14.570846 [debug] [Thread-14 ]: Began compiling node model.snapchat_ads_source.stg_snapchat_ads__campaign_history
[0m19:40:14.572527 [info ] [Thread-12 ]: 73 of 130 START sql table model marketing_full_v2_snapchat_ads_source.stg_snapchat_ads__ad_squad_history  [RUN]
[0m19:40:14.574576 [debug] [Thread-13 ]: Began running node model.snapchat_ads_source.stg_snapchat_ads__creative_history
[0m19:40:14.577264 [debug] [Thread-4  ]: Re-using an available connection from the pool (formerly model.apple_search_ads_source.stg_apple_search_ads__organization, now model.snapchat_ads_source.stg_snapchat_ads__ad_history)
[0m19:40:14.562667 [debug] [Thread-10 ]: Began running node model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report
[0m19:40:14.579242 [debug] [Thread-9  ]: Re-using an available connection from the pool (formerly model.apple_search_ads_source.stg_apple_search_ads__keyword_report, now model.google_ads_source.stg_google_ads__keyword_stats)
[0m19:40:14.582679 [debug] [Thread-3  ]: Began compiling node model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report
[0m19:40:14.586166 [debug] [Thread-7  ]: Began running node model.google_ads_source.stg_google_ads__campaign_stats
[0m19:40:14.587455 [debug] [Thread-6  ]: Began compiling node model.snapchat_ads_source.stg_snapchat_ads__ad_account_history
[0m19:40:14.602790 [debug] [Thread-12 ]: Re-using an available connection from the pool (formerly model.apple_search_ads_source.stg_apple_search_ads__ad_report, now model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history)
[0m19:40:14.601378 [debug] [Thread-14 ]: Opening a new connection, currently in state closed
[0m19:40:14.605315 [info ] [Thread-13 ]: 76 of 130 START sql table model marketing_full_v2_snapchat_ads_source.stg_snapchat_ads__creative_history  [RUN]
[0m19:40:14.606511 [debug] [Thread-4  ]: Began compiling node model.snapchat_ads_source.stg_snapchat_ads__ad_history
[0m19:40:14.607731 [info ] [Thread-10 ]: 75 of 130 START sql table model marketing_full_v2_snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report  [RUN]
[0m19:40:14.680422 [debug] [Thread-10 ]: Re-using an available connection from the pool (formerly model.apple_search_ads_source.stg_apple_search_ads__campaign_report, now model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report)
[0m19:40:14.622248 [info ] [Thread-7  ]: 77 of 130 START sql table model marketing_full_v2_google_ads_source.stg_google_ads__campaign_stats  [RUN]
[0m19:40:14.608714 [debug] [Thread-9  ]: Began compiling node model.google_ads_source.stg_google_ads__keyword_stats
[0m19:40:14.645809 [debug] [Thread-12 ]: Began compiling node model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history
[0m19:40:14.657998 [debug] [Thread-6  ]: Opening a new connection, currently in state closed
[0m19:40:14.664719 [debug] [Thread-13 ]: Re-using an available connection from the pool (formerly model.apple_search_ads_source.stg_apple_search_ads__search_term_report, now model.snapchat_ads_source.stg_snapchat_ads__creative_history)
[0m19:40:14.681729 [debug] [Thread-10 ]: Began compiling node model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report
[0m19:40:14.684075 [debug] [Thread-7  ]: Re-using an available connection from the pool (formerly model.google_ads_source.stg_google_ads__ad_group_history, now model.google_ads_source.stg_google_ads__campaign_stats)
[0m19:40:14.636281 [debug] [Thread-3  ]: Opening a new connection, currently in state closed
[0m19:40:14.718441 [debug] [Thread-9  ]: Opening a new connection, currently in state closed
[0m19:40:14.728552 [debug] [Thread-13 ]: Began compiling node model.snapchat_ads_source.stg_snapchat_ads__creative_history
[0m19:40:14.736769 [debug] [Thread-12 ]: Opening a new connection, currently in state closed
[0m19:40:14.738026 [debug] [Thread-7  ]: Began compiling node model.google_ads_source.stg_google_ads__campaign_stats
[0m19:40:14.744809 [debug] [Thread-10 ]: Opening a new connection, currently in state closed
[0m19:40:14.749383 [debug] [Thread-4  ]: Opening a new connection, currently in state closed
[0m19:40:14.781855 [debug] [Thread-7  ]: Opening a new connection, currently in state closed
[0m19:40:14.795207 [debug] [Thread-13 ]: Opening a new connection, currently in state closed
[0m19:40:15.144907 [debug] [Thread-15 ]: Timing info for model.google_ads_source.stg_google_ads__campaign_history (execute): 19:40:11.444958 => 19:40:15.144379
[0m19:40:15.147127 [debug] [Thread-15 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13692d190>]}
[0m19:40:15.148872 [info ] [Thread-15 ]: 67 of 130 OK created sql table model marketing_full_v2_google_ads_source.stg_google_ads__campaign_history  [[32mCREATE TABLE (161.0 rows, 25.1 KiB processed)[0m in 5.88s]
[0m19:40:15.151316 [debug] [Thread-15 ]: Finished running node model.google_ads_source.stg_google_ads__campaign_history
[0m19:40:15.152671 [debug] [Thread-15 ]: Began running node model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history
[0m19:40:15.154009 [info ] [Thread-15 ]: 78 of 130 SKIP relation marketing_full_v2_snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history  [[33mSKIP[0m]
[0m19:40:15.156602 [debug] [Thread-15 ]: Finished running node model.snapchat_ads_source.stg_snapchat_ads__creative_url_tag_history
[0m19:40:15.158214 [debug] [Thread-15 ]: Began running node model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly
[0m19:40:15.159658 [info ] [Thread-15 ]: 79 of 130 START sql table model marketing_full_v2_stg_tiktok_ads.stg_tiktok_ads__ad_group_report_hourly  [RUN]
[0m19:40:15.163216 [debug] [Thread-15 ]: Re-using an available connection from the pool (formerly model.google_ads_source.stg_google_ads__campaign_history, now model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly)
[0m19:40:15.164433 [debug] [Thread-15 ]: Began compiling node model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly
[0m19:40:15.185749 [debug] [Thread-15 ]: Opening a new connection, currently in state closed
[0m19:40:16.336055 [debug] [Thread-8  ]: Timing info for model.google_ads_source.stg_google_ads__ad_history (execute): 19:40:12.942884 => 19:40:16.335518
[0m19:40:16.338315 [debug] [Thread-8  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1367eaac0>]}
[0m19:40:16.340671 [info ] [Thread-8  ]: 64 of 130 OK created sql table model marketing_full_v2_google_ads_source.stg_google_ads__ad_history  [[32mCREATE TABLE (724.0 rows, 129.8 KiB processed)[0m in 8.00s]
[0m19:40:16.343081 [debug] [Thread-8  ]: Finished running node model.google_ads_source.stg_google_ads__ad_history
[0m19:40:16.344585 [debug] [Thread-8  ]: Began running node model.tiktok_ads_source.stg_tiktok_ads__ad_group_history
[0m19:40:16.345930 [info ] [Thread-8  ]: 80 of 130 START sql table model marketing_full_v2_stg_tiktok_ads.stg_tiktok_ads__ad_group_history  [RUN]
[0m19:40:16.349882 [debug] [Thread-8  ]: Re-using an available connection from the pool (formerly model.google_ads_source.stg_google_ads__ad_history, now model.tiktok_ads_source.stg_tiktok_ads__ad_group_history)
[0m19:40:16.351037 [debug] [Thread-8  ]: Began compiling node model.tiktok_ads_source.stg_tiktok_ads__ad_group_history
[0m19:40:16.369024 [debug] [Thread-8  ]: Opening a new connection, currently in state closed
[0m19:40:16.981817 [debug] [Thread-2  ]: Writing injected SQL for node "model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report"
[0m19:40:16.989523 [debug] [Thread-2  ]: Timing info for model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report (compile): 19:40:14.474219 => 19:40:16.988917
[0m19:40:16.990664 [debug] [Thread-2  ]: Began executing node model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report
[0m19:40:17.002786 [debug] [Thread-2  ]: Writing runtime sql for node "model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report"
[0m19:40:17.005073 [debug] [Thread-2  ]: On model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__ad_hourly_report`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select * 
    from `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__ad_hourly_report_tmp`
),

fields as (

    select
        
    
    
    ad_id
    
 as 
    
    ad_id
    
, 
    
    
    attachment_quartile_1
    
 as 
    
    attachment_quartile_1
    
, 
    
    
    attachment_quartile_2
    
 as 
    
    attachment_quartile_2
    
, 
    
    
    attachment_quartile_3
    
 as 
    
    attachment_quartile_3
    
, 
    
    
    attachment_total_view_time_millis
    
 as 
    
    attachment_total_view_time_millis
    
, 
    
    
    attachment_view_completion
    
 as 
    
    attachment_view_completion
    
, 
    
    
    date
    
 as 
    
    date
    
, 
    
    
    impressions
    
 as 
    
    impressions
    
, 
    
    
    quartile_1
    
 as 
    
    quartile_1
    
, 
    
    
    quartile_2
    
 as 
    
    quartile_2
    
, 
    
    
    quartile_3
    
 as 
    
    quartile_3
    
, 
    
    
    saves
    
 as 
    
    saves
    
, 
    
    
    screen_time_millis
    
 as 
    
    screen_time_millis
    
, 
    
    
    shares
    
 as 
    
    shares
    
, 
    
    
    spend
    
 as 
    
    spend
    
, 
    
    
    swipes
    
 as 
    
    swipes
    
, 
    
    
    video_views
    
 as 
    
    video_views
    
, 
    
    
    view_completion
    
 as 
    
    view_completion
    
, 
    
    
    view_time_millis
    
 as 
    
    view_time_millis
    


        
    from base
),

final as (
    
    select 
        ad_id,
        cast (date as TIMESTAMP) as date_hour,
        attachment_quartile_1,
        attachment_quartile_2,
        attachment_quartile_3,
        (attachment_total_view_time_millis / 1000000.0) as attachment_total_view_time,
        attachment_view_completion,
        quartile_1,
        quartile_2,
        quartile_3,
        saves,
        shares,
        (screen_time_millis / 1000000.0) as screen_time,
        video_views,
        view_completion,
        (view_time_millis / 1000000.0) as view_time,
        impressions,
        (spend / 1000000.0) as spend,
        swipes

        





    from fields
)

select * 
from final
    );
  
[0m19:40:17.435708 [debug] [Thread-14 ]: Writing injected SQL for node "model.snapchat_ads_source.stg_snapchat_ads__campaign_history"
[0m19:40:17.612294 [debug] [Thread-4  ]: Writing injected SQL for node "model.snapchat_ads_source.stg_snapchat_ads__ad_history"
[0m19:40:17.648428 [debug] [Thread-3  ]: Writing injected SQL for node "model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report"
[0m19:40:17.675852 [debug] [Thread-13 ]: Writing injected SQL for node "model.snapchat_ads_source.stg_snapchat_ads__creative_history"
[0m19:40:17.729724 [debug] [Thread-10 ]: Writing injected SQL for node "model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report"
[0m19:40:17.738934 [debug] [Thread-7  ]: Writing injected SQL for node "model.google_ads_source.stg_google_ads__campaign_stats"
[0m19:40:17.754719 [debug] [Thread-14 ]: Timing info for model.snapchat_ads_source.stg_snapchat_ads__campaign_history (compile): 19:40:14.588665 => 19:40:17.754068
[0m19:40:17.756711 [debug] [Thread-9  ]: Writing injected SQL for node "model.google_ads_source.stg_google_ads__keyword_stats"
[0m19:40:17.763998 [debug] [Thread-12 ]: Writing injected SQL for node "model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history"
[0m19:40:17.765675 [debug] [Thread-4  ]: Timing info for model.snapchat_ads_source.stg_snapchat_ads__ad_history (compile): 19:40:14.673107 => 19:40:17.765052
[0m19:40:17.792440 [debug] [Thread-13 ]: Timing info for model.snapchat_ads_source.stg_snapchat_ads__creative_history (compile): 19:40:14.754047 => 19:40:17.791310
[0m19:40:17.801039 [debug] [Thread-13 ]: Began executing node model.snapchat_ads_source.stg_snapchat_ads__creative_history
[0m19:40:17.796688 [debug] [Thread-14 ]: Began executing node model.snapchat_ads_source.stg_snapchat_ads__campaign_history
[0m19:40:17.799725 [debug] [Thread-4  ]: Began executing node model.snapchat_ads_source.stg_snapchat_ads__ad_history
[0m19:40:17.808283 [debug] [Thread-10 ]: Timing info for model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report (compile): 19:40:14.729687 => 19:40:17.807681
[0m19:40:17.809572 [debug] [Thread-12 ]: Timing info for model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history (compile): 19:40:14.702126 => 19:40:17.808981
[0m19:40:17.811013 [debug] [Thread-9  ]: Timing info for model.google_ads_source.stg_google_ads__keyword_stats (compile): 19:40:14.685086 => 19:40:17.810416
[0m19:40:17.795533 [debug] [Thread-3  ]: Timing info for model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report (compile): 19:40:14.610171 => 19:40:17.794899
[0m19:40:17.828213 [debug] [Thread-7  ]: Timing info for model.google_ads_source.stg_google_ads__campaign_stats (compile): 19:40:14.770852 => 19:40:17.827599
[0m19:40:17.819285 [debug] [Thread-13 ]: Writing runtime sql for node "model.snapchat_ads_source.stg_snapchat_ads__creative_history"
[0m19:40:17.852486 [debug] [Thread-14 ]: Writing runtime sql for node "model.snapchat_ads_source.stg_snapchat_ads__campaign_history"
[0m19:40:17.887325 [debug] [Thread-2  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:ceb795d9-7f7d-4cad-bd89-4172e9724340&page=queryresults
[0m19:40:17.893460 [debug] [Thread-4  ]: Writing runtime sql for node "model.snapchat_ads_source.stg_snapchat_ads__ad_history"
[0m19:40:17.918818 [debug] [Thread-10 ]: Began executing node model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report
[0m19:40:17.920381 [debug] [Thread-12 ]: Began executing node model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history
[0m19:40:17.921978 [debug] [Thread-9  ]: Began executing node model.google_ads_source.stg_google_ads__keyword_stats
[0m19:40:17.923575 [debug] [Thread-3  ]: Began executing node model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report
[0m19:40:17.925177 [debug] [Thread-7  ]: Began executing node model.google_ads_source.stg_google_ads__campaign_stats
[0m19:40:17.937663 [debug] [Thread-13 ]: On model.snapchat_ads_source.stg_snapchat_ads__creative_history: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.snapchat_ads_source.stg_snapchat_ads__creative_history"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__creative_history`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select * 
    from `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__creative_history_tmp`
),

fields as (

    select
        
    
    
    _fivetran_synced
    
 as 
    
    _fivetran_synced
    
, 
    
    
    ad_account_id
    
 as 
    
    ad_account_id
    
, 
    
    
    created_at
    
 as 
    
    created_at
    
, 
    
    
    id
    
 as 
    
    id
    
, 
    
    
    name
    
 as 
    
    name
    
, 
    
    
    updated_at
    
 as 
    
    updated_at
    
, 
    
    
    web_view_url
    
 as 
    
    web_view_url
    



    from base
),

final as (
    
    select 
        id as creative_id,
        cast (created_at as TIMESTAMP) as created_at,
        ad_account_id,
        name as creative_name,
        web_view_url as url,
        cast (_fivetran_synced as TIMESTAMP) as _fivetran_synced,
        cast (updated_at as TIMESTAMP) as updated_at,
        row_number() over (partition by id order by _fivetran_synced desc) =1 as is_most_recent_record
    from fields
)

select * 
from final
    );
  
[0m19:40:17.942034 [debug] [Thread-14 ]: On model.snapchat_ads_source.stg_snapchat_ads__campaign_history: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.snapchat_ads_source.stg_snapchat_ads__campaign_history"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__campaign_history`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select * 
    from `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__campaign_history_tmp`
),

fields as (

    select
        
    
    
    _fivetran_synced
    
 as 
    
    _fivetran_synced
    
, 
    
    
    ad_account_id
    
 as 
    
    ad_account_id
    
, 
    
    
    created_at
    
 as 
    
    created_at
    
, 
    
    
    id
    
 as 
    
    id
    
, 
    
    
    name
    
 as 
    
    name
    
, 
    
    
    updated_at
    
 as 
    
    updated_at
    



    from base
),

final as (
    
    select
        id as campaign_id,
        ad_account_id,
        cast (created_at as TIMESTAMP) as created_at,
        name as campaign_name,
        cast (_fivetran_synced as TIMESTAMP) as _fivetran_synced,
        cast (updated_at as TIMESTAMP) as updated_at,
        row_number() over (partition by id order by _fivetran_synced desc) = 1 as is_most_recent_record
    from fields
)

select * 
from final
    );
  
[0m19:40:17.961622 [debug] [Thread-4  ]: On model.snapchat_ads_source.stg_snapchat_ads__ad_history: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.snapchat_ads_source.stg_snapchat_ads__ad_history"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__ad_history`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select * 
    from `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__ad_history_tmp`
),

fields as (

    select
        
    
    
    _fivetran_synced
    
 as 
    
    _fivetran_synced
    
, 
    
    
    ad_squad_id
    
 as 
    
    ad_squad_id
    
, 
    
    
    created_at
    
 as 
    
    created_at
    
, 
    
    
    creative_id
    
 as 
    
    creative_id
    
, 
    
    
    id
    
 as 
    
    id
    
, 
    
    
    name
    
 as 
    
    name
    
, 
    
    
    updated_at
    
 as 
    
    updated_at
    



    from base
),

final as (
    
    select 
        id as ad_id,
        name as ad_name,
        cast (created_at as TIMESTAMP) as created_at,
        ad_squad_id,
        creative_id,
        cast (_fivetran_synced as TIMESTAMP) as _fivetran_synced,
        cast (updated_at as TIMESTAMP) as updated_at,
        row_number() over (partition by id order by _fivetran_synced desc) = 1 as is_most_recent_record
    from fields
)

select * 
from final
    );
  
[0m19:40:18.045965 [debug] [Thread-12 ]: Writing runtime sql for node "model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history"
[0m19:40:18.055195 [debug] [Thread-9  ]: Writing runtime sql for node "model.google_ads_source.stg_google_ads__keyword_stats"
[0m19:40:18.069171 [debug] [Thread-7  ]: Writing runtime sql for node "model.google_ads_source.stg_google_ads__campaign_stats"
[0m19:40:18.052277 [debug] [Thread-3  ]: Writing runtime sql for node "model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report"
[0m19:40:18.100434 [debug] [Thread-10 ]: Writing runtime sql for node "model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report"
[0m19:40:18.109036 [debug] [Thread-12 ]: On model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__ad_squad_history`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select * 
    from `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__ad_squad_history_tmp`
),

fields as (

    select
        
    
    
    _fivetran_synced
    
 as 
    
    _fivetran_synced
    
, 
    
    
    campaign_id
    
 as 
    
    campaign_id
    
, 
    
    
    created_at
    
 as 
    
    created_at
    
, 
    
    
    id
    
 as 
    
    id
    
, 
    
    
    name
    
 as 
    
    name
    
, 
    
    
    updated_at
    
 as 
    
    updated_at
    



    from base
),

final as (

    select 
        id as ad_squad_id,
        name as ad_squad_name,
        cast (created_at as TIMESTAMP) as created_at,
        campaign_id,
        cast (_fivetran_synced as TIMESTAMP) as _fivetran_synced,
        cast (updated_at as TIMESTAMP) as updated_at,
        row_number() over (partition by id order by _fivetran_synced desc) = 1 as is_most_recent_record
    from fields
)

select * 
from final
    );
  
[0m19:40:18.111821 [debug] [Thread-7  ]: On model.google_ads_source.stg_google_ads__campaign_stats: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.google_ads_source.stg_google_ads__campaign_stats"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__campaign_stats`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select * 
    from `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__campaign_stats_tmp`
),

fields as (

    select
        
    
    
    _fivetran_id
    
 as 
    
    _fivetran_id
    
, 
    
    
    _fivetran_synced
    
 as 
    
    _fivetran_synced
    
, 
    
    
    ad_network_type
    
 as 
    
    ad_network_type
    
, 
    
    
    clicks
    
 as 
    
    clicks
    
, 
    
    
    cost_micros
    
 as 
    
    cost_micros
    
, 
    
    
    customer_id
    
 as 
    
    customer_id
    
, 
    
    
    date
    
 as 
    
    date
    
, 
    
    
    device
    
 as 
    
    device
    
, 
    
    
    id
    
 as 
    
    id
    
, 
    
    
    impressions
    
 as 
    
    impressions
    



    from base
),

final as (
    
    select 
        customer_id as account_id, 
        date as date_day, 
        id as campaign_id, 
        ad_network_type,
        device,
        clicks, 
        cost_micros / 1000000.0 as spend, 
        impressions
        
        





    from fields
)

select *
from final
    );
  
[0m19:40:18.114896 [debug] [Thread-9  ]: On model.google_ads_source.stg_google_ads__keyword_stats: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.google_ads_source.stg_google_ads__keyword_stats"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__keyword_stats`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select * 
    from `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__keyword_stats_tmp`
),

fields as (

    select
        
    
    
    _fivetran_id
    
 as 
    
    _fivetran_id
    
, 
    
    
    _fivetran_synced
    
 as 
    
    _fivetran_synced
    
, 
    
    
    ad_group_criterion_criterion_id
    
 as 
    
    ad_group_criterion_criterion_id
    
, 
    
    
    ad_group_id
    
 as 
    
    ad_group_id
    
, 
    
    
    ad_network_type
    
 as 
    
    ad_network_type
    
, 
    
    
    campaign_id
    
 as 
    
    campaign_id
    
, 
    
    
    clicks
    
 as 
    
    clicks
    
, 
    
    
    cost_micros
    
 as 
    
    cost_micros
    
, 
    
    
    customer_id
    
 as 
    
    customer_id
    
, 
    
    
    date
    
 as 
    
    date
    
, 
    
    
    device
    
 as 
    
    device
    
, 
    
    
    impressions
    
 as 
    
    impressions
    



    from base
),

final as (
    
    select 
        _fivetran_id as keyword_id,
        customer_id as account_id, 
        date as date_day, 
        cast(ad_group_id as STRING) as ad_group_id,
        ad_group_criterion_criterion_id as criterion_id,
        campaign_id, 
        clicks, 
        cost_micros / 1000000.0 as spend, 
        impressions
        
        





    from fields
)

select *
from final
    );
  
[0m19:40:18.117662 [debug] [Thread-3  ]: On model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__ad_squad_hourly_report`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select * 
    from `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__ad_squad_hourly_report_tmp`
),

fields as (

    select
        
    
    
    ad_squad_id
    
 as 
    
    ad_squad_id
    
, 
    
    
    attachment_quartile_1
    
 as 
    
    attachment_quartile_1
    
, 
    
    
    attachment_quartile_2
    
 as 
    
    attachment_quartile_2
    
, 
    
    
    attachment_quartile_3
    
 as 
    
    attachment_quartile_3
    
, 
    
    
    attachment_total_view_time_millis
    
 as 
    
    attachment_total_view_time_millis
    
, 
    
    
    attachment_view_completion
    
 as 
    
    attachment_view_completion
    
, 
    
    
    date
    
 as 
    
    date
    
, 
    
    
    impressions
    
 as 
    
    impressions
    
, 
    
    
    quartile_1
    
 as 
    
    quartile_1
    
, 
    
    
    quartile_2
    
 as 
    
    quartile_2
    
, 
    
    
    quartile_3
    
 as 
    
    quartile_3
    
, 
    
    
    saves
    
 as 
    
    saves
    
, 
    
    
    screen_time_millis
    
 as 
    
    screen_time_millis
    
, 
    
    
    shares
    
 as 
    
    shares
    
, 
    
    
    spend
    
 as 
    
    spend
    
, 
    
    
    swipes
    
 as 
    
    swipes
    
, 
    
    
    video_views
    
 as 
    
    video_views
    
, 
    
    
    view_completion
    
 as 
    
    view_completion
    
, 
    
    
    view_time_millis
    
 as 
    
    view_time_millis
    


        
    from base
),

final as (
    
    select 
        ad_squad_id,
        cast (date as TIMESTAMP) as date_hour,
        attachment_quartile_1,
        attachment_quartile_2,
        attachment_quartile_3,
        (attachment_total_view_time_millis / 1000000.0) as attachment_total_view_time,
        attachment_view_completion,
        quartile_1,
        quartile_2,
        quartile_3,
        saves,
        shares,
        (screen_time_millis / 1000000.0) as screen_time,
        video_views,
        view_completion,
        (view_time_millis / 1000000.0) as view_time,
        impressions,
        (spend / 1000000.0) as spend,
        swipes

        




    
    from fields
)

select *
from final
    );
  
[0m19:40:18.151148 [debug] [Thread-10 ]: On model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__campaign_hourly_report`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select * 
    from `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__campaign_hourly_report_tmp`
),

fields as (

    select
        
    
    
    attachment_quartile_1
    
 as 
    
    attachment_quartile_1
    
, 
    
    
    attachment_quartile_2
    
 as 
    
    attachment_quartile_2
    
, 
    
    
    attachment_quartile_3
    
 as 
    
    attachment_quartile_3
    
, 
    
    
    attachment_total_view_time_millis
    
 as 
    
    attachment_total_view_time_millis
    
, 
    
    
    attachment_view_completion
    
 as 
    
    attachment_view_completion
    
, 
    
    
    campaign_id
    
 as 
    
    campaign_id
    
, 
    
    
    date
    
 as 
    
    date
    
, 
    
    
    impressions
    
 as 
    
    impressions
    
, 
    
    
    quartile_1
    
 as 
    
    quartile_1
    
, 
    
    
    quartile_2
    
 as 
    
    quartile_2
    
, 
    
    
    quartile_3
    
 as 
    
    quartile_3
    
, 
    
    
    saves
    
 as 
    
    saves
    
, 
    
    
    screen_time_millis
    
 as 
    
    screen_time_millis
    
, 
    
    
    shares
    
 as 
    
    shares
    
, 
    
    
    spend
    
 as 
    
    spend
    
, 
    
    
    swipes
    
 as 
    
    swipes
    
, 
    
    
    video_views
    
 as 
    
    video_views
    
, 
    
    
    view_completion
    
 as 
    
    view_completion
    
, 
    
    
    view_time_millis
    
 as 
    
    view_time_millis
    



    from base
),

final as (
    
    select 
        campaign_id,
        cast (date as TIMESTAMP) as date_hour,
        attachment_quartile_1,
        attachment_quartile_2,
        attachment_quartile_3,
        (attachment_total_view_time_millis / 1000000.0) as attachment_total_view_time,
        attachment_view_completion,
        quartile_1,
        quartile_2,
        quartile_3,
        saves,
        shares,
        (screen_time_millis / 1000000.0) as screen_time,
        video_views,
        view_completion,
        (view_time_millis / 1000000.0) as view_time,
        impressions,
        (spend / 1000000.0) as spend,
        swipes

        




    
    from fields
)

select *
from final
    );
  
[0m19:40:18.211390 [debug] [Thread-1  ]: Timing info for model.google_ads_source.stg_google_ads__ad_stats (execute): 19:40:11.353941 => 19:40:18.210755
[0m19:40:18.213569 [debug] [Thread-1  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13ab64df0>]}
[0m19:40:18.215198 [info ] [Thread-1  ]: 66 of 130 OK created sql table model marketing_full_v2_google_ads_source.stg_google_ads__ad_stats  [[32mCREATE TABLE (20.5k rows, 1.6 MiB processed)[0m in 8.97s]
[0m19:40:18.217874 [debug] [Thread-1  ]: Finished running node model.google_ads_source.stg_google_ads__ad_stats
[0m19:40:18.219241 [debug] [Thread-1  ]: Began running node model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly
[0m19:40:18.226138 [info ] [Thread-1  ]: 81 of 130 START sql table model marketing_full_v2_stg_tiktok_ads.stg_tiktok_ads__ad_report_hourly  [RUN]
[0m19:40:18.227697 [debug] [Thread-1  ]: Re-using an available connection from the pool (formerly model.google_ads_source.stg_google_ads__ad_stats, now model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly)
[0m19:40:18.230000 [debug] [Thread-1  ]: Began compiling node model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly
[0m19:40:18.244028 [debug] [Thread-5  ]: Timing info for model.google_ads_source.stg_google_ads__ad_group_stats (execute): 19:40:11.344391 => 19:40:18.243553
[0m19:40:18.245927 [debug] [Thread-5  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1360ccf40>]}
[0m19:40:18.247558 [info ] [Thread-5  ]: 65 of 130 OK created sql table model marketing_full_v2_google_ads_source.stg_google_ads__ad_group_stats  [[32mCREATE TABLE (14.0k rows, 1.0 MiB processed)[0m in 9.07s]
[0m19:40:18.265250 [debug] [Thread-5  ]: Finished running node model.google_ads_source.stg_google_ads__ad_group_stats
[0m19:40:18.266592 [debug] [Thread-5  ]: Began running node model.tiktok_ads_source.stg_tiktok_ads__advertiser
[0m19:40:18.281844 [info ] [Thread-5  ]: 82 of 130 START sql table model marketing_full_v2_stg_tiktok_ads.stg_tiktok_ads__advertiser  [RUN]
[0m19:40:18.283980 [debug] [Thread-5  ]: Re-using an available connection from the pool (formerly model.google_ads_source.stg_google_ads__ad_group_stats, now model.tiktok_ads_source.stg_tiktok_ads__advertiser)
[0m19:40:18.285189 [debug] [Thread-5  ]: Began compiling node model.tiktok_ads_source.stg_tiktok_ads__advertiser
[0m19:40:18.305837 [debug] [Thread-1  ]: Opening a new connection, currently in state closed
[0m19:40:18.322433 [debug] [Thread-5  ]: Opening a new connection, currently in state closed
[0m19:40:18.461579 [debug] [Thread-15 ]: Writing injected SQL for node "model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly"
[0m19:40:18.469470 [debug] [Thread-15 ]: Timing info for model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly (compile): 19:40:15.167462 => 19:40:18.468911
[0m19:40:18.470508 [debug] [Thread-15 ]: Began executing node model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly
[0m19:40:18.481814 [debug] [Thread-15 ]: Writing runtime sql for node "model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly"
[0m19:40:18.484076 [debug] [Thread-15 ]: On model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__ad_group_report_hourly`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select *
    from `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__ad_group_report_hourly_tmp`
), 

fields as (

    select
        
    
    
    adgroup_id
    
 as 
    
    adgroup_id
    
, 
    
    
    average_video_play
    
 as 
    
    average_video_play
    
, 
    
    
    average_video_play_per_user
    
 as 
    
    average_video_play_per_user
    
, 
    
    
    clicks
    
 as 
    
    clicks
    
, 
    
    
    comments
    
 as 
    
    comments
    
, 
    
    
    conversion
    
 as 
    
    conversion
    
, 
    
    
    conversion_rate
    
 as 
    
    conversion_rate
    
, 
    
    
    cost_per_conversion
    
 as 
    
    cost_per_conversion
    
, 
    
    
    cpc
    
 as 
    
    cpc
    
, 
    
    
    cpm
    
 as 
    
    cpm
    
, 
    
    
    ctr
    
 as 
    
    ctr
    
, 
    
    
    follows
    
 as 
    
    follows
    
, 
    
    
    impressions
    
 as 
    
    impressions
    
, 
    
    
    likes
    
 as 
    
    likes
    
, 
    
    
    profile_visits
    
 as 
    
    profile_visits
    
, 
    
    
    reach
    
 as 
    
    reach
    
, 
    
    
    shares
    
 as 
    
    shares
    
, 
    
    
    spend
    
 as 
    
    spend
    
, 
    
    
    stat_time_hour
    
 as 
    
    stat_time_hour
    
, 
    
    
    video_play_actions
    
 as 
    
    video_play_actions
    
, 
    
    
    video_views_p_25
    
 as 
    
    video_views_p_25
    
, 
    
    
    video_views_p_50
    
 as 
    
    video_views_p_50
    
, 
    
    
    video_views_p_75
    
 as 
    
    video_views_p_75
    
, 
    
    
    video_watched_2_s
    
 as 
    
    video_watched_2_s
    
, 
    
    
    video_watched_6_s
    
 as 
    
    video_watched_6_s
    



    from base
), 

final as (

    select  
        adgroup_id as ad_group_id,
        cast(stat_time_hour as TIMESTAMP) as stat_time_hour, 
        cpc, 
        cpm, 
        ctr, 
        impressions, 
        clicks, 
        spend, 
        reach, 
        conversion, 
        cost_per_conversion, 
        conversion_rate, 
        likes, 
        comments, 
        shares, 
        profile_visits,
        follows, 
        video_play_actions, 
        video_watched_2_s, 
        video_watched_6_s, 
        video_views_p_25, 
        video_views_p_50,
        video_views_p_75,  
        average_video_play, 
        average_video_play_per_user

        





    from fields
) 

select *
from final
    );
  
[0m19:40:18.610588 [debug] [Thread-6  ]: Writing injected SQL for node "model.snapchat_ads_source.stg_snapchat_ads__ad_account_history"
[0m19:40:18.612867 [debug] [Thread-6  ]: Timing info for model.snapchat_ads_source.stg_snapchat_ads__ad_account_history (compile): 19:40:14.637887 => 19:40:18.612268
[0m19:40:18.614049 [debug] [Thread-6  ]: Began executing node model.snapchat_ads_source.stg_snapchat_ads__ad_account_history
[0m19:40:18.627271 [debug] [Thread-6  ]: Writing runtime sql for node "model.snapchat_ads_source.stg_snapchat_ads__ad_account_history"
[0m19:40:18.630294 [debug] [Thread-6  ]: On model.snapchat_ads_source.stg_snapchat_ads__ad_account_history: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.snapchat_ads_source.stg_snapchat_ads__ad_account_history"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__ad_account_history`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select * 
    from `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__ad_account_history_tmp`
),

fields as (

    select
        
    
    
    _fivetran_synced
    
 as 
    
    _fivetran_synced
    
, 
    
    
    advertiser
    
 as 
    
    advertiser
    
, 
    
    
    created_at
    
 as 
    
    created_at
    
, 
    
    
    currency
    
 as 
    
    currency
    
, 
    
    
    id
    
 as 
    
    id
    
, 
    
    
    name
    
 as 
    
    name
    
, 
    
    
    timezone
    
 as 
    
    timezone
    
, 
    
    
    type
    
 as 
    
    type
    
, 
    
    
    updated_at
    
 as 
    
    updated_at
    



    from base
),

final as (
    
    select 
        id as ad_account_id,
        name as ad_account_name,
        cast (created_at as TIMESTAMP) as created_at,
        advertiser, 
        currency,
        timezone,
        cast (_fivetran_synced as TIMESTAMP) as _fivetran_synced,
        cast (updated_at as TIMESTAMP) as updated_at,
        row_number() over (partition by id order by _fivetran_synced desc) = 1 as is_most_recent_record
    from fields
)

select * 
from final
    );
  
[0m19:40:18.780318 [debug] [Thread-8  ]: Writing injected SQL for node "model.tiktok_ads_source.stg_tiktok_ads__ad_group_history"
[0m19:40:18.782420 [debug] [Thread-8  ]: Timing info for model.tiktok_ads_source.stg_tiktok_ads__ad_group_history (compile): 19:40:16.351778 => 19:40:18.781819
[0m19:40:18.783532 [debug] [Thread-8  ]: Began executing node model.tiktok_ads_source.stg_tiktok_ads__ad_group_history
[0m19:40:18.795240 [debug] [Thread-8  ]: Writing runtime sql for node "model.tiktok_ads_source.stg_tiktok_ads__ad_group_history"
[0m19:40:18.799095 [debug] [Thread-8  ]: On model.tiktok_ads_source.stg_tiktok_ads__ad_group_history: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.tiktok_ads_source.stg_tiktok_ads__ad_group_history"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__ad_group_history`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select *
    from `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__ad_group_history_tmp`
), 

fields as (

    select
        
    
    
    action_days
    
 as 
    
    action_days
    
, 
    
    
    adgroup_id
    
 as 
    
    adgroup_id
    
, 
    
    
    adgroup_name
    
 as 
    
    adgroup_name
    
, 
    
    
    advertiser_id
    
 as 
    
    advertiser_id
    
, 
    
    
    audience_type
    
 as 
    
    audience_type
    
, 
    
    
    budget
    
 as 
    
    budget
    
, 
    
    
    campaign_id
    
 as 
    
    campaign_id
    
, 
    
    
    category
    
 as 
    
    category
    
, 
    
    
    display_name
    
 as 
    
    display_name
    
, 
    
    
    frequency
    
 as 
    
    frequency
    
, 
    
    
    frequency_schedule
    
 as 
    
    frequency_schedule
    
, 
    
    
    gender
    
 as 
    
    gender
    
, 
    
    
    landing_page_url
    
 as 
    
    landing_page_url
    
, 
    
    
    updated_at
    
 as 
    
    updated_at
    
, 
    
    
    interest_category_v_2
    
 as 
    
    interest_category_v_2
    
, 
    
    
    action_categories
    
 as 
    
    action_categories
    
, 
    cast(null as STRING) as 
    
    age
    
 , 
    
    
    age_groups
    
 as 
    
    age_groups
    
, 
    
    
    languages
    
 as 
    
    languages
    




    from base
), 

final as (

    select
        adgroup_id as ad_group_id,
        cast(updated_at as TIMESTAMP) as updated_at,
        advertiser_id,
        campaign_id,
        action_days,
        action_categories,
        adgroup_name as ad_group_name,
        coalesce(age_groups, age) as age_groups,
        audience_type,
        budget,
        category,
        display_name,
        interest_category_v_2 as interest_category,
        frequency,
        frequency_schedule,
        gender,
        languages, 
        landing_page_url,
        row_number() over (partition by adgroup_id order by updated_at desc) = 1 as is_most_recent_record
    from fields
)

select * 
from final
    );
  
[0m19:40:18.848155 [debug] [Thread-4  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:442b3673-92c7-45a6-ad20-485b7222e8fe&page=queryresults
[0m19:40:18.987236 [debug] [Thread-7  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:c5fc44c4-82e8-47a4-aacc-3cf22b3a1f41&page=queryresults
[0m19:40:18.989701 [debug] [Thread-10 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:544d3e50-42e0-4d2c-bff1-0ca20e07d570&page=queryresults
[0m19:40:18.992733 [debug] [Thread-9  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:97b6c52c-2be3-4185-8c42-f94bc9ec0012&page=queryresults
[0m19:40:18.995817 [debug] [Thread-3  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:562c4d83-23e5-4da9-9018-cdb7eeafea03&page=queryresults
[0m19:40:19.018252 [debug] [Thread-13 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:052b49b5-9217-4ec8-bddf-01cbb208eefc&page=queryresults
[0m19:40:19.356477 [debug] [Thread-12 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:13eecb45-f53c-47ca-b76a-e809622a334d&page=queryresults
[0m19:40:19.364132 [debug] [Thread-14 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:611dd5ed-f49f-420c-863d-391394f930f2&page=queryresults
[0m19:40:19.526335 [debug] [Thread-6  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:b933ace1-01b2-4767-91e9-f1bff5bf005c&page=queryresults
[0m19:40:19.698901 [debug] [Thread-8  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:4755d35f-f5b5-49f9-9578-3f20b97e1e6e&page=queryresults
[0m19:40:19.872865 [debug] [Thread-11 ]: Timing info for model.apple_search_ads_source.stg_apple_search_ads__campaign_history (execute): 19:40:10.757889 => 19:40:19.872344
[0m19:40:19.874891 [debug] [Thread-11 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd137250340>]}
[0m19:40:19.876572 [info ] [Thread-11 ]: 56 of 130 OK created sql table model marketing_full_v2_apple_search_ads_source.stg_apple_search_ads__campaign_history  [[32mCREATE TABLE (16.0 rows, 1.5 KiB processed)[0m in 13.34s]
[0m19:40:19.878662 [debug] [Thread-11 ]: Finished running node model.apple_search_ads_source.stg_apple_search_ads__campaign_history
[0m19:40:19.879817 [debug] [Thread-11 ]: Began running node model.tiktok_ads_source.stg_tiktok_ads__ad_history
[0m19:40:19.881430 [info ] [Thread-11 ]: 83 of 130 START sql table model marketing_full_v2_stg_tiktok_ads.stg_tiktok_ads__ad_history  [RUN]
[0m19:40:19.883323 [debug] [Thread-11 ]: Re-using an available connection from the pool (formerly model.apple_search_ads_source.stg_apple_search_ads__campaign_history, now model.tiktok_ads_source.stg_tiktok_ads__ad_history)
[0m19:40:19.884101 [debug] [Thread-11 ]: Began compiling node model.tiktok_ads_source.stg_tiktok_ads__ad_history
[0m19:40:19.899885 [debug] [Thread-11 ]: Opening a new connection, currently in state closed
[0m19:40:19.987065 [debug] [Thread-15 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:e3a1f28f-361d-4fd3-8a3c-33476370ae08&page=queryresults
[0m19:40:20.750714 [debug] [Thread-1  ]: Writing injected SQL for node "model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly"
[0m19:40:20.753911 [debug] [Thread-1  ]: Timing info for model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly (compile): 19:40:18.231953 => 19:40:20.753241
[0m19:40:20.755158 [debug] [Thread-1  ]: Began executing node model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly
[0m19:40:20.775702 [debug] [Thread-1  ]: Writing runtime sql for node "model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly"
[0m19:40:20.778068 [debug] [Thread-1  ]: On model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__ad_report_hourly`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select *
    from `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__ad_report_hourly_tmp`
), 

fields as (

    select
        
    
    
    ad_id
    
 as 
    
    ad_id
    
, 
    
    
    average_video_play
    
 as 
    
    average_video_play
    
, 
    
    
    average_video_play_per_user
    
 as 
    
    average_video_play_per_user
    
, 
    
    
    clicks
    
 as 
    
    clicks
    
, 
    
    
    comments
    
 as 
    
    comments
    
, 
    
    
    conversion
    
 as 
    
    conversion
    
, 
    
    
    conversion_rate
    
 as 
    
    conversion_rate
    
, 
    
    
    cost_per_conversion
    
 as 
    
    cost_per_conversion
    
, 
    
    
    cpc
    
 as 
    
    cpc
    
, 
    
    
    cpm
    
 as 
    
    cpm
    
, 
    
    
    ctr
    
 as 
    
    ctr
    
, 
    
    
    follows
    
 as 
    
    follows
    
, 
    
    
    impressions
    
 as 
    
    impressions
    
, 
    
    
    likes
    
 as 
    
    likes
    
, 
    
    
    profile_visits
    
 as 
    
    profile_visits
    
, 
    
    
    reach
    
 as 
    
    reach
    
, 
    
    
    shares
    
 as 
    
    shares
    
, 
    
    
    spend
    
 as 
    
    spend
    
, 
    
    
    stat_time_hour
    
 as 
    
    stat_time_hour
    
, 
    
    
    video_play_actions
    
 as 
    
    video_play_actions
    
, 
    
    
    video_views_p_25
    
 as 
    
    video_views_p_25
    
, 
    
    
    video_views_p_50
    
 as 
    
    video_views_p_50
    
, 
    
    
    video_views_p_75
    
 as 
    
    video_views_p_75
    
, 
    
    
    video_watched_2_s
    
 as 
    
    video_watched_2_s
    
, 
    
    
    video_watched_6_s
    
 as 
    
    video_watched_6_s
    



    from base
), 

final as (

    select  
        ad_id, 
        cast(stat_time_hour as TIMESTAMP) as stat_time_hour, 
        cpc, 
        cpm, 
        ctr, 
        impressions, 
        clicks, 
        spend, 
        reach, 
        conversion, 
        cost_per_conversion, 
        conversion_rate, 
        likes, 
        comments, 
        shares, 
        profile_visits,
        follows, 
        video_play_actions, 
        video_watched_2_s, 
        video_watched_6_s, 
        video_views_p_25, 
        video_views_p_50,
        video_views_p_75,  
        average_video_play, 
        average_video_play_per_user

        




    from fields
)

select * 
from final
    );
  
[0m19:40:21.023058 [debug] [Thread-5  ]: Writing injected SQL for node "model.tiktok_ads_source.stg_tiktok_ads__advertiser"
[0m19:40:21.031217 [debug] [Thread-5  ]: Timing info for model.tiktok_ads_source.stg_tiktok_ads__advertiser (compile): 19:40:18.286577 => 19:40:21.030610
[0m19:40:21.032996 [debug] [Thread-5  ]: Began executing node model.tiktok_ads_source.stg_tiktok_ads__advertiser
[0m19:40:21.045883 [debug] [Thread-5  ]: Writing runtime sql for node "model.tiktok_ads_source.stg_tiktok_ads__advertiser"
[0m19:40:21.048504 [debug] [Thread-5  ]: On model.tiktok_ads_source.stg_tiktok_ads__advertiser: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.tiktok_ads_source.stg_tiktok_ads__advertiser"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__advertiser`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select *
    from `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__advertiser_tmp`
), 

fields as (

    select
        
    
    
    address
    
 as 
    
    address
    
, 
    
    
    balance
    
 as 
    
    balance
    
, 
    
    
    cellphone_number
    
 as 
    
    cellphone_number
    
, 
    
    
    company
    
 as 
    
    company
    
, 
    
    
    contacter
    
 as 
    
    contacter
    
, 
    
    
    country
    
 as 
    
    country
    
, 
    
    
    currency
    
 as 
    
    currency
    
, 
    
    
    description
    
 as 
    
    description
    
, 
    
    
    email
    
 as 
    
    email
    
, 
    
    
    id
    
 as 
    
    id
    
, 
    
    
    industry
    
 as 
    
    industry
    
, 
    
    
    language
    
 as 
    
    language
    
, 
    
    
    name
    
 as 
    
    name
    
, 
    cast(null as STRING) as 
    
    phone_number
    
 , 
    cast(null as STRING) as 
    
    telephone
    
 , 
    
    
    telephone_number
    
 as 
    
    telephone_number
    
, 
    
    
    timezone
    
 as 
    
    timezone
    




    from base
),

final as (

    select   
        id as advertiser_id, 
        address, 
        balance, 
        company, 
        contacter, 
        country, 
        currency, 
        description, 
        email, 
        industry, 
        language,
        name as advertiser_name, 
        coalesce(cellphone_number, phone_number) as cellphone_number, 
        coalesce(telephone_number, telephone) as telephone_number,
        timezone
    from fields
)

select *
from final
    );
  
[0m19:40:21.121889 [debug] [Thread-4  ]: Timing info for model.snapchat_ads_source.stg_snapchat_ads__ad_history (execute): 19:40:17.874450 => 19:40:21.121420
[0m19:40:21.125458 [debug] [Thread-4  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13c2e1c10>]}
[0m19:40:21.127069 [info ] [Thread-4  ]: 74 of 130 OK created sql table model marketing_full_v2_snapchat_ads_source.stg_snapchat_ads__ad_history  [[32mCREATE TABLE (853.0 rows, 139.4 KiB processed)[0m in 6.55s]
[0m19:40:21.128226 [debug] [Thread-4  ]: Finished running node model.snapchat_ads_source.stg_snapchat_ads__ad_history
[0m19:40:21.129890 [debug] [Thread-4  ]: Began running node model.tiktok_ads_source.stg_tiktok_ads__campaign_history
[0m19:40:21.131023 [info ] [Thread-4  ]: 84 of 130 START sql table model marketing_full_v2_stg_tiktok_ads.stg_tiktok_ads__campaign_history  [RUN]
[0m19:40:21.132194 [debug] [Thread-4  ]: Re-using an available connection from the pool (formerly model.snapchat_ads_source.stg_snapchat_ads__ad_history, now model.tiktok_ads_source.stg_tiktok_ads__campaign_history)
[0m19:40:21.138399 [debug] [Thread-4  ]: Began compiling node model.tiktok_ads_source.stg_tiktok_ads__campaign_history
[0m19:40:21.154424 [debug] [Thread-4  ]: Opening a new connection, currently in state closed
[0m19:40:21.538521 [debug] [Thread-7  ]: Timing info for model.google_ads_source.stg_google_ads__campaign_stats (execute): 19:40:18.056228 => 19:40:21.537970
[0m19:40:21.540598 [debug] [Thread-7  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13c5ddca0>]}
[0m19:40:21.542271 [info ] [Thread-7  ]: 77 of 130 OK created sql table model marketing_full_v2_google_ads_source.stg_google_ads__campaign_stats  [[32mCREATE TABLE (11.1k rows, 736.9 KiB processed)[0m in 6.86s]
[0m19:40:21.544446 [debug] [Thread-7  ]: Finished running node model.google_ads_source.stg_google_ads__campaign_stats
[0m19:40:21.546193 [debug] [Thread-7  ]: Began running node model.twitter_ads_source.stg_twitter_ads__line_item_history
[0m19:40:21.547885 [info ] [Thread-7  ]: 85 of 130 START sql table model marketing_full_v2_twitter_ads_source.stg_twitter_ads__line_item_history  [RUN]
[0m19:40:21.549813 [debug] [Thread-7  ]: Re-using an available connection from the pool (formerly model.google_ads_source.stg_google_ads__campaign_stats, now model.twitter_ads_source.stg_twitter_ads__line_item_history)
[0m19:40:21.550672 [debug] [Thread-7  ]: Began compiling node model.twitter_ads_source.stg_twitter_ads__line_item_history
[0m19:40:21.565964 [debug] [Thread-7  ]: Opening a new connection, currently in state closed
[0m19:40:21.570107 [debug] [Thread-1  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:85574d91-fc43-4754-90aa-8d0a7eef4816&page=queryresults
[0m19:40:21.634196 [debug] [Thread-13 ]: Timing info for model.snapchat_ads_source.stg_snapchat_ads__creative_history (execute): 19:40:17.801954 => 19:40:21.633417
[0m19:40:21.636273 [debug] [Thread-13 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd135d686a0>]}
[0m19:40:21.637888 [info ] [Thread-13 ]: 76 of 130 OK created sql table model marketing_full_v2_snapchat_ads_source.stg_snapchat_ads__creative_history  [[32mCREATE TABLE (1.7k rows, 222.8 KiB processed)[0m in 6.98s]
[0m19:40:21.639782 [debug] [Thread-13 ]: Finished running node model.snapchat_ads_source.stg_snapchat_ads__creative_history
[0m19:40:21.641222 [debug] [Thread-13 ]: Began running node model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report
[0m19:40:21.642660 [info ] [Thread-13 ]: 86 of 130 SKIP relation marketing_full_v2_twitter_ads_source.stg_twitter_ads__line_item_keywords_report  [[33mSKIP[0m]
[0m19:40:21.644932 [debug] [Thread-13 ]: Finished running node model.twitter_ads_source.stg_twitter_ads__line_item_keywords_report
[0m19:40:21.645879 [debug] [Thread-13 ]: Began running node model.twitter_ads_source.stg_twitter_ads__campaign_report
[0m19:40:21.646825 [info ] [Thread-13 ]: 87 of 130 START sql table model marketing_full_v2_twitter_ads_source.stg_twitter_ads__campaign_report  [RUN]
[0m19:40:21.648599 [debug] [Thread-13 ]: Re-using an available connection from the pool (formerly model.snapchat_ads_source.stg_snapchat_ads__creative_history, now model.twitter_ads_source.stg_twitter_ads__campaign_report)
[0m19:40:21.661950 [debug] [Thread-13 ]: Began compiling node model.twitter_ads_source.stg_twitter_ads__campaign_report
[0m19:40:21.687739 [debug] [Thread-13 ]: Opening a new connection, currently in state closed
[0m19:40:21.801024 [debug] [Thread-11 ]: Writing injected SQL for node "model.tiktok_ads_source.stg_tiktok_ads__ad_history"
[0m19:40:21.803692 [debug] [Thread-11 ]: Timing info for model.tiktok_ads_source.stg_tiktok_ads__ad_history (compile): 19:40:19.884555 => 19:40:21.803107
[0m19:40:21.804778 [debug] [Thread-11 ]: Began executing node model.tiktok_ads_source.stg_tiktok_ads__ad_history
[0m19:40:21.819786 [debug] [Thread-11 ]: Writing runtime sql for node "model.tiktok_ads_source.stg_tiktok_ads__ad_history"
[0m19:40:21.822474 [debug] [Thread-11 ]: On model.tiktok_ads_source.stg_tiktok_ads__ad_history: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.tiktok_ads_source.stg_tiktok_ads__ad_history"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__ad_history`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select *
    from `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__ad_history_tmp`
), 

fields as (

    select
        
    
    
    ad_id
    
 as 
    
    ad_id
    
, 
    
    
    ad_name
    
 as 
    
    ad_name
    
, 
    
    
    adgroup_id
    
 as 
    
    adgroup_id
    
, 
    
    
    advertiser_id
    
 as 
    
    advertiser_id
    
, 
    
    
    call_to_action
    
 as 
    
    call_to_action
    
, 
    
    
    campaign_id
    
 as 
    
    campaign_id
    
, 
    
    
    click_tracking_url
    
 as 
    
    click_tracking_url
    
, 
    
    
    impression_tracking_url
    
 as 
    
    impression_tracking_url
    
, 
    
    
    landing_page_url
    
 as 
    
    landing_page_url
    
, 
    
    
    updated_at
    
 as 
    
    updated_at
    




    from base
), 

final as (

    select  
        ad_id,
        cast(updated_at as TIMESTAMP) as updated_at,
        adgroup_id as ad_group_id,
        advertiser_id,
        campaign_id,
        ad_name,
        call_to_action,
        click_tracking_url,
        impression_tracking_url,
        

  
    split(
        landing_page_url,
        '?'
        )[safe_offset(0)]
  

 as base_url,
        
    safe_cast(

  
    split(
        

  
    split(
        

    replace(
        

    replace(
        

    replace(
        landing_page_url,
        'android-app://',
        ''
    )


,
        'http://',
        ''
    )


,
        'https://',
        ''
    )


,
        '/'
        )[safe_offset(0)]
  

,
        '?'
        )[safe_offset(0)]
  

 as STRING)
 as url_host,
        '/' || 
    safe_cast(

  
    split(
        

    case when 

    length(
        

    replace(
        

    replace(
        landing_page_url,
        'http://',
        ''
    )


,
        'https://',
        ''
    )



    )-coalesce(
            nullif(

    strpos(
        

    replace(
        

    replace(
        landing_page_url,
        'http://',
        ''
    )


,
        'https://',
        ''
    )


,
        '/'

    ), 0),
            

    strpos(
        

    replace(
        

    replace(
        landing_page_url,
        'http://',
        ''
    )


,
        'https://',
        ''
    )


,
        '?'

    ) - 1
            ) = 0
        then ''
    else
        substr(
            

    replace(
        

    replace(
        landing_page_url,
        'http://',
        ''
    )


,
        'https://',
        ''
    )


,
            -1 * (

    length(
        

    replace(
        

    replace(
        landing_page_url,
        'http://',
        ''
    )


,
        'https://',
        ''
    )



    )-coalesce(
            nullif(

    strpos(
        

    replace(
        

    replace(
        landing_page_url,
        'http://',
        ''
    )


,
        'https://',
        ''
    )


,
        '/'

    ), 0),
            

    strpos(
        

    replace(
        

    replace(
        landing_page_url,
        'http://',
        ''
    )


,
        'https://',
        ''
    )


,
        '?'

    ) - 1
            ))
        )
    end,
        '?'
        )[safe_offset(0)]
  

 as STRING)
 as url_path,
        nullif(

  
    split(
        

  
    split(
        landing_page_url,
        'utm_source='
        )[safe_offset(1)]
  

,
        '&'
        )[safe_offset(0)]
  

,'') as utm_source,
        nullif(

  
    split(
        

  
    split(
        landing_page_url,
        'utm_medium='
        )[safe_offset(1)]
  

,
        '&'
        )[safe_offset(0)]
  

,'') as utm_medium,
        nullif(

  
    split(
        

  
    split(
        landing_page_url,
        'utm_campaign='
        )[safe_offset(1)]
  

,
        '&'
        )[safe_offset(0)]
  

,'') as utm_campaign,
        nullif(

  
    split(
        

  
    split(
        landing_page_url,
        'utm_content='
        )[safe_offset(1)]
  

,
        '&'
        )[safe_offset(0)]
  

,'') as utm_content,
        nullif(

  
    split(
        

  
    split(
        landing_page_url,
        'utm_term='
        )[safe_offset(1)]
  

,
        '&'
        )[safe_offset(0)]
  

,'') as utm_term,
        landing_page_url,
        row_number() over (partition by ad_id order by updated_at desc) = 1 as is_most_recent_record
    from fields
)

select * 
from final
    );
  
[0m19:40:21.904140 [debug] [Thread-12 ]: Timing info for model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history (execute): 19:40:18.011001 => 19:40:21.903593
[0m19:40:21.906166 [debug] [Thread-12 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13c543e20>]}
[0m19:40:21.907836 [info ] [Thread-12 ]: 73 of 130 OK created sql table model marketing_full_v2_snapchat_ads_source.stg_snapchat_ads__ad_squad_history  [[32mCREATE TABLE (260.0 rows, 37.9 KiB processed)[0m in 7.30s]
[0m19:40:21.910021 [debug] [Thread-12 ]: Finished running node model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history
[0m19:40:21.911371 [debug] [Thread-12 ]: Began running node model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly
[0m19:40:21.912877 [info ] [Thread-12 ]: 88 of 130 START sql table model marketing_full_v2_stg_tiktok_ads.stg_tiktok_ads__campaign_report_hourly  [RUN]
[0m19:40:21.915890 [debug] [Thread-12 ]: Re-using an available connection from the pool (formerly model.snapchat_ads_source.stg_snapchat_ads__ad_squad_history, now model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly)
[0m19:40:21.917101 [debug] [Thread-12 ]: Began compiling node model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly
[0m19:40:21.944524 [debug] [Thread-12 ]: Opening a new connection, currently in state closed
[0m19:40:21.949081 [debug] [Thread-5  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:7bd5e3e9-0931-4090-bfb7-1dbdf8bd7995&page=queryresults
[0m19:40:22.134300 [debug] [Thread-14 ]: Timing info for model.snapchat_ads_source.stg_snapchat_ads__campaign_history (execute): 19:40:17.840711 => 19:40:22.133813
[0m19:40:22.138742 [debug] [Thread-6  ]: Timing info for model.snapchat_ads_source.stg_snapchat_ads__ad_account_history (execute): 19:40:18.614872 => 19:40:22.138205
[0m19:40:22.140676 [debug] [Thread-14 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1375346a0>]}
[0m19:40:22.142634 [debug] [Thread-6  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd135738fa0>]}
[0m19:40:22.145150 [info ] [Thread-6  ]: 70 of 130 OK created sql table model marketing_full_v2_snapchat_ads_source.stg_snapchat_ads__ad_account_history  [[32mCREATE TABLE (9.0 rows, 966.0 Bytes processed)[0m in 7.57s]
[0m19:40:22.146979 [info ] [Thread-14 ]: 72 of 130 OK created sql table model marketing_full_v2_snapchat_ads_source.stg_snapchat_ads__campaign_history  [[32mCREATE TABLE (115.0 rows, 16.9 KiB processed)[0m in 7.59s]
[0m19:40:22.148790 [debug] [Thread-6  ]: Finished running node model.snapchat_ads_source.stg_snapchat_ads__ad_account_history
[0m19:40:22.150648 [debug] [Thread-14 ]: Finished running node model.snapchat_ads_source.stg_snapchat_ads__campaign_history
[0m19:40:22.151993 [debug] [Thread-6  ]: Began running node model.twitter_ads_source.stg_twitter_ads__line_item_report
[0m19:40:22.154735 [info ] [Thread-6  ]: 89 of 130 START sql table model marketing_full_v2_twitter_ads_source.stg_twitter_ads__line_item_report  [RUN]
[0m19:40:22.153431 [debug] [Thread-14 ]: Began running node model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history
[0m19:40:22.163505 [info ] [Thread-14 ]: 90 of 130 START sql table model marketing_full_v2_twitter_ads_source.stg_twitter_ads__promoted_tweet_history  [RUN]
[0m19:40:22.165304 [debug] [Thread-14 ]: Re-using an available connection from the pool (formerly model.snapchat_ads_source.stg_snapchat_ads__campaign_history, now model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history)
[0m19:40:22.166403 [debug] [Thread-14 ]: Began compiling node model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history
[0m19:40:22.156008 [debug] [Thread-6  ]: Re-using an available connection from the pool (formerly model.snapchat_ads_source.stg_snapchat_ads__ad_account_history, now model.twitter_ads_source.stg_twitter_ads__line_item_report)
[0m19:40:22.244966 [debug] [Thread-9  ]: Timing info for model.google_ads_source.stg_google_ads__keyword_stats (execute): 19:40:18.019205 => 19:40:22.244636
[0m19:40:22.247949 [debug] [Thread-6  ]: Began compiling node model.twitter_ads_source.stg_twitter_ads__line_item_report
[0m19:40:22.250271 [debug] [Thread-9  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd135963250>]}
[0m19:40:22.278782 [debug] [Thread-6  ]: Opening a new connection, currently in state closed
[0m19:40:22.274953 [info ] [Thread-9  ]: 71 of 130 OK created sql table model marketing_full_v2_google_ads_source.stg_google_ads__keyword_stats  [[32mCREATE TABLE (45.9k rows, 4.1 MiB processed)[0m in 7.67s]
[0m19:40:22.288948 [debug] [Thread-9  ]: Finished running node model.google_ads_source.stg_google_ads__keyword_stats
[0m19:40:22.290617 [debug] [Thread-9  ]: Began running node model.twitter_ads_source.stg_twitter_ads__tweet
[0m19:40:22.294311 [info ] [Thread-9  ]: 91 of 130 START sql table model marketing_full_v2_twitter_ads_source.stg_twitter_ads__tweet  [RUN]
[0m19:40:22.296042 [debug] [Thread-9  ]: Re-using an available connection from the pool (formerly model.google_ads_source.stg_google_ads__keyword_stats, now model.twitter_ads_source.stg_twitter_ads__tweet)
[0m19:40:22.284312 [debug] [Thread-14 ]: Opening a new connection, currently in state closed
[0m19:40:22.297338 [debug] [Thread-9  ]: Began compiling node model.twitter_ads_source.stg_twitter_ads__tweet
[0m19:40:22.323223 [debug] [Thread-9  ]: Opening a new connection, currently in state closed
[0m19:40:22.527056 [debug] [Thread-2  ]: Timing info for model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report (execute): 19:40:16.991433 => 19:40:22.526591
[0m19:40:22.528880 [debug] [Thread-2  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1324921f0>]}
[0m19:40:22.530958 [info ] [Thread-2  ]: 68 of 130 OK created sql table model marketing_full_v2_snapchat_ads_source.stg_snapchat_ads__ad_hourly_report  [[32mCREATE TABLE (365.4k rows, 63.3 MiB processed)[0m in 8.06s]
[0m19:40:22.532627 [debug] [Thread-2  ]: Finished running node model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report
[0m19:40:22.533822 [debug] [Thread-2  ]: Began running node model.twitter_ads_source.stg_twitter_ads__account_history
[0m19:40:22.538530 [debug] [Thread-11 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:0b370906-b6c7-4918-b896-3fea7857c0d0&page=queryresults
[0m19:40:22.536402 [info ] [Thread-2  ]: 92 of 130 START sql table model marketing_full_v2_twitter_ads_source.stg_twitter_ads__account_history  [RUN]
[0m19:40:22.541705 [debug] [Thread-2  ]: Re-using an available connection from the pool (formerly model.snapchat_ads_source.stg_snapchat_ads__ad_hourly_report, now model.twitter_ads_source.stg_twitter_ads__account_history)
[0m19:40:22.543820 [debug] [Thread-2  ]: Began compiling node model.twitter_ads_source.stg_twitter_ads__account_history
[0m19:40:22.560468 [debug] [Thread-2  ]: Opening a new connection, currently in state closed
[0m19:40:23.012417 [debug] [Thread-8  ]: Timing info for model.tiktok_ads_source.stg_tiktok_ads__ad_group_history (execute): 19:40:18.784307 => 19:40:23.011918
[0m19:40:23.018008 [debug] [Thread-15 ]: Timing info for model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly (execute): 19:40:18.471213 => 19:40:23.017525
[0m19:40:23.020178 [debug] [Thread-8  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd135616670>]}
[0m19:40:23.022169 [debug] [Thread-15 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1363bf280>]}
[0m19:40:23.024496 [info ] [Thread-8  ]: 80 of 130 OK created sql table model marketing_full_v2_stg_tiktok_ads.stg_tiktok_ads__ad_group_history  [[32mCREATE TABLE (118.0 rows, 18.8 KiB processed)[0m in 6.67s]
[0m19:40:23.026143 [info ] [Thread-15 ]: 79 of 130 OK created sql table model marketing_full_v2_stg_tiktok_ads.stg_tiktok_ads__ad_group_report_hourly  [[32mCREATE TABLE (61.3k rows, 11.7 MiB processed)[0m in 7.86s]
[0m19:40:23.027759 [debug] [Thread-8  ]: Finished running node model.tiktok_ads_source.stg_tiktok_ads__ad_group_history
[0m19:40:23.029327 [debug] [Thread-15 ]: Finished running node model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly
[0m19:40:23.030777 [debug] [Thread-8  ]: Began running node model.twitter_ads_source.stg_twitter_ads__campaign_history
[0m19:40:23.032068 [debug] [Thread-15 ]: Began running node model.twitter_ads_source.stg_twitter_ads__tweet_url
[0m19:40:23.033204 [info ] [Thread-8  ]: 93 of 130 START sql table model marketing_full_v2_twitter_ads_source.stg_twitter_ads__campaign_history  [RUN]
[0m19:40:23.034749 [info ] [Thread-15 ]: 94 of 130 START sql table model marketing_full_v2_twitter_ads_source.stg_twitter_ads__tweet_url  [RUN]
[0m19:40:23.036342 [debug] [Thread-8  ]: Re-using an available connection from the pool (formerly model.tiktok_ads_source.stg_tiktok_ads__ad_group_history, now model.twitter_ads_source.stg_twitter_ads__campaign_history)
[0m19:40:23.038077 [debug] [Thread-15 ]: Re-using an available connection from the pool (formerly model.tiktok_ads_source.stg_tiktok_ads__ad_group_report_hourly, now model.twitter_ads_source.stg_twitter_ads__tweet_url)
[0m19:40:23.039787 [debug] [Thread-8  ]: Began compiling node model.twitter_ads_source.stg_twitter_ads__campaign_history
[0m19:40:23.040809 [debug] [Thread-15 ]: Began compiling node model.twitter_ads_source.stg_twitter_ads__tweet_url
[0m19:40:23.054286 [debug] [Thread-8  ]: Opening a new connection, currently in state closed
[0m19:40:23.078713 [debug] [Thread-15 ]: Opening a new connection, currently in state closed
[0m19:40:23.444696 [debug] [Thread-4  ]: Writing injected SQL for node "model.tiktok_ads_source.stg_tiktok_ads__campaign_history"
[0m19:40:23.446822 [debug] [Thread-4  ]: Timing info for model.tiktok_ads_source.stg_tiktok_ads__campaign_history (compile): 19:40:21.139628 => 19:40:23.446210
[0m19:40:23.448019 [debug] [Thread-4  ]: Began executing node model.tiktok_ads_source.stg_tiktok_ads__campaign_history
[0m19:40:23.460635 [debug] [Thread-4  ]: Writing runtime sql for node "model.tiktok_ads_source.stg_tiktok_ads__campaign_history"
[0m19:40:23.462480 [debug] [Thread-4  ]: On model.tiktok_ads_source.stg_tiktok_ads__campaign_history: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.tiktok_ads_source.stg_tiktok_ads__campaign_history"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__campaign_history`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select *
    from `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__campaign_history_tmp`
), 

fields as (

    select
        
    
    
    advertiser_id
    
 as 
    
    advertiser_id
    
, 
    
    
    campaign_id
    
 as 
    
    campaign_id
    
, 
    
    
    campaign_name
    
 as 
    
    campaign_name
    
, 
    
    
    campaign_type
    
 as 
    
    campaign_type
    
, 
    
    
    split_test_variable
    
 as 
    
    split_test_variable
    
, 
    
    
    updated_at
    
 as 
    
    updated_at
    



    from base
), 

final as (

    select   
        campaign_id,
        cast(updated_at as TIMESTAMP) as updated_at,
        advertiser_id,
        campaign_name,
        campaign_type,
        split_test_variable,
        row_number() over (partition by campaign_id order by updated_at desc) = 1 as is_most_recent_record
    from fields
)

select *
from final
    );
  
[0m19:40:23.797749 [debug] [Thread-3  ]: Timing info for model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report (execute): 19:40:18.026879 => 19:40:23.797249
[0m19:40:23.799685 [debug] [Thread-3  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd135777610>]}
[0m19:40:23.801337 [info ] [Thread-3  ]: 69 of 130 OK created sql table model marketing_full_v2_snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report  [[32mCREATE TABLE (140.2k rows, 24.3 MiB processed)[0m in 9.24s]
[0m19:40:23.804814 [debug] [Thread-3  ]: Finished running node model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report
[0m19:40:23.812120 [debug] [Thread-3  ]: Began running node model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report
[0m19:40:23.816789 [info ] [Thread-3  ]: 95 of 130 START sql table model marketing_full_v2_twitter_ads_source.stg_twitter_ads__promoted_tweet_report  [RUN]
[0m19:40:23.821008 [debug] [Thread-3  ]: Re-using an available connection from the pool (formerly model.snapchat_ads_source.stg_snapchat_ads__ad_squad_hourly_report, now model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report)
[0m19:40:23.825472 [debug] [Thread-3  ]: Began compiling node model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report
[0m19:40:23.847691 [debug] [Thread-3  ]: Opening a new connection, currently in state closed
[0m19:40:23.935434 [debug] [Thread-7  ]: Writing injected SQL for node "model.twitter_ads_source.stg_twitter_ads__line_item_history"
[0m19:40:23.955269 [debug] [Thread-13 ]: Writing injected SQL for node "model.twitter_ads_source.stg_twitter_ads__campaign_report"
[0m19:40:23.956738 [debug] [Thread-7  ]: Timing info for model.twitter_ads_source.stg_twitter_ads__line_item_history (compile): 19:40:21.551168 => 19:40:23.956176
[0m19:40:23.957832 [debug] [Thread-7  ]: Began executing node model.twitter_ads_source.stg_twitter_ads__line_item_history
[0m19:40:23.959092 [debug] [Thread-13 ]: Timing info for model.twitter_ads_source.stg_twitter_ads__campaign_report (compile): 19:40:21.668851 => 19:40:23.958566
[0m19:40:23.970696 [debug] [Thread-7  ]: Writing runtime sql for node "model.twitter_ads_source.stg_twitter_ads__line_item_history"
[0m19:40:23.972406 [debug] [Thread-13 ]: Began executing node model.twitter_ads_source.stg_twitter_ads__campaign_report
[0m19:40:23.983585 [debug] [Thread-13 ]: Writing runtime sql for node "model.twitter_ads_source.stg_twitter_ads__campaign_report"
[0m19:40:23.985009 [debug] [Thread-7  ]: On model.twitter_ads_source.stg_twitter_ads__line_item_history: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.twitter_ads_source.stg_twitter_ads__line_item_history"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__line_item_history`
      
    
    

    OPTIONS()
    as (
      

with source as (

    select *
    from `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__line_item_history_tmp`

),

fields as (

    select
    
        
    
    
    advertiser_domain
    
 as 
    
    advertiser_domain
    
, 
    
    
    advertiser_user_id
    
 as 
    
    advertiser_user_id
    
, 
    cast(null as boolean) as 
    
    automatically_select_bid
    
 , 
    
    
    bid_amount_local_micro
    
 as 
    
    bid_amount_local_micro
    
, 
    cast(null as STRING) as 
    
    bid_type
    
 , 
    
    
    bid_unit
    
 as 
    
    bid_unit
    
, 
    
    
    campaign_id
    
 as 
    
    campaign_id
    
, 
    
    
    charge_by
    
 as 
    
    charge_by
    
, 
    
    
    created_at
    
 as 
    
    created_at
    
, 
    
    
    creative_source
    
 as 
    
    creative_source
    
, 
    
    
    currency
    
 as 
    
    currency
    
, 
    
    
    deleted
    
 as 
    
    deleted
    
, 
    
    
    end_time
    
 as 
    
    end_time
    
, 
    
    
    entity_status
    
 as 
    
    entity_status
    
, 
    
    
    id
    
 as 
    
    id
    
, 
    
    
    name
    
 as 
    
    name
    
, 
    
    
    objective
    
 as 
    
    objective
    
, 
    
    
    optimization
    
 as 
    
    optimization
    
, 
    
    
    primary_web_event_tag
    
 as 
    
    primary_web_event_tag
    
, 
    
    
    product_type
    
 as 
    
    product_type
    
, 
    
    
    start_time
    
 as 
    
    start_time
    
, 
    
    
    target_cpa_local_micro
    
 as 
    
    target_cpa_local_micro
    
, 
    
    
    total_budget_amount_local_micro
    
 as 
    
    total_budget_amount_local_micro
    
, 
    
    
    updated_at
    
 as 
    
    updated_at
    




    from source

), 

final as (

    select
        advertiser_domain,
        advertiser_user_id,
        automatically_select_bid,
        bid_amount_local_micro,
        bid_type,
        bid_unit,
        campaign_id,
        charge_by,
        created_at as created_timestamp,
        creative_source,
        currency,
        deleted as is_deleted,
        end_time as end_timestamp,
        entity_status,
        id as line_item_id,
        name,
        objective,
        optimization,
        primary_web_event_tag,
        product_type,
        start_time as start_timestamp,
        target_cpa_local_micro,
        total_budget_amount_local_micro,
        updated_at as updated_timestamp,
        round(bid_amount_local_micro / 1000000.0,2) as bid_amount,
        round(total_budget_amount_local_micro / 1000000.0,2) as total_budget_amount,
        round(target_cpa_local_micro / 1000000.0,2) as target_cpa,
        row_number() over (partition by id order by updated_at desc) = 1 as is_latest_version
    
    from fields 
)

select * from final
    );
  
[0m19:40:23.989850 [debug] [Thread-13 ]: On model.twitter_ads_source.stg_twitter_ads__campaign_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.twitter_ads_source.stg_twitter_ads__campaign_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__campaign_report`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select * 
    from `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__campaign_report_tmp`
),

fields as (

    select
        
    
    
    account_id
    
 as 
    
    account_id
    
, 
    
    
    billed_charge_local_micro
    
 as 
    
    billed_charge_local_micro
    
, 
    
    
    campaign_id
    
 as 
    
    campaign_id
    
, 
    
    
    clicks
    
 as 
    
    clicks
    
, 
    
    
    date
    
 as 
    
    date
    
, 
    
    
    impressions
    
 as 
    
    impressions
    
, 
    
    
    placement
    
 as 
    
    placement
    
, 
    
    
    url_clicks
    
 as 
    
    url_clicks
    



    from base
),

final as (
    
    select 
        timestamp_trunc(
        cast(date as timestamp),
        day
    ) as date_day,
        account_id,
        campaign_id,
        placement,
        clicks,
        impressions,
        billed_charge_local_micro as spend_micro,
        round(billed_charge_local_micro / 1000000.0,2) as spend,
        url_clicks

        




    
    from fields
)

select *
from final
    );
  
[0m19:40:24.274760 [debug] [Thread-12 ]: Writing injected SQL for node "model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly"
[0m19:40:24.277322 [debug] [Thread-4  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:349803c4-6367-46a6-a039-0e4a8dad713d&page=queryresults
[0m19:40:24.281572 [debug] [Thread-12 ]: Timing info for model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly (compile): 19:40:21.917958 => 19:40:24.280791
[0m19:40:24.284189 [debug] [Thread-12 ]: Began executing node model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly
[0m19:40:24.297717 [debug] [Thread-12 ]: Writing runtime sql for node "model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly"
[0m19:40:24.300028 [debug] [Thread-12 ]: On model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__campaign_report_hourly`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select *
    from `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__campaign_report_hourly_tmp`
), 

fields as (

    select
        
    
    
    campaign_id
    
 as 
    
    campaign_id
    
, 
    
    
    average_video_play
    
 as 
    
    average_video_play
    
, 
    
    
    average_video_play_per_user
    
 as 
    
    average_video_play_per_user
    
, 
    
    
    clicks
    
 as 
    
    clicks
    
, 
    
    
    comments
    
 as 
    
    comments
    
, 
    
    
    conversion
    
 as 
    
    conversion
    
, 
    
    
    conversion_rate
    
 as 
    
    conversion_rate
    
, 
    
    
    cost_per_conversion
    
 as 
    
    cost_per_conversion
    
, 
    
    
    cpc
    
 as 
    
    cpc
    
, 
    
    
    cpm
    
 as 
    
    cpm
    
, 
    
    
    ctr
    
 as 
    
    ctr
    
, 
    
    
    follows
    
 as 
    
    follows
    
, 
    
    
    impressions
    
 as 
    
    impressions
    
, 
    
    
    likes
    
 as 
    
    likes
    
, 
    
    
    profile_visits
    
 as 
    
    profile_visits
    
, 
    
    
    reach
    
 as 
    
    reach
    
, 
    
    
    shares
    
 as 
    
    shares
    
, 
    
    
    spend
    
 as 
    
    spend
    
, 
    
    
    stat_time_hour
    
 as 
    
    stat_time_hour
    
, 
    
    
    video_play_actions
    
 as 
    
    video_play_actions
    
, 
    
    
    video_views_p_25
    
 as 
    
    video_views_p_25
    
, 
    
    
    video_views_p_50
    
 as 
    
    video_views_p_50
    
, 
    
    
    video_views_p_75
    
 as 
    
    video_views_p_75
    
, 
    
    
    video_watched_2_s
    
 as 
    
    video_watched_2_s
    
, 
    
    
    video_watched_6_s
    
 as 
    
    video_watched_6_s
    



    from base
), 

final as (

    select  
        campaign_id,
        cast(stat_time_hour as TIMESTAMP) as stat_time_hour,
        cpc, 
        cpm,
        ctr,
        impressions,
        clicks,
        spend,
        reach,
        conversion,
        cost_per_conversion,
        conversion_rate,
        likes,
        comments,
        shares,
        profile_visits,
        follows,
        video_play_actions,
        video_watched_2_s,
        video_watched_6_s,
        video_views_p_25,
        video_views_p_50,
        video_views_p_75,
        average_video_play,
        average_video_play_per_user

        




        
    from fields
)

select *
from final
    );
  
[0m19:40:24.416142 [debug] [Thread-14 ]: Writing injected SQL for node "model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history"
[0m19:40:24.418688 [debug] [Thread-14 ]: Timing info for model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history (compile): 19:40:22.167105 => 19:40:24.418085
[0m19:40:24.419856 [debug] [Thread-14 ]: Began executing node model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history
[0m19:40:24.433166 [debug] [Thread-14 ]: Writing runtime sql for node "model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history"
[0m19:40:24.434922 [debug] [Thread-14 ]: On model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__promoted_tweet_history`
      
    
    

    OPTIONS()
    as (
      

with source as (

    select *
    from `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__promoted_tweet_history_tmp`

),

fields as (

    select
    
        
    
    
    approval_status
    
 as 
    
    approval_status
    
, 
    
    
    created_at
    
 as 
    
    created_at
    
, 
    
    
    deleted
    
 as 
    
    deleted
    
, 
    
    
    entity_status
    
 as 
    
    entity_status
    
, 
    
    
    id
    
 as 
    
    id
    
, 
    
    
    line_item_id
    
 as 
    
    line_item_id
    
, 
    
    
    tweet_id
    
 as 
    
    tweet_id
    
, 
    
    
    updated_at
    
 as 
    
    updated_at
    




    from source

), 

final as (

    select
        approval_status,
        created_at as created_timestamp,
        deleted as is_deleted,
        entity_status,
        id as promoted_tweet_id,
        line_item_id,
        tweet_id,
        updated_at as updated_timestamp,
        row_number() over (partition by id order by updated_at desc) = 1 as is_latest_version
    from fields 
)

select * from final
    );
  
[0m19:40:24.538155 [debug] [Thread-5  ]: Timing info for model.tiktok_ads_source.stg_tiktok_ads__advertiser (execute): 19:40:21.033909 => 19:40:24.537539
[0m19:40:24.540346 [debug] [Thread-5  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd137c3cbe0>]}
[0m19:40:24.541971 [info ] [Thread-5  ]: 82 of 130 OK created sql table model marketing_full_v2_stg_tiktok_ads.stg_tiktok_ads__advertiser  [[32mCREATE TABLE (3.0 rows, 463.0 Bytes processed)[0m in 6.26s]
[0m19:40:24.543723 [debug] [Thread-5  ]: Finished running node model.tiktok_ads_source.stg_tiktok_ads__advertiser
[0m19:40:24.545107 [debug] [Thread-5  ]: Began running node model.google_ads.google_ads__account_report
[0m19:40:24.546580 [info ] [Thread-5  ]: 96 of 130 START sql table model marketing_full_v2_google_ads.google_ads__account_report  [RUN]
[0m19:40:24.548889 [debug] [Thread-5  ]: Re-using an available connection from the pool (formerly model.tiktok_ads_source.stg_tiktok_ads__advertiser, now model.google_ads.google_ads__account_report)
[0m19:40:24.550262 [debug] [Thread-5  ]: Began compiling node model.google_ads.google_ads__account_report
[0m19:40:24.569375 [debug] [Thread-5  ]: Writing injected SQL for node "model.google_ads.google_ads__account_report"
[0m19:40:24.576528 [debug] [Thread-5  ]: Timing info for model.google_ads.google_ads__account_report (compile): 19:40:24.551086 => 19:40:24.575514
[0m19:40:24.578244 [debug] [Thread-5  ]: Began executing node model.google_ads.google_ads__account_report
[0m19:40:24.594182 [debug] [Thread-5  ]: Writing runtime sql for node "model.google_ads.google_ads__account_report"
[0m19:40:24.597453 [debug] [Thread-5  ]: Opening a new connection, currently in state closed
[0m19:40:24.667367 [debug] [Thread-6  ]: Writing injected SQL for node "model.twitter_ads_source.stg_twitter_ads__line_item_report"
[0m19:40:24.672611 [debug] [Thread-6  ]: Timing info for model.twitter_ads_source.stg_twitter_ads__line_item_report (compile): 19:40:22.254537 => 19:40:24.671910
[0m19:40:24.673845 [debug] [Thread-6  ]: Began executing node model.twitter_ads_source.stg_twitter_ads__line_item_report
[0m19:40:24.685740 [debug] [Thread-6  ]: Writing runtime sql for node "model.twitter_ads_source.stg_twitter_ads__line_item_report"
[0m19:40:24.687522 [debug] [Thread-6  ]: On model.twitter_ads_source.stg_twitter_ads__line_item_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.twitter_ads_source.stg_twitter_ads__line_item_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__line_item_report`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select * 
    from `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__line_item_report_tmp`
),

fields as (

    select
        
    
    
    account_id
    
 as 
    
    account_id
    
, 
    
    
    billed_charge_local_micro
    
 as 
    
    billed_charge_local_micro
    
, 
    
    
    clicks
    
 as 
    
    clicks
    
, 
    
    
    date
    
 as 
    
    date
    
, 
    
    
    impressions
    
 as 
    
    impressions
    
, 
    
    
    line_item_id
    
 as 
    
    line_item_id
    
, 
    
    
    placement
    
 as 
    
    placement
    
, 
    
    
    url_clicks
    
 as 
    
    url_clicks
    



    from base
),

final as (
    
    select 
        timestamp_trunc(
        cast(date as timestamp),
        day
    ) as date_day,
        account_id,
        line_item_id,
        placement,
        clicks,
        impressions,
        billed_charge_local_micro as spend_micro,
        round(billed_charge_local_micro / 1000000.0,2) as spend,
        url_clicks

        





    from fields
)

select *
from final
    );
  
[0m19:40:24.719900 [debug] [Thread-9  ]: Writing injected SQL for node "model.twitter_ads_source.stg_twitter_ads__tweet"
[0m19:40:24.738833 [debug] [Thread-9  ]: Timing info for model.twitter_ads_source.stg_twitter_ads__tweet (compile): 19:40:22.306847 => 19:40:24.737624
[0m19:40:24.740086 [debug] [Thread-9  ]: Began executing node model.twitter_ads_source.stg_twitter_ads__tweet
[0m19:40:24.750878 [debug] [Thread-2  ]: Writing injected SQL for node "model.twitter_ads_source.stg_twitter_ads__account_history"
[0m19:40:24.757413 [debug] [Thread-9  ]: Writing runtime sql for node "model.twitter_ads_source.stg_twitter_ads__tweet"
[0m19:40:24.759788 [debug] [Thread-2  ]: Timing info for model.twitter_ads_source.stg_twitter_ads__account_history (compile): 19:40:22.544800 => 19:40:24.759216
[0m19:40:24.760856 [debug] [Thread-2  ]: Began executing node model.twitter_ads_source.stg_twitter_ads__account_history
[0m19:40:24.769517 [debug] [Thread-9  ]: On model.twitter_ads_source.stg_twitter_ads__tweet: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.twitter_ads_source.stg_twitter_ads__tweet"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__tweet`
      
    
    

    OPTIONS()
    as (
      

with base as (

    select * 
    from `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__tweet_tmp`
),

fields as (

    select
        
    
    
    account_id
    
 as 
    
    account_id
    
, 
    
    
    full_text
    
 as 
    
    full_text
    
, 
    
    
    id
    
 as 
    
    id
    
, 
    
    
    lang
    
 as 
    
    lang
    
, 
    
    
    name
    
 as 
    
    name
    



    from base
),

final as (
    
    select 
        account_id,
        id as tweet_id,
        name,
        full_text,
        lang as language

    from fields
)

select *
from final
    );
  
[0m19:40:24.775702 [debug] [Thread-2  ]: Writing runtime sql for node "model.twitter_ads_source.stg_twitter_ads__account_history"
[0m19:40:24.778069 [debug] [Thread-2  ]: On model.twitter_ads_source.stg_twitter_ads__account_history: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.twitter_ads_source.stg_twitter_ads__account_history"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__account_history`
      
    
    

    OPTIONS()
    as (
      

with source as (

    select *
    from `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__account_history_tmp`

),

fields as (

    select
    
        
    
    
    approval_status
    
 as 
    
    approval_status
    
, 
    
    
    business_id
    
 as 
    
    business_id
    
, 
    
    
    business_name
    
 as 
    
    business_name
    
, 
    
    
    created_at
    
 as 
    
    created_at
    
, 
    
    
    deleted
    
 as 
    
    deleted
    
, 
    
    
    id
    
 as 
    
    id
    
, 
    
    
    industry_type
    
 as 
    
    industry_type
    
, 
    
    
    name
    
 as 
    
    name
    
, 
    
    
    salt
    
 as 
    
    salt
    
, 
    
    
    timezone
    
 as 
    
    timezone
    
, 
    
    
    timezone_switch_at
    
 as 
    
    timezone_switch_at
    
, 
    
    
    updated_at
    
 as 
    
    updated_at
    




    from source

), 

final as (

    select
        approval_status,
        business_id,
        business_name,
        created_at as created_timestamp,
        deleted as is_deleted,
        id as account_id,
        industry_type,
        name,
        salt,
        timezone,
        timezone_switch_at as timezone_switched_timestamp,
        updated_at as updated_timestamp,
        row_number() over (partition by id order by updated_at desc) = 1 as is_latest_version
    
    from fields 
)

select * from final
    );
  
[0m19:40:24.797433 [debug] [Thread-5  ]: On model.google_ads.google_ads__account_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.google_ads.google_ads__account_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_google_ads`.`google_ads__account_report`
      
    
    

    OPTIONS()
    as (
      

with stats as (

    select *
    from `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__account_stats`
), 

accounts as (

    select *
    from `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__account_history`
    where is_most_recent_record = True
), 

fields as (

    select
        stats.date_day,
        accounts.account_name,
        stats.account_id,
        accounts.currency_code,
        accounts.auto_tagging_enabled,
        accounts.time_zone,
        sum(stats.spend) as spend,
        sum(stats.clicks) as clicks,
        sum(stats.impressions) as impressions

        





    from stats
    left join accounts
        on stats.account_id = accounts.account_id
    group by 1,2,3,4,5,6
)

select *
from fields
    );
  
[0m19:40:24.854113 [debug] [Thread-13 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:7eacdcff-6129-4efe-9380-809610a40b11&page=queryresults
[0m19:40:24.874859 [debug] [Thread-7  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:d180e0c9-c09d-481f-9c6e-86d84e814be2&page=queryresults
[0m19:40:25.054010 [debug] [Thread-12 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:c9bfc976-40a9-490a-81c9-2bed16d3dbb5&page=queryresults
[0m19:40:25.134132 [debug] [Thread-14 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:4224c22c-871d-497e-b497-ee999841b5b7&page=queryresults
[0m19:40:25.142376 [debug] [Thread-15 ]: Writing injected SQL for node "model.twitter_ads_source.stg_twitter_ads__tweet_url"
[0m19:40:25.147876 [debug] [Thread-15 ]: Timing info for model.twitter_ads_source.stg_twitter_ads__tweet_url (compile): 19:40:23.054957 => 19:40:25.147240
[0m19:40:25.149615 [debug] [Thread-15 ]: Began executing node model.twitter_ads_source.stg_twitter_ads__tweet_url
[0m19:40:25.162317 [debug] [Thread-15 ]: Writing runtime sql for node "model.twitter_ads_source.stg_twitter_ads__tweet_url"
[0m19:40:25.164768 [debug] [Thread-15 ]: On model.twitter_ads_source.stg_twitter_ads__tweet_url: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.twitter_ads_source.stg_twitter_ads__tweet_url"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__tweet_url`
      
    
    

    OPTIONS()
    as (
      

with source as (

    select *
    from `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__tweet_url_tmp`

),

fields as (

    select
    
        
    
    
    display_url
    
 as 
    
    display_url
    
, 
    
    
    expanded_url
    
 as 
    
    expanded_url
    
, 
    
    
    index
    
 as 
    
    index
    
, 
    
    
    indices
    
 as 
    
    indices
    
, 
    
    
    tweet_id
    
 as 
    
    tweet_id
    
, 
    
    
    url
    
 as 
    
    url
    




    from source

), 

final as (

    select
        display_url,
        expanded_url,
        index,
        indices,
        tweet_id,
        url,
        

  
    split(
        expanded_url,
        '?'
        )[safe_offset(0)]
  

 as base_url,
        
    safe_cast(

  
    split(
        

  
    split(
        

    replace(
        

    replace(
        

    replace(
        expanded_url,
        'android-app://',
        ''
    )


,
        'http://',
        ''
    )


,
        'https://',
        ''
    )


,
        '/'
        )[safe_offset(0)]
  

,
        '?'
        )[safe_offset(0)]
  

 as STRING)
 as url_host,
        '/' || 
    safe_cast(

  
    split(
        

    case when 

    length(
        

    replace(
        

    replace(
        expanded_url,
        'http://',
        ''
    )


,
        'https://',
        ''
    )



    )-coalesce(
            nullif(

    strpos(
        

    replace(
        

    replace(
        expanded_url,
        'http://',
        ''
    )


,
        'https://',
        ''
    )


,
        '/'

    ), 0),
            

    strpos(
        

    replace(
        

    replace(
        expanded_url,
        'http://',
        ''
    )


,
        'https://',
        ''
    )


,
        '?'

    ) - 1
            ) = 0
        then ''
    else
        substr(
            

    replace(
        

    replace(
        expanded_url,
        'http://',
        ''
    )


,
        'https://',
        ''
    )


,
            -1 * (

    length(
        

    replace(
        

    replace(
        expanded_url,
        'http://',
        ''
    )


,
        'https://',
        ''
    )



    )-coalesce(
            nullif(

    strpos(
        

    replace(
        

    replace(
        expanded_url,
        'http://',
        ''
    )


,
        'https://',
        ''
    )


,
        '/'

    ), 0),
            

    strpos(
        

    replace(
        

    replace(
        expanded_url,
        'http://',
        ''
    )


,
        'https://',
        ''
    )


,
        '?'

    ) - 1
            ))
        )
    end,
        '?'
        )[safe_offset(0)]
  

 as STRING)
 as url_path,
        nullif(

  
    split(
        

  
    split(
        expanded_url,
        'utm_source='
        )[safe_offset(1)]
  

,
        '&'
        )[safe_offset(0)]
  

,'') as utm_source,
        nullif(

  
    split(
        

  
    split(
        expanded_url,
        'utm_medium='
        )[safe_offset(1)]
  

,
        '&'
        )[safe_offset(0)]
  

,'') as utm_medium,
        nullif(

  
    split(
        

  
    split(
        expanded_url,
        'utm_campaign='
        )[safe_offset(1)]
  

,
        '&'
        )[safe_offset(0)]
  

,'') as utm_campaign,
        nullif(

  
    split(
        

  
    split(
        expanded_url,
        'utm_content='
        )[safe_offset(1)]
  

,
        '&'
        )[safe_offset(0)]
  

,'') as utm_content,
        nullif(

  
    split(
        

  
    split(
        expanded_url,
        'utm_term='
        )[safe_offset(1)]
  

,
        '&'
        )[safe_offset(0)]
  

,'') as utm_term
    
    from fields

)

select * from final
    );
  
[0m19:40:25.440058 [debug] [Thread-11 ]: Timing info for model.tiktok_ads_source.stg_tiktok_ads__ad_history (execute): 19:40:21.805512 => 19:40:25.439531
[0m19:40:25.444672 [debug] [Thread-11 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1361c06d0>]}
[0m19:40:25.447449 [info ] [Thread-11 ]: 83 of 130 OK created sql table model marketing_full_v2_stg_tiktok_ads.stg_tiktok_ads__ad_history  [[32mCREATE TABLE (392.0 rows, 263.9 KiB processed)[0m in 5.56s]
[0m19:40:25.459419 [debug] [Thread-11 ]: Finished running node model.tiktok_ads_source.stg_tiktok_ads__ad_history
[0m19:40:25.460764 [debug] [Thread-11 ]: Began running node model.google_ads.google_ads__ad_report
[0m19:40:25.463273 [info ] [Thread-11 ]: 97 of 130 START sql table model marketing_full_v2_google_ads.google_ads__ad_report  [RUN]
[0m19:40:25.466735 [debug] [Thread-11 ]: Re-using an available connection from the pool (formerly model.tiktok_ads_source.stg_tiktok_ads__ad_history, now model.google_ads.google_ads__ad_report)
[0m19:40:25.468537 [debug] [Thread-11 ]: Began compiling node model.google_ads.google_ads__ad_report
[0m19:40:25.511808 [debug] [Thread-11 ]: Writing injected SQL for node "model.google_ads.google_ads__ad_report"
[0m19:40:25.513636 [debug] [Thread-6  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:a2f67eee-18b0-49f0-affb-974ba6e10af5&page=queryresults
[0m19:40:25.537315 [debug] [Thread-11 ]: Timing info for model.google_ads.google_ads__ad_report (compile): 19:40:25.469376 => 19:40:25.536470
[0m19:40:25.553510 [debug] [Thread-11 ]: Began executing node model.google_ads.google_ads__ad_report
[0m19:40:25.570708 [debug] [Thread-2  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:0daff5f5-4411-42d3-9f4d-fcf75fc798bb&page=queryresults
[0m19:40:25.578874 [debug] [Thread-11 ]: Writing runtime sql for node "model.google_ads.google_ads__ad_report"
[0m19:40:25.597213 [debug] [Thread-11 ]: Opening a new connection, currently in state closed
[0m19:40:25.744394 [debug] [Thread-9  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:7efb63dd-e95e-43c0-8551-32c3e6653c44&page=queryresults
[0m19:40:25.799030 [debug] [Thread-11 ]: On model.google_ads.google_ads__ad_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.google_ads.google_ads__ad_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_google_ads`.`google_ads__ad_report`
      
    
    

    OPTIONS()
    as (
      

with stats as (

    select *
    from `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__ad_stats`
), 

accounts as (

    select *
    from `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__account_history`
    where is_most_recent_record = True
), 

campaigns as (

    select *
    from `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__campaign_history`
    where is_most_recent_record = True
), 

ad_groups as (

    select *
    from `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__ad_group_history`
    where is_most_recent_record = True
),

ads as (

    select *
    from `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__ad_history`
    where is_most_recent_record = True
), 

fields as (

    select
        stats.date_day,
        accounts.account_name,
        accounts.account_id,
        accounts.currency_code,
        campaigns.campaign_name,
        campaigns.campaign_id,
        ad_groups.ad_group_name,
        stats.ad_group_id,
        stats.ad_id,
        ads.ad_name,
        ads.ad_status,
        ads.ad_type,
        ads.display_url,
        ads.source_final_urls,
        sum(stats.spend) as spend,
        sum(stats.clicks) as clicks,
        sum(stats.impressions) as impressions

        





    from stats
    left join ads
        on stats.ad_id = ads.ad_id
        and stats.ad_group_id = ads.ad_group_id
    left join ad_groups
        on ads.ad_group_id = ad_groups.ad_group_id
    left join campaigns
        on ad_groups.campaign_id = campaigns.campaign_id
    left join accounts
        on campaigns.account_id = accounts.account_id
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14
)

select *
from fields
    );
  
[0m19:40:26.027446 [debug] [Thread-10 ]: Timing info for model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report (execute): 19:40:17.953005 => 19:40:26.026955
[0m19:40:26.028782 [debug] [Thread-15 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:d9ddfc78-e01b-406e-b86a-8fd79ae8e285&page=queryresults
[0m19:40:26.032552 [debug] [Thread-10 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd135eb8640>]}
[0m19:40:26.047505 [info ] [Thread-10 ]: 75 of 130 OK created sql table model marketing_full_v2_snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report  [[32mCREATE TABLE (1.9m rows, 337.5 MiB processed)[0m in 11.35s]
[0m19:40:26.050023 [debug] [Thread-10 ]: Finished running node model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report
[0m19:40:26.051839 [debug] [Thread-10 ]: Began running node model.google_ads.google_ads__url_report
[0m19:40:26.054926 [info ] [Thread-10 ]: 98 of 130 START sql table model marketing_full_v2_google_ads.google_ads__url_report  [RUN]
[0m19:40:26.056941 [debug] [Thread-10 ]: Re-using an available connection from the pool (formerly model.snapchat_ads_source.stg_snapchat_ads__campaign_hourly_report, now model.google_ads.google_ads__url_report)
[0m19:40:26.058151 [debug] [Thread-10 ]: Began compiling node model.google_ads.google_ads__url_report
[0m19:40:26.060428 [debug] [Thread-8  ]: Writing injected SQL for node "model.twitter_ads_source.stg_twitter_ads__campaign_history"
[0m19:40:26.092222 [debug] [Thread-8  ]: Timing info for model.twitter_ads_source.stg_twitter_ads__campaign_history (compile): 19:40:23.041476 => 19:40:26.090347
[0m19:40:26.093573 [debug] [Thread-8  ]: Began executing node model.twitter_ads_source.stg_twitter_ads__campaign_history
[0m19:40:26.112089 [debug] [Thread-8  ]: Writing runtime sql for node "model.twitter_ads_source.stg_twitter_ads__campaign_history"
[0m19:40:26.119015 [debug] [Thread-10 ]: Writing injected SQL for node "model.google_ads.google_ads__url_report"
[0m19:40:26.121068 [debug] [Thread-10 ]: Timing info for model.google_ads.google_ads__url_report (compile): 19:40:26.061226 => 19:40:26.120473
[0m19:40:26.122706 [debug] [Thread-10 ]: Began executing node model.google_ads.google_ads__url_report
[0m19:40:26.131722 [debug] [Thread-8  ]: On model.twitter_ads_source.stg_twitter_ads__campaign_history: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.twitter_ads_source.stg_twitter_ads__campaign_history"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__campaign_history`
      
    
    

    OPTIONS()
    as (
      

with source as (

    select *
    from `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__campaign_history_tmp`

),

fields as (

    select
    
        
    
    
    account_id
    
 as 
    
    account_id
    
, 
    
    
    created_at
    
 as 
    
    created_at
    
, 
    
    
    currency
    
 as 
    
    currency
    
, 
    
    
    daily_budget_amount_local_micro
    
 as 
    
    daily_budget_amount_local_micro
    
, 
    
    
    deleted
    
 as 
    
    deleted
    
, 
    
    
    duration_in_days
    
 as 
    
    duration_in_days
    
, 
    
    
    end_time
    
 as 
    
    end_time
    
, 
    
    
    entity_status
    
 as 
    
    entity_status
    
, 
    
    
    frequency_cap
    
 as 
    
    frequency_cap
    
, 
    
    
    funding_instrument_id
    
 as 
    
    funding_instrument_id
    
, 
    
    
    id
    
 as 
    
    id
    
, 
    
    
    name
    
 as 
    
    name
    
, 
    
    
    servable
    
 as 
    
    servable
    
, 
    
    
    standard_delivery
    
 as 
    
    standard_delivery
    
, 
    
    
    start_time
    
 as 
    
    start_time
    
, 
    
    
    total_budget_amount_local_micro
    
 as 
    
    total_budget_amount_local_micro
    
, 
    
    
    updated_at
    
 as 
    
    updated_at
    




    from source

), 

final as (

    select
        account_id,
        created_at as created_timestamp,
        currency,
        daily_budget_amount_local_micro,
        deleted as is_deleted,
        duration_in_days,
        end_time as end_timestamp,
        entity_status,
        frequency_cap,
        funding_instrument_id,
        id as campaign_id,
        name as campaign_name,
        servable as is_servable,
        standard_delivery as is_standard_delivery,
        start_time as start_timestamp,
        total_budget_amount_local_micro,
        updated_at as updated_timestamp,
        round(daily_budget_amount_local_micro / 1000000.0,2) as daily_budget_amount,
        round(total_budget_amount_local_micro / 1000000.0,2) as total_budget_amount,
        row_number() over (partition by id order by updated_at desc) = 1 as is_latest_version
    
    from fields 
)

select * from final
    );
  
[0m19:40:26.139319 [debug] [Thread-10 ]: Writing runtime sql for node "model.google_ads.google_ads__url_report"
[0m19:40:26.143384 [debug] [Thread-10 ]: Opening a new connection, currently in state closed
[0m19:40:26.235828 [debug] [Thread-3  ]: Writing injected SQL for node "model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report"
[0m19:40:26.238228 [debug] [Thread-3  ]: Timing info for model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report (compile): 19:40:23.826532 => 19:40:26.237580
[0m19:40:26.239422 [debug] [Thread-3  ]: Began executing node model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report
[0m19:40:26.252557 [debug] [Thread-3  ]: Writing runtime sql for node "model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report"
[0m19:40:26.254725 [debug] [Thread-3  ]: On model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__promoted_tweet_report`
      
    
    

    OPTIONS()
    as (
      

with source as (

    select *
    from `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__promoted_tweet_report_tmp`

),

renamed as (

    select
    
        
    
    
    account_id
    
 as 
    
    account_id
    
, 
    
    
    billed_charge_local_micro
    
 as 
    
    billed_charge_local_micro
    
, 
    
    
    clicks
    
 as 
    
    clicks
    
, 
    
    
    date
    
 as 
    
    date
    
, 
    
    
    impressions
    
 as 
    
    impressions
    
, 
    
    
    placement
    
 as 
    
    placement
    
, 
    
    
    promoted_tweet_id
    
 as 
    
    promoted_tweet_id
    
, 
    
    
    url_clicks
    
 as 
    
    url_clicks
    




    from source

), spend_calc as (

    select
        timestamp_trunc(
        cast(date as timestamp),
        day
    ) as date_day,
        account_id,
        promoted_tweet_id,
        placement,
        clicks as clicks,
        impressions as impressions,
        billed_charge_local_micro as spend_micro,
        round(billed_charge_local_micro / 1000000.0,2) as spend,
        url_clicks as url_clicks

        




    
    from renamed

)

select * from spend_calc
    );
  
[0m19:40:26.338262 [debug] [Thread-1  ]: Timing info for model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly (execute): 19:40:20.755993 => 19:40:26.337753
[0m19:40:26.340403 [debug] [Thread-1  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd135d50820>]}
[0m19:40:26.342149 [info ] [Thread-1  ]: 81 of 130 OK created sql table model marketing_full_v2_stg_tiktok_ads.stg_tiktok_ads__ad_report_hourly  [[32mCREATE TABLE (167.0k rows, 31.9 MiB processed)[0m in 8.11s]
[0m19:40:26.344321 [debug] [Thread-1  ]: Finished running node model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly
[0m19:40:26.345719 [debug] [Thread-1  ]: Began running node model.google_ads.google_ads__ad_group_report
[0m19:40:26.348234 [info ] [Thread-1  ]: 99 of 130 START sql table model marketing_full_v2_google_ads.google_ads__ad_group_report  [RUN]
[0m19:40:26.350518 [debug] [Thread-1  ]: Re-using an available connection from the pool (formerly model.tiktok_ads_source.stg_tiktok_ads__ad_report_hourly, now model.google_ads.google_ads__ad_group_report)
[0m19:40:26.351834 [debug] [Thread-1  ]: Began compiling node model.google_ads.google_ads__ad_group_report
[0m19:40:26.391280 [debug] [Thread-1  ]: Writing injected SQL for node "model.google_ads.google_ads__ad_group_report"
[0m19:40:26.393851 [debug] [Thread-1  ]: Timing info for model.google_ads.google_ads__ad_group_report (compile): 19:40:26.353219 => 19:40:26.392932
[0m19:40:26.395037 [debug] [Thread-1  ]: Began executing node model.google_ads.google_ads__ad_group_report
[0m19:40:26.399677 [debug] [Thread-10 ]: On model.google_ads.google_ads__url_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.google_ads.google_ads__url_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_google_ads`.`google_ads__url_report`
      
    
    

    OPTIONS()
    as (
      

with stats as (

    select *
    from `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__ad_stats`
), 

accounts as (

    select *
    from `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__account_history`
    where is_most_recent_record = True
), 

campaigns as (

    select *
    from `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__campaign_history`
    where is_most_recent_record = True
), 

ad_groups as (

    select *
    from `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__ad_group_history`
    where is_most_recent_record = True
),

ads as (

    select *
    from `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__ad_history`
    where is_most_recent_record = True
), 

fields as (

    select
        stats.date_day,
        accounts.account_name,
        accounts.account_id,
        accounts.currency_code,
        campaigns.campaign_name,
        campaigns.campaign_id,
        ad_groups.ad_group_name,
        stats.ad_group_id,
        stats.ad_id,
        ads.base_url,
        ads.url_host,
        ads.url_path,

        

        ads.utm_source,
        ads.utm_medium,
        ads.utm_campaign,
        ads.utm_content,
        
        

        ads.utm_term,
        sum(stats.spend) as spend,
        sum(stats.clicks) as clicks,
        sum(stats.impressions) as impressions

        





    from stats
    left join ads
        on stats.ad_id = ads.ad_id
        and stats.ad_group_id = ads.ad_group_id
    left join ad_groups
        on ads.ad_group_id = ad_groups.ad_group_id
    left join campaigns
        on ad_groups.campaign_id = campaigns.campaign_id
    left join accounts
        on campaigns.account_id = accounts.account_id

    
        where ads.source_final_urls is not null
    

    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17
)

select *
from fields
    );
  
[0m19:40:26.418282 [debug] [Thread-1  ]: Writing runtime sql for node "model.google_ads.google_ads__ad_group_report"
[0m19:40:26.423735 [debug] [Thread-1  ]: Opening a new connection, currently in state closed
[0m19:40:26.545225 [debug] [Thread-1  ]: On model.google_ads.google_ads__ad_group_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.google_ads.google_ads__ad_group_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_google_ads`.`google_ads__ad_group_report`
      
    
    

    OPTIONS()
    as (
      

with stats as (

    select *
    from `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__ad_group_stats`
), 

accounts as (

    select *
    from `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__account_history`
    where is_most_recent_record = True
), 

campaigns as (

    select *
    from `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__campaign_history`
    where is_most_recent_record = True
),

ad_groups as (

    select *
    from `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__ad_group_history`
    where is_most_recent_record = True
), 

fields as (

    select
        stats.date_day,
        accounts.account_name,
        accounts.account_id,
        accounts.currency_code,
        campaigns.campaign_name,
        campaigns.campaign_id,
        ad_groups.ad_group_name,
        stats.ad_group_id,
        ad_groups.ad_group_status,
        ad_groups.ad_group_type,
        sum(stats.spend) as spend,
        sum(stats.clicks) as clicks,
        sum(stats.impressions) as impressions

        





    from stats
    left join ad_groups
        on stats.ad_group_id = ad_groups.ad_group_id
    left join campaigns
        on ad_groups.campaign_id = campaigns.campaign_id
    left join accounts
        on campaigns.account_id = accounts.account_id
    group by 1,2,3,4,5,6,7,8,9,10
)

select *
from fields
    );
  
[0m19:40:26.870124 [debug] [Thread-8  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:21f0eec4-87af-41ac-b0d3-84251f7b500a&page=queryresults
[0m19:40:26.921337 [debug] [Thread-4  ]: Timing info for model.tiktok_ads_source.stg_tiktok_ads__campaign_history (execute): 19:40:23.448863 => 19:40:26.920779
[0m19:40:26.923527 [debug] [Thread-4  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd135a48f40>]}
[0m19:40:27.060032 [debug] [Thread-3  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:fdabbddf-12c6-4446-b1f8-05459692171b&page=queryresults
[0m19:40:27.209256 [debug] [Thread-5  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:9143322a-c5d4-42e0-b097-fc8e13f8ff8b&page=queryresults
[0m19:40:27.331325 [debug] [Thread-13 ]: Timing info for model.twitter_ads_source.stg_twitter_ads__campaign_report (execute): 19:40:23.973485 => 19:40:27.330815
[0m19:40:27.335122 [debug] [Thread-13 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13c18f370>]}
[0m19:40:27.429347 [debug] [Thread-7  ]: Timing info for model.twitter_ads_source.stg_twitter_ads__line_item_history (execute): 19:40:23.959862 => 19:40:27.428816
[0m19:40:27.431339 [debug] [Thread-7  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1361a2eb0>]}
[0m19:40:27.715570 [debug] [Thread-14 ]: Timing info for model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history (execute): 19:40:24.420661 => 19:40:27.715014
[0m19:40:27.717799 [debug] [Thread-14 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd136d82d60>]}
[0m19:40:27.826292 [debug] [Thread-12 ]: Timing info for model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly (execute): 19:40:24.285584 => 19:40:27.825743
[0m19:40:27.828300 [debug] [Thread-12 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd136e9eaf0>]}
[0m19:40:27.844590 [debug] [Thread-6  ]: Timing info for model.twitter_ads_source.stg_twitter_ads__line_item_report (execute): 19:40:24.674675 => 19:40:27.844069
[0m19:40:27.846620 [debug] [Thread-6  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd135735640>]}
[0m19:40:27.875356 [debug] [Thread-11 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:8f45eef8-f946-4b75-ba0c-d668aa2fe3c0&page=queryresults
[0m19:40:28.158152 [debug] [Thread-2  ]: Timing info for model.twitter_ads_source.stg_twitter_ads__account_history (execute): 19:40:24.761583 => 19:40:28.157613
[0m19:40:28.160225 [debug] [Thread-2  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13589bcd0>]}
[0m19:40:28.192045 [debug] [Thread-9  ]: Timing info for model.twitter_ads_source.stg_twitter_ads__tweet (execute): 19:40:24.740903 => 19:40:28.191495
[0m19:40:28.194215 [debug] [Thread-9  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13609bc70>]}
[0m19:40:28.264211 [debug] [Thread-10 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:c5610321-aa47-4107-9cc0-0bdfe4e7d613&page=queryresults
[0m19:40:28.316889 [debug] [Thread-15 ]: Timing info for model.twitter_ads_source.stg_twitter_ads__tweet_url (execute): 19:40:25.150457 => 19:40:28.316558
[0m19:40:28.318173 [debug] [Thread-15 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd135ac5790>]}
[0m19:40:28.398592 [info ] [Thread-4  ]: 84 of 130 OK created sql table model marketing_full_v2_stg_tiktok_ads.stg_tiktok_ads__campaign_history  [[32mCREATE TABLE (76.0 rows, 7.6 KiB processed)[0m in 5.79s]
[0m19:40:28.401979 [debug] [Thread-4  ]: Finished running node model.tiktok_ads_source.stg_tiktok_ads__campaign_history
[0m19:40:28.402981 [info ] [Thread-13 ]: 87 of 130 OK created sql table model marketing_full_v2_twitter_ads_source.stg_twitter_ads__campaign_report  [[32mCREATE TABLE (933.0 rows, 69.2 KiB processed)[0m in 5.69s]
[0m19:40:28.403877 [info ] [Thread-7  ]: 85 of 130 OK created sql table model marketing_full_v2_twitter_ads_source.stg_twitter_ads__line_item_history  [[32mCREATE TABLE (48.0 rows, 6.7 KiB processed)[0m in 5.88s]
[0m19:40:28.404754 [info ] [Thread-14 ]: 90 of 130 OK created sql table model marketing_full_v2_twitter_ads_source.stg_twitter_ads__promoted_tweet_history  [[32mCREATE TABLE (127.0 rows, 8.8 KiB processed)[0m in 5.55s]
[0m19:40:28.405936 [info ] [Thread-12 ]: 88 of 130 OK created sql table model marketing_full_v2_stg_tiktok_ads.stg_tiktok_ads__campaign_report_hourly  [[32mCREATE TABLE (46.6k rows, 8.9 MiB processed)[0m in 5.91s]
[0m19:40:28.406946 [info ] [Thread-6  ]: 89 of 130 OK created sql table model marketing_full_v2_twitter_ads_source.stg_twitter_ads__line_item_report  [[32mCREATE TABLE (2.1k rows, 153.3 KiB processed)[0m in 5.69s]
[0m19:40:28.408763 [info ] [Thread-2  ]: 92 of 130 OK created sql table model marketing_full_v2_twitter_ads_source.stg_twitter_ads__account_history  [[32mCREATE TABLE (2.0 rows, 153.0 Bytes processed)[0m in 5.62s]
[0m19:40:28.490114 [debug] [Thread-2  ]: Finished running node model.twitter_ads_source.stg_twitter_ads__account_history
[0m19:40:28.411679 [info ] [Thread-9  ]: 91 of 130 OK created sql table model marketing_full_v2_twitter_ads_source.stg_twitter_ads__tweet  [[32mCREATE TABLE (203.0 rows, 47.8 KiB processed)[0m in 5.90s]
[0m19:40:28.470378 [debug] [Thread-13 ]: Finished running node model.twitter_ads_source.stg_twitter_ads__campaign_report
[0m19:40:28.492250 [debug] [Thread-9  ]: Finished running node model.twitter_ads_source.stg_twitter_ads__tweet
[0m19:40:28.479797 [debug] [Thread-1  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:b036f223-2914-4df3-adf9-56bd2189836e&page=queryresults
[0m19:40:28.481431 [debug] [Thread-7  ]: Finished running node model.twitter_ads_source.stg_twitter_ads__line_item_history
[0m19:40:28.483134 [debug] [Thread-14 ]: Finished running node model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history
[0m19:40:28.487006 [debug] [Thread-12 ]: Finished running node model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly
[0m19:40:28.488275 [debug] [Thread-6  ]: Finished running node model.twitter_ads_source.stg_twitter_ads__line_item_report
[0m19:40:28.490957 [debug] [Thread-2  ]: Began running node model.apple_search_ads.apple_search_ads__ad_report
[0m19:40:28.493162 [debug] [Thread-13 ]: Began running node model.apple_search_ads.apple_search_ads__campaign_report
[0m19:40:28.494022 [debug] [Thread-9  ]: Began running node model.apple_search_ads.apple_search_ads__keyword_report
[0m19:40:28.418507 [info ] [Thread-15 ]: 94 of 130 OK created sql table model marketing_full_v2_twitter_ads_source.stg_twitter_ads__tweet_url  [[32mCREATE TABLE (3.0 rows, 415.0 Bytes processed)[0m in 5.28s]
[0m19:40:28.499055 [debug] [Thread-7  ]: Began running node model.apple_search_ads.apple_search_ads__organization_report
[0m19:40:28.527883 [info ] [Thread-7  ]: 104 of 130 START sql table model marketing_full_v2_apple_search_ads.apple_search_ads__organization_report  [RUN]
[0m19:40:28.529136 [debug] [Thread-7  ]: Re-using an available connection from the pool (formerly model.twitter_ads_source.stg_twitter_ads__line_item_history, now model.apple_search_ads.apple_search_ads__organization_report)
[0m19:40:28.529839 [debug] [Thread-7  ]: Began compiling node model.apple_search_ads.apple_search_ads__organization_report
[0m19:40:28.505901 [debug] [Thread-6  ]: Began running node model.snapchat_ads.snapchat_ads__creative_history_prep
[0m19:40:28.511894 [info ] [Thread-2  ]: 101 of 130 SKIP relation marketing_full_v2_apple_search_ads.apple_search_ads__ad_report  [[33mSKIP[0m]
[0m19:40:28.518562 [info ] [Thread-13 ]: 102 of 130 START sql table model marketing_full_v2_apple_search_ads.apple_search_ads__campaign_report  [RUN]
[0m19:40:28.562040 [debug] [Thread-13 ]: Re-using an available connection from the pool (formerly model.twitter_ads_source.stg_twitter_ads__campaign_report, now model.apple_search_ads.apple_search_ads__campaign_report)
[0m19:40:28.521907 [info ] [Thread-9  ]: 103 of 130 START sql table model marketing_full_v2_apple_search_ads.apple_search_ads__keyword_report  [RUN]
[0m19:40:28.424473 [debug] [Thread-4  ]: Began running node model.apple_search_ads.apple_search_ads__ad_group_report
[0m19:40:28.500584 [debug] [Thread-14 ]: Began running node model.apple_search_ads.apple_search_ads__search_term_report
[0m19:40:28.502657 [debug] [Thread-12 ]: Began running node model.google_ads.google_ads__campaign_report
[0m19:40:28.556750 [debug] [Thread-7  ]: Writing injected SQL for node "model.apple_search_ads.apple_search_ads__organization_report"
[0m19:40:28.559149 [debug] [Thread-6  ]: Finished running node model.snapchat_ads.snapchat_ads__creative_history_prep
[0m19:40:28.560331 [debug] [Thread-2  ]: Finished running node model.apple_search_ads.apple_search_ads__ad_report
[0m19:40:28.563163 [debug] [Thread-13 ]: Began compiling node model.apple_search_ads.apple_search_ads__campaign_report
[0m19:40:28.564748 [debug] [Thread-9  ]: Re-using an available connection from the pool (formerly model.twitter_ads_source.stg_twitter_ads__tweet, now model.apple_search_ads.apple_search_ads__keyword_report)
[0m19:40:28.588522 [debug] [Thread-9  ]: Began compiling node model.apple_search_ads.apple_search_ads__keyword_report
[0m19:40:28.567360 [info ] [Thread-14 ]: 105 of 130 START sql table model marketing_full_v2_apple_search_ads.apple_search_ads__search_term_report  [RUN]
[0m19:40:28.526623 [debug] [Thread-15 ]: Finished running node model.twitter_ads_source.stg_twitter_ads__tweet_url
[0m19:40:28.569473 [info ] [Thread-12 ]: 106 of 130 START sql table model marketing_full_v2_google_ads.google_ads__campaign_report  [RUN]
[0m19:40:28.571259 [debug] [Thread-6  ]: Began running node model.google_ads.google_ads__keyword_report
[0m19:40:28.573397 [debug] [Thread-7  ]: Timing info for model.apple_search_ads.apple_search_ads__organization_report (compile): 19:40:28.530420 => 19:40:28.572943
[0m19:40:28.574250 [debug] [Thread-2  ]: Began running node model.snapchat_ads.snapchat_ads__account_report
[0m19:40:28.566066 [info ] [Thread-4  ]: 100 of 130 START sql table model marketing_full_v2_apple_search_ads.apple_search_ads__ad_group_report  [RUN]
[0m19:40:28.601603 [debug] [Thread-13 ]: Writing injected SQL for node "model.apple_search_ads.apple_search_ads__campaign_report"
[0m19:40:28.602936 [debug] [Thread-14 ]: Re-using an available connection from the pool (formerly model.twitter_ads_source.stg_twitter_ads__promoted_tweet_history, now model.apple_search_ads.apple_search_ads__search_term_report)
[0m19:40:28.607030 [debug] [Thread-15 ]: Began running node model.snapchat_ads.snapchat_ads__ad_squad_report
[0m19:40:28.608269 [debug] [Thread-12 ]: Re-using an available connection from the pool (formerly model.tiktok_ads_source.stg_tiktok_ads__campaign_report_hourly, now model.google_ads.google_ads__campaign_report)
[0m19:40:28.629318 [debug] [Thread-12 ]: Began compiling node model.google_ads.google_ads__campaign_report
[0m19:40:28.609159 [info ] [Thread-6  ]: 107 of 130 START sql table model marketing_full_v2_google_ads.google_ads__keyword_report  [RUN]
[0m19:40:28.617687 [info ] [Thread-2  ]: 108 of 130 START sql table model marketing_full_v2_snapchat_ads.snapchat_ads__account_report  [RUN]
[0m19:40:28.622941 [debug] [Thread-9  ]: Writing injected SQL for node "model.apple_search_ads.apple_search_ads__keyword_report"
[0m19:40:28.625035 [debug] [Thread-4  ]: Re-using an available connection from the pool (formerly model.tiktok_ads_source.stg_tiktok_ads__campaign_history, now model.apple_search_ads.apple_search_ads__ad_group_report)
[0m19:40:28.677059 [debug] [Thread-4  ]: Began compiling node model.apple_search_ads.apple_search_ads__ad_group_report
[0m19:40:28.626608 [debug] [Thread-14 ]: Began compiling node model.apple_search_ads.apple_search_ads__search_term_report
[0m19:40:28.661537 [debug] [Thread-12 ]: Writing injected SQL for node "model.google_ads.google_ads__campaign_report"
[0m19:40:28.663300 [debug] [Thread-13 ]: Timing info for model.apple_search_ads.apple_search_ads__campaign_report (compile): 19:40:28.574861 => 19:40:28.662834
[0m19:40:28.666639 [debug] [Thread-6  ]: Re-using an available connection from the pool (formerly model.twitter_ads_source.stg_twitter_ads__line_item_report, now model.google_ads.google_ads__keyword_report)
[0m19:40:28.616406 [debug] [Thread-7  ]: Began executing node model.apple_search_ads.apple_search_ads__organization_report
[0m19:40:28.674046 [debug] [Thread-2  ]: Re-using an available connection from the pool (formerly model.twitter_ads_source.stg_twitter_ads__account_history, now model.snapchat_ads.snapchat_ads__account_report)
[0m19:40:28.676336 [debug] [Thread-9  ]: Timing info for model.apple_search_ads.apple_search_ads__keyword_report (compile): 19:40:28.589133 => 19:40:28.675844
[0m19:40:28.628044 [info ] [Thread-15 ]: 109 of 130 START sql table model marketing_full_v2_snapchat_ads.snapchat_ads__ad_squad_report  [RUN]
[0m19:40:28.692832 [debug] [Thread-4  ]: Writing injected SQL for node "model.apple_search_ads.apple_search_ads__ad_group_report"
[0m19:40:28.723829 [debug] [Thread-14 ]: Writing injected SQL for node "model.apple_search_ads.apple_search_ads__search_term_report"
[0m19:40:28.732669 [debug] [Thread-13 ]: Began executing node model.apple_search_ads.apple_search_ads__campaign_report
[0m19:40:28.735945 [debug] [Thread-6  ]: Began compiling node model.google_ads.google_ads__keyword_report
[0m19:40:28.737182 [debug] [Thread-12 ]: Timing info for model.google_ads.google_ads__campaign_report (compile): 19:40:28.630174 => 19:40:28.736597
[0m19:40:28.753165 [debug] [Thread-2  ]: Began compiling node model.snapchat_ads.snapchat_ads__account_report
[0m19:40:28.765714 [debug] [Thread-9  ]: Began executing node model.apple_search_ads.apple_search_ads__keyword_report
[0m19:40:28.768073 [debug] [Thread-15 ]: Re-using an available connection from the pool (formerly model.twitter_ads_source.stg_twitter_ads__tweet_url, now model.snapchat_ads.snapchat_ads__ad_squad_report)
[0m19:40:28.764750 [debug] [Thread-7  ]: Writing runtime sql for node "model.apple_search_ads.apple_search_ads__organization_report"
[0m19:40:28.789233 [debug] [Thread-4  ]: Timing info for model.apple_search_ads.apple_search_ads__ad_group_report (compile): 19:40:28.677524 => 19:40:28.788598
[0m19:40:28.790927 [debug] [Thread-14 ]: Timing info for model.apple_search_ads.apple_search_ads__search_term_report (compile): 19:40:28.693527 => 19:40:28.790337
[0m19:40:28.793303 [debug] [Thread-13 ]: Writing runtime sql for node "model.apple_search_ads.apple_search_ads__campaign_report"
[0m19:40:28.800968 [debug] [Thread-12 ]: Began executing node model.google_ads.google_ads__campaign_report
[0m19:40:28.839689 [debug] [Thread-6  ]: Writing injected SQL for node "model.google_ads.google_ads__keyword_report"
[0m19:40:28.854826 [debug] [Thread-2  ]: Writing injected SQL for node "model.snapchat_ads.snapchat_ads__account_report"
[0m19:40:28.872108 [debug] [Thread-9  ]: Writing runtime sql for node "model.apple_search_ads.apple_search_ads__keyword_report"
[0m19:40:28.873202 [debug] [Thread-15 ]: Began compiling node model.snapchat_ads.snapchat_ads__ad_squad_report
[0m19:40:28.876292 [debug] [Thread-4  ]: Began executing node model.apple_search_ads.apple_search_ads__ad_group_report
[0m19:40:28.877589 [debug] [Thread-14 ]: Began executing node model.apple_search_ads.apple_search_ads__search_term_report
[0m19:40:28.885191 [debug] [Thread-7  ]: Opening a new connection, currently in state closed
[0m19:40:28.892206 [debug] [Thread-12 ]: Writing runtime sql for node "model.google_ads.google_ads__campaign_report"
[0m19:40:28.893571 [debug] [Thread-13 ]: Opening a new connection, currently in state closed
[0m19:40:28.896028 [debug] [Thread-2  ]: Timing info for model.snapchat_ads.snapchat_ads__account_report (compile): 19:40:28.811267 => 19:40:28.895412
[0m19:40:28.994613 [debug] [Thread-2  ]: Began executing node model.snapchat_ads.snapchat_ads__account_report
[0m19:40:28.944267 [debug] [Thread-4  ]: Writing runtime sql for node "model.apple_search_ads.apple_search_ads__ad_group_report"
[0m19:40:28.962714 [debug] [Thread-9  ]: Opening a new connection, currently in state closed
[0m19:40:28.977955 [debug] [Thread-15 ]: Writing injected SQL for node "model.snapchat_ads.snapchat_ads__ad_squad_report"
[0m19:40:28.981792 [debug] [Thread-14 ]: Writing runtime sql for node "model.apple_search_ads.apple_search_ads__search_term_report"
[0m19:40:28.983890 [debug] [Thread-12 ]: Opening a new connection, currently in state closed
[0m19:40:28.897553 [debug] [Thread-6  ]: Timing info for model.google_ads.google_ads__keyword_report (compile): 19:40:28.777151 => 19:40:28.896973
[0m19:40:29.003231 [debug] [Thread-4  ]: Opening a new connection, currently in state closed
[0m19:40:29.006018 [debug] [Thread-15 ]: Timing info for model.snapchat_ads.snapchat_ads__ad_squad_report (compile): 19:40:28.899168 => 19:40:29.005403
[0m19:40:29.007691 [debug] [Thread-14 ]: Opening a new connection, currently in state closed
[0m19:40:29.015751 [debug] [Thread-2  ]: Writing runtime sql for node "model.snapchat_ads.snapchat_ads__account_report"
[0m19:40:29.028176 [debug] [Thread-6  ]: Began executing node model.google_ads.google_ads__keyword_report
[0m19:40:29.047899 [debug] [Thread-15 ]: Began executing node model.snapchat_ads.snapchat_ads__ad_squad_report
[0m19:40:29.081571 [debug] [Thread-2  ]: Opening a new connection, currently in state closed
[0m19:40:29.086265 [debug] [Thread-6  ]: Writing runtime sql for node "model.google_ads.google_ads__keyword_report"
[0m19:40:29.102014 [debug] [Thread-15 ]: Writing runtime sql for node "model.snapchat_ads.snapchat_ads__ad_squad_report"
[0m19:40:29.104076 [debug] [Thread-6  ]: Opening a new connection, currently in state closed
[0m19:40:29.107830 [debug] [Thread-15 ]: Opening a new connection, currently in state closed
[0m19:40:29.341536 [debug] [Thread-3  ]: Timing info for model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report (execute): 19:40:26.240214 => 19:40:29.341032
[0m19:40:29.343535 [debug] [Thread-3  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd135777610>]}
[0m19:40:29.345085 [info ] [Thread-3  ]: 95 of 130 OK created sql table model marketing_full_v2_twitter_ads_source.stg_twitter_ads__promoted_tweet_report  [[32mCREATE TABLE (5.8k rows, 437.6 KiB processed)[0m in 5.52s]
[0m19:40:29.346989 [debug] [Thread-3  ]: Finished running node model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report
[0m19:40:29.348297 [debug] [Thread-3  ]: Began running node model.snapchat_ads.snapchat_ads__campaign_report
[0m19:40:29.350828 [info ] [Thread-3  ]: 110 of 130 START sql table model marketing_full_v2_snapchat_ads.snapchat_ads__campaign_report  [RUN]
[0m19:40:29.354140 [debug] [Thread-3  ]: Re-using an available connection from the pool (formerly model.twitter_ads_source.stg_twitter_ads__promoted_tweet_report, now model.snapchat_ads.snapchat_ads__campaign_report)
[0m19:40:29.360959 [debug] [Thread-3  ]: Began compiling node model.snapchat_ads.snapchat_ads__campaign_report
[0m19:40:29.399685 [debug] [Thread-3  ]: Writing injected SQL for node "model.snapchat_ads.snapchat_ads__campaign_report"
[0m19:40:29.423475 [debug] [Thread-3  ]: Timing info for model.snapchat_ads.snapchat_ads__campaign_report (compile): 19:40:29.363115 => 19:40:29.403031
[0m19:40:29.424674 [debug] [Thread-3  ]: Began executing node model.snapchat_ads.snapchat_ads__campaign_report
[0m19:40:29.478877 [debug] [Thread-3  ]: Writing runtime sql for node "model.snapchat_ads.snapchat_ads__campaign_report"
[0m19:40:29.488410 [debug] [Thread-3  ]: Opening a new connection, currently in state closed
[0m19:40:29.546946 [debug] [Thread-8  ]: Timing info for model.twitter_ads_source.stg_twitter_ads__campaign_history (execute): 19:40:26.094429 => 19:40:29.546486
[0m19:40:29.548731 [debug] [Thread-8  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd137247dc0>]}
[0m19:40:29.550473 [info ] [Thread-8  ]: 93 of 130 OK created sql table model marketing_full_v2_twitter_ads_source.stg_twitter_ads__campaign_history  [[32mCREATE TABLE (21.0 rows, 2.2 KiB processed)[0m in 6.51s]
[0m19:40:29.551849 [debug] [Thread-8  ]: Finished running node model.twitter_ads_source.stg_twitter_ads__campaign_history
[0m19:40:29.552742 [debug] [Thread-8  ]: Began running node model.tiktok_ads.tiktok_ads__advertiser_report
[0m19:40:29.554131 [info ] [Thread-8  ]: 111 of 130 START sql table model marketing_full_v2_tiktok_ads.tiktok_ads__advertiser_report  [RUN]
[0m19:40:29.555926 [debug] [Thread-8  ]: Re-using an available connection from the pool (formerly model.twitter_ads_source.stg_twitter_ads__campaign_history, now model.tiktok_ads.tiktok_ads__advertiser_report)
[0m19:40:29.557026 [debug] [Thread-8  ]: Began compiling node model.tiktok_ads.tiktok_ads__advertiser_report
[0m19:40:29.650777 [debug] [Thread-9  ]: On model.apple_search_ads.apple_search_ads__keyword_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.apple_search_ads.apple_search_ads__keyword_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_apple_search_ads`.`apple_search_ads__keyword_report`
      
    
    

    OPTIONS()
    as (
      

with report as (

    select *
    from `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__keyword_report`
), 

keyword as (

    select *
    from `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__keyword_history`
    where is_most_recent_record = True
), 

ad_group as (

    select *
    from `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__ad_group_history`
    where is_most_recent_record = True
), 

campaign as (

    select *
    from `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__campaign_history`
    where is_most_recent_record = True
), 

organization as (

    select * 
    from `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__organization`
), 

joined as (

    select 
        report.date_day,
        organization.organization_id,
        organization.organization_name,
        campaign.campaign_id, 
        campaign.campaign_name, 
        ad_group.ad_group_id,
        ad_group.ad_group_name,
        keyword.keyword_id,
        keyword.keyword_text,
        keyword.match_type,
        report.currency,
        keyword.keyword_status,
        sum(report.taps) as taps,
        sum(report.new_downloads) as new_downloads,
        sum(report.redownloads) as redownloads,
        sum(report.new_downloads + report.redownloads) as total_downloads,
        sum(report.impressions) as impressions,
        sum(report.spend) as spend

        




    from report
    join keyword 
        on report.keyword_id = keyword.keyword_id
    join ad_group 
        on keyword.ad_group_id = ad_group.ad_group_id
    join campaign 
        on ad_group.campaign_id = campaign.campaign_id
    join organization 
        on ad_group.organization_id = organization.organization_id
    group by 1,2,3,4,5,6,7,8,9,10,11,12
)

select * 
from joined
    );
  
[0m19:40:29.669444 [debug] [Thread-7  ]: On model.apple_search_ads.apple_search_ads__organization_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.apple_search_ads.apple_search_ads__organization_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_apple_search_ads`.`apple_search_ads__organization_report`
      
    
    

    OPTIONS()
    as (
      

with report as (
    
    select *
    from `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__campaign_report`
), 

campaign as (

    select *
    from `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__campaign_history`
    where is_most_recent_record = True
), 

organization as (

    select * 
    from `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__organization`
), 

joined as (

    select 
        report.date_day,
        organization.organization_id,
        organization.organization_name,
        organization.currency,
        sum(report.taps) as taps,
        sum(report.new_downloads) as new_downloads,
        sum(report.redownloads) as redownloads,
        sum(report.new_downloads + report.redownloads) as total_downloads,
        sum(report.impressions) as impressions,
        sum(report.spend) as spend

        




    from report
    join campaign 
        on report.campaign_id = campaign.campaign_id
    join organization 
        on campaign.organization_id = organization.organization_id
    group by 1,2,3,4
)

select * 
from joined
    );
  
[0m19:40:29.672877 [debug] [Thread-8  ]: Writing injected SQL for node "model.tiktok_ads.tiktok_ads__advertiser_report"
[0m19:40:29.674681 [debug] [Thread-8  ]: Timing info for model.tiktok_ads.tiktok_ads__advertiser_report (compile): 19:40:29.557746 => 19:40:29.674173
[0m19:40:29.675666 [debug] [Thread-8  ]: Began executing node model.tiktok_ads.tiktok_ads__advertiser_report
[0m19:40:29.730675 [debug] [Thread-13 ]: On model.apple_search_ads.apple_search_ads__campaign_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.apple_search_ads.apple_search_ads__campaign_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_apple_search_ads`.`apple_search_ads__campaign_report`
      
    
    

    OPTIONS()
    as (
      

with report as (
    
    select *
    from `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__campaign_report`

), 

campaign as (

    select *
    from `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__campaign_history`
    where is_most_recent_record = True
), 

organization as (

    select * 
    from `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__organization`

), 

joined as (

    select 
        report.date_day,
        campaign.organization_id,
        organization.organization_name,
        campaign.campaign_id, 
        campaign.campaign_name, 
        report.currency,
        campaign.campaign_status,
        campaign.start_at,
        campaign.end_at,
        sum(report.taps) as taps,
        sum(report.new_downloads) as new_downloads,
        sum(report.redownloads) as redownloads,
        sum(report.new_downloads + report.redownloads) as total_downloads,
        sum(report.impressions) as impressions,
        sum(report.spend) as spend

        




    from report
    join campaign 
        on report.campaign_id = campaign.campaign_id
    join organization 
        on campaign.organization_id = organization.organization_id
    group by 1,2,3,4,5,6,7,8,9
)

select * 
from joined
    );
  
[0m19:40:29.733879 [debug] [Thread-12 ]: On model.google_ads.google_ads__campaign_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.google_ads.google_ads__campaign_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_google_ads`.`google_ads__campaign_report`
      
    
    

    OPTIONS()
    as (
      

with stats as (

    select *
    from `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__campaign_stats`
), 

accounts as (

    select *
    from `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__account_history`
    where is_most_recent_record = True
), 

campaigns as (

    select *
    from `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__campaign_history`
    where is_most_recent_record = True
), 

fields as (

    select
        stats.date_day,
        accounts.account_name,
        accounts.account_id,
        accounts.currency_code,
        campaigns.campaign_name,
        stats.campaign_id,
        campaigns.advertising_channel_type,
        campaigns.advertising_channel_subtype,
        campaigns.status,
        sum(stats.spend) as spend,
        sum(stats.clicks) as clicks,
        sum(stats.impressions) as impressions

        





    from stats
    left join campaigns
        on stats.campaign_id = campaigns.campaign_id
    left join accounts
        on campaigns.account_id = accounts.account_id
    group by 1,2,3,4,5,6,7,8,9
)

select *
from fields
    );
  
[0m19:40:29.745810 [debug] [Thread-14 ]: On model.apple_search_ads.apple_search_ads__search_term_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.apple_search_ads.apple_search_ads__search_term_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_apple_search_ads`.`apple_search_ads__search_term_report`
      
    
    

    OPTIONS()
    as (
      

with report as (

    select *
    from `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__search_term_report`
), 

campaign as (

    select *
    from `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__campaign_history`
    where is_most_recent_record = True
), 

organization as (

    select * 
    from `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__organization`
), 

joined as (

    select 
        report.date_day,
        organization.organization_id,
        organization.organization_name,
        campaign.campaign_id, 
        campaign.campaign_name, 
        report.ad_group_id,
        report.ad_group_name,
        report.keyword_id,
        report.keyword_text,
        report.search_term_text,
        report.match_type,
        report.currency,
        sum(report.taps) as taps,
        sum(report.new_downloads) as new_downloads,
        sum(report.redownloads) as redownloads,
        sum(report.new_downloads + report.redownloads) as total_downloads,
        sum(report.impressions) as impressions,
        sum(report.spend) as spend

        




    from report
    join campaign 
        on report.campaign_id = campaign.campaign_id
    join organization 
        on campaign.organization_id = organization.organization_id
    where report.search_term_text is not null
    group by 1,2,3,4,5,6,7,8,9,10,11,12
)

select * 
from joined
    );
  
[0m19:40:29.750054 [debug] [Thread-4  ]: On model.apple_search_ads.apple_search_ads__ad_group_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.apple_search_ads.apple_search_ads__ad_group_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_apple_search_ads`.`apple_search_ads__ad_group_report`
      
    
    

    OPTIONS()
    as (
      

with report as (

    select *
    from `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__ad_group_report`
), 

ad_group as (

    select * 
    from `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__ad_group_history`
    where is_most_recent_record = True
), 

campaign as (

    select *
    from `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__campaign_history`
    where is_most_recent_record = True
), 

organization as (

    select * 
    from `drops-bi`.`marketing_full_v2_apple_search_ads_source`.`stg_apple_search_ads__organization`
), 

joined as (

    select 
        report.date_day,
        organization.organization_id,
        organization.organization_name,
        campaign.campaign_id, 
        campaign.campaign_name, 
        ad_group.ad_group_id,
        ad_group.ad_group_name,
        report.currency,
        ad_group.ad_group_status,
        ad_group.start_at, 
        ad_group.end_at,
        sum(report.taps) as taps,
        sum(report.new_downloads) as new_downloads,
        sum(report.redownloads) as redownloads,
        sum(report.new_downloads + report.redownloads) as total_downloads,
        sum(report.impressions) as impressions,
        sum(report.spend) as spend

        




    from report
    join ad_group 
        on report.ad_group_id = ad_group.ad_group_id
    join campaign 
        on ad_group.campaign_id = campaign.campaign_id
    join organization 
        on ad_group.organization_id = organization.organization_id
    group by 1,2,3,4,5,6,7,8,9,10,11
)

select * 
from joined
    );
  
[0m19:40:29.767625 [debug] [Thread-8  ]: Writing runtime sql for node "model.tiktok_ads.tiktok_ads__advertiser_report"
[0m19:40:29.772912 [debug] [Thread-8  ]: Opening a new connection, currently in state closed
[0m19:40:29.783266 [debug] [Thread-2  ]: On model.snapchat_ads.snapchat_ads__account_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.snapchat_ads.snapchat_ads__account_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_snapchat_ads`.`snapchat_ads__account_report`
      
    
    

    OPTIONS()
    as (
      

with ad_hourly as (

    select *
    from `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__ad_hourly_report`

), account as (

    select *
    from `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__ad_account_history`
    where is_most_recent_record = true

), ads as (

    select *
    from `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__ad_history`
    where is_most_recent_record = true

), ad_squads as (

    select *
    from `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__ad_squad_history`
    where is_most_recent_record = true

), campaigns as (

    select *
    from `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__campaign_history`
    where is_most_recent_record = true


), aggregated as (

    select
        cast(ad_hourly.date_hour as date) as date_day,
        account.ad_account_id,
        account.ad_account_name,
        account.currency,
        sum(ad_hourly.swipes) as swipes,
        sum(ad_hourly.impressions) as impressions,
        round(sum(ad_hourly.spend),2) as spend

        




    
    from ad_hourly
    left join ads 
        on ad_hourly.ad_id = ads.ad_id
    left join ad_squads
        on ads.ad_squad_id = ad_squads.ad_squad_id
    left join campaigns
        on ad_squads.campaign_id = campaigns.campaign_id
    left join account
        on campaigns.ad_account_id = account.ad_account_id

    group by 1,2,3,4

)

select *
from aggregated
    );
  
[0m19:40:29.790150 [debug] [Thread-6  ]: On model.google_ads.google_ads__keyword_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.google_ads.google_ads__keyword_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_google_ads`.`google_ads__keyword_report`
      
    
    

    OPTIONS()
    as (
      

with stats as (

    select *
    from `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__keyword_stats`
), 

accounts as (

    select *
    from `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__account_history`
    where is_most_recent_record = True
),

campaigns as (

    select *
    from `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__campaign_history`
    where is_most_recent_record = True
), 

ad_groups as (

    select *
    from `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__ad_group_history`
    where is_most_recent_record = True
), 

criterions as (

    select *
    from `drops-bi`.`marketing_full_v2_google_ads_source`.`stg_google_ads__ad_group_criterion_history`
    where is_most_recent_record = True
), 

fields as (

    select
        stats.date_day,
        accounts.account_name,
        stats.account_id,
        accounts.currency_code,
        campaigns.campaign_name,
        stats.campaign_id,
        ad_groups.ad_group_name,
        stats.ad_group_id,
        stats.criterion_id,
        criterions.type,
        criterions.status,
        criterions.keyword_match_type,
        criterions.keyword_text,
        sum(stats.spend) as spend,
        sum(stats.clicks) as clicks,
        sum(stats.impressions) as impressions

        





    from stats
    left join criterions
        on stats.criterion_id = criterions.criterion_id
    left join ad_groups
        on stats.ad_group_id = ad_groups.ad_group_id
    left join campaigns
        on stats.campaign_id = campaigns.campaign_id
    left join accounts
        on stats.account_id = accounts.account_id
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13
)

select *
from fields
    );
  
[0m19:40:29.796595 [debug] [Thread-5  ]: Timing info for model.google_ads.google_ads__account_report (execute): 19:40:24.579287 => 19:40:29.796080
[0m19:40:29.798812 [debug] [Thread-5  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd137965fd0>]}
[0m19:40:29.800215 [info ] [Thread-5  ]: 96 of 130 OK created sql table model marketing_full_v2_google_ads.google_ads__account_report  [[32mCREATE TABLE (774.0 rows, 230.9 KiB processed)[0m in 5.25s]
[0m19:40:29.801681 [debug] [Thread-5  ]: Finished running node model.google_ads.google_ads__account_report
[0m19:40:29.802717 [debug] [Thread-5  ]: Began running node model.tiktok_ads.tiktok_ads__ad_group_report
[0m19:40:29.804408 [info ] [Thread-5  ]: 112 of 130 START sql table model marketing_full_v2_tiktok_ads.tiktok_ads__ad_group_report  [RUN]
[0m19:40:29.806299 [debug] [Thread-5  ]: Re-using an available connection from the pool (formerly model.google_ads.google_ads__account_report, now model.tiktok_ads.tiktok_ads__ad_group_report)
[0m19:40:29.807577 [debug] [Thread-5  ]: Began compiling node model.tiktok_ads.tiktok_ads__ad_group_report
[0m19:40:29.830657 [debug] [Thread-15 ]: On model.snapchat_ads.snapchat_ads__ad_squad_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.snapchat_ads.snapchat_ads__ad_squad_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_snapchat_ads`.`snapchat_ads__ad_squad_report`
      
    
    

    OPTIONS()
    as (
      

with ad_squad_hourly as (

    select *
    from `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__ad_squad_hourly_report`

), account as (

    select *
    from `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__ad_account_history`
    where is_most_recent_record = true

), ad_squads as (

    select *
    from `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__ad_squad_history`
    where is_most_recent_record = true

), campaigns as (

    select *
    from `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__campaign_history`
    where is_most_recent_record = true


), aggregated as (

    select
        cast(ad_squad_hourly.date_hour as date) as date_day,
        account.ad_account_id,
        account.ad_account_name,
        campaigns.campaign_id,
        campaigns.campaign_name,
        ad_squad_hourly.ad_squad_id,
        ad_squads.ad_squad_name,
        account.currency,
        sum(ad_squad_hourly.swipes) as swipes,
        sum(ad_squad_hourly.impressions) as impressions,
        round(sum(ad_squad_hourly.spend),2) as spend
        
        




    
    from ad_squad_hourly
    left join ad_squads
        on ad_squad_hourly.ad_squad_id = ad_squads.ad_squad_id
    left join campaigns
        on ad_squads.campaign_id = campaigns.campaign_id
    left join account
        on campaigns.ad_account_id = account.ad_account_id
    
    group by 1,2,3,4,5,6,7,8

)

select *
from aggregated
    );
  
[0m19:40:29.824572 [debug] [Thread-5  ]: Writing injected SQL for node "model.tiktok_ads.tiktok_ads__ad_group_report"
[0m19:40:29.881732 [debug] [Thread-5  ]: Timing info for model.tiktok_ads.tiktok_ads__ad_group_report (compile): 19:40:29.808370 => 19:40:29.881121
[0m19:40:29.885556 [debug] [Thread-5  ]: Began executing node model.tiktok_ads.tiktok_ads__ad_group_report
[0m19:40:29.900964 [debug] [Thread-5  ]: Writing runtime sql for node "model.tiktok_ads.tiktok_ads__ad_group_report"
[0m19:40:29.964176 [debug] [Thread-5  ]: Opening a new connection, currently in state closed
[0m19:40:30.324902 [debug] [Thread-3  ]: On model.snapchat_ads.snapchat_ads__campaign_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.snapchat_ads.snapchat_ads__campaign_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_snapchat_ads`.`snapchat_ads__campaign_report`
      
    
    

    OPTIONS()
    as (
      

with campaign_hourly as (

    select *
    from `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__campaign_hourly_report`

), account as (

    select *
    from `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__ad_account_history`
    where is_most_recent_record = true

), campaigns as (

    select *
    from `drops-bi`.`marketing_full_v2_snapchat_ads_source`.`stg_snapchat_ads__campaign_history`
    where is_most_recent_record = true


), aggregated as (

    select
        cast(campaign_hourly.date_hour as date) as date_day,
        account.ad_account_id,
        account.ad_account_name,
        campaign_hourly.campaign_id,
        campaigns.campaign_name,
        account.currency,
        sum(campaign_hourly.swipes) as swipes,
        sum(campaign_hourly.impressions) as impressions,
        round(sum(campaign_hourly.spend),2) as spend
        
        




    
    from campaign_hourly
    left join campaigns
        on campaign_hourly.campaign_id = campaigns.campaign_id
    left join account
        on campaigns.ad_account_id = account.ad_account_id
    
    group by 1,2,3,4,5,6

)

select *
from aggregated
    );
  
[0m19:40:30.735577 [debug] [Thread-8  ]: On model.tiktok_ads.tiktok_ads__advertiser_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.tiktok_ads.tiktok_ads__advertiser_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_tiktok_ads`.`tiktok_ads__advertiser_report`
      
    
    

    OPTIONS()
    as (
      

with hourly as (
    
    select *
    from `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__ad_report_hourly`
),

advertiser as (

    select *
    from `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__advertiser`
), 

ads as (

    select *
    from `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__ad_history`
    where is_most_recent_record
), 

joined as (

    select
        cast(hourly.stat_time_hour as date) as date_day,
        ads.advertiser_id,
        advertiser.advertiser_name,
        advertiser.currency,
        sum(hourly.clicks) as clicks,
        sum(hourly.impressions) as impressions,
        sum(hourly.spend) as spend,
        sum(hourly.reach) as reach,
        sum(hourly.conversion) as conversion,
        sum(hourly.likes) as likes,
        sum(hourly.comments) as comments,
        sum(hourly.shares) as shares,
        sum(hourly.profile_visits) as profile_visits,
        sum(hourly.follows) as follows,
        sum(hourly.video_watched_2_s) as video_watched_2_s, 
        sum(hourly.video_watched_6_s) as video_watched_6_s, 
        sum(hourly.video_views_p_25) as video_views_p_25, 
        sum(hourly.video_views_p_50) as video_views_p_50,
        sum(hourly.video_views_p_75) as video_views_p_75,
        sum(hourly.spend)/nullif(sum(hourly.clicks),0) as daily_cpc,
        (sum(hourly.spend)/nullif(sum(hourly.impressions),0))*1000 as daily_cpm,
        (sum(hourly.clicks)/nullif(sum(hourly.impressions),0))*100 as daily_ctr

        




    
    from hourly
    left join ads
        on hourly.ad_id = ads.ad_id
    left join advertiser
        on ads.advertiser_id = advertiser.advertiser_id
    group by 1,2,3,4

)

select *
from joined
    );
  
[0m19:40:30.907195 [debug] [Thread-5  ]: On model.tiktok_ads.tiktok_ads__ad_group_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.tiktok_ads.tiktok_ads__ad_group_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_tiktok_ads`.`tiktok_ads__ad_group_report`
      
    
    

    OPTIONS()
    as (
      

with hourly as (
    
    select *
    from `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__ad_group_report_hourly`
), 

ad_groups as (

    select *
    from `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__ad_group_history`
    where is_most_recent_record
), 

advertiser as (

    select *
    from `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__advertiser`
), 

campaigns as (

    select *
    from `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__campaign_history`
    where is_most_recent_record
), 

aggregated as (

    select
        cast(hourly.stat_time_hour as date) as date_day,
        ad_groups.advertiser_id,
        advertiser.advertiser_name,
        campaigns.campaign_id,
        campaigns.campaign_name,
        hourly.ad_group_id,
        ad_groups.ad_group_name,
        advertiser.currency, 
        ad_groups.category,
        ad_groups.gender,
        ad_groups.audience_type,
        ad_groups.budget,
        sum(hourly.impressions) as impressions,
        sum(hourly.clicks) as clicks,
        sum(hourly.spend) as spend,
        sum(hourly.reach) as reach,
        sum(hourly.conversion) as conversion,
        sum(hourly.likes) as likes,
        sum(hourly.comments) as comments,
        sum(hourly.shares) as shares,
        sum(hourly.profile_visits) as profile_visits,
        sum(hourly.follows) as follows,
        sum(hourly.video_watched_2_s) as video_watched_2_s,
        sum(hourly.video_watched_6_s) as video_watched_6_s,
        sum(hourly.video_views_p_25) as video_views_p_25,
        sum(hourly.video_views_p_50) as video_views_p_50, 
        sum(hourly.video_views_p_75) as video_views_p_75,
        sum(hourly.spend)/nullif(sum(hourly.clicks),0) as daily_cpc,
        (sum(hourly.spend)/nullif(sum(hourly.impressions),0))*1000 as daily_cpm,
        (sum(hourly.clicks)/nullif(sum(hourly.impressions),0))*100 as daily_ctr

        




    
    from hourly
    left join ad_groups 
        on hourly.ad_group_id = ad_groups.ad_group_id
    left join advertiser
        on ad_groups.advertiser_id = advertiser.advertiser_id
    left join campaigns
        on ad_groups.campaign_id = campaigns.campaign_id
    group by 1,2,3,4,5,6,7,8,9,10,11,12

)

select *
from aggregated
    );
  
[0m19:40:30.960274 [debug] [Thread-11 ]: Timing info for model.google_ads.google_ads__ad_report (execute): 19:40:25.554840 => 19:40:30.959738
[0m19:40:30.962596 [debug] [Thread-11 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1360c3d30>]}
[0m19:40:30.965008 [info ] [Thread-11 ]: 97 of 130 OK created sql table model marketing_full_v2_google_ads.google_ads__ad_report  [[32mCREATE TABLE (5.1k rows, 1.2 MiB processed)[0m in 5.50s]
[0m19:40:30.967113 [debug] [Thread-11 ]: Finished running node model.google_ads.google_ads__ad_report
[0m19:40:30.968656 [debug] [Thread-11 ]: Began running node model.tiktok_ads.tiktok_ads__ad_report
[0m19:40:30.970088 [info ] [Thread-11 ]: 113 of 130 START sql table model marketing_full_v2_tiktok_ads.tiktok_ads__ad_report  [RUN]
[0m19:40:30.972375 [debug] [Thread-11 ]: Re-using an available connection from the pool (formerly model.google_ads.google_ads__ad_report, now model.tiktok_ads.tiktok_ads__ad_report)
[0m19:40:30.974001 [debug] [Thread-11 ]: Began compiling node model.tiktok_ads.tiktok_ads__ad_report
[0m19:40:31.005003 [debug] [Thread-11 ]: Writing injected SQL for node "model.tiktok_ads.tiktok_ads__ad_report"
[0m19:40:31.008198 [debug] [Thread-11 ]: Timing info for model.tiktok_ads.tiktok_ads__ad_report (compile): 19:40:30.974783 => 19:40:31.007563
[0m19:40:31.009424 [debug] [Thread-11 ]: Began executing node model.tiktok_ads.tiktok_ads__ad_report
[0m19:40:31.027378 [debug] [Thread-11 ]: Writing runtime sql for node "model.tiktok_ads.tiktok_ads__ad_report"
[0m19:40:31.029614 [debug] [Thread-11 ]: Opening a new connection, currently in state closed
[0m19:40:31.192865 [debug] [Thread-1  ]: Timing info for model.google_ads.google_ads__ad_group_report (execute): 19:40:26.400660 => 19:40:31.192538
[0m19:40:31.194113 [debug] [Thread-1  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1324c36d0>]}
[0m19:40:31.195068 [info ] [Thread-1  ]: 99 of 130 OK created sql table model marketing_full_v2_google_ads.google_ads__ad_group_report  [[32mCREATE TABLE (3.3k rows, 660.7 KiB processed)[0m in 4.84s]
[0m19:40:31.205059 [debug] [Thread-1  ]: Finished running node model.google_ads.google_ads__ad_group_report
[0m19:40:31.206403 [debug] [Thread-1  ]: Began running node model.tiktok_ads.tiktok_ads__url_report
[0m19:40:31.207997 [info ] [Thread-1  ]: 114 of 130 START sql table model marketing_full_v2_tiktok_ads.tiktok_ads__url_report  [RUN]
[0m19:40:31.209709 [debug] [Thread-1  ]: Re-using an available connection from the pool (formerly model.google_ads.google_ads__ad_group_report, now model.tiktok_ads.tiktok_ads__url_report)
[0m19:40:31.210562 [debug] [Thread-1  ]: Began compiling node model.tiktok_ads.tiktok_ads__url_report
[0m19:40:31.244229 [debug] [Thread-1  ]: Writing injected SQL for node "model.tiktok_ads.tiktok_ads__url_report"
[0m19:40:31.246766 [debug] [Thread-1  ]: Timing info for model.tiktok_ads.tiktok_ads__url_report (compile): 19:40:31.211318 => 19:40:31.246050
[0m19:40:31.248019 [debug] [Thread-1  ]: Began executing node model.tiktok_ads.tiktok_ads__url_report
[0m19:40:31.261784 [debug] [Thread-1  ]: Writing runtime sql for node "model.tiktok_ads.tiktok_ads__url_report"
[0m19:40:31.263714 [debug] [Thread-1  ]: Opening a new connection, currently in state closed
[0m19:40:31.658808 [debug] [Thread-11 ]: On model.tiktok_ads.tiktok_ads__ad_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.tiktok_ads.tiktok_ads__ad_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_tiktok_ads`.`tiktok_ads__ad_report`
      
    
    

    OPTIONS()
    as (
      

with hourly as (
    
    select *
    from `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__ad_report_hourly`
), 

ads as (

    select *
    from `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__ad_history`
    where is_most_recent_record
), 

ad_groups as (

    select *
    from `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__ad_group_history`
    where is_most_recent_record
), 

advertiser as (

    select *
    from `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__advertiser`
), 

campaigns as (

    select *
    from `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__campaign_history`
    where is_most_recent_record
),

aggregated as (

    select
        cast(hourly.stat_time_hour as date) as date_day,
        ad_groups.advertiser_id,
        advertiser.advertiser_name,
        campaigns.campaign_id,
        campaigns.campaign_name,
        ad_groups.ad_group_id,
        ad_groups.ad_group_name,
        hourly.ad_id,
        ads.ad_name,
        advertiser.currency,
        ad_groups.category,
        ad_groups.gender,
        ad_groups.audience_type,
        ad_groups.budget,
        sum(hourly.impressions) as impressions,
        sum(hourly.clicks) as clicks,
        sum(hourly.spend) as spend,
        sum(hourly.reach) as reach,
        sum(hourly.conversion) as conversion,
        sum(hourly.likes) as likes,
        sum(hourly.comments) as comments,
        sum(hourly.shares) as shares,
        sum(hourly.profile_visits) as profile_visits,
        sum(hourly.follows) as follows,
        sum(hourly.video_watched_2_s) as video_watched_2_s,
        sum(hourly.video_watched_6_s) as video_watched_6_s,
        sum(hourly.video_views_p_25) as video_views_p_25,
        sum(hourly.video_views_p_50) as video_views_p_50, 
        sum(hourly.video_views_p_75) as video_views_p_75,
        sum(hourly.spend)/nullif(sum(hourly.clicks),0) as daily_cpc,
        (sum(hourly.spend)/nullif(sum(hourly.impressions),0))*1000 as daily_cpm,
        (sum(hourly.clicks)/nullif(sum(hourly.impressions),0))*100 as daily_ctr

        




    
    from hourly
    left join ads
        on hourly.ad_id = ads.ad_id
    left join ad_groups 
        on ads.ad_group_id = ad_groups.ad_group_id
    left join advertiser
        on ads.advertiser_id = advertiser.advertiser_id
    left join campaigns
        on ads.campaign_id = campaigns.campaign_id
    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14

)

select *
from aggregated
    );
  
[0m19:40:31.673862 [debug] [Thread-10 ]: Timing info for model.google_ads.google_ads__url_report (execute): 19:40:26.123575 => 19:40:31.673406
[0m19:40:31.675725 [debug] [Thread-10 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1361fe970>]}
[0m19:40:31.677427 [info ] [Thread-10 ]: 98 of 130 OK created sql table model marketing_full_v2_google_ads.google_ads__url_report  [[32mCREATE TABLE (5.1k rows, 1.2 MiB processed)[0m in 5.62s]
[0m19:40:31.679472 [debug] [Thread-10 ]: Finished running node model.google_ads.google_ads__url_report
[0m19:40:31.680713 [debug] [Thread-10 ]: Began running node model.tiktok_ads.tiktok_ads__campaign_report
[0m19:40:31.685065 [info ] [Thread-10 ]: 115 of 130 START sql table model marketing_full_v2_tiktok_ads.tiktok_ads__campaign_report  [RUN]
[0m19:40:31.686764 [debug] [Thread-10 ]: Re-using an available connection from the pool (formerly model.google_ads.google_ads__url_report, now model.tiktok_ads.tiktok_ads__campaign_report)
[0m19:40:31.687523 [debug] [Thread-10 ]: Began compiling node model.tiktok_ads.tiktok_ads__campaign_report
[0m19:40:31.730735 [debug] [Thread-10 ]: Writing injected SQL for node "model.tiktok_ads.tiktok_ads__campaign_report"
[0m19:40:31.732791 [debug] [Thread-10 ]: Timing info for model.tiktok_ads.tiktok_ads__campaign_report (compile): 19:40:31.688155 => 19:40:31.732228
[0m19:40:31.733875 [debug] [Thread-10 ]: Began executing node model.tiktok_ads.tiktok_ads__campaign_report
[0m19:40:31.754188 [debug] [Thread-10 ]: Writing runtime sql for node "model.tiktok_ads.tiktok_ads__campaign_report"
[0m19:40:31.757191 [debug] [Thread-10 ]: Opening a new connection, currently in state closed
[0m19:40:31.783909 [debug] [Thread-1  ]: On model.tiktok_ads.tiktok_ads__url_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.tiktok_ads.tiktok_ads__url_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_tiktok_ads`.`tiktok_ads__url_report`
      
    
    

    OPTIONS()
    as (
      

with hourly as (
    
    select *
    from `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__ad_report_hourly`
), 

ads as (

    select *
    from `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__ad_history`
    where is_most_recent_record
), 

ad_groups as (

    select *
    from `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__ad_group_history`
    where is_most_recent_record
), 

advertiser as (

    select *
    from `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__advertiser`
), 

campaigns as (

    select *
    from `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__campaign_history`
    where is_most_recent_record
), 

aggregated as (

    select
        cast(hourly.stat_time_hour as date) as date_day,
        ad_groups.advertiser_id,
        advertiser.advertiser_name,
        campaigns.campaign_id,
        campaigns.campaign_name,
        ad_groups.ad_group_id,
        ad_groups.ad_group_name,
        hourly.ad_id,
        ads.ad_name,
        ads.base_url,
        ads.url_host,
        ads.url_path,
        ads.utm_source,
        ads.utm_medium,
        ads.utm_campaign,
        ads.utm_content,
        ads.utm_term,
        advertiser.currency,
        ad_groups.category,
        ad_groups.gender,
        ad_groups.audience_type,
        ad_groups.budget,
        sum(hourly.impressions) as impressions,
        sum(hourly.clicks) as clicks,
        sum(hourly.spend) as spend,
        sum(hourly.reach) as reach,
        sum(hourly.conversion) as conversion,
        sum(hourly.likes) as likes,
        sum(hourly.comments) as comments,
        sum(hourly.shares) as shares,
        sum(hourly.profile_visits) as profile_visits,
        sum(hourly.follows) as follows,
        sum(hourly.video_watched_2_s) as video_watched_2_s,
        sum(hourly.video_watched_6_s) as video_watched_6_s,
        sum(hourly.video_views_p_25) as video_views_p_25,
        sum(hourly.video_views_p_50) as video_views_p_50, 
        sum(hourly.video_views_p_75) as video_views_p_75,
        sum(hourly.spend)/nullif(sum(hourly.clicks),0) as daily_cpc,
        (sum(hourly.spend)/nullif(sum(hourly.impressions),0))*1000 as daily_cpm,
        (sum(hourly.clicks)/nullif(sum(hourly.impressions),0))*100 as daily_ctr

        




    
    from hourly
    left join ads
        on hourly.ad_id = ads.ad_id
    left join ad_groups 
        on ads.ad_group_id = ad_groups.ad_group_id
    left join advertiser
        on ads.advertiser_id = advertiser.advertiser_id
    left join campaigns
        on ads.campaign_id = campaigns.campaign_id

    
        -- We are filtering for only ads where url fields are populated.
        where ads.landing_page_url is not null
    

    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22

)

select *
from aggregated
    );
  
[0m19:40:32.051452 [debug] [Thread-10 ]: On model.tiktok_ads.tiktok_ads__campaign_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.tiktok_ads.tiktok_ads__campaign_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_tiktok_ads`.`tiktok_ads__campaign_report`
      
    
    

    OPTIONS()
    as (
      

with hourly as (
    
    select *
    from `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__campaign_report_hourly`
), 

campaigns as (

    select *
    from `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__campaign_history`
    where is_most_recent_record
), 

advertiser as (

    select *
    from `drops-bi`.`marketing_full_v2_stg_tiktok_ads`.`stg_tiktok_ads__advertiser`
), 

aggregated as (

    select
        cast(hourly.stat_time_hour as date) as date_day,
        advertiser.advertiser_id,
        advertiser.advertiser_name,
        hourly.campaign_id,
        campaigns.campaign_name,
        advertiser.currency,
        sum(hourly.impressions) as impressions,
        sum(hourly.clicks) as clicks,
        sum(hourly.spend) as spend,
        sum(hourly.reach) as reach,
        sum(hourly.conversion) as conversion,
        sum(hourly.likes) as likes,
        sum(hourly.comments) as comments,
        sum(hourly.shares) as shares,
        sum(hourly.profile_visits) as profile_visits,
        sum(hourly.follows) as follows,
        sum(hourly.video_watched_2_s) as video_watched_2_s,
        sum(hourly.video_watched_6_s) as video_watched_6_s,
        sum(hourly.video_views_p_25) as video_views_p_25,
        sum(hourly.video_views_p_50) as video_views_p_50, 
        sum(hourly.video_views_p_75) as video_views_p_75,
        sum(hourly.spend)/nullif(sum(hourly.clicks),0) as daily_cpc,
        (sum(hourly.spend)/nullif(sum(hourly.impressions),0))*1000 as daily_cpm,
        (sum(hourly.clicks)/nullif(sum(hourly.impressions),0))*100 as daily_ctr

        




    
    from hourly
    left join campaigns
        on hourly.campaign_id = campaigns.campaign_id
    left join advertiser
        on campaigns.advertiser_id = advertiser.advertiser_id
    group by 1,2,3,4,5,6

)

select *
from aggregated
    );
  
[0m19:40:32.669606 [debug] [Thread-9  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:829e718e-7cc2-4261-aa5c-72b52c720038&page=queryresults
[0m19:40:32.767716 [debug] [Thread-14 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:caabbc85-1970-483b-ae80-907ec39c453d&page=queryresults
[0m19:40:32.843085 [debug] [Thread-7  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:243b1537-a77d-4f19-933c-74b8731511be&page=queryresults
[0m19:40:32.849161 [debug] [Thread-12 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:ab24d685-1f7d-40e1-a29a-a0a12a5ef8ef&page=queryresults
[0m19:40:32.855291 [debug] [Thread-6  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:364202bc-f825-4e51-816a-de171882301a&page=queryresults
[0m19:40:32.888399 [debug] [Thread-13 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:f761f551-ed16-4bb7-94ee-e9de224d3236&page=queryresults
[0m19:40:32.913621 [debug] [Thread-4  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:e9043719-4ccc-4a84-875a-652708d00929&page=queryresults
[0m19:40:32.940583 [debug] [Thread-15 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:227cbebb-7c08-43a4-9e65-35e1c46229f6&page=queryresults
[0m19:40:32.942046 [debug] [Thread-2  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:725e999c-29b1-413d-bf9b-3163a3f658e8&page=queryresults
[0m19:40:32.950642 [debug] [Thread-3  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:840056df-2ce7-4dda-ae8e-be6b81adcc8d&page=queryresults
[0m19:40:33.247910 [debug] [Thread-5  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:0665b516-b958-435b-b816-92686ba5f401&page=queryresults
[0m19:40:33.647358 [debug] [Thread-1  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:fe0f7b5d-c6b8-43e1-b481-9d99c3f07a62&page=queryresults
[0m19:40:33.693767 [debug] [Thread-11 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:c800e3b3-ec89-4412-91c7-9a833c186205&page=queryresults
[0m19:40:33.953276 [debug] [Thread-10 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:bfe574f1-2a71-4645-9517-cc0af9994f8e&page=queryresults
[0m19:40:34.164075 [debug] [Thread-8  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:61d1c283-6282-497d-a044-23f3497fe4c8&page=queryresults
[0m19:40:35.135906 [debug] [Thread-9  ]: Timing info for model.apple_search_ads.apple_search_ads__keyword_report (execute): 19:40:28.855634 => 19:40:35.135340
[0m19:40:35.137968 [debug] [Thread-9  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13c2591c0>]}
[0m19:40:35.139673 [info ] [Thread-9  ]: 103 of 130 OK created sql table model marketing_full_v2_apple_search_ads.apple_search_ads__keyword_report  [[32mCREATE TABLE (11.7k rows, 975.5 KiB processed)[0m in 6.57s]
[0m19:40:35.142327 [debug] [Thread-9  ]: Finished running node model.apple_search_ads.apple_search_ads__keyword_report
[0m19:40:35.144049 [debug] [Thread-9  ]: Began running node model.snapchat_ads.snapchat_ads__ad_report
[0m19:40:35.145526 [info ] [Thread-9  ]: 116 of 130 SKIP relation marketing_full_v2_snapchat_ads.snapchat_ads__ad_report  [[33mSKIP[0m]
[0m19:40:35.149874 [debug] [Thread-9  ]: Finished running node model.snapchat_ads.snapchat_ads__ad_report
[0m19:40:35.151124 [debug] [Thread-9  ]: Began running node model.snapchat_ads.snapchat_ads__url_report
[0m19:40:35.152370 [info ] [Thread-9  ]: 117 of 130 SKIP relation marketing_full_v2_snapchat_ads.snapchat_ads__url_report  [[33mSKIP[0m]
[0m19:40:35.162986 [debug] [Thread-9  ]: Finished running node model.snapchat_ads.snapchat_ads__url_report
[0m19:40:35.167862 [debug] [Thread-9  ]: Began running node model.twitter_ads.twitter_ads__account_report
[0m19:40:35.170146 [info ] [Thread-9  ]: 118 of 130 START sql table model marketing_full_v2_twitter_ads.twitter_ads__account_report  [RUN]
[0m19:40:35.172879 [debug] [Thread-9  ]: Re-using an available connection from the pool (formerly model.apple_search_ads.apple_search_ads__keyword_report, now model.twitter_ads.twitter_ads__account_report)
[0m19:40:35.174146 [debug] [Thread-9  ]: Began compiling node model.twitter_ads.twitter_ads__account_report
[0m19:40:35.226437 [debug] [Thread-9  ]: Writing injected SQL for node "model.twitter_ads.twitter_ads__account_report"
[0m19:40:35.230615 [debug] [Thread-9  ]: Timing info for model.twitter_ads.twitter_ads__account_report (compile): 19:40:35.181731 => 19:40:35.229932
[0m19:40:35.232645 [debug] [Thread-9  ]: Began executing node model.twitter_ads.twitter_ads__account_report
[0m19:40:35.249151 [debug] [Thread-9  ]: Writing runtime sql for node "model.twitter_ads.twitter_ads__account_report"
[0m19:40:35.251013 [debug] [Thread-9  ]: Opening a new connection, currently in state closed
[0m19:40:35.374873 [debug] [Thread-9  ]: On model.twitter_ads.twitter_ads__account_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.twitter_ads.twitter_ads__account_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_twitter_ads`.`twitter_ads__account_report`
      
    
    

    OPTIONS()
    as (
      

with accounts as (

    select *
    from `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__account_history`
    where is_latest_version
),

promoted_tweet_report as (
    
    select *
    from `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__promoted_tweet_report`
),

rollup_report as (

    select 
        date_day,
        account_id,
        placement,
        sum(clicks) as clicks, 
        sum(impressions) as impressions,
        sum(spend) as spend,
        sum(spend_micro) as spend_micro,
        sum(url_clicks) as url_clicks

        





    from promoted_tweet_report
    group by 1,2,3

),

final as (

    select 
        report.date_day,
        report.placement, 
        report.account_id,
        accounts.name as account_name,
        accounts.is_deleted,
        accounts.timezone,
        accounts.industry_type,
        accounts.approval_status,
        accounts.business_name,
        accounts.business_id,
        accounts.created_timestamp,
        accounts.updated_timestamp,
        accounts.timezone_switched_timestamp,
        sum(report.clicks) as clicks, 
        sum(report.impressions) as impressions,
        sum(report.spend) as spend,
        sum(report.spend_micro) as spend_micro,
        sum(report.url_clicks) as url_clicks

        





    from rollup_report as report
    left join accounts 
        on report.account_id = accounts.account_id

    group by 1,2,3,4,5,6,7,8,9,10,11,12,13
)

select *
from final
    );
  
[0m19:40:35.727935 [debug] [Thread-12 ]: Timing info for model.google_ads.google_ads__campaign_report (execute): 19:40:28.879084 => 19:40:35.727412
[0m19:40:35.735149 [debug] [Thread-12 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1324e72b0>]}
[0m19:40:35.739995 [debug] [Thread-13 ]: Timing info for model.apple_search_ads.apple_search_ads__campaign_report (execute): 19:40:28.771149 => 19:40:35.739436
[0m19:40:35.745521 [info ] [Thread-12 ]: 106 of 130 OK created sql table model marketing_full_v2_google_ads.google_ads__campaign_report  [[32mCREATE TABLE (2.5k rows, 452.0 KiB processed)[0m in 7.13s]
[0m19:40:35.766615 [debug] [Thread-14 ]: Timing info for model.apple_search_ads.apple_search_ads__search_term_report (execute): 19:40:28.947690 => 19:40:35.766068
[0m19:40:35.769631 [debug] [Thread-13 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd137973790>]}
[0m19:40:35.774887 [debug] [Thread-12 ]: Finished running node model.google_ads.google_ads__campaign_report
[0m19:40:35.785451 [debug] [Thread-14 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1324b45b0>]}
[0m19:40:35.787243 [info ] [Thread-13 ]: 102 of 130 OK created sql table model marketing_full_v2_apple_search_ads.apple_search_ads__campaign_report  [[32mCREATE TABLE (1.3k rows, 109.6 KiB processed)[0m in 7.21s]
[0m19:40:35.788654 [debug] [Thread-12 ]: Began running node model.twitter_ads.twitter_ads__campaign_report
[0m19:40:35.803469 [info ] [Thread-14 ]: 105 of 130 OK created sql table model marketing_full_v2_apple_search_ads.apple_search_ads__search_term_report  [[32mCREATE TABLE (6.7k rows, 2.9 MiB processed)[0m in 7.18s]
[0m19:40:35.806225 [debug] [Thread-13 ]: Finished running node model.apple_search_ads.apple_search_ads__campaign_report
[0m19:40:35.807602 [info ] [Thread-12 ]: 119 of 130 START sql table model marketing_full_v2_twitter_ads.twitter_ads__campaign_report  [RUN]
[0m19:40:35.811709 [debug] [Thread-14 ]: Finished running node model.apple_search_ads.apple_search_ads__search_term_report
[0m19:40:35.814715 [debug] [Thread-13 ]: Began running node model.twitter_ads.twitter_ads__keyword_report
[0m19:40:35.818051 [debug] [Thread-12 ]: Re-using an available connection from the pool (formerly model.google_ads.google_ads__campaign_report, now model.twitter_ads.twitter_ads__campaign_report)
[0m19:40:35.819771 [debug] [Thread-14 ]: Began running node model.twitter_ads.twitter_ads__line_item_report
[0m19:40:35.835617 [info ] [Thread-13 ]: 120 of 130 SKIP relation marketing_full_v2_twitter_ads.twitter_ads__keyword_report  [[33mSKIP[0m]
[0m19:40:35.895017 [debug] [Thread-13 ]: Finished running node model.twitter_ads.twitter_ads__keyword_report
[0m19:40:35.840921 [info ] [Thread-14 ]: 121 of 130 START sql table model marketing_full_v2_twitter_ads.twitter_ads__line_item_report  [RUN]
[0m19:40:35.898367 [debug] [Thread-14 ]: Re-using an available connection from the pool (formerly model.apple_search_ads.apple_search_ads__search_term_report, now model.twitter_ads.twitter_ads__line_item_report)
[0m19:40:35.899589 [debug] [Thread-14 ]: Began compiling node model.twitter_ads.twitter_ads__line_item_report
[0m19:40:35.896397 [debug] [Thread-13 ]: Began running node model.twitter_ads.twitter_ads__promoted_tweet_report
[0m19:40:35.909088 [info ] [Thread-13 ]: 122 of 130 START sql table model marketing_full_v2_twitter_ads.twitter_ads__promoted_tweet_report  [RUN]
[0m19:40:35.911362 [debug] [Thread-13 ]: Re-using an available connection from the pool (formerly model.apple_search_ads.apple_search_ads__campaign_report, now model.twitter_ads.twitter_ads__promoted_tweet_report)
[0m19:40:35.912662 [debug] [Thread-13 ]: Began compiling node model.twitter_ads.twitter_ads__promoted_tweet_report
[0m19:40:35.838084 [debug] [Thread-12 ]: Began compiling node model.twitter_ads.twitter_ads__campaign_report
[0m19:40:35.992535 [debug] [Thread-12 ]: Writing injected SQL for node "model.twitter_ads.twitter_ads__campaign_report"
[0m19:40:36.010605 [debug] [Thread-12 ]: Timing info for model.twitter_ads.twitter_ads__campaign_report (compile): 19:40:35.931099 => 19:40:36.010011
[0m19:40:36.011773 [debug] [Thread-12 ]: Began executing node model.twitter_ads.twitter_ads__campaign_report
[0m19:40:36.032869 [debug] [Thread-12 ]: Writing runtime sql for node "model.twitter_ads.twitter_ads__campaign_report"
[0m19:40:36.037778 [debug] [Thread-14 ]: Writing injected SQL for node "model.twitter_ads.twitter_ads__line_item_report"
[0m19:40:36.008432 [debug] [Thread-13 ]: Writing injected SQL for node "model.twitter_ads.twitter_ads__promoted_tweet_report"
[0m19:40:36.045766 [debug] [Thread-12 ]: Opening a new connection, currently in state closed
[0m19:40:36.056385 [debug] [Thread-13 ]: Timing info for model.twitter_ads.twitter_ads__promoted_tweet_report (compile): 19:40:35.913513 => 19:40:36.055740
[0m19:40:36.057533 [debug] [Thread-13 ]: Began executing node model.twitter_ads.twitter_ads__promoted_tweet_report
[0m19:40:36.065557 [debug] [Thread-14 ]: Timing info for model.twitter_ads.twitter_ads__line_item_report (compile): 19:40:35.900431 => 19:40:36.065008
[0m19:40:36.066633 [debug] [Thread-14 ]: Began executing node model.twitter_ads.twitter_ads__line_item_report
[0m19:40:36.081945 [debug] [Thread-13 ]: Writing runtime sql for node "model.twitter_ads.twitter_ads__promoted_tweet_report"
[0m19:40:36.084343 [debug] [Thread-14 ]: Writing runtime sql for node "model.twitter_ads.twitter_ads__line_item_report"
[0m19:40:36.093918 [debug] [Thread-14 ]: Opening a new connection, currently in state closed
[0m19:40:36.096615 [debug] [Thread-13 ]: Opening a new connection, currently in state closed
[0m19:40:36.234085 [debug] [Thread-15 ]: Timing info for model.snapchat_ads.snapchat_ads__ad_squad_report (execute): 19:40:29.087113 => 19:40:36.233524
[0m19:40:36.239580 [debug] [Thread-2  ]: Timing info for model.snapchat_ads.snapchat_ads__account_report (execute): 19:40:28.995480 => 19:40:36.238647
[0m19:40:36.245030 [debug] [Thread-4  ]: Timing info for model.apple_search_ads.apple_search_ads__ad_group_report (execute): 19:40:28.909945 => 19:40:36.244445
[0m19:40:36.247497 [debug] [Thread-15 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd136d12df0>]}
[0m19:40:36.254913 [debug] [Thread-6  ]: Timing info for model.google_ads.google_ads__keyword_report (execute): 19:40:29.067649 => 19:40:36.254045
[0m19:40:36.269985 [debug] [Thread-5  ]: Timing info for model.tiktok_ads.tiktok_ads__ad_group_report (execute): 19:40:29.887434 => 19:40:36.269507
[0m19:40:36.272144 [debug] [Thread-2  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13678feb0>]}
[0m19:40:36.274252 [debug] [Thread-4  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13c25ca60>]}
[0m19:40:36.275999 [info ] [Thread-15 ]: 109 of 130 OK created sql table model marketing_full_v2_snapchat_ads.snapchat_ads__ad_squad_report  [[32mCREATE TABLE (5.8k rows, 9.4 MiB processed)[0m in 7.48s]
[0m19:40:36.278045 [debug] [Thread-6  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1324fd820>]}
[0m19:40:36.283758 [debug] [Thread-5  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13c1ee700>]}
[0m19:40:36.282990 [info ] [Thread-2  ]: 108 of 130 OK created sql table model marketing_full_v2_snapchat_ads.snapchat_ads__account_report  [[32mCREATE TABLE (1.2k rows, 24.5 MiB processed)[0m in 7.60s]
[0m19:40:36.287864 [info ] [Thread-4  ]: 100 of 130 OK created sql table model marketing_full_v2_apple_search_ads.apple_search_ads__ad_group_report  [[32mCREATE TABLE (1.6k rows, 138.7 KiB processed)[0m in 7.65s]
[0m19:40:36.290467 [debug] [Thread-15 ]: Finished running node model.snapchat_ads.snapchat_ads__ad_squad_report
[0m19:40:36.293304 [info ] [Thread-6  ]: 107 of 130 OK created sql table model marketing_full_v2_google_ads.google_ads__keyword_report  [[32mCREATE TABLE (22.6k rows, 3.3 MiB processed)[0m in 7.61s]
[0m19:40:36.295380 [info ] [Thread-5  ]: 112 of 130 OK created sql table model marketing_full_v2_tiktok_ads.tiktok_ads__ad_group_report  [[32mCREATE TABLE (4.2k rows, 8.0 MiB processed)[0m in 6.48s]
[0m19:40:36.297308 [debug] [Thread-2  ]: Finished running node model.snapchat_ads.snapchat_ads__account_report
[0m19:40:36.299561 [debug] [Thread-4  ]: Finished running node model.apple_search_ads.apple_search_ads__ad_group_report
[0m19:40:36.302393 [debug] [Thread-15 ]: Began running node model.twitter_ads.twitter_ads__url_report
[0m19:40:36.324055 [info ] [Thread-15 ]: 123 of 130 START sql table model marketing_full_v2_twitter_ads.twitter_ads__url_report  [RUN]
[0m19:40:36.305518 [debug] [Thread-12 ]: On model.twitter_ads.twitter_ads__campaign_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.twitter_ads.twitter_ads__campaign_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_twitter_ads`.`twitter_ads__campaign_report`
      
    
    

    OPTIONS()
    as (
      

with report as (

    select *
    from `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__campaign_report`
),

campaigns as (

    select *
    from `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__campaign_history`
    where is_latest_version
),

accounts as (

    select *
    from `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__account_history`
    where is_latest_version
),

final as (

    select 
        report.date_day,
        report.placement, 
        report.account_id,
        accounts.name as account_name,
        report.campaign_id,
        campaigns.campaign_name,
        campaigns.is_deleted,
        campaigns.entity_status as campaign_status,
        campaigns.currency,
        campaigns.is_servable,
        campaigns.is_standard_delivery,
        campaigns.frequency_cap,
        campaigns.start_timestamp,
        campaigns.end_timestamp,
        campaigns.created_timestamp,
        campaigns.updated_timestamp,
        campaigns.funding_instrument_id,
        campaigns.daily_budget_amount,
        campaigns.total_budget_amount,
        sum(report.clicks) as clicks, 
        sum(report.impressions) as impressions,
        sum(report.spend) as spend,
        sum(report.spend_micro) as spend_micro,
        sum(report.url_clicks) as url_clicks

        





    from report 
    left join campaigns 
        on report.campaign_id = campaigns.campaign_id
    left join accounts
        on report.account_id = accounts.account_id

    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19
)

select *
from final
    );
  
[0m19:40:36.315640 [debug] [Thread-14 ]: On model.twitter_ads.twitter_ads__line_item_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.twitter_ads.twitter_ads__line_item_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_twitter_ads`.`twitter_ads__line_item_report`
      
    
    

    OPTIONS()
    as (
      

with report as (

    select *
    from `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__line_item_report`
),

line_items as (

    select *
    from `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__line_item_history`
    where is_latest_version
),

campaigns as (

    select *
    from `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__campaign_history`
    where is_latest_version
),

accounts as (

    select *
    from `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__account_history`
    where is_latest_version
),

final as (

    select 
        report.date_day,
        report.placement, 
        report.account_id,
        accounts.name as account_name,
        line_items.campaign_id,
        campaigns.campaign_name,
        report.line_item_id,
        line_items.name as line_item_name,
        line_items.is_deleted,
        line_items.entity_status as line_item_status,
        campaigns.entity_status as campaign_status,
        line_items.currency,
        line_items.advertiser_domain,
        line_items.advertiser_user_id,
        line_items.bid_type,
        line_items.bid_unit,
        line_items.charge_by,
        line_items.objective,
        line_items.optimization,
        line_items.product_type,
        line_items.primary_web_event_tag,
        line_items.creative_source,
        line_items.start_timestamp,
        line_items.end_timestamp,
        line_items.created_timestamp,
        line_items.updated_timestamp,
        line_items.target_cpa,
        line_items.total_budget_amount,
        line_items.bid_amount,
        sum(report.clicks) as clicks, 
        sum(report.impressions) as impressions,
        sum(report.spend) as spend,
        sum(report.spend_micro) as spend_micro,
        sum(report.url_clicks) as url_clicks

        





    from report 
    left join line_items
        on report.line_item_id = line_items.line_item_id
    left join campaigns 
        on line_items.campaign_id = campaigns.campaign_id
    left join accounts
        on report.account_id = accounts.account_id

    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29
)

select *
from final
    );
  
[0m19:40:36.317591 [debug] [Thread-6  ]: Finished running node model.google_ads.google_ads__keyword_report
[0m19:40:36.319945 [debug] [Thread-5  ]: Finished running node model.tiktok_ads.tiktok_ads__ad_group_report
[0m19:40:36.321798 [debug] [Thread-2  ]: Began running node model.ad_reporting.int_ad_reporting__search_report
[0m19:40:36.326535 [debug] [Thread-15 ]: Re-using an available connection from the pool (formerly model.snapchat_ads.snapchat_ads__ad_squad_report, now model.twitter_ads.twitter_ads__url_report)
[0m19:40:36.345243 [debug] [Thread-15 ]: Began compiling node model.twitter_ads.twitter_ads__url_report
[0m19:40:36.339781 [debug] [Thread-5  ]: Began running node model.ad_reporting.int_ad_reporting__keyword_report
[0m19:40:36.343269 [debug] [Thread-2  ]: Re-using an available connection from the pool (formerly model.snapchat_ads.snapchat_ads__account_report, now model.ad_reporting.int_ad_reporting__search_report)
[0m19:40:36.382737 [debug] [Thread-2  ]: Began compiling node model.ad_reporting.int_ad_reporting__search_report
[0m19:40:36.364104 [debug] [Thread-5  ]: Finished running node model.ad_reporting.int_ad_reporting__keyword_report
[0m19:40:36.415967 [debug] [Thread-15 ]: Writing injected SQL for node "model.twitter_ads.twitter_ads__url_report"
[0m19:40:36.313246 [debug] [Thread-13 ]: On model.twitter_ads.twitter_ads__promoted_tweet_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.twitter_ads.twitter_ads__promoted_tweet_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_twitter_ads`.`twitter_ads__promoted_tweet_report`
      
    
    

    OPTIONS()
    as (
      

with report as (

    select *
    from `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__promoted_tweet_report`
),

campaigns as (

    select *
    from `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__campaign_history`
    where is_latest_version
),

accounts as (

    select *
    from `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__account_history`
    where is_latest_version
),

line_items as (

    select *
    from `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__line_item_history`
    where is_latest_version
),

promoted_tweets as (

    select *
    from `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__promoted_tweet_history`
    where is_latest_version
),

tweets as (

    select *
    from `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__tweet`
),

final as (

    select 
        report.date_day,
        report.placement, 
        accounts.account_id,
        accounts.name as account_name,
        campaigns.campaign_id,
        campaigns.campaign_name,
        line_items.line_item_id,
        line_items.name as line_item_name,
        promoted_tweets.promoted_tweet_id,
        promoted_tweets.tweet_id,
        tweets.name as tweet_name,
        tweets.full_text,
        promoted_tweets.is_deleted,
        promoted_tweets.entity_status as promoted_tweet_status,
        campaigns.entity_status as campaign_status,
        line_items.entity_status as line_item_status,
        tweets.language,
        campaigns.currency,
        promoted_tweets.approval_status,
        promoted_tweets.created_timestamp,
        promoted_tweets.updated_timestamp,
        sum(report.clicks) as clicks, 
        sum(report.impressions) as impressions,
        sum(report.spend) as spend,
        sum(report.spend_micro) as spend_micro,
        sum(report.url_clicks) as url_clicks

        





    from report 
    left join promoted_tweets 
        on report.promoted_tweet_id = promoted_tweets.promoted_tweet_id
    left join tweets
        on promoted_tweets.tweet_id = tweets.tweet_id
    left join line_items
        on promoted_tweets.line_item_id = line_items.line_item_id
    left join campaigns 
        on line_items.campaign_id = campaigns.campaign_id
    left join accounts
        on report.account_id = accounts.account_id

    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21
)

select *
from final
    );
  
[0m19:40:36.423677 [debug] [Thread-6  ]: Began running node model.ad_reporting.ad_reporting__keyword_report
[0m19:40:36.436412 [info ] [Thread-6  ]: 124 of 130 SKIP relation marketing_full_v2_ad_reporting.ad_reporting__keyword_report  [[33mSKIP[0m]
[0m19:40:36.437999 [debug] [Thread-6  ]: Finished running node model.ad_reporting.ad_reporting__keyword_report
[0m19:40:36.445902 [debug] [Thread-15 ]: Timing info for model.twitter_ads.twitter_ads__url_report (compile): 19:40:36.348057 => 19:40:36.444267
[0m19:40:36.454283 [debug] [Thread-2  ]: Writing injected SQL for node "model.ad_reporting.int_ad_reporting__search_report"
[0m19:40:36.456114 [debug] [Thread-15 ]: Began executing node model.twitter_ads.twitter_ads__url_report
[0m19:40:36.483720 [debug] [Thread-15 ]: Writing runtime sql for node "model.twitter_ads.twitter_ads__url_report"
[0m19:40:36.485564 [debug] [Thread-15 ]: Opening a new connection, currently in state closed
[0m19:40:36.487737 [debug] [Thread-2  ]: Timing info for model.ad_reporting.int_ad_reporting__search_report (compile): 19:40:36.383695 => 19:40:36.487213
[0m19:40:36.491378 [debug] [Thread-2  ]: Finished running node model.ad_reporting.int_ad_reporting__search_report
[0m19:40:36.495664 [debug] [Thread-5  ]: Began running node model.ad_reporting.ad_reporting__search_report
[0m19:40:36.497423 [info ] [Thread-5  ]: 125 of 130 START sql table model marketing_full_v2_ad_reporting.ad_reporting__search_report  [RUN]
[0m19:40:36.499588 [debug] [Thread-5  ]: Re-using an available connection from the pool (formerly model.tiktok_ads.tiktok_ads__ad_group_report, now model.ad_reporting.ad_reporting__search_report)
[0m19:40:36.500884 [debug] [Thread-5  ]: Began compiling node model.ad_reporting.ad_reporting__search_report
[0m19:40:36.552304 [debug] [Thread-5  ]: Writing injected SQL for node "model.ad_reporting.ad_reporting__search_report"
[0m19:40:36.556368 [debug] [Thread-5  ]: Timing info for model.ad_reporting.ad_reporting__search_report (compile): 19:40:36.503139 => 19:40:36.555630
[0m19:40:36.557626 [debug] [Thread-5  ]: Began executing node model.ad_reporting.ad_reporting__search_report
[0m19:40:36.601544 [debug] [Thread-10 ]: Timing info for model.tiktok_ads.tiktok_ads__campaign_report (execute): 19:40:31.734616 => 19:40:36.601037
[0m19:40:36.603580 [debug] [Thread-10 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd136fd35e0>]}
[0m19:40:36.605213 [info ] [Thread-10 ]: 115 of 130 OK created sql table model marketing_full_v2_tiktok_ads.tiktok_ads__campaign_report  [[32mCREATE TABLE (3.2k rows, 6.1 MiB processed)[0m in 4.92s]
[0m19:40:36.610410 [debug] [Thread-10 ]: Finished running node model.tiktok_ads.tiktok_ads__campaign_report
[0m19:40:36.607863 [debug] [Thread-5  ]: Writing runtime sql for node "model.ad_reporting.ad_reporting__search_report"
[0m19:40:36.614205 [debug] [Thread-5  ]: Opening a new connection, currently in state closed
[0m19:40:36.813473 [debug] [Thread-15 ]: On model.twitter_ads.twitter_ads__url_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.twitter_ads.twitter_ads__url_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_twitter_ads`.`twitter_ads__url_report`
      
    
    

    OPTIONS()
    as (
      

with report as (

    select *
    from `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__promoted_tweet_report`
),

campaigns as (

    select *
    from `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__campaign_history`
    where is_latest_version
),

accounts as (

    select *
    from `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__account_history`
    where is_latest_version
),

line_items as (

    select *
    from `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__line_item_history`
    where is_latest_version
),

promoted_tweets as (

    select *
    from `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__promoted_tweet_history`
    where is_latest_version
),

tweets as (

    select *
    from `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__tweet`
),

tweet_url as (

    select *
    from `drops-bi`.`marketing_full_v2_twitter_ads_source`.`stg_twitter_ads__tweet_url`
    where index = 0
),

final as (

    select 
        report.date_day,
        report.placement, 
        accounts.account_id,
        accounts.name as account_name,
        campaigns.campaign_id,
        campaigns.campaign_name,
        line_items.line_item_id,
        line_items.name as line_item_name,
        promoted_tweets.promoted_tweet_id,
        promoted_tweets.tweet_id,
        tweets.name as tweet_name,
        tweets.full_text as tweet_full_text,
        tweet_url.base_url,
        tweet_url.url_host,
        tweet_url.url_path,
        tweet_url.utm_source,
        tweet_url.utm_medium,
        tweet_url.utm_campaign,
        tweet_url.utm_content,
        tweet_url.utm_term,
        tweet_url.expanded_url,
        tweet_url.display_url,
        campaigns.currency,
        sum(report.clicks) as clicks, 
        sum(report.impressions) as impressions,
        sum(report.spend) as spend,
        sum(report.spend_micro) as spend_micro,
        sum(report.url_clicks) as url_clicks

        





    from report 
    left join promoted_tweets 
        on report.promoted_tweet_id = promoted_tweets.promoted_tweet_id
    left join tweet_url 
        on promoted_tweets.tweet_id = tweet_url.tweet_id
    left join tweets
        on promoted_tweets.tweet_id = tweets.tweet_id
    left join line_items
        on promoted_tweets.line_item_id = line_items.line_item_id
    left join campaigns 
        on line_items.campaign_id = campaigns.campaign_id
    left join accounts
        on report.account_id = accounts.account_id
    
    
        where tweet_url.expanded_url is not null
    

    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23

    
)

select *
from final
    );
  
[0m19:40:36.870529 [debug] [Thread-5  ]: On model.ad_reporting.ad_reporting__search_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.ad_reporting.ad_reporting__search_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_ad_reporting`.`ad_reporting__search_report`
      
    
    

    OPTIONS()
    as (
      
    





with  __dbt__cte__int_ad_reporting__search_report as (

    





with 



apple_search_ads as (

    select 
    

    cast(date_day as date)

 as date_day,
    cast( 'apple_search_ads' as STRING) as platform,

    cast(organization_id as STRING) as account_id

    
    ,cast(organization_name as STRING) as account_name

    
    ,cast(ad_group_id as STRING) as ad_group_id

    
    ,cast(ad_group_name as STRING) as ad_group_name

    
    ,cast(campaign_id as STRING) as campaign_id

    
    ,cast(campaign_name as STRING) as campaign_name

    
    ,cast(taps as INT64) as clicks

    ,cast(impressions as INT64) as impressions

    ,cast(keyword_id as STRING) as keyword_id

    
    ,cast(keyword_text as STRING) as keyword_text

    
    ,cast(match_type as STRING) as search_match_type

    
    ,cast(search_term_text as STRING) as search_query

    
    ,cast(spend as FLOAT64) as spend

    
from `drops-bi`.`marketing_full_v2_apple_search_ads`.`apple_search_ads__search_term_report`

), 




unioned as (

    


select * from apple_search_ads




)

select *
from unioned
), base as (

    select *
    from __dbt__cte__int_ad_reporting__search_report
),

aggregated as (
    
    select 
        date_day,
        platform,
        account_id,
        account_name,
        campaign_id,
        campaign_name,
        ad_group_id,
        ad_group_name,
        keyword_id,
        keyword_text,
        search_query,
        search_match_type,
        sum(clicks) as clicks,
        sum(impressions) as impressions,
        sum(spend) as spend 

        





    from base
    group by 1,2,3,4,5,6,7,8,9,10,11,12
)

select *
from aggregated
    );
  
[0m19:40:37.706846 [debug] [Thread-7  ]: Timing info for model.apple_search_ads.apple_search_ads__organization_report (execute): 19:40:28.742735 => 19:40:37.706327
[0m19:40:37.709198 [debug] [Thread-7  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13608edf0>]}
[0m19:40:37.710906 [info ] [Thread-7  ]: 104 of 130 OK created sql table model marketing_full_v2_apple_search_ads.apple_search_ads__organization_report  [[32mCREATE TABLE (513.0 rows, 102.1 KiB processed)[0m in 9.18s]
[0m19:40:37.712540 [debug] [Thread-7  ]: Finished running node model.apple_search_ads.apple_search_ads__organization_report
[0m19:40:37.811028 [debug] [Thread-8  ]: Timing info for model.tiktok_ads.tiktok_ads__advertiser_report (execute): 19:40:29.676355 => 19:40:37.810528
[0m19:40:37.812984 [debug] [Thread-8  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd137247a60>]}
[0m19:40:37.814515 [info ] [Thread-8  ]: 111 of 130 OK created sql table model marketing_full_v2_tiktok_ads.tiktok_ads__advertiser_report  [[32mCREATE TABLE (858.0 rows, 21.7 MiB processed)[0m in 8.26s]
[0m19:40:37.816233 [debug] [Thread-8  ]: Finished running node model.tiktok_ads.tiktok_ads__advertiser_report
[0m19:40:37.886100 [debug] [Thread-1  ]: Timing info for model.tiktok_ads.tiktok_ads__url_report (execute): 19:40:31.248928 => 19:40:37.885615
[0m19:40:37.888098 [debug] [Thread-1  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd136172b20>]}
[0m19:40:37.889465 [info ] [Thread-1  ]: 114 of 130 OK created sql table model marketing_full_v2_tiktok_ads.tiktok_ads__url_report  [[32mCREATE TABLE (14.0k rows, 21.7 MiB processed)[0m in 6.68s]
[0m19:40:37.891040 [debug] [Thread-1  ]: Finished running node model.tiktok_ads.tiktok_ads__url_report
[0m19:40:38.447627 [debug] [Thread-11 ]: Timing info for model.tiktok_ads.tiktok_ads__ad_report (execute): 19:40:31.010283 => 19:40:38.447115
[0m19:40:38.449746 [debug] [Thread-11 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1356df310>]}
[0m19:40:38.451438 [info ] [Thread-11 ]: 113 of 130 OK created sql table model marketing_full_v2_tiktok_ads.tiktok_ads__ad_report  [[32mCREATE TABLE (14.0k rows, 21.7 MiB processed)[0m in 7.48s]
[0m19:40:38.453678 [debug] [Thread-11 ]: Finished running node model.tiktok_ads.tiktok_ads__ad_report
[0m19:40:38.521109 [debug] [Thread-12 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:1ead9e4c-7d5c-4fe2-b91d-d513e32f4b2f&page=queryresults
[0m19:40:38.531801 [debug] [Thread-3  ]: Timing info for model.snapchat_ads.snapchat_ads__campaign_report (execute): 19:40:29.425521 => 19:40:38.531316
[0m19:40:38.534003 [debug] [Thread-3  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd135601a90>]}
[0m19:40:38.535870 [info ] [Thread-3  ]: 110 of 130 OK created sql table model marketing_full_v2_snapchat_ads.snapchat_ads__campaign_report  [[32mCREATE TABLE (81.0k rows, 129.8 MiB processed)[0m in 9.18s]
[0m19:40:38.538350 [debug] [Thread-3  ]: Finished running node model.snapchat_ads.snapchat_ads__campaign_report
[0m19:40:38.581243 [debug] [Thread-9  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:c21146fd-e7f1-4b7b-8b2d-e1415056630f&page=queryresults
[0m19:40:38.605055 [debug] [Thread-13 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:01422213-581d-4a31-9dbe-f95d1260c576&page=queryresults
[0m19:40:38.721694 [debug] [Thread-15 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:447f76bc-696c-4ee8-ae45-f1d9544bdbe8&page=queryresults
[0m19:40:39.211711 [debug] [Thread-5  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:2b12f328-8a37-4b77-ad37-75543423720a&page=queryresults
[0m19:40:39.238963 [debug] [Thread-14 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:e26c41ee-d7ac-4246-86e8-211f6532abe1&page=queryresults
[0m19:40:41.041428 [debug] [Thread-9  ]: Timing info for model.twitter_ads.twitter_ads__account_report (execute): 19:40:35.234681 => 19:40:41.040948
[0m19:40:41.043538 [debug] [Thread-9  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13c1e2f40>]}
[0m19:40:41.208852 [debug] [Thread-15 ]: Timing info for model.twitter_ads.twitter_ads__url_report (execute): 19:40:36.457415 => 19:40:41.208371
[0m19:40:41.210745 [debug] [Thread-15 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd135639d60>]}
[0m19:40:41.382235 [debug] [Thread-12 ]: Timing info for model.twitter_ads.twitter_ads__campaign_report (execute): 19:40:36.012566 => 19:40:41.381688
[0m19:40:41.384357 [debug] [Thread-12 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13c5dfcd0>]}
[0m19:40:41.637303 [debug] [Thread-13 ]: Timing info for model.twitter_ads.twitter_ads__promoted_tweet_report (execute): 19:40:36.058380 => 19:40:41.636748
[0m19:40:41.639290 [debug] [Thread-13 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13c1a0ca0>]}
[0m19:40:41.650421 [debug] [Thread-5  ]: Timing info for model.ad_reporting.ad_reporting__search_report (execute): 19:40:36.558457 => 19:40:41.649891
[0m19:40:41.652507 [debug] [Thread-5  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13c61ce50>]}
[0m19:40:41.978013 [debug] [Thread-14 ]: Timing info for model.twitter_ads.twitter_ads__line_item_report (execute): 19:40:36.067413 => 19:40:41.977495
[0m19:40:41.980226 [debug] [Thread-14 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13562be50>]}
[0m19:40:42.612650 [info ] [Thread-9  ]: 118 of 130 OK created sql table model marketing_full_v2_twitter_ads.twitter_ads__account_report  [[32mCREATE TABLE (404.0 rows, 437.8 KiB processed)[0m in 5.87s]
[0m19:40:42.613929 [info ] [Thread-15 ]: 123 of 130 OK created sql table model marketing_full_v2_twitter_ads.twitter_ads__url_report  [[32mCREATE TABLE (0.0 rows, 536.7 KiB processed)[0m in 4.88s]
[0m19:40:42.615378 [info ] [Thread-12 ]: 119 of 130 OK created sql table model marketing_full_v2_twitter_ads.twitter_ads__campaign_report  [[32mCREATE TABLE (933.0 rows, 78.5 KiB processed)[0m in 5.57s]
[0m19:40:42.621045 [debug] [Thread-9  ]: Finished running node model.twitter_ads.twitter_ads__account_report
[0m19:40:42.616868 [info ] [Thread-13 ]: 122 of 130 OK created sql table model marketing_full_v2_twitter_ads.twitter_ads__promoted_tweet_report  [[32mCREATE TABLE (5.8k rows, 541.9 KiB processed)[0m in 5.73s]
[0m19:40:42.618072 [info ] [Thread-5  ]: 125 of 130 OK created sql table model marketing_full_v2_ad_reporting.ad_reporting__search_report  [[32mCREATE TABLE (6.7k rows, 1.6 MiB processed)[0m in 5.15s]
[0m19:40:42.619772 [info ] [Thread-14 ]: 121 of 130 OK created sql table model marketing_full_v2_twitter_ads.twitter_ads__line_item_report  [[32mCREATE TABLE (2.1k rows, 177.3 KiB processed)[0m in 6.08s]
[0m19:40:42.623580 [debug] [Thread-15 ]: Finished running node model.twitter_ads.twitter_ads__url_report
[0m19:40:42.625341 [debug] [Thread-12 ]: Finished running node model.twitter_ads.twitter_ads__campaign_report
[0m19:40:42.627047 [debug] [Thread-6  ]: Began running node model.ad_reporting.int_ad_reporting__account_report
[0m19:40:42.628820 [debug] [Thread-13 ]: Finished running node model.twitter_ads.twitter_ads__promoted_tweet_report
[0m19:40:42.630504 [debug] [Thread-5  ]: Finished running node model.ad_reporting.ad_reporting__search_report
[0m19:40:42.632579 [debug] [Thread-14 ]: Finished running node model.twitter_ads.twitter_ads__line_item_report
[0m19:40:42.635507 [debug] [Thread-4  ]: Began running node model.ad_reporting.int_ad_reporting__url_report
[0m19:40:42.654517 [debug] [Thread-4  ]: Finished running node model.ad_reporting.int_ad_reporting__url_report
[0m19:40:42.637693 [debug] [Thread-6  ]: Re-using an available connection from the pool (formerly model.google_ads.google_ads__keyword_report, now model.ad_reporting.int_ad_reporting__account_report)
[0m19:40:42.655629 [debug] [Thread-6  ]: Began compiling node model.ad_reporting.int_ad_reporting__account_report
[0m19:40:42.651776 [debug] [Thread-1  ]: Began running node model.ad_reporting.int_ad_reporting__ad_report
[0m19:40:42.650225 [debug] [Thread-7  ]: Began running node model.ad_reporting.int_ad_reporting__campaign_report
[0m19:40:42.676315 [debug] [Thread-3  ]: Began running node model.ad_reporting.int_ad_reporting__ad_group_report
[0m19:40:42.677559 [debug] [Thread-9  ]: Began running node model.ad_reporting.ad_reporting__url_report
[0m19:40:42.694551 [debug] [Thread-1  ]: Finished running node model.ad_reporting.int_ad_reporting__ad_report
[0m19:40:42.712364 [debug] [Thread-7  ]: Re-using an available connection from the pool (formerly model.apple_search_ads.apple_search_ads__organization_report, now model.ad_reporting.int_ad_reporting__campaign_report)
[0m19:40:42.714363 [debug] [Thread-3  ]: Re-using an available connection from the pool (formerly model.snapchat_ads.snapchat_ads__campaign_report, now model.ad_reporting.int_ad_reporting__ad_group_report)
[0m19:40:42.736933 [debug] [Thread-3  ]: Began compiling node model.ad_reporting.int_ad_reporting__ad_group_report
[0m19:40:42.727168 [info ] [Thread-9  ]: 126 of 130 SKIP relation marketing_full_v2_ad_reporting.ad_reporting__url_report  [[33mSKIP[0m]
[0m19:40:42.735405 [debug] [Thread-7  ]: Began compiling node model.ad_reporting.int_ad_reporting__campaign_report
[0m19:40:42.765601 [debug] [Thread-6  ]: Writing injected SQL for node "model.ad_reporting.int_ad_reporting__account_report"
[0m19:40:42.775413 [debug] [Thread-15 ]: Began running node model.ad_reporting.ad_reporting__ad_report
[0m19:40:42.798696 [debug] [Thread-9  ]: Finished running node model.ad_reporting.ad_reporting__url_report
[0m19:40:42.865035 [info ] [Thread-15 ]: 127 of 130 SKIP relation marketing_full_v2_ad_reporting.ad_reporting__ad_report  [[33mSKIP[0m]
[0m19:40:42.888534 [debug] [Thread-15 ]: Finished running node model.ad_reporting.ad_reporting__ad_report
[0m19:40:42.905478 [debug] [Thread-3  ]: Writing injected SQL for node "model.ad_reporting.int_ad_reporting__ad_group_report"
[0m19:40:42.937205 [debug] [Thread-6  ]: Timing info for model.ad_reporting.int_ad_reporting__account_report (compile): 19:40:42.656974 => 19:40:42.936579
[0m19:40:42.938435 [debug] [Thread-3  ]: Timing info for model.ad_reporting.int_ad_reporting__ad_group_report (compile): 19:40:42.737486 => 19:40:42.937890
[0m19:40:42.951918 [debug] [Thread-7  ]: Writing injected SQL for node "model.ad_reporting.int_ad_reporting__campaign_report"
[0m19:40:42.954452 [debug] [Thread-6  ]: Finished running node model.ad_reporting.int_ad_reporting__account_report
[0m19:40:42.957346 [debug] [Thread-3  ]: Finished running node model.ad_reporting.int_ad_reporting__ad_group_report
[0m19:40:42.960105 [debug] [Thread-10 ]: Began running node model.ad_reporting.ad_reporting__account_report
[0m19:40:42.961931 [debug] [Thread-8  ]: Began running node model.ad_reporting.ad_reporting__ad_group_report
[0m19:40:42.963532 [info ] [Thread-10 ]: 128 of 130 START sql table model marketing_full_v2_ad_reporting.ad_reporting__account_report  [RUN]
[0m19:40:42.965348 [info ] [Thread-8  ]: 129 of 130 START sql table model marketing_full_v2_ad_reporting.ad_reporting__ad_group_report  [RUN]
[0m19:40:42.966875 [debug] [Thread-7  ]: Timing info for model.ad_reporting.int_ad_reporting__campaign_report (compile): 19:40:42.827466 => 19:40:42.966267
[0m19:40:42.968753 [debug] [Thread-10 ]: Re-using an available connection from the pool (formerly model.tiktok_ads.tiktok_ads__campaign_report, now model.ad_reporting.ad_reporting__account_report)
[0m19:40:42.971151 [debug] [Thread-8  ]: Re-using an available connection from the pool (formerly model.tiktok_ads.tiktok_ads__advertiser_report, now model.ad_reporting.ad_reporting__ad_group_report)
[0m19:40:42.973860 [debug] [Thread-7  ]: Finished running node model.ad_reporting.int_ad_reporting__campaign_report
[0m19:40:42.975244 [debug] [Thread-10 ]: Began compiling node model.ad_reporting.ad_reporting__account_report
[0m19:40:42.976499 [debug] [Thread-8  ]: Began compiling node model.ad_reporting.ad_reporting__ad_group_report
[0m19:40:42.978520 [debug] [Thread-11 ]: Began running node model.ad_reporting.ad_reporting__campaign_report
[0m19:40:42.996346 [debug] [Thread-10 ]: Writing injected SQL for node "model.ad_reporting.ad_reporting__account_report"
[0m19:40:43.021672 [info ] [Thread-11 ]: 130 of 130 START sql table model marketing_full_v2_ad_reporting.ad_reporting__campaign_report  [RUN]
[0m19:40:43.031144 [debug] [Thread-8  ]: Writing injected SQL for node "model.ad_reporting.ad_reporting__ad_group_report"
[0m19:40:43.033143 [debug] [Thread-11 ]: Re-using an available connection from the pool (formerly model.tiktok_ads.tiktok_ads__ad_report, now model.ad_reporting.ad_reporting__campaign_report)
[0m19:40:43.035547 [debug] [Thread-11 ]: Began compiling node model.ad_reporting.ad_reporting__campaign_report
[0m19:40:43.042961 [debug] [Thread-10 ]: Timing info for model.ad_reporting.ad_reporting__account_report (compile): 19:40:42.979340 => 19:40:43.042305
[0m19:40:43.057331 [debug] [Thread-8  ]: Timing info for model.ad_reporting.ad_reporting__ad_group_report (compile): 19:40:42.997045 => 19:40:43.056686
[0m19:40:43.064223 [debug] [Thread-10 ]: Began executing node model.ad_reporting.ad_reporting__account_report
[0m19:40:43.068772 [debug] [Thread-11 ]: Writing injected SQL for node "model.ad_reporting.ad_reporting__campaign_report"
[0m19:40:43.080914 [debug] [Thread-11 ]: Timing info for model.ad_reporting.ad_reporting__campaign_report (compile): 19:40:43.036464 => 19:40:43.080459
[0m19:40:43.081651 [debug] [Thread-11 ]: Began executing node model.ad_reporting.ad_reporting__campaign_report
[0m19:40:43.070130 [debug] [Thread-8  ]: Began executing node model.ad_reporting.ad_reporting__ad_group_report
[0m19:40:43.078847 [debug] [Thread-10 ]: Writing runtime sql for node "model.ad_reporting.ad_reporting__account_report"
[0m19:40:43.094601 [debug] [Thread-11 ]: Writing runtime sql for node "model.ad_reporting.ad_reporting__campaign_report"
[0m19:40:43.106835 [debug] [Thread-10 ]: Opening a new connection, currently in state closed
[0m19:40:43.109433 [debug] [Thread-8  ]: Writing runtime sql for node "model.ad_reporting.ad_reporting__ad_group_report"
[0m19:40:43.112577 [debug] [Thread-11 ]: Opening a new connection, currently in state closed
[0m19:40:43.116155 [debug] [Thread-8  ]: Opening a new connection, currently in state closed
[0m19:40:43.312113 [debug] [Thread-11 ]: On model.ad_reporting.ad_reporting__campaign_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.ad_reporting.ad_reporting__campaign_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_ad_reporting`.`ad_reporting__campaign_report`
      
    
    

    OPTIONS()
    as (
      


with  __dbt__cte__int_ad_reporting__campaign_report as (



with


twitter_ads as (
    select 
    

    cast(date_day as date)

 as date_day,
    cast( 'twitter_ads' as STRING) as platform,

    cast(account_id as STRING) as account_id

    
    ,cast(account_name as STRING) as account_name

    
    ,cast(campaign_id as STRING) as campaign_id

    
    ,cast(campaign_name as STRING) as campaign_name

    
    ,cast(clicks as INT64) as clicks

    ,cast(impressions as INT64) as impressions

    ,cast(spend as FLOAT64) as spend

    
from `drops-bi`.`marketing_full_v2_twitter_ads`.`twitter_ads__campaign_report`

),





google_ads as (
    select 
    

    cast(date_day as date)

 as date_day,
    cast( 'google_ads' as STRING) as platform,

    cast(account_id as STRING) as account_id

    
    ,cast(account_name as STRING) as account_name

    
    ,cast(campaign_id as STRING) as campaign_id

    
    ,cast(campaign_name as STRING) as campaign_name

    
    ,cast(clicks as INT64) as clicks

    ,cast(impressions as INT64) as impressions

    ,cast(spend as FLOAT64) as spend

    
from `drops-bi`.`marketing_full_v2_google_ads`.`google_ads__campaign_report`

),






apple_search_ads as (

    select 
    

    cast(date_day as date)

 as date_day,
    cast( 'apple_search_ads' as STRING) as platform,

    cast(organization_id as STRING) as account_id

    
    ,cast(organization_name as STRING) as account_name

    
    ,cast(campaign_id as STRING) as campaign_id

    
    ,cast(campaign_name as STRING) as campaign_name

    
    ,cast(taps as INT64) as clicks

    ,cast(impressions as INT64) as impressions

    ,cast(spend as FLOAT64) as spend

    
from `drops-bi`.`marketing_full_v2_apple_search_ads`.`apple_search_ads__campaign_report`

),







snapchat_ads as (

    select 
    

    cast(date_day as date)

 as date_day,
    cast( 'snapchat_ads' as STRING) as platform,

    cast(ad_account_id as STRING) as account_id

    
    ,cast(ad_account_name as STRING) as account_name

    
    ,cast(campaign_id as STRING) as campaign_id

    
    ,cast(campaign_name as STRING) as campaign_name

    
    ,cast(swipes as INT64) as clicks

    ,cast(impressions as INT64) as impressions

    ,cast(spend as FLOAT64) as spend

    
from `drops-bi`.`marketing_full_v2_snapchat_ads`.`snapchat_ads__campaign_report`

), 



tiktok_ads as (

    select 
    

    cast(date_day as date)

 as date_day,
    cast( 'tiktok_ads' as STRING) as platform,

    cast(advertiser_id as STRING) as account_id

    
    ,cast(advertiser_name as STRING) as account_name

    
    ,cast(campaign_id as STRING) as campaign_id

    
    ,cast(campaign_name as STRING) as campaign_name

    
    ,cast(clicks as INT64) as clicks

    ,cast(impressions as INT64) as impressions

    ,cast(spend as FLOAT64) as spend

    
from `drops-bi`.`marketing_full_v2_tiktok_ads`.`tiktok_ads__campaign_report`

), 






unioned as (

    


select * from apple_search_ads

union all

select * from google_ads

union all

select * from snapchat_ads

union all

select * from tiktok_ads

union all

select * from twitter_ads




)

select *
from unioned
), base as (

    select *
    from __dbt__cte__int_ad_reporting__campaign_report
),

aggregated as (
    
    select 
        date_day,
        platform,
        account_id,
        account_name,
        campaign_id,
        campaign_name,
        sum(clicks) as clicks,
        sum(impressions) as impressions,
        sum(spend) as spend 

        





    from base
    group by 1,2,3,4,5,6
)

select *
from aggregated
    );
  
[0m19:40:43.339006 [debug] [Thread-10 ]: On model.ad_reporting.ad_reporting__account_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.ad_reporting.ad_reporting__account_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_ad_reporting`.`ad_reporting__account_report`
      
    
    

    OPTIONS()
    as (
      


with  __dbt__cte__int_ad_reporting__account_report as (



with


twitter_ads as (
    select 
    

    cast(date_day as date)

 as date_day,
    cast( 'twitter_ads' as STRING) as platform,

    cast(account_id as STRING) as account_id

    
    ,cast(account_name as STRING) as account_name

    
    ,cast(clicks as INT64) as clicks

    ,cast(impressions as INT64) as impressions

    ,cast(spend as FLOAT64) as spend

    
from `drops-bi`.`marketing_full_v2_twitter_ads`.`twitter_ads__account_report`

),





google_ads as (
    select 
    

    cast(date_day as date)

 as date_day,
    cast( 'google_ads' as STRING) as platform,

    cast(account_id as STRING) as account_id

    
    ,cast(account_name as STRING) as account_name

    
    ,cast(clicks as INT64) as clicks

    ,cast(impressions as INT64) as impressions

    ,cast(spend as FLOAT64) as spend

    
from `drops-bi`.`marketing_full_v2_google_ads`.`google_ads__account_report`

),






apple_search_ads as (

    select 
    

    cast(date_day as date)

 as date_day,
    cast( 'apple_search_ads' as STRING) as platform,

    cast(organization_id as STRING) as account_id

    
    ,cast(organization_name as STRING) as account_name

    
    ,cast(taps as INT64) as clicks

    ,cast(impressions as INT64) as impressions

    ,cast(spend as FLOAT64) as spend

    
from `drops-bi`.`marketing_full_v2_apple_search_ads`.`apple_search_ads__organization_report`

),







snapchat_ads as (

    select 
    

    cast(date_day as date)

 as date_day,
    cast( 'snapchat_ads' as STRING) as platform,

    cast(ad_account_id as STRING) as account_id

    
    ,cast(ad_account_name as STRING) as account_name

    
    ,cast(swipes as INT64) as clicks

    ,cast(impressions as INT64) as impressions

    ,cast(spend as FLOAT64) as spend

    
from `drops-bi`.`marketing_full_v2_snapchat_ads`.`snapchat_ads__account_report`

), 



tiktok_ads as (

    select 
    

    cast(date_day as date)

 as date_day,
    cast( 'tiktok_ads' as STRING) as platform,

    cast(advertiser_id as STRING) as account_id

    
    ,cast(advertiser_name as STRING) as account_name

    
    ,cast(clicks as INT64) as clicks

    ,cast(impressions as INT64) as impressions

    ,cast(spend as FLOAT64) as spend

    
from `drops-bi`.`marketing_full_v2_tiktok_ads`.`tiktok_ads__advertiser_report`

), 






unioned as (

    


select * from apple_search_ads

union all

select * from google_ads

union all

select * from snapchat_ads

union all

select * from tiktok_ads

union all

select * from twitter_ads




)

select *
from unioned
), base as (

    select *
    from __dbt__cte__int_ad_reporting__account_report
),

aggregated as (
    
    select 
        date_day,
        platform,
        account_id,
        account_name,
        sum(clicks) as clicks,
        sum(impressions) as impressions,
        sum(spend) as spend 

        





    from base
    group by 1,2,3,4
)

select *
from aggregated
    );
  
[0m19:40:43.344164 [debug] [Thread-8  ]: On model.ad_reporting.ad_reporting__ad_group_report: /* {"app": "dbt", "dbt_version": "1.6.2", "profile_name": "dbt_ads_test", "target_name": "dev", "node_id": "model.ad_reporting.ad_reporting__ad_group_report"} */

  
    

    create or replace table `drops-bi`.`marketing_full_v2_ad_reporting`.`ad_reporting__ad_group_report`
      
    
    

    OPTIONS()
    as (
      


with  __dbt__cte__int_ad_reporting__ad_group_report as (



with


google_ads as (
    select 
    

    cast(date_day as date)

 as date_day,
    cast( 'google_ads' as STRING) as platform,

    cast(account_id as STRING) as account_id

    
    ,cast(account_name as STRING) as account_name

    
    ,cast(ad_group_id as STRING) as ad_group_id

    
    ,cast(ad_group_name as STRING) as ad_group_name

    
    ,cast(campaign_id as STRING) as campaign_id

    
    ,cast(campaign_name as STRING) as campaign_name

    
    ,cast(clicks as INT64) as clicks

    ,cast(impressions as INT64) as impressions

    ,cast(spend as FLOAT64) as spend

    
from `drops-bi`.`marketing_full_v2_google_ads`.`google_ads__ad_group_report`

),






apple_search_ads as (

    select 
    

    cast(date_day as date)

 as date_day,
    cast( 'apple_search_ads' as STRING) as platform,

    cast(organization_id as STRING) as account_id

    
    ,cast(organization_name as STRING) as account_name

    
    ,cast(ad_group_id as STRING) as ad_group_id

    
    ,cast(ad_group_name as STRING) as ad_group_name

    
    ,cast(campaign_id as STRING) as campaign_id

    
    ,cast(campaign_name as STRING) as campaign_name

    
    ,cast(taps as INT64) as clicks

    ,cast(impressions as INT64) as impressions

    ,cast(spend as FLOAT64) as spend

    
from `drops-bi`.`marketing_full_v2_apple_search_ads`.`apple_search_ads__ad_group_report`

),









snapchat_ads as (

    select 
    

    cast(date_day as date)

 as date_day,
    cast( 'snapchat_ads' as STRING) as platform,

    cast(ad_account_id as STRING) as account_id

    
    ,cast(ad_account_name as STRING) as account_name

    
    ,cast(ad_squad_id as STRING) as ad_group_id

    
    ,cast(ad_squad_name as STRING) as ad_group_name

    
    ,cast(campaign_id as STRING) as campaign_id

    
    ,cast(campaign_name as STRING) as campaign_name

    
    ,cast(swipes as INT64) as clicks

    ,cast(impressions as INT64) as impressions

    ,cast(spend as FLOAT64) as spend

    
from `drops-bi`.`marketing_full_v2_snapchat_ads`.`snapchat_ads__ad_squad_report`

), 



tiktok_ads as (

    select 
    

    cast(date_day as date)

 as date_day,
    cast( 'tiktok_ads' as STRING) as platform,

    cast(advertiser_id as STRING) as account_id

    
    ,cast(advertiser_name as STRING) as account_name

    
    ,cast(ad_group_id as STRING) as ad_group_id

    
    ,cast(ad_group_name as STRING) as ad_group_name

    
    ,cast(campaign_id as STRING) as campaign_id

    
    ,cast(campaign_name as STRING) as campaign_name

    
    ,cast(clicks as INT64) as clicks

    ,cast(impressions as INT64) as impressions

    ,cast(spend as FLOAT64) as spend

    
from `drops-bi`.`marketing_full_v2_tiktok_ads`.`tiktok_ads__ad_group_report`

), 



twitter_ads as (

    select 
    

    cast(date_day as date)

 as date_day,
    cast( 'twitter_ads' as STRING) as platform,

    cast(account_id as STRING) as account_id

    
    ,cast(account_name as STRING) as account_name

    
    ,cast(line_item_id as STRING) as ad_group_id

    
    ,cast(line_item_name as STRING) as ad_group_name

    
    ,cast(campaign_id as STRING) as campaign_id

    
    ,cast(campaign_name as STRING) as campaign_name

    
    ,cast(clicks as INT64) as clicks

    ,cast(impressions as INT64) as impressions

    ,cast(spend as FLOAT64) as spend

    
from `drops-bi`.`marketing_full_v2_twitter_ads`.`twitter_ads__line_item_report`

), 






unioned as (

    


select * from apple_search_ads

union all

select * from google_ads

union all

select * from snapchat_ads

union all

select * from tiktok_ads

union all

select * from twitter_ads




)

select *
from unioned
), base as (

    select *
    from __dbt__cte__int_ad_reporting__ad_group_report
),

aggregated as (
    
    select 
        date_day,
        platform,
        account_id,
        account_name,
        campaign_id,
        campaign_name,
        ad_group_id,
        ad_group_name,
        sum(clicks) as clicks,
        sum(impressions) as impressions,
        sum(spend) as spend 

        





    from base
    group by 1,2,3,4,5,6,7,8
)

select *
from aggregated
    );
  
[0m19:40:45.223989 [debug] [Thread-10 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:e175b1aa-a570-4aca-9849-ab0124a2030e&page=queryresults
[0m19:40:45.327147 [debug] [Thread-11 ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:c33db94c-058f-4ec8-a550-37384b7ad5b3&page=queryresults
[0m19:40:45.340649 [debug] [Thread-8  ]: BigQuery adapter: https://console.cloud.google.com/bigquery?project=drops-bi&j=bq:US:1da75bc3-f78e-4dc2-a1e4-fe8c1cf9f459&page=queryresults
[0m19:40:48.450386 [debug] [Thread-8  ]: Timing info for model.ad_reporting.ad_reporting__ad_group_report (execute): 19:40:43.095518 => 19:40:48.449827
[0m19:40:48.452399 [debug] [Thread-8  ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd135d58f70>]}
[0m19:40:48.454213 [info ] [Thread-8  ]: 129 of 130 OK created sql table model marketing_full_v2_ad_reporting.ad_reporting__ad_group_report  [[32mCREATE TABLE (17.0k rows, 3.4 MiB processed)[0m in 5.48s]
[0m19:40:48.456409 [debug] [Thread-8  ]: Finished running node model.ad_reporting.ad_reporting__ad_group_report
[0m19:40:48.638684 [debug] [Thread-10 ]: Timing info for model.ad_reporting.ad_reporting__account_report (execute): 19:40:43.071297 => 19:40:48.638046
[0m19:40:48.641024 [debug] [Thread-10 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13562b100>]}
[0m19:40:48.642994 [info ] [Thread-10 ]: 128 of 130 OK created sql table model marketing_full_v2_ad_reporting.ad_reporting__account_report  [[32mCREATE TABLE (3.7k rows, 248.2 KiB processed)[0m in 5.67s]
[0m19:40:48.645422 [debug] [Thread-10 ]: Finished running node model.ad_reporting.ad_reporting__account_report
[0m19:40:49.135229 [debug] [Thread-11 ]: Timing info for model.ad_reporting.ad_reporting__campaign_report (execute): 19:40:43.082126 => 19:40:49.134724
[0m19:40:49.138117 [debug] [Thread-11 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'b24cbf2e-6f5f-4d63-b2e5-e252a973c765', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd136827760>]}
[0m19:40:49.139853 [info ] [Thread-11 ]: 130 of 130 OK created sql table model marketing_full_v2_ad_reporting.ad_reporting__campaign_report  [[32mCREATE TABLE (88.9k rows, 15.0 MiB processed)[0m in 6.11s]
[0m19:40:49.141952 [debug] [Thread-11 ]: Finished running node model.ad_reporting.ad_reporting__campaign_report
[0m19:40:49.152497 [debug] [MainThread]: Connection 'master' was properly closed.
[0m19:40:49.153308 [debug] [MainThread]: Connection 'model.tiktok_ads.tiktok_ads__url_report' was properly closed.
[0m19:40:49.154302 [debug] [MainThread]: Connection 'model.ad_reporting.int_ad_reporting__search_report' was properly closed.
[0m19:40:49.155074 [debug] [MainThread]: Connection 'model.ad_reporting.int_ad_reporting__ad_group_report' was properly closed.
[0m19:40:49.155855 [debug] [MainThread]: Connection 'model.apple_search_ads.apple_search_ads__ad_group_report' was properly closed.
[0m19:40:49.157211 [debug] [MainThread]: Connection 'model.ad_reporting.ad_reporting__search_report' was properly closed.
[0m19:40:49.158850 [debug] [MainThread]: Connection 'model.ad_reporting.int_ad_reporting__account_report' was properly closed.
[0m19:40:49.159914 [debug] [MainThread]: Connection 'model.ad_reporting.int_ad_reporting__campaign_report' was properly closed.
[0m19:40:49.161020 [debug] [MainThread]: Connection 'model.ad_reporting.ad_reporting__ad_group_report' was properly closed.
[0m19:40:49.161953 [debug] [MainThread]: Connection 'model.twitter_ads.twitter_ads__account_report' was properly closed.
[0m19:40:49.162885 [debug] [MainThread]: Connection 'model.ad_reporting.ad_reporting__account_report' was properly closed.
[0m19:40:49.163947 [debug] [MainThread]: Connection 'model.ad_reporting.ad_reporting__campaign_report' was properly closed.
[0m19:40:49.164923 [debug] [MainThread]: Connection 'model.twitter_ads.twitter_ads__campaign_report' was properly closed.
[0m19:40:49.166093 [debug] [MainThread]: Connection 'model.twitter_ads.twitter_ads__promoted_tweet_report' was properly closed.
[0m19:40:49.167255 [debug] [MainThread]: Connection 'model.twitter_ads.twitter_ads__line_item_report' was properly closed.
[0m19:40:49.169055 [debug] [MainThread]: Connection 'model.twitter_ads.twitter_ads__url_report' was properly closed.
[0m19:40:49.170805 [info ] [MainThread]: 
[0m19:40:49.172419 [info ] [MainThread]: Finished running 47 view models, 83 table models in 0 hours 1 minutes and 14.48 seconds (74.48s).
[0m19:40:49.230496 [debug] [MainThread]: Command end result
[0m19:40:49.900812 [info ] [MainThread]: 
[0m19:40:49.902826 [info ] [MainThread]: [31mCompleted with 3 errors and 0 warnings:[0m
[0m19:40:49.904055 [info ] [MainThread]: 
[0m19:40:49.905932 [error] [MainThread]:   Runtime Error in model stg_apple_search_ads__ad_history_tmp (models/tmp/stg_apple_search_ads__ad_history_tmp.sql)
  404 Not found: Table drops-bi:drops_apple_search_ads_full.ad_history was not found in location US
  
  Location: US
  Job ID: 411c8ad9-adea-4de1-8a66-aa76603f615c
  
[0m19:40:49.910554 [info ] [MainThread]: 
[0m19:40:49.911954 [error] [MainThread]:   Runtime Error in model stg_snapchat_ads__creative_url_tag_history_tmp (models/tmp/stg_snapchat_ads__creative_url_tag_history_tmp.sql)
  404 Not found: Table drops-bi:drops_snapchat_ads_full.creative_url_tag_history was not found in location US
  
  Location: US
  Job ID: 4e1c59d4-41e7-4155-ae61-b73ec5c248fe
  
[0m19:40:49.913244 [info ] [MainThread]: 
[0m19:40:49.914517 [error] [MainThread]:   Runtime Error in model stg_twitter_ads__line_item_keywords_report_tmp (models/tmp/stg_twitter_ads__line_item_keywords_report_tmp.sql)
  404 Not found: Table drops-bi:drops_twitter_ads_full.line_item_keywords_report was not found in location US
  
  Location: US
  Job ID: 7f4ea993-4559-4ba9-8450-f9e820f3dcd7
  
[0m19:40:49.916138 [info ] [MainThread]: 
[0m19:40:49.919087 [info ] [MainThread]: Done. PASS=117 WARN=0 ERROR=3 SKIP=10 TOTAL=130
[0m19:40:49.931912 [debug] [MainThread]: Command `dbt run` failed at 19:40:49.931561 after 110.55 seconds
[0m19:40:49.933166 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1316a7d60>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd13303a580>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd1368ebd00>]}
[0m19:40:49.934304 [debug] [MainThread]: Flushing usage events
